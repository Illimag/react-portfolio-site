var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

import React from 'react';

var withState = function withState(initialState) {
  return function (Component) {
    return React.createClass({
      getInitialState: function getInitialState() {
        return initialState;
      },
      render: function render() {
        var _this = this;

        return React.createElement(Component, _extends({}, this.props, {
          state: this.state,
          setState: function setState(state) {
            return _this.setState(state);
          }
        }));
      }
    });
  };
};

export default withState;