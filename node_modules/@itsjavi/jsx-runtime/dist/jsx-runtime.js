function e(e,t){if("function"==typeof e)return void 0!==e.prototype?new e(t):e(t);const{children:n=[],...o}=t;return{type:e,key:null,props:{...o,children:Array().concat(n).map(e=>"object"==typeof e?e:{type:"jsx.Text",key:null,props:{text:e,children:[]}})}}}e.Fragment="jsx.Fragment",e.TextNode="jsx.Text",e.customAttributes=["children","className","key","props"];const t=t=>!e.customAttributes.includes(t);class n{constructor(e){this.element=null,this.props=e}render(){return null}}"undefined"!=typeof window&&(e._globalThis=window),e.setGlobalThis=t=>{e._globalThis=t};const o=e.renderDOM=(o,s=null,l=null)=>{const r=o instanceof n;let c=r?o.render():o;r&&(l=o);const i=null===s?e._globalThis.document:s.ownerDocument;if(c.type===e.TextNode){void 0===c.props.text&&(c.props.text="");const e=i.createTextNode(c.props.text);return null!==s&&s.appendChild(e),e}const a=c.type===e.Fragment?i.createDocumentFragment():i.createElement(c.type);a.jsxComponent=l;const p=c.props,u=Object.keys(p);void 0!==p.className&&(p.class=p.className,delete p.className),void 0!==p.class&&Array.isArray(p.class)&&(p.class=p.class.join(" ")),u.filter(t).forEach(e=>{let t=p[e];null!==l&&t instanceof Function&&(t=t.bind(l),t instanceof Function&&t(null)),a[e.toLowerCase()]=t}),Array.isArray(c.props.children)&&c.props.children.forEach(t=>e.renderDOM(t,a,l));let d=null;return r&&null!==l&&(d=l.element,l.element=a),r&&null!==l&&void 0!==l.onWillMount&&l.onWillMount(d),null!==s&&s.appendChild(a),r&&null!==l&&void 0!==l.onDidMount&&l.onDidMount(d),a};exports.Component=n,exports.Fragment="jsx.Fragment",exports.jsx=e,exports.jsxs=e,exports.render=o;
//# sourceMappingURL=jsx-runtime.js.map
