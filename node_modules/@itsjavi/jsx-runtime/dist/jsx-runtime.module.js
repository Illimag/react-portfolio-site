const e="jsx.Fragment";function n(e,n){if("function"==typeof e)return void 0!==e.prototype?new e(n):e(n);const{children:t=[],...o}=n;return{type:e,key:null,props:{...o,children:Array().concat(t).map(e=>"object"==typeof e?e:{type:"jsx.Text",key:null,props:{text:e,children:[]}})}}}n.Fragment="jsx.Fragment",n.TextNode="jsx.Text",n.customAttributes=["children","className","key","props"];const t=e=>!n.customAttributes.includes(e);class o{constructor(e){this.element=null,this.props=e}render(){return null}}"undefined"!=typeof window&&(n._globalThis=window),n.setGlobalThis=e=>{n._globalThis=e};const l=n.renderDOM=(e,l=null,s=null)=>{const r=e instanceof o;let c=r?e.render():e;r&&(s=e);const a=null===l?n._globalThis.document:l.ownerDocument;if(c.type===n.TextNode){void 0===c.props.text&&(c.props.text="");const e=a.createTextNode(c.props.text);return null!==l&&l.appendChild(e),e}const i=c.type===n.Fragment?a.createDocumentFragment():a.createElement(c.type);i.jsxComponent=s;const u=c.props,p=Object.keys(u);void 0!==u.className&&(u.class=u.className,delete u.className),void 0!==u.class&&Array.isArray(u.class)&&(u.class=u.class.join(" ")),p.filter(t).forEach(e=>{let n=u[e];null!==s&&n instanceof Function&&(n=n.bind(s),n instanceof Function&&n(null)),i[e.toLowerCase()]=n}),Array.isArray(c.props.children)&&c.props.children.forEach(e=>n.renderDOM(e,i,s));let d=null;return r&&null!==s&&(d=s.element,s.element=i),r&&null!==s&&void 0!==s.onWillMount&&s.onWillMount(d),null!==l&&l.appendChild(i),r&&null!==s&&void 0!==s.onDidMount&&s.onDidMount(d),i};export{o as Component,e as Fragment,n as jsx,n as jsxs,l as render};
//# sourceMappingURL=jsx-runtime.module.js.map
