{"version":3,"file":"jsx-runtime.js","sources":["../src/jsx-runtime/index.ts"],"sourcesContent":["const jsxFragment = 'jsx.Fragment'\nconst jsxTextNode = 'jsx.Text'\n\ntype jsxDOMContainer = HTMLElement | DocumentFragment | null\ntype jsxDOMElement = HTMLElement | DocumentFragment | Text\n\nfunction jsx (type: string | any, config: JSX.ElementChildrenAttribute): JSX.Element {\n  if (typeof type === 'function') {\n    if (type.prototype !== undefined) {\n      return new type(config)\n    }\n    return type(config)\n  }\n  const { children = [], ...props } = config;\n  const childrenProps = Array().concat(children);\n  return {\n    type,\n    key: null,\n    props: {\n      ...props,\n      children: childrenProps.map((child: JSX.Element): JSX.Element => {\n          return typeof child == 'object' ? child : {\n            type: jsxTextNode,\n            key: null,\n            props: {\n              text: child,\n              children: []\n            }\n          }\n        }\n      )\n    }\n  }\n}\n\njsx.Fragment = jsxFragment\njsx.TextNode = jsxTextNode\njsx.customAttributes = ['children', 'className', 'key', 'props']\n\nconst isStandardAttribute = (key: string) => !jsx.customAttributes.includes(key)\n\nclass Component<P = {}> implements ijJSX.Component {\n  element: ijJSX.ComponentDOMElement = null\n  readonly props: P & ijJSX.ComponentProps<P>\n\n  constructor (props: P & ijJSX.ComponentProps<P>) {\n    this.props = props\n  }\n\n  render (): ijJSX.Node {\n    return null;\n  }\n}\n\nif (typeof window !== \"undefined\") {\n  jsx._globalThis = window\n}\n\njsx.setGlobalThis = (newThis: Window & typeof globalThis) => {\n  jsx._globalThis = newThis\n}\n\njsx.renderDOM = (\n  renderable: ijJSX.Node,\n  container: jsxDOMContainer = null,\n  component: ijJSX.Component | null = null\n): jsxDOMElement => {\n  const isComponent = (renderable instanceof Component)\n  // @ts-ignore\n  let node: JSX.Element = isComponent ? renderable.render() : renderable\n  if (isComponent) {\n    // @ts-ignore\n    component = renderable\n  }\n\n  const doc = (container === null) ? jsx._globalThis.document : container.ownerDocument;\n\n  if (node.type === jsx.TextNode) {\n    if (node.props.text === undefined) {\n      node.props.text = ''\n    }\n    const textElem = doc.createTextNode(node.props.text)\n    if (container !== null) {\n      container.appendChild(textElem)\n    }\n\n    return textElem\n  }\n\n  const elem: HTMLElement | DocumentFragment = (node.type === jsx.Fragment)\n    ? doc.createDocumentFragment()\n    : doc.createElement(node.type)\n\n  // @ts-ignore\n  elem.jsxComponent = component\n\n  const props = node.props\n  const propKeys = Object.keys(props)\n\n  // classes\n  if (props['className'] !== undefined) {\n    props['class'] = props['className']\n    delete props['className']\n  }\n  if ((props['class'] !== undefined) && Array.isArray(props['class'])) {\n    props['class'] = props['class'].join(' ')\n  }\n\n  // assign attributes\n  propKeys\n    .filter(isStandardAttribute)\n    .forEach((name) => {\n      let attrVal = props[name]\n      if (component !== null && (attrVal instanceof Function)) {\n        attrVal = attrVal.bind(component)\n        if (attrVal instanceof Function) {\n          attrVal(null)\n        }\n      }\n      // @ts-ignore\n      elem[name.toLowerCase()] = attrVal\n    })\n\n  if (Array.isArray(node.props.children)) {\n    node.props.children.forEach((child: ijJSX.Node) => jsx.renderDOM(child, elem, component))\n  }\n\n  let prevElement = null\n\n  if (isComponent && component !== null) {\n    prevElement = component.element\n    component.element = elem\n  }\n\n  if (isComponent && component !== null && component.onWillMount !== undefined) {\n    component.onWillMount(prevElement)\n  }\n\n  if (container !== null) {\n    container.appendChild(elem)\n  }\n\n  if (isComponent && component !== null && component.onDidMount !== undefined) {\n    component.onDidMount(prevElement)\n  }\n\n  return elem\n}\n\n/*\n * Types and JSX configuration\n *\n * Docs:\n * https://www.typescriptlang.org/docs/handbook/jsx.html\n * https://www.reactenlightenment.com/react-jsx/5.7.html\n */\n\nexport declare namespace ijJSX {\n  type Key = string | number;\n  type KeyValuePair = { [key: string]: unknown }\n  type Child = Element | string | number;\n  type Fragment = {} | Array<Node>;\n  type Node = Child | Fragment | Component | boolean | null | undefined;\n  type Children = Node\n  type Props = KeyValuePair & { children?: Children, text?: string };\n\n  interface Element {\n    type: string;\n    props: Props;\n    key: Key | null;\n  }\n\n  type ComponentDOMElement = HTMLElement | DocumentFragment | null\n  type ComponentProps<P> = P & ijJSX.Props\n\n  interface Component<P = {}> {\n    /**\n     * (Unofficial React API)\n     *\n     * The currently rendered DOM Element.\n     *\n     * Beware that this is not compatible with the React API.\n     */\n    element: ComponentDOMElement\n\n    readonly props: ComponentProps<P>;\n\n    /**\n     * (Unofficial React API)\n     *\n     * Runs after calling `render`, but before adding the element to the DOM.\n     *\n     */\n    onWillMount? (prevElement: ComponentDOMElement): void;\n\n    /**\n     * (Unofficial React API)\n     *\n     * Runs after calling `render` and after adding the element to the DOM.\n     */\n    onDidMount? (prevElement: ComponentDOMElement): void;\n\n    render (): Node;\n  }\n}\n\ndeclare global {\n  namespace JSX {\n    // JSX node definition\n    interface Element extends ijJSX.Element {\n    }\n\n    // Component class definition\n    interface ElementClass extends ijJSX.Component<any> {\n      render (): Element;\n    }\n\n    // Property that will hold the HTML attributes of the Component\n    interface ElementAttributesProperty {\n      props: {};\n    }\n\n    // Property in 'props' that will hold the children of the Component\n    interface ElementChildrenAttribute {\n      children: ijJSX.Children;\n    }\n\n    // Common attributes of the standard HTML elements and JSX components\n    interface IntrinsicAttributes {\n      key?: ijJSX.Key\n      class?: never\n      className?: string | string[]\n\n      [key: string]: any\n    }\n\n    // Common attributes of the JSX components only\n    interface IntrinsicClassAttributes<ComponentClass> {\n\n    }\n\n    // HTML elements allowed in JSX, and their attributes definitions\n    interface IntrinsicElements {\n      [key: string]: IntrinsicAttributes\n    }\n  }\n}\n\nconst render = jsx.renderDOM\n\nexport { jsx, jsx as jsxs, jsxFragment as Fragment, render, Component }\n"],"names":["jsx","type","config","undefined","prototype","children","props","key","Array","concat","map","child","text","Fragment","TextNode","customAttributes","isStandardAttribute","includes","Component","constructor","this","render","window","_globalThis","setGlobalThis","newThis","renderDOM","renderable","container","component","isComponent","node","doc","document","ownerDocument","textElem","createTextNode","appendChild","elem","createDocumentFragment","createElement","jsxComponent","propKeys","Object","keys","isArray","join","filter","forEach","name","attrVal","Function","bind","toLowerCase","prevElement","element","onWillMount","onDidMount"],"mappings":"AAMA,SAASA,EAAKC,EAAoBC,GAChC,GAAoB,mBAATD,EACT,YAAuBE,IAAnBF,EAAKG,cACIH,EAAKC,GAEXD,EAAKC,GAEd,MAAMG,SAAEA,EAAW,MAAOC,GAAUJ,EAEpC,MAAO,CACLD,KAAAA,EACAM,IAAK,KACLD,MAAO,IACFA,EACHD,SANkBG,QAAQC,OAAOJ,GAMTK,IAAKC,GACF,iBAATA,EAAoBA,EAAQ,CACxCV,KArBQ,WAsBRM,IAAK,KACLD,MAAO,CACLM,KAAMD,EACNN,SAAU,QASxBL,EAAIa,SAnCgB,eAoCpBb,EAAIc,SAnCgB,WAoCpBd,EAAIe,iBAAmB,CAAC,WAAY,YAAa,MAAO,SAExD,MAAMC,EAAuBT,IAAiBP,EAAIe,iBAAiBE,SAASV,GAE5E,MAAMW,EAIJC,YAAab,GAHbc,aAAqC,KAInCA,KAAKd,MAAQA,EAGfe,SACE,aAIkB,oBAAXC,SACTtB,EAAIuB,YAAcD,QAGpBtB,EAAIwB,cAAiBC,IACnBzB,EAAIuB,YAAcE,GA6LdJ,MAAAA,EA1LNrB,EAAI0B,UAAY,CACdC,EACAC,EAA6B,KAC7BC,EAAoC,QAEpC,MAAMC,EAAeH,aAAsBT,EAE3C,IAAIa,EAAoBD,EAAcH,EAAWN,SAAWM,EACxDG,IAEFD,EAAYF,GAGd,MAAMK,EAAqB,OAAdJ,EAAsB5B,EAAIuB,YAAYU,SAAWL,EAAUM,cAExE,GAAIH,EAAK9B,OAASD,EAAIc,SAAU,MACNX,IAApB4B,EAAKzB,MAAMM,OACbmB,EAAKzB,MAAMM,KAAO,IAEpB,MAAMuB,EAAWH,EAAII,eAAeL,EAAKzB,MAAMM,MAK/C,OAJkB,OAAdgB,GACFA,EAAUS,YAAYF,GAGjBA,EAGT,MAAMG,EAAwCP,EAAK9B,OAASD,EAAIa,SAC5DmB,EAAIO,yBACJP,EAAIQ,cAAcT,EAAK9B,MAG3BqC,EAAKG,aAAeZ,EAEpB,MAAMvB,EAAQyB,EAAKzB,MACboC,EAAWC,OAAOC,KAAKtC,QAGFH,IAAvBG,EAAK,YACPA,EAAK,MAAYA,EAAK,iBACfA,EAAK,gBAEUH,IAAnBG,EAAK,OAA4BE,MAAMqC,QAAQvC,EAAK,SACvDA,EAAK,MAAYA,EAAK,MAAUwC,KAAK,MAIvCJ,EACGK,OAAO/B,GACPgC,QAASC,IACR,IAAIC,EAAU5C,EAAM2C,GACF,OAAdpB,GAAuBqB,aAAmBC,WAC5CD,EAAUA,EAAQE,KAAKvB,GACnBqB,aAAmBC,UACrBD,EAAQ,OAIZZ,EAAKW,EAAKI,eAAiBH,IAG3B1C,MAAMqC,QAAQd,EAAKzB,MAAMD,WAC3B0B,EAAKzB,MAAMD,SAAS2C,QAASrC,GAAsBX,EAAI0B,UAAUf,EAAO2B,EAAMT,IAGhF,IAAIyB,EAAc,KAmBlB,OAjBIxB,GAA6B,OAAdD,IACjByB,EAAczB,EAAU0B,QACxB1B,EAAU0B,QAAUjB,GAGlBR,GAA6B,OAAdD,QAAgD1B,IAA1B0B,EAAU2B,aACjD3B,EAAU2B,YAAYF,GAGN,OAAd1B,GACFA,EAAUS,YAAYC,GAGpBR,GAA6B,OAAdD,QAA+C1B,IAAzB0B,EAAU4B,YACjD5B,EAAU4B,WAAWH,GAGhBhB,wCAlJW"}