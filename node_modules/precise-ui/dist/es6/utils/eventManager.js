export class SimpleEventManager {
    constructor() {
        this.eventListeners = {};
    }
    on(type, callback) {
        const callbacks = this.eventListeners[type] || [];
        this.eventListeners[type] = [...callbacks, callback];
    }
    off(type, callback) {
        const callbacks = this.eventListeners[type] || [];
        this.eventListeners[type] = callbacks.filter(cb => cb !== callback);
    }
    emit(type, arg) {
        const callbacks = this.eventListeners[type] || [];
        for (const callback of callbacks) {
            setTimeout(() => callback.call(this, arg), 0);
        }
    }
}
export const eventManagers = [new SimpleEventManager()];
export function setDefaultEventManager(events) {
    eventManagers.splice(0, 1, events);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnRNYW5hZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWxzL2V2ZW50TWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFjQSxNQUFNLE9BQU8sa0JBQWtCO0lBQS9CO1FBQ21CLG1CQUFjLEdBQW1CLEVBQUUsQ0FBQztJQW1CdkQsQ0FBQztJQWpCQyxFQUFFLENBQUksSUFBWSxFQUFFLFFBQTBCO1FBQzVDLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2xELElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLFNBQVMsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUN2RCxDQUFDO0lBRUQsR0FBRyxDQUFJLElBQVksRUFBRSxRQUEwQjtRQUM3QyxNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNsRCxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEtBQUssUUFBUSxDQUFDLENBQUM7SUFDdEUsQ0FBQztJQUVELElBQUksQ0FBSSxJQUFZLEVBQUUsR0FBTTtRQUMxQixNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUVsRCxLQUFLLE1BQU0sUUFBUSxJQUFJLFNBQVMsRUFBRTtZQUNoQyxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7U0FDL0M7SUFDSCxDQUFDO0NBQ0Y7QUFFRCxNQUFNLENBQUMsTUFBTSxhQUFhLEdBQXdCLENBQUMsSUFBSSxrQkFBa0IsRUFBRSxDQUFDLENBQUM7QUFFN0UsTUFBTSxVQUFVLHNCQUFzQixDQUFDLE1BQW9CO0lBQ3pELGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUNyQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGludGVyZmFjZSBDYWxsYmFjayB7XG4gIChhcmc6IGFueSk6IHZvaWQ7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRXZlbnRMaXN0ZW5lcnMge1xuICBbZXZlbnQ6IHN0cmluZ106IEFycmF5PENhbGxiYWNrPjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBFdmVudE1hbmFnZXIge1xuICBvbih0eXBlOiBzdHJpbmcsIGNhbGxiYWNrOiBDYWxsYmFjayk6IHZvaWQ7XG4gIG9mZih0eXBlOiBzdHJpbmcsIGNhbGxiYWNrOiBDYWxsYmFjayk6IHZvaWQ7XG4gIGVtaXQ8VD4odHlwZTogc3RyaW5nLCBhcmc6IFQpOiB2b2lkO1xufVxuXG5leHBvcnQgY2xhc3MgU2ltcGxlRXZlbnRNYW5hZ2VyIGltcGxlbWVudHMgRXZlbnRNYW5hZ2VyIHtcbiAgcHJpdmF0ZSByZWFkb25seSBldmVudExpc3RlbmVyczogRXZlbnRMaXN0ZW5lcnMgPSB7fTtcblxuICBvbjxUPih0eXBlOiBzdHJpbmcsIGNhbGxiYWNrOiAoYXJnOiBUKSA9PiB2b2lkKSB7XG4gICAgY29uc3QgY2FsbGJhY2tzID0gdGhpcy5ldmVudExpc3RlbmVyc1t0eXBlXSB8fCBbXTtcbiAgICB0aGlzLmV2ZW50TGlzdGVuZXJzW3R5cGVdID0gWy4uLmNhbGxiYWNrcywgY2FsbGJhY2tdO1xuICB9XG5cbiAgb2ZmPFQ+KHR5cGU6IHN0cmluZywgY2FsbGJhY2s6IChhcmc6IFQpID0+IHZvaWQpIHtcbiAgICBjb25zdCBjYWxsYmFja3MgPSB0aGlzLmV2ZW50TGlzdGVuZXJzW3R5cGVdIHx8IFtdO1xuICAgIHRoaXMuZXZlbnRMaXN0ZW5lcnNbdHlwZV0gPSBjYWxsYmFja3MuZmlsdGVyKGNiID0+IGNiICE9PSBjYWxsYmFjayk7XG4gIH1cblxuICBlbWl0PFQ+KHR5cGU6IHN0cmluZywgYXJnOiBUKSB7XG4gICAgY29uc3QgY2FsbGJhY2tzID0gdGhpcy5ldmVudExpc3RlbmVyc1t0eXBlXSB8fCBbXTtcblxuICAgIGZvciAoY29uc3QgY2FsbGJhY2sgb2YgY2FsbGJhY2tzKSB7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IGNhbGxiYWNrLmNhbGwodGhpcywgYXJnKSwgMCk7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBldmVudE1hbmFnZXJzOiBBcnJheTxFdmVudE1hbmFnZXI+ID0gW25ldyBTaW1wbGVFdmVudE1hbmFnZXIoKV07XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXREZWZhdWx0RXZlbnRNYW5hZ2VyKGV2ZW50czogRXZlbnRNYW5hZ2VyKSB7XG4gIGV2ZW50TWFuYWdlcnMuc3BsaWNlKDAsIDEsIGV2ZW50cyk7XG59XG4iXX0=