import * as React from 'react';
import { FormContextProps } from '../../hoc/withFormContext';
import { Responsive } from '../Responsive';
import { DropdownFieldProps } from './DropdownField.types.part';
export declare const DropdownSelect: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, {}, never>;
interface DropDownOptionsTextProps {
    labelShown: boolean;
    disabled?: boolean;
}
interface DropdownState {
    value: Array<number>;
    error?: React.ReactChild;
    open: boolean;
    controlled: boolean;
}
export declare class DropdownFieldInt extends React.Component<DropdownFieldProps & FormContextProps, DropdownState> {
    constructor(props: DropdownFieldProps);
    componentDidMount(): void;
    componentWillUnmount(): void;
    UNSAFE_componentWillReceiveProps({ data, value, error, multiple }: DropdownFieldProps): void;
    private show;
    private hide;
    handleClickOutside: () => Promise<{}>;
    private toggle;
    private control;
    private handleMouseDown;
    private handleChange;
    private renderList;
    render(): JSX.Element;
    static inner: {
        readonly StyledLabel: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, {}, never>;
        readonly InteractiveList: React.ComponentClass<import("../InteractiveList").InteractiveListProps & import("react-onclickoutside").AdditionalProps, any>;
        readonly DropdownContainer: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, {}, never>;
        readonly DropdownSelect: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, {}, never>;
        readonly DropdownInputBox: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, import("../../quarks").StyledInputBoxProps, never>;
        readonly StyledInputRow: React.FunctionComponent<import("../../quarks").StyledInputRowProps> & {
            inner: {
                readonly TextFieldBoxWithLabelWrapper: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, {}, never>;
                readonly TextFieldLabel: import("styled-components").StyledComponent<"label", import("../../common").PreciseTheme, {}, never>;
                readonly TextFieldLabelText: import("styled-components").StyledComponent<"span", import("../../common").PreciseTheme, import("../../quarks").TextFieldLabelProps, never>;
            };
        };
        readonly DropdownOptionText: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, DropDownOptionsTextProps, never>;
        readonly InputIcon: React.FunctionComponent<import("../InputIcon").InputIconProps> & {
            inner: {
                readonly StyledIconContainer: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, import("../../quarks").StyledIconProps, never>;
                readonly IconLink: React.FunctionComponent<import("..").IconLinkProps> & {
                    inner: {
                        readonly StyledAnchor: import("styled-components").StyledComponent<typeof import("..").Anchor, import("../../common").PreciseTheme, import("..").StyledAnchorProps, never>;
                        readonly StyledIcon: import("styled-components").StyledComponent<React.FunctionComponent<import("../Icon").IconProps> & {
                            inner: {
                                readonly StyledIcon: import("styled-components").StyledComponent<"i", import("../../common").PreciseTheme, {}, never>;
                            };
                        }, import("../../common").PreciseTheme, import("..").StyledIconProps & import("../Icon").IconProps, never>;
                        readonly AnchorText: import("styled-components").StyledComponent<"span", import("../../common").PreciseTheme, {}, never>;
                    };
                };
                readonly Icon: React.FunctionComponent<import("../Icon").IconProps> & {
                    inner: {
                        readonly StyledIcon: import("styled-components").StyledComponent<"i", import("../../common").PreciseTheme, {}, never>;
                    };
                };
            };
        };
        readonly StyledIconContainer: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, import("../../quarks").StyledIconProps, never>;
        readonly Icon: React.FunctionComponent<import("../Icon").IconProps> & {
            inner: {
                readonly StyledIcon: import("styled-components").StyledComponent<"i", import("../../common").PreciseTheme, {}, never>;
            };
        };
        readonly Responsive: typeof Responsive;
    };
}
export {};
