import * as React from 'react';
import { SidebarContainer } from './SidebarContainer.part';
import { PositionType } from './SidebarPopup.types.part';
export interface SidebarPopupProps {
    position?: PositionType;
    size?: string;
    open?: boolean;
    onClose?: () => void;
}
export declare const SidebarPopup: React.FunctionComponent<SidebarPopupProps> & {
    inner: {
        readonly SidebarContainer: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, SidebarContainer, never>;
        readonly CloseButton: React.FunctionComponent<React.HTMLAttributes<HTMLAnchorElement>> & {
            inner: {
                readonly StyledCloseButton: import("styled-components").StyledComponent<"a", import("../..").PreciseTheme, {}, never>;
                readonly Icon: React.FunctionComponent<import("..").IconProps> & {
                    inner: {
                        readonly StyledIcon: import("styled-components").StyledComponent<"i", import("../..").PreciseTheme, {}, never>;
                    };
                };
            };
        };
        readonly SidebarBlocker: React.FunctionComponent<import("./SidebarBlocker.part").SidebarBlockerProps> & {
            inner: {
                readonly StyledSidebarBlocker: import("styled-components").StyledComponent<typeof import("..").Blocker, import("../..").PreciseTheme, {
                    closing: boolean;
                }, never>;
            };
        };
    };
};
