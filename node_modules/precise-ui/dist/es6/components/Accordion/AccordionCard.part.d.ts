import * as React from 'react';
import { AccordionProps } from './Accordion.types.part';
export interface AccordionCardState {
    /**
     * The currently selected indices.
     */
    selectedIndexes: Array<number>;
    /**
     * Determines if the accordion table component is controlled from the outside or not.
     */
    controlled: boolean;
}
interface ActiveProps {
    open?: boolean;
    onClick?(e: React.MouseEvent): void;
}
export declare class AccordionCard extends React.Component<AccordionProps, AccordionCardState> {
    private selects;
    constructor(props: AccordionProps);
    static getDerivedStateFromProps(props: AccordionProps, state: AccordionCardState): AccordionCardState | {
        selectedIndexes: number[];
    };
    private changeIndex;
    render(): JSX.Element;
    static inner: {
        readonly StyledListItem: import("styled-components").StyledComponent<React.FunctionComponent<import("../ListItem").ListItemProps> & {
            inner: {
                readonly StyledListItem: import("styled-components").StyledComponent<"li", import("../..").PreciseTheme, import("../ListItem").ListItemProps, never>;
            };
        }, import("../..").PreciseTheme, {}, never>;
        readonly Container: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
        readonly ContentContainer: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, ActiveProps, never>;
        readonly DetailsContainerAnimator: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, ActiveProps, never>;
        readonly DetailsContainer: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, ActiveProps, never>;
        readonly ActionContainer: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, ActiveProps, never>;
        readonly StyledList: import("styled-components").StyledComponent<React.FunctionComponent<import("../List").ListProps> & {
            inner: {
                readonly StyledList: import("styled-components").StyledComponent<"ul", import("../..").PreciseTheme, import("../List").ListProps, never>;
            };
        }, import("../..").PreciseTheme, {}, never>;
    };
}
export {};
