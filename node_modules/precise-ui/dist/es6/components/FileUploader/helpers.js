import { getStatus } from '../FileUploaderDetails/helpers';
let uploadId = 0;
function pad(value) {
    if (value < 10) {
        return `00${~~value}`;
    }
    else if (value < 100) {
        return `0${~~value}`;
    }
    else if (value < 1000) {
        return `${~~value}`;
    }
    else {
        return `${~~value % 1000}`;
    }
}
export function generateId() {
    return `${pad(Math.random() * 1000)}-${pad(Math.random() * 1000)}-${pad(uploadId++)}`;
}
export function getSimpleStatus(file) {
    const status = getStatus(file);
    switch (status) {
        case 'error':
        case 'canceled':
            return 'canceled';
        case 'progress':
        case 'scanning':
            return 'active';
    }
    return 'complete';
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0ZpbGVVcGxvYWRlci9oZWxwZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUUzRCxJQUFJLFFBQVEsR0FBRyxDQUFDLENBQUM7QUFFakIsU0FBUyxHQUFHLENBQUMsS0FBYTtJQUN4QixJQUFJLEtBQUssR0FBRyxFQUFFLEVBQUU7UUFDZCxPQUFPLEtBQUssQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDO0tBQ3ZCO1NBQU0sSUFBSSxLQUFLLEdBQUcsR0FBRyxFQUFFO1FBQ3RCLE9BQU8sSUFBSSxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7S0FDdEI7U0FBTSxJQUFJLEtBQUssR0FBRyxJQUFJLEVBQUU7UUFDdkIsT0FBTyxHQUFHLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztLQUNyQjtTQUFNO1FBQ0wsT0FBTyxHQUFHLENBQUMsQ0FBQyxLQUFLLEdBQUcsSUFBSSxFQUFFLENBQUM7S0FDNUI7QUFDSCxDQUFDO0FBRUQsTUFBTSxVQUFVLFVBQVU7SUFDeEIsT0FBTyxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsUUFBUSxFQUFFLENBQUMsRUFBRSxDQUFDO0FBQ3hGLENBQUM7QUFFRCxNQUFNLFVBQVUsZUFBZSxDQUFDLElBQWtCO0lBQ2hELE1BQU0sTUFBTSxHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUUvQixRQUFRLE1BQU0sRUFBRTtRQUNkLEtBQUssT0FBTyxDQUFDO1FBQ2IsS0FBSyxVQUFVO1lBQ2IsT0FBTyxVQUFVLENBQUM7UUFDcEIsS0FBSyxVQUFVLENBQUM7UUFDaEIsS0FBSyxVQUFVO1lBQ2IsT0FBTyxRQUFRLENBQUM7S0FDbkI7SUFFRCxPQUFPLFVBQVUsQ0FBQztBQUNwQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRmlsZVByb2dyZXNzIH0gZnJvbSAnLi4vRmlsZVVwbG9hZGVyRGV0YWlscyc7XG5pbXBvcnQgeyBnZXRTdGF0dXMgfSBmcm9tICcuLi9GaWxlVXBsb2FkZXJEZXRhaWxzL2hlbHBlcnMnO1xuXG5sZXQgdXBsb2FkSWQgPSAwO1xuXG5mdW5jdGlvbiBwYWQodmFsdWU6IG51bWJlcikge1xuICBpZiAodmFsdWUgPCAxMCkge1xuICAgIHJldHVybiBgMDAke35+dmFsdWV9YDtcbiAgfSBlbHNlIGlmICh2YWx1ZSA8IDEwMCkge1xuICAgIHJldHVybiBgMCR7fn52YWx1ZX1gO1xuICB9IGVsc2UgaWYgKHZhbHVlIDwgMTAwMCkge1xuICAgIHJldHVybiBgJHt+fnZhbHVlfWA7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGAke35+dmFsdWUgJSAxMDAwfWA7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlSWQoKSB7XG4gIHJldHVybiBgJHtwYWQoTWF0aC5yYW5kb20oKSAqIDEwMDApfS0ke3BhZChNYXRoLnJhbmRvbSgpICogMTAwMCl9LSR7cGFkKHVwbG9hZElkKyspfWA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRTaW1wbGVTdGF0dXMoZmlsZTogRmlsZVByb2dyZXNzKSB7XG4gIGNvbnN0IHN0YXR1cyA9IGdldFN0YXR1cyhmaWxlKTtcblxuICBzd2l0Y2ggKHN0YXR1cykge1xuICAgIGNhc2UgJ2Vycm9yJzpcbiAgICBjYXNlICdjYW5jZWxlZCc6XG4gICAgICByZXR1cm4gJ2NhbmNlbGVkJztcbiAgICBjYXNlICdwcm9ncmVzcyc6XG4gICAgY2FzZSAnc2Nhbm5pbmcnOlxuICAgICAgcmV0dXJuICdhY3RpdmUnO1xuICB9XG5cbiAgcmV0dXJuICdjb21wbGV0ZSc7XG59XG4iXX0=