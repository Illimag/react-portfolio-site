import * as React from 'react';
import { PromptDefaultModalProps, PromptModalProps } from './Prompt.types';
import { Modal } from '../Modal';
export declare const PromptModal: React.FunctionComponent<PromptModalProps> & {
    inner: {
        readonly DefaultModal: React.FunctionComponent<PromptDefaultModalProps> & {
            inner: {
                readonly Modal: typeof Modal;
                readonly ModalHeader: React.FunctionComponent<import("../Modal").ModalHeaderProps> & {
                    inner: {
                        readonly StyledModalHeader: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
                        readonly ModalLabel: import("styled-components").StyledComponent<"span", import("../..").PreciseTheme, {}, never>;
                        readonly Headline: React.FunctionComponent<import("..").HeadlineProps>;
                    };
                };
                readonly ModalBody: React.FunctionComponent<import("../..").StandardProps & {
                    children: React.ReactNode;
                }> & {
                    inner: {
                        readonly StyledModalBody: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
                    };
                };
                readonly ModalFooter: React.FunctionComponent<import("../..").StandardProps> & {
                    inner: {
                        readonly StyledModalFooter: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
                    };
                };
                readonly StyledActionLink: import("styled-components").StyledComponent<React.FunctionComponent<import("../ActionLink").ActionLinkProps> & {
                    inner: {
                        readonly StyledActionLink: import("styled-components").StyledComponent<typeof import("..").Anchor, import("../..").PreciseTheme, import("../ActionLink").StyledActionLink, never>;
                    };
                }, import("../..").PreciseTheme, {}, never>;
                readonly Button: React.FunctionComponent<import("../Button").ButtonProps> & {
                    inner: {
                        readonly StyledButton: import("styled-components").StyledComponent<React.FunctionComponent<import("../Button").StyledButtonProps> & {
                            inner: {
                                readonly Anchor: typeof import("..").Anchor;
                            };
                        }, import("../..").PreciseTheme, import("../Button").StyledButtonProps, never>;
                        readonly StyledIcon: import("styled-components").StyledComponent<React.FunctionComponent<import("..").IconProps> & {
                            inner: {
                                readonly StyledIcon: import("styled-components").StyledComponent<"i", import("../..").PreciseTheme, {}, never>;
                            };
                        }, import("../..").PreciseTheme, import("../Button").IconWrapperProps & import("..").IconProps, never>;
                    };
                };
            };
        };
    };
};
