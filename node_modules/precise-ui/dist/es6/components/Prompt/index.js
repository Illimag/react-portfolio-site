import * as React from 'react';
import { PromptBasic } from './PromptBasic.part';
import { PromptModal } from './PromptModal.part';
import { usePrompt } from './usePrompt';
export { usePrompt, PromptModal };
/**
 * Component for prompting the user before navigating away
 * from a screen with a form.
 */
export class Prompt extends React.Component {
    componentDidMount() {
        const history = this.context.router && this.context.router.history;
        if (!(history && history.block)) {
            console.warn('React Router history object is not found. Component cannot be used');
        }
    }
    render() {
        const { when = true, modalOptions } = this.props;
        const history = this.context.router && this.context.router.history;
        if (modalOptions) {
            return React.createElement(PromptModal, { modalOptions: modalOptions, history: history, when: when, message: this.props.message });
        }
        return React.createElement(PromptBasic, { history: history, when: when, message: this.props.message });
    }
}
Prompt.contextTypes = {
    // tslint:disable-next-line
    router: () => null,
};
Prompt.inner = {
    get PromptModal() { return PromptModal; },
    get PromptBasic() { return PromptBasic; }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9Qcm9tcHQvaW5kZXgudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sS0FBSyxLQUFLLE1BQU0sT0FBTyxDQUFDO0FBQy9CLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDakQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUV4QyxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxDQUFDO0FBRWxDOzs7R0FHRztBQUNILE1BQU0sT0FBTyxNQUFPLFNBQVEsS0FBSyxDQUFDLFNBQXNCO0lBS3BELGlCQUFpQjtRQUNiLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQztRQUNuRSxJQUFJLENBQUMsQ0FBQyxPQUFPLElBQUksT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQzdCLE9BQU8sQ0FBQyxJQUFJLENBQUMsb0VBQW9FLENBQUMsQ0FBQztTQUN0RjtJQUNMLENBQUM7SUFDRCxNQUFNO1FBQ0YsTUFBTSxFQUFFLElBQUksR0FBRyxJQUFJLEVBQUUsWUFBWSxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUNqRCxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUM7UUFDbkUsSUFBSSxZQUFZLEVBQUU7WUFDZCxPQUFPLG9CQUFDLFdBQVcsSUFBQyxZQUFZLEVBQUUsWUFBWSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsQ0FBQztTQUNoSDtRQUNELE9BQU8sb0JBQUMsV0FBVyxJQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsQ0FBQztJQUNyRixDQUFDOztBQWpCTSxtQkFBWSxHQUFHO0lBQ2xCLDJCQUEyQjtJQUMzQixNQUFNLEVBQUUsR0FBRyxFQUFFLENBQUMsSUFBSTtDQUNyQixDQUFDO0FBZUssWUFBSyxHQUFHO0lBQ1gsSUFBSSxXQUFXLEtBQUssT0FBTyxXQUFpQyxDQUFDLENBQUMsQ0FBQztJQUMvRCxJQUFJLFdBQVcsS0FBSyxPQUFPLFdBQWlDLENBQUMsQ0FBQyxDQUFDO0NBQ2xFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBQcm9tcHRCYXNpYyB9IGZyb20gJy4vUHJvbXB0QmFzaWMucGFydCc7XG5pbXBvcnQgeyBQcm9tcHRNb2RhbCB9IGZyb20gJy4vUHJvbXB0TW9kYWwucGFydCc7XG5pbXBvcnQgeyB1c2VQcm9tcHQgfSBmcm9tICcuL3VzZVByb21wdCc7XG5pbXBvcnQgeyBQcm9tcHRQcm9wcyB9IGZyb20gJy4vUHJvbXB0LnR5cGVzJztcbmV4cG9ydCB7IHVzZVByb21wdCwgUHJvbXB0TW9kYWwgfTtcbmV4cG9ydCAqIGZyb20gJy4vUHJvbXB0LnR5cGVzJztcbi8qKlxuICogQ29tcG9uZW50IGZvciBwcm9tcHRpbmcgdGhlIHVzZXIgYmVmb3JlIG5hdmlnYXRpbmcgYXdheVxuICogZnJvbSBhIHNjcmVlbiB3aXRoIGEgZm9ybS5cbiAqL1xuZXhwb3J0IGNsYXNzIFByb21wdCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxQcm9tcHRQcm9wcz4ge1xuICAgIHN0YXRpYyBjb250ZXh0VHlwZXMgPSB7XG4gICAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZVxuICAgICAgICByb3V0ZXI6ICgpID0+IG51bGwsXG4gICAgfTtcbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgICAgY29uc3QgaGlzdG9yeSA9IHRoaXMuY29udGV4dC5yb3V0ZXIgJiYgdGhpcy5jb250ZXh0LnJvdXRlci5oaXN0b3J5O1xuICAgICAgICBpZiAoIShoaXN0b3J5ICYmIGhpc3RvcnkuYmxvY2spKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ1JlYWN0IFJvdXRlciBoaXN0b3J5IG9iamVjdCBpcyBub3QgZm91bmQuIENvbXBvbmVudCBjYW5ub3QgYmUgdXNlZCcpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgeyB3aGVuID0gdHJ1ZSwgbW9kYWxPcHRpb25zIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjb25zdCBoaXN0b3J5ID0gdGhpcy5jb250ZXh0LnJvdXRlciAmJiB0aGlzLmNvbnRleHQucm91dGVyLmhpc3Rvcnk7XG4gICAgICAgIGlmIChtb2RhbE9wdGlvbnMpIHtcbiAgICAgICAgICAgIHJldHVybiA8UHJvbXB0TW9kYWwgbW9kYWxPcHRpb25zPXttb2RhbE9wdGlvbnN9IGhpc3Rvcnk9e2hpc3Rvcnl9IHdoZW49e3doZW59IG1lc3NhZ2U9e3RoaXMucHJvcHMubWVzc2FnZX0vPjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gPFByb21wdEJhc2ljIGhpc3Rvcnk9e2hpc3Rvcnl9IHdoZW49e3doZW59IG1lc3NhZ2U9e3RoaXMucHJvcHMubWVzc2FnZX0vPjtcbiAgICB9XG4gICAgc3RhdGljIGlubmVyID0ge1xuICAgICAgICBnZXQgUHJvbXB0TW9kYWwoKSB7IHJldHVybiBQcm9tcHRNb2RhbCBhcyB0eXBlb2YgUHJvbXB0TW9kYWw7IH0sXG4gICAgICAgIGdldCBQcm9tcHRCYXNpYygpIHsgcmV0dXJuIFByb21wdEJhc2ljIGFzIHR5cGVvZiBQcm9tcHRCYXNpYzsgfVxuICAgIH07XG59XG4iXX0=