var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
import * as React from 'react';
import styled, { themed, css } from '../../utils/styled';
import { distance } from '../../distance';
import { getFontStyle } from '../../textStyles';
const Headlines = {};
function getComponentName(level) {
    return `h${level >= 1 && level <= 5 ? level : 3}`;
}
function getHeadlineStyle(level) {
    switch (level) {
        case 1:
            return getFontStyle({ size: 'xxxLarge', weight: 'light' });
        case 2:
            return getFontStyle({ size: 'xxLarge', weight: 'light' });
        case 3:
            return getFontStyle({ size: 'xLarge', weight: 'medium' });
        case 4:
            return getFontStyle({ size: 'large', weight: 'regular' });
        case 5:
            return getFontStyle({ size: 'medium', weight: 'medium' });
        default:
            return '';
    }
}
function getStyledHeadline(level) {
    const component = getComponentName(level);
    const Headline = Headlines[component];
    if (!Headline) {
        const NewHeadline = styled(component)(themed(props => css `
          ${getHeadlineStyle(props.level)}

          margin: 0;
          padding: ${props.theme.headingsPadding || `0 ${distance.small} 0 0`};
          font-family: ${props.theme.fontFamily || 'inherit'};
          color: ${props.subheader ? props.theme.text5 : 'inherit'};
        `));
        Headlines[component] = NewHeadline;
        return NewHeadline;
    }
    return Headline;
}
/**
 * Headline component with styles for all headline levels.
 */
export const Headline = (_a) => {
    var { level = 3, children } = _a, rest = __rest(_a, ["level", "children"]);
    const StyledHeadline = getStyledHeadline(level);
    return (React.createElement(StyledHeadline, Object.assign({ level: level }, rest), children));
};
Headline.displayName = 'Headline';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9IZWFkbGluZS9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsT0FBTyxLQUFLLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDL0IsT0FBTyxNQUFNLEVBQUUsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFekQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzFDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQTBCaEQsTUFBTSxTQUFTLEdBQWtCLEVBQUUsQ0FBQztBQUNwQyxTQUFTLGdCQUFnQixDQUFDLEtBQWE7SUFDbkMsT0FBTyxJQUFJLEtBQUssSUFBSSxDQUFDLElBQUksS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztBQUN0RCxDQUFDO0FBQ0QsU0FBUyxnQkFBZ0IsQ0FBQyxLQUFtQztJQUN6RCxRQUFRLEtBQUssRUFBRTtRQUNYLEtBQUssQ0FBQztZQUNGLE9BQU8sWUFBWSxDQUFDLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FBQztRQUMvRCxLQUFLLENBQUM7WUFDRixPQUFPLFlBQVksQ0FBQyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxDQUFDLENBQUM7UUFDOUQsS0FBSyxDQUFDO1lBQ0YsT0FBTyxZQUFZLENBQUMsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO1FBQzlELEtBQUssQ0FBQztZQUNGLE9BQU8sWUFBWSxDQUFDLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQztRQUM5RCxLQUFLLENBQUM7WUFDRixPQUFPLFlBQVksQ0FBQyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxDQUFDLENBQUM7UUFDOUQ7WUFDSSxPQUFPLEVBQUUsQ0FBQztLQUNqQjtBQUNMLENBQUM7QUFDRCxTQUFTLGlCQUFpQixDQUFDLEtBQWE7SUFDcEMsTUFBTSxTQUFTLEdBQUcsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDMUMsTUFBTSxRQUFRLEdBQUcsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3RDLElBQUksQ0FBQyxRQUFRLEVBQUU7UUFDWCxNQUFNLFdBQVcsR0FBRyxNQUFNLENBQUMsU0FBaUIsQ0FBQyxDQUFzQixNQUFNLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUM7WUFDbkYsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQzs7O3FCQUdwQixLQUFLLENBQUMsS0FBSyxDQUFDLGVBQWUsSUFBSSxLQUFLLFFBQVEsQ0FBQyxLQUFLLE1BQU07eUJBQ3BELEtBQUssQ0FBQyxLQUFLLENBQUMsVUFBVSxJQUFJLFNBQVM7bUJBQ3pDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxTQUFTO1NBQ3pELENBQUMsQ0FBQyxDQUFDO1FBQ0osU0FBUyxDQUFDLFNBQVMsQ0FBQyxHQUFHLFdBQVcsQ0FBQztRQUNuQyxPQUFPLFdBQVcsQ0FBQztLQUN0QjtJQUNELE9BQU8sUUFBUSxDQUFDO0FBQ3BCLENBQUM7QUFDRDs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFFBQVEsR0FBNkIsQ0FBQyxFQUFnQyxFQUFFLEVBQUU7UUFBcEMsRUFBRSxLQUFLLEdBQUcsQ0FBQyxFQUFFLFFBQVEsT0FBVyxFQUFULHdDQUFPO0lBQzdFLE1BQU0sY0FBYyxHQUFHLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2hELE9BQU8sQ0FBQyxvQkFBQyxjQUFjLGtCQUFDLEtBQUssRUFBRSxLQUFLLElBQU0sSUFBSSxHQUMzQyxRQUFRLENBQ00sQ0FBQyxDQUFDO0FBQ3ZCLENBQUMsQ0FBQztBQUNGLFFBQVEsQ0FBQyxXQUFXLEdBQUcsVUFBVSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCwgeyB0aGVtZWQsIGNzcyB9IGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlZCc7XG5pbXBvcnQgeyBTdGFuZGFyZFByb3BzIH0gZnJvbSAnLi4vLi4vY29tbW9uJztcbmltcG9ydCB7IGRpc3RhbmNlIH0gZnJvbSAnLi4vLi4vZGlzdGFuY2UnO1xuaW1wb3J0IHsgZ2V0Rm9udFN0eWxlIH0gZnJvbSAnLi4vLi4vdGV4dFN0eWxlcyc7XG5leHBvcnQgdHlwZSBIZWFkbGluZVNpemUgPSAnc21hbGwnIHwgJ21lZGl1bSc7XG5leHBvcnQgaW50ZXJmYWNlIEhlYWRsaW5lUHJvcHMgZXh0ZW5kcyBTdGFuZGFyZFByb3BzIHtcbiAgICAvKipcbiAgICAgKiBSZXByZXNlbnQgNSBsZXZlbHMgb2YgaGVhZGluZ3MgKDEtNSlcbiAgICAgKiBEZWZhdWx0IGlzIDNcbiAgICAgKi9cbiAgICBsZXZlbD86IDEgfCAyIHwgMyB8IDQgfCA1O1xuICAgIC8qKlxuICAgICAqIFdoZW4gc3BlY2lmaWVkIGhlYWRsaW5lIHdpbGwgaGF2ZSBtdXRlZCB0ZXh0IGNvbG9yXG4gICAgICovXG4gICAgc3ViaGVhZGVyPzogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBUaGUgdGV4dCBvZiB0aGUgaGVhZGxpbmUuXG4gICAgICovXG4gICAgY2hpbGRyZW4/OiBSZWFjdC5SZWFjdE5vZGU7XG59XG5leHBvcnQgaW50ZXJmYWNlIFN0eWxlZEhlYWRsaW5lUHJvcHMge1xuICAgIHNpemU6IEhlYWRsaW5lU2l6ZTtcbiAgICBsZXZlbDogbnVtYmVyO1xuICAgIHRoZW1lPzogYW55O1xuICAgIHN1YmhlYWRlcj86IGJvb2xlYW47XG59XG5pbnRlcmZhY2UgSGVhZGxpbmVDYWNoZSB7XG4gICAgW2tleTogc3RyaW5nXTogYW55O1xufVxuY29uc3QgSGVhZGxpbmVzOiBIZWFkbGluZUNhY2hlID0ge307XG5mdW5jdGlvbiBnZXRDb21wb25lbnROYW1lKGxldmVsOiBudW1iZXIpIHtcbiAgICByZXR1cm4gYGgke2xldmVsID49IDEgJiYgbGV2ZWwgPD0gNSA/IGxldmVsIDogM31gO1xufVxuZnVuY3Rpb24gZ2V0SGVhZGxpbmVTdHlsZShsZXZlbDogU3R5bGVkSGVhZGxpbmVQcm9wc1snbGV2ZWwnXSkge1xuICAgIHN3aXRjaCAobGV2ZWwpIHtcbiAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgcmV0dXJuIGdldEZvbnRTdHlsZSh7IHNpemU6ICd4eHhMYXJnZScsIHdlaWdodDogJ2xpZ2h0JyB9KTtcbiAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgcmV0dXJuIGdldEZvbnRTdHlsZSh7IHNpemU6ICd4eExhcmdlJywgd2VpZ2h0OiAnbGlnaHQnIH0pO1xuICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICByZXR1cm4gZ2V0Rm9udFN0eWxlKHsgc2l6ZTogJ3hMYXJnZScsIHdlaWdodDogJ21lZGl1bScgfSk7XG4gICAgICAgIGNhc2UgNDpcbiAgICAgICAgICAgIHJldHVybiBnZXRGb250U3R5bGUoeyBzaXplOiAnbGFyZ2UnLCB3ZWlnaHQ6ICdyZWd1bGFyJyB9KTtcbiAgICAgICAgY2FzZSA1OlxuICAgICAgICAgICAgcmV0dXJuIGdldEZvbnRTdHlsZSh7IHNpemU6ICdtZWRpdW0nLCB3ZWlnaHQ6ICdtZWRpdW0nIH0pO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGdldFN0eWxlZEhlYWRsaW5lKGxldmVsOiBudW1iZXIpIHtcbiAgICBjb25zdCBjb21wb25lbnQgPSBnZXRDb21wb25lbnROYW1lKGxldmVsKTtcbiAgICBjb25zdCBIZWFkbGluZSA9IEhlYWRsaW5lc1tjb21wb25lbnRdO1xuICAgIGlmICghSGVhZGxpbmUpIHtcbiAgICAgICAgY29uc3QgTmV3SGVhZGxpbmUgPSBzdHlsZWQoY29tcG9uZW50IGFzICdoMScpPFN0eWxlZEhlYWRsaW5lUHJvcHM+KHRoZW1lZChwcm9wcyA9PiBjc3MgYFxuICAgICAgICAgICR7Z2V0SGVhZGxpbmVTdHlsZShwcm9wcy5sZXZlbCl9XG5cbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgcGFkZGluZzogJHtwcm9wcy50aGVtZS5oZWFkaW5nc1BhZGRpbmcgfHwgYDAgJHtkaXN0YW5jZS5zbWFsbH0gMCAwYH07XG4gICAgICAgICAgZm9udC1mYW1pbHk6ICR7cHJvcHMudGhlbWUuZm9udEZhbWlseSB8fCAnaW5oZXJpdCd9O1xuICAgICAgICAgIGNvbG9yOiAke3Byb3BzLnN1YmhlYWRlciA/IHByb3BzLnRoZW1lLnRleHQ1IDogJ2luaGVyaXQnfTtcbiAgICAgICAgYCkpO1xuICAgICAgICBIZWFkbGluZXNbY29tcG9uZW50XSA9IE5ld0hlYWRsaW5lO1xuICAgICAgICByZXR1cm4gTmV3SGVhZGxpbmU7XG4gICAgfVxuICAgIHJldHVybiBIZWFkbGluZTtcbn1cbi8qKlxuICogSGVhZGxpbmUgY29tcG9uZW50IHdpdGggc3R5bGVzIGZvciBhbGwgaGVhZGxpbmUgbGV2ZWxzLlxuICovXG5leHBvcnQgY29uc3QgSGVhZGxpbmU6IFJlYWN0LlNGQzxIZWFkbGluZVByb3BzPiA9ICh7IGxldmVsID0gMywgY2hpbGRyZW4sIC4uLnJlc3QgfSkgPT4ge1xuICAgIGNvbnN0IFN0eWxlZEhlYWRsaW5lID0gZ2V0U3R5bGVkSGVhZGxpbmUobGV2ZWwpO1xuICAgIHJldHVybiAoPFN0eWxlZEhlYWRsaW5lIGxldmVsPXtsZXZlbH0gey4uLnJlc3R9PlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvU3R5bGVkSGVhZGxpbmU+KTtcbn07XG5IZWFkbGluZS5kaXNwbGF5TmFtZSA9ICdIZWFkbGluZSc7XG4iXX0=