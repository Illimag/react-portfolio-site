import * as React from 'react';
import { StandardProps } from '../../common';
export declare type AvatarSize = 'xx-small' | 'x-small' | 'small' | 'medium' | 'large' | 'x-large';
export interface AvatarProps extends StandardProps {
    /**
     * The size of the avatar, where medium is the default size.
     */
    size?: AvatarSize;
    /**
     * The initials of the user - at most two letters are being shown.
     */
    initials?: string;
    /**
     * Option to override the automatic color pick if no image was provided.
     */
    color?: string;
    /**
     * The image URL to be used as Avatar icon.
     */
    image?: string;
    /**
     * The optional description to show for the Avatar.
     */
    description?: string;
    /**
     * The content of the optional badge.
     */
    children?: React.ReactNode;
}
export interface SizeProp {
    size: AvatarSize;
}
interface AvatarInitialsBaseProps {
    color?: string;
    initials?: string;
    theme?: any;
}
/**
 * The avatar component renders an avatar sticker with an optional badge.
 *
 * We must provide either an `image` or an `initials` prop for the Avatar component to work correctly.
 */
export declare const Avatar: React.FunctionComponent<AvatarProps> & {
    inner: {
        readonly AvatarContainer: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, SizeProp, never>;
        readonly AvatarContent: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, SizeProp, never>;
        readonly AvatarImage: import("styled-components").StyledComponent<"img", import("../../common").PreciseTheme, {}, never>;
        readonly AvatarInitials: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, SizeProp & AvatarInitialsBaseProps, never>;
        readonly AvatarBadge: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, SizeProp, never>;
    };
};
export {};
