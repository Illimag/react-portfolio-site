import * as React from 'react';
import { SelectButtonChangeEvent } from '../SelectButton';
export interface ChangePageProps {
    disabled: boolean;
}
export interface PageControlsProps {
    current: number;
    total: number;
    changeToPrevious?(): void;
    changeToNext?(): void;
    changeToSelect?(props: SelectButtonChangeEvent): void;
    pages: Array<string>;
}
export declare const PageControls: React.FunctionComponent<PageControlsProps> & {
    inner: {
        readonly PageControlsStyled: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
        readonly StyledContainer: import("styled-components").StyledComponent<React.FunctionComponent<import("../Container").ContainerProps> & {
            inner: {
                readonly StyledContainer: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {
                    maxWidth?: number | undefined;
                    align: import("../Container").ContainerAlignment;
                }, never>;
            };
        }, import("../..").PreciseTheme, {}, never>;
        readonly ChangePage: import("styled-components").StyledComponent<"button", import("../..").PreciseTheme, ChangePageProps, never>;
        readonly Icon: React.FunctionComponent<import("../Icon").IconProps> & {
            inner: {
                readonly StyledIcon: import("styled-components").StyledComponent<"i", import("../..").PreciseTheme, {}, never>;
            };
        };
        readonly SelectButton: React.ComponentClass<import("react-onclickoutside").OnClickOutProps<import("../SelectButton").SelectButtonProps>, any>;
    };
};
