var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
import * as React from 'react';
import { Spinner } from '../Spinner';
import styled, { themed } from '../../utils/styled';
// Wrapper used only in case when preloader enabled
const StyledImageWrapper = styled.div `
  position: relative;
  display: inline-block;
  width: 100%;
  height: 100%;
  flex: 1 1 auto;
  box-sizing: border-box;
`;
const StyledImage = styled.img `
  margin: 0;
  padding: 0;
  border: 0;
  display: inline-block;
  vertical-align: middle;
  max-width: 100%;
  height: auto;
  border-style: none;
`;
const StyledError = styled.span `
  background: ${themed(props => props.theme.inputError)};
  color: ${themed(props => props.theme.text7)};
  font-family: inherit;
`;
/**
 * Image component is meant to be a simple wrapper for standard DOM `img` element.
 * Component is fluid by default, meaning that it has max-width: 100% and height: auto,
 * so that it scales with it's parent.
 */
export class Image extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            status: 'idle',
        };
    }
    componentDidMount() {
        const { preload, src } = this.props;
        if (preload) {
            const image = document.createElement('img');
            image.onload = () => this.setState({ status: 'loaded' });
            image.onerror = () => this.setState({ status: 'error' });
            image.src = src;
        }
    }
    render() {
        const _a = this.props, { children, preload, src, alt, preloader, error } = _a, rest = __rest(_a, ["children", "preload", "src", "alt", "preloader", "error"]);
        const { status } = this.state;
        return preload ? (React.createElement(StyledImageWrapper, null, (() => {
            switch (status) {
                case 'loaded':
                    return React.createElement(StyledImage, Object.assign({ src: src, alt: alt }, rest));
                case 'error':
                    return error || React.createElement(StyledError, null,
                        "Error loading image from ",
                        src,
                        ".");
                case 'loading':
                case 'idle':
                default:
                    return preloader || React.createElement(Spinner, null);
            }
        })())) : (React.createElement(StyledImage, Object.assign({ src: src, alt: alt }, rest)));
    }
}
Image.inner = {
    get StyledImageWrapper() { return StyledImageWrapper; },
    get StyledImage() { return StyledImage; },
    get StyledError() { return StyledError; },
    get Spinner() { return Spinner; }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9JbWFnZS9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsT0FBTyxLQUFLLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDL0IsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLFlBQVksQ0FBQztBQUNyQyxPQUFPLE1BQU0sRUFBRSxFQUFFLE1BQU0sRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBb0NwRCxtREFBbUQ7QUFDbkQsTUFBTSxrQkFBa0IsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDOzs7Ozs7O0NBT3JDLENBQUM7QUFDRixNQUFNLFdBQVcsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDOzs7Ozs7Ozs7Q0FTOUIsQ0FBQztBQUNGLE1BQU0sV0FBVyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUM7Z0JBQ2hCLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDO1dBQzVDLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDOztDQUU1QyxDQUFDO0FBQ0Y7Ozs7R0FJRztBQUNILE1BQU0sT0FBTyxLQUFNLFNBQVEsS0FBSyxDQUFDLFNBQWlDO0lBQzlELFlBQVksS0FBaUI7UUFDekIsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ2IsSUFBSSxDQUFDLEtBQUssR0FBRztZQUNULE1BQU0sRUFBRSxNQUFNO1NBQ2pCLENBQUM7SUFDTixDQUFDO0lBQ0QsaUJBQWlCO1FBQ2IsTUFBTSxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3BDLElBQUksT0FBTyxFQUFFO1lBQ1QsTUFBTSxLQUFLLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUM1QyxLQUFLLENBQUMsTUFBTSxHQUFHLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQztZQUN6RCxLQUFLLENBQUMsT0FBTyxHQUFHLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FBQztZQUN6RCxLQUFLLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQztTQUNuQjtJQUNMLENBQUM7SUFDRCxNQUFNO1FBQ0YsTUFBTSxlQUF1RSxFQUF2RSxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxTQUFTLEVBQUUsS0FBSyxPQUF3QixFQUF0Qiw4RUFBc0IsQ0FBQztRQUM5RSxNQUFNLEVBQUUsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUM5QixPQUFPLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxvQkFBQyxrQkFBa0IsUUFDcEMsQ0FBQyxHQUFHLEVBQUU7WUFDSCxRQUFRLE1BQU0sRUFBRTtnQkFDWixLQUFLLFFBQVE7b0JBQ1QsT0FBTyxvQkFBQyxXQUFXLGtCQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsSUFBTSxJQUFJLEVBQUcsQ0FBQztnQkFDeEQsS0FBSyxPQUFPO29CQUNSLE9BQU8sS0FBSyxJQUFJLG9CQUFDLFdBQVc7O3dCQUEyQixHQUFHOzRCQUFnQixDQUFDO2dCQUMvRSxLQUFLLFNBQVMsQ0FBQztnQkFDZixLQUFLLE1BQU0sQ0FBQztnQkFDWjtvQkFDSSxPQUFPLFNBQVMsSUFBSSxvQkFBQyxPQUFPLE9BQUcsQ0FBQzthQUN2QztRQUNMLENBQUMsQ0FBQyxFQUFFLENBQ2UsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLG9CQUFDLFdBQVcsa0JBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxJQUFNLElBQUksRUFBRyxDQUFDLENBQUM7SUFDMUUsQ0FBQzs7QUFDTSxXQUFLLEdBQUc7SUFDWCxJQUFJLGtCQUFrQixLQUFLLE9BQU8sa0JBQStDLENBQUMsQ0FBQyxDQUFDO0lBQ3BGLElBQUksV0FBVyxLQUFLLE9BQU8sV0FBaUMsQ0FBQyxDQUFDLENBQUM7SUFDL0QsSUFBSSxXQUFXLEtBQUssT0FBTyxXQUFpQyxDQUFDLENBQUMsQ0FBQztJQUMvRCxJQUFJLE9BQU8sS0FBSyxPQUFPLE9BQXlCLENBQUMsQ0FBQyxDQUFDO0NBQ3RELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBTcGlubmVyIH0gZnJvbSAnLi4vU3Bpbm5lcic7XG5pbXBvcnQgc3R5bGVkLCB7IHRoZW1lZCB9IGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlZCc7XG5pbXBvcnQgeyBTdGFuZGFyZFByb3BzIH0gZnJvbSAnLi4vLi4vY29tbW9uJztcbmV4cG9ydCB0eXBlIFN0YXR1cyA9ICdpZGxlJyB8ICdsb2FkaW5nJyB8ICdsb2FkZWQnIHwgJ2Vycm9yJztcbmV4cG9ydCBpbnRlcmZhY2UgSW1hZ2VQcm9wcyBleHRlbmRzIFN0YW5kYXJkUHJvcHMge1xuICAgIC8qKlxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBjaGlsZHJlbj86IHZvaWQ7XG4gICAgLyoqXG4gICAgICogVGhpcyBhdHRyaWJ1dGUgZGVmaW5lcyB0aGUgYWx0ZXJuYXRpdmUgdGV4dCBkZXNjcmliaW5nIHRoZSBpbWFnZS5cbiAgICAgKiBVc2VycyB3aWxsIHNlZSB0aGlzIHRleHQgZGlzcGxheWVkIGlmIHRoZSBpbWFnZSBVUkwgaXMgd3JvbmcsXG4gICAgICogdGhlIGltYWdlIGlzIG5vdCBpbiBvbmUgb2YgdGhlIHN1cHBvcnRlZCBmb3JtYXRzLCBvciBpZiB0aGUgaW1hZ2UgaXMgbm90IHlldCBkb3dubG9hZGVkLlxuICAgICAqL1xuICAgIGFsdDogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIFdoZW4gc3BlY2lmaWVkLCBpbWFnZSB3aWxsIGJlIHByZWxvYWRlZCBhbmQgdGhlIHByZWxvYWRlciBzaG93biBkdXJpbmcgdGhlIHByZWxvYWRpbmcuXG4gICAgICogRGVmYXVsdCBpcyBmYWxzZS5cbiAgICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgICAqL1xuICAgIHByZWxvYWQ/OiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIFRoZSBpbWFnZSBVUkwuIFRoaXMgYXR0cmlidXRlIGlzIG1hbmRhdG9yeSBmb3IgdGhlIDxJbWFnZT4gY29tcG9uZW50LlxuICAgICAqL1xuICAgIHNyYzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEN1c3RvbSBwcmVsb2FkZXIgY29tcG9uZW50IHRvIGluZGljYXRlIGxvYWRpbmcuXG4gICAgICovXG4gICAgcHJlbG9hZGVyPzogUmVhY3QuUmVhY3RDaGlsZDtcbiAgICAvKipcbiAgICAgKiBDdXN0b20gZXJyb3IgY29tcG9uZW50IHRoYXQgaXMgZGlzcGxheWVkIHdoZW4gdGhlIGxvYWRpbmcgZmFpbHMuXG4gICAgICovXG4gICAgZXJyb3I/OiBSZWFjdC5SZWFjdENoaWxkO1xufVxuZXhwb3J0IGludGVyZmFjZSBJbWFnZVN0YXRlIHtcbiAgICBzdGF0dXM6IFN0YXR1cztcbn1cbi8vIFdyYXBwZXIgdXNlZCBvbmx5IGluIGNhc2Ugd2hlbiBwcmVsb2FkZXIgZW5hYmxlZFxuY29uc3QgU3R5bGVkSW1hZ2VXcmFwcGVyID0gc3R5bGVkLmRpdiBgXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBmbGV4OiAxIDEgYXV0bztcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbmA7XG5jb25zdCBTdHlsZWRJbWFnZSA9IHN0eWxlZC5pbWcgYFxuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuYDtcbmNvbnN0IFN0eWxlZEVycm9yID0gc3R5bGVkLnNwYW4gYFxuICBiYWNrZ3JvdW5kOiAke3RoZW1lZChwcm9wcyA9PiBwcm9wcy50aGVtZS5pbnB1dEVycm9yKX07XG4gIGNvbG9yOiAke3RoZW1lZChwcm9wcyA9PiBwcm9wcy50aGVtZS50ZXh0Nyl9O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbmA7XG4vKipcbiAqIEltYWdlIGNvbXBvbmVudCBpcyBtZWFudCB0byBiZSBhIHNpbXBsZSB3cmFwcGVyIGZvciBzdGFuZGFyZCBET00gYGltZ2AgZWxlbWVudC5cbiAqIENvbXBvbmVudCBpcyBmbHVpZCBieSBkZWZhdWx0LCBtZWFuaW5nIHRoYXQgaXQgaGFzIG1heC13aWR0aDogMTAwJSBhbmQgaGVpZ2h0OiBhdXRvLFxuICogc28gdGhhdCBpdCBzY2FsZXMgd2l0aCBpdCdzIHBhcmVudC5cbiAqL1xuZXhwb3J0IGNsYXNzIEltYWdlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PEltYWdlUHJvcHMsIEltYWdlU3RhdGU+IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wczogSW1hZ2VQcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBzdGF0dXM6ICdpZGxlJyxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICAgIGNvbnN0IHsgcHJlbG9hZCwgc3JjIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBpZiAocHJlbG9hZCkge1xuICAgICAgICAgICAgY29uc3QgaW1hZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcbiAgICAgICAgICAgIGltYWdlLm9ubG9hZCA9ICgpID0+IHRoaXMuc2V0U3RhdGUoeyBzdGF0dXM6ICdsb2FkZWQnIH0pO1xuICAgICAgICAgICAgaW1hZ2Uub25lcnJvciA9ICgpID0+IHRoaXMuc2V0U3RhdGUoeyBzdGF0dXM6ICdlcnJvcicgfSk7XG4gICAgICAgICAgICBpbWFnZS5zcmMgPSBzcmM7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IGNoaWxkcmVuLCBwcmVsb2FkLCBzcmMsIGFsdCwgcHJlbG9hZGVyLCBlcnJvciwgLi4ucmVzdCB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgeyBzdGF0dXMgfSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIHJldHVybiBwcmVsb2FkID8gKDxTdHlsZWRJbWFnZVdyYXBwZXI+XG4gICAgICAgIHsoKCkgPT4ge1xuICAgICAgICAgICAgc3dpdGNoIChzdGF0dXMpIHtcbiAgICAgICAgICAgICAgICBjYXNlICdsb2FkZWQnOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gPFN0eWxlZEltYWdlIHNyYz17c3JjfSBhbHQ9e2FsdH0gey4uLnJlc3R9Lz47XG4gICAgICAgICAgICAgICAgY2FzZSAnZXJyb3InOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZXJyb3IgfHwgPFN0eWxlZEVycm9yPkVycm9yIGxvYWRpbmcgaW1hZ2UgZnJvbSB7c3JjfS48L1N0eWxlZEVycm9yPjtcbiAgICAgICAgICAgICAgICBjYXNlICdsb2FkaW5nJzpcbiAgICAgICAgICAgICAgICBjYXNlICdpZGxlJzpcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJlbG9hZGVyIHx8IDxTcGlubmVyIC8+O1xuICAgICAgICAgICAgfVxuICAgICAgICB9KSgpfVxuICAgICAgPC9TdHlsZWRJbWFnZVdyYXBwZXI+KSA6ICg8U3R5bGVkSW1hZ2Ugc3JjPXtzcmN9IGFsdD17YWx0fSB7Li4ucmVzdH0vPik7XG4gICAgfVxuICAgIHN0YXRpYyBpbm5lciA9IHtcbiAgICAgICAgZ2V0IFN0eWxlZEltYWdlV3JhcHBlcigpIHsgcmV0dXJuIFN0eWxlZEltYWdlV3JhcHBlciBhcyB0eXBlb2YgU3R5bGVkSW1hZ2VXcmFwcGVyOyB9LFxuICAgICAgICBnZXQgU3R5bGVkSW1hZ2UoKSB7IHJldHVybiBTdHlsZWRJbWFnZSBhcyB0eXBlb2YgU3R5bGVkSW1hZ2U7IH0sXG4gICAgICAgIGdldCBTdHlsZWRFcnJvcigpIHsgcmV0dXJuIFN0eWxlZEVycm9yIGFzIHR5cGVvZiBTdHlsZWRFcnJvcjsgfSxcbiAgICAgICAgZ2V0IFNwaW5uZXIoKSB7IHJldHVybiBTcGlubmVyIGFzIHR5cGVvZiBTcGlubmVyOyB9XG4gICAgfTtcbn1cbiJdfQ==