import * as React from 'react';
import { InteractiveListItem } from '../InteractiveList';
import { StandardProps } from '../../common';
export interface SelectButtonChangeEvent {
    /**
     * The currently selected index. In case none is
     * chosen the value -1 is communicated.
     */
    index: number;
    /**
     * The currently selected value. Undefined if none
     * is chosen.
     */
    value: string | undefined;
}
export interface SelectButtonProps extends StandardProps {
    /**
     * The data source of the elements to show.
     */
    data: Array<string | InteractiveListItem>;
    /**
     * The currently selected value if any. Picking one enters the controlled mode.
     */
    value?: string;
    /**
     * The initial value if any. Picking one enters managed mode.
     */
    defaultValue?: string;
    /**
     * Event fired once the selected value changes.
     */
    onChange?(e: SelectButtonChangeEvent): void;
    /**
     * @ignore
     */
    children?: void;
}
export interface SelectButtonState {
    open: boolean;
    value: string;
    controlled: boolean;
}
/**
 * Represents a select button, which is a kind of dropdown button.
 */
export declare const SelectButton: React.ComponentClass<import("react-onclickoutside").OnClickOutProps<SelectButtonProps>, any>;
