var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
import * as React from 'react';
import styled, { themed, css } from '../../utils/styled';
import { Anchor } from '../Anchor';
import { Icon } from '../Icon';
import { ocean, midnight } from '../../colors';
import { distance } from '../../distance';
import { getFontStyle } from '../../textStyles';
const StyledAnchor = styled(Anchor)(themed(({ display, disabled, theme: { ui0, ui4 } }) => css `
      outline: none;
      text-decoration: none;
      color: ${disabled ? ui4 : ui0};
      display: ${display};
      font-size: 0;
      vertical-align: middle;
      cursor: ${disabled ? 'default' : 'pointer'};

      &:hover,
      &:hover * {
        color: ${disabled ? ui4 : ocean};
      }

      &:focus,
      &:focus * {
        color: ${disabled ? ui4 : midnight};
      }
    `));
const StyledIcon = styled(Icon) `
  color: ${themed(({ disabled, iconOnly, theme: { ui0, ui4, ui5 } }) => (disabled ? ui4 : iconOnly ? ui5 : ui0))};
  display: inline-block;
  vertical-align: middle;
`;
const AnchorText = styled.span `
  ${getFontStyle({ size: 'medium' })}

  display: inline-block;
  vertical-align: middle;
  margin-left: ${distance.xsmall};
`;
/**
 * The icon link component shows an icon with optional text.
 */
export const IconLink = Object.assign(((_a) => {
    var { icon, theme, disabled, children, block } = _a, other = __rest(_a, ["icon", "theme", "disabled", "children", "block"]);
    return (React.createElement(StyledAnchor, Object.assign({ disabled: disabled, display: block ? 'block' : 'inline-block' }, other),
        icon && (React.createElement(StyledIcon, { disabled: disabled, iconOnly: children ? false : true, name: icon, theme: theme, size: '22px' })),
        children && React.createElement(AnchorText, null, children)));
}), { inner: {
        get StyledAnchor() { return StyledAnchor; },
        get StyledIcon() { return StyledIcon; },
        get AnchorText() { return AnchorText; }
    } });
IconLink.displayName = 'IconLink';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9JY29uTGluay9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsT0FBTyxLQUFLLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDL0IsT0FBTyxNQUFNLEVBQUUsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDekQsT0FBTyxFQUFFLE1BQU0sRUFBZSxNQUFNLFdBQVcsQ0FBQztBQUNoRCxPQUFPLEVBQVksSUFBSSxFQUFhLE1BQU0sU0FBUyxDQUFDO0FBQ3BELE9BQU8sRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUMxQyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFtQmhELE1BQU0sWUFBWSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBb0IsTUFBTSxDQUFDLENBQUMsRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUM7OztlQUduRyxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRztpQkFDbEIsT0FBTzs7O2dCQUdSLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxTQUFTOzs7O2lCQUkvQixRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsS0FBSzs7Ozs7aUJBS3RCLFFBQVEsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxRQUFROztLQUVyQyxDQUFDLENBQUMsQ0FBQztBQUNSLE1BQU0sVUFBVSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBOEI7V0FDbEQsTUFBTSxDQUFDLENBQUMsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDOzs7Q0FHL0csQ0FBQztBQUNGLE1BQU0sVUFBVSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUM7SUFDM0IsWUFBWSxDQUFDLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxDQUFDOzs7O2lCQUluQixRQUFRLENBQUMsTUFBTTtDQUMvQixDQUFDO0FBQ0Y7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBRSxDQUFDLENBQUMsRUFBb0QsRUFBRSxFQUFFO1FBQXhELEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLEtBQUssT0FBWSxFQUFWLHNFQUFRO0lBQ3ZGLE9BQU8sQ0FBQyxvQkFBQyxZQUFZLGtCQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxjQUFjLElBQU0sS0FBSztRQUMzRixJQUFJLElBQUksQ0FBQyxvQkFBQyxVQUFVLElBQUMsUUFBUSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLE1BQU0sR0FBRyxDQUFDO1FBQ3RILFFBQVEsSUFBSSxvQkFBQyxVQUFVLFFBQUUsUUFBUSxDQUFjLENBQ25DLENBQUMsQ0FBQztBQUNyQixDQUFDLENBQThCLEVBQUUsRUFBRSxLQUFLLEVBQUU7UUFDbEMsSUFBSSxZQUFZLEtBQUssT0FBTyxZQUFtQyxDQUFDLENBQUMsQ0FBQztRQUNsRSxJQUFJLFVBQVUsS0FBSyxPQUFPLFVBQStCLENBQUMsQ0FBQyxDQUFDO1FBQzVELElBQUksVUFBVSxLQUFLLE9BQU8sVUFBK0IsQ0FBQyxDQUFDLENBQUM7S0FDL0QsRUFBRSxDQUFDLENBQUM7QUFDVCxRQUFRLENBQUMsV0FBVyxHQUFHLFVBQVUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQsIHsgdGhlbWVkLCBjc3MgfSBmcm9tICcuLi8uLi91dGlscy9zdHlsZWQnO1xuaW1wb3J0IHsgQW5jaG9yLCBBbmNob3JQcm9wcyB9IGZyb20gJy4uL0FuY2hvcic7XG5pbXBvcnQgeyBJY29uTmFtZSwgSWNvbiwgSWNvblByb3BzIH0gZnJvbSAnLi4vSWNvbic7XG5pbXBvcnQgeyBvY2VhbiwgbWlkbmlnaHQgfSBmcm9tICcuLi8uLi9jb2xvcnMnO1xuaW1wb3J0IHsgZGlzdGFuY2UgfSBmcm9tICcuLi8uLi9kaXN0YW5jZSc7XG5pbXBvcnQgeyBnZXRGb250U3R5bGUgfSBmcm9tICcuLi8uLi90ZXh0U3R5bGVzJztcbmV4cG9ydCBpbnRlcmZhY2UgSWNvbkxpbmtQcm9wcyBleHRlbmRzIEFuY2hvclByb3BzIHtcbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBpY29uIGxpbmsgYXMgYSBibG9jay5cbiAgICAgKi9cbiAgICBibG9jaz86IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogVGhlIG5hbWUgb2YgdGhlIGljb24gdG8gZGlzcGxheS5cbiAgICAgKi9cbiAgICBpY29uOiBJY29uTmFtZTtcbn1cbmV4cG9ydCBpbnRlcmZhY2UgU3R5bGVkQW5jaG9yUHJvcHMge1xuICAgIGRpc2FibGVkPzogYm9vbGVhbjtcbiAgICBkaXNwbGF5PzogJ2Jsb2NrJyB8ICdpbmxpbmUtYmxvY2snO1xufVxuZXhwb3J0IGludGVyZmFjZSBTdHlsZWRJY29uUHJvcHMge1xuICAgIGRpc2FibGVkPzogYm9vbGVhbjtcbiAgICBpY29uT25seT86IGJvb2xlYW47XG59XG5jb25zdCBTdHlsZWRBbmNob3IgPSBzdHlsZWQoQW5jaG9yKTxTdHlsZWRBbmNob3JQcm9wcz4odGhlbWVkKCh7IGRpc3BsYXksIGRpc2FibGVkLCB0aGVtZTogeyB1aTAsIHVpNCB9IH0pID0+IGNzcyBgXG4gICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgY29sb3I6ICR7ZGlzYWJsZWQgPyB1aTQgOiB1aTB9O1xuICAgICAgZGlzcGxheTogJHtkaXNwbGF5fTtcbiAgICAgIGZvbnQtc2l6ZTogMDtcbiAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgICBjdXJzb3I6ICR7ZGlzYWJsZWQgPyAnZGVmYXVsdCcgOiAncG9pbnRlcid9O1xuXG4gICAgICAmOmhvdmVyLFxuICAgICAgJjpob3ZlciAqIHtcbiAgICAgICAgY29sb3I6ICR7ZGlzYWJsZWQgPyB1aTQgOiBvY2Vhbn07XG4gICAgICB9XG5cbiAgICAgICY6Zm9jdXMsXG4gICAgICAmOmZvY3VzICoge1xuICAgICAgICBjb2xvcjogJHtkaXNhYmxlZCA/IHVpNCA6IG1pZG5pZ2h0fTtcbiAgICAgIH1cbiAgICBgKSk7XG5jb25zdCBTdHlsZWRJY29uID0gc3R5bGVkKEljb24pPFN0eWxlZEljb25Qcm9wcyAmIEljb25Qcm9wcz4gYFxuICBjb2xvcjogJHt0aGVtZWQoKHsgZGlzYWJsZWQsIGljb25Pbmx5LCB0aGVtZTogeyB1aTAsIHVpNCwgdWk1IH0gfSkgPT4gKGRpc2FibGVkID8gdWk0IDogaWNvbk9ubHkgPyB1aTUgOiB1aTApKX07XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbmA7XG5jb25zdCBBbmNob3JUZXh0ID0gc3R5bGVkLnNwYW4gYFxuICAke2dldEZvbnRTdHlsZSh7IHNpemU6ICdtZWRpdW0nIH0pfVxuXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgbWFyZ2luLWxlZnQ6ICR7ZGlzdGFuY2UueHNtYWxsfTtcbmA7XG4vKipcbiAqIFRoZSBpY29uIGxpbmsgY29tcG9uZW50IHNob3dzIGFuIGljb24gd2l0aCBvcHRpb25hbCB0ZXh0LlxuICovXG5leHBvcnQgY29uc3QgSWNvbkxpbmsgPSBPYmplY3QuYXNzaWduKCgoKHsgaWNvbiwgdGhlbWUsIGRpc2FibGVkLCBjaGlsZHJlbiwgYmxvY2ssIC4uLm90aGVyIH0pID0+IHtcbiAgICByZXR1cm4gKDxTdHlsZWRBbmNob3IgZGlzYWJsZWQ9e2Rpc2FibGVkfSBkaXNwbGF5PXtibG9jayA/ICdibG9jaycgOiAnaW5saW5lLWJsb2NrJ30gey4uLm90aGVyfT5cbiAgICAgIHtpY29uICYmICg8U3R5bGVkSWNvbiBkaXNhYmxlZD17ZGlzYWJsZWR9IGljb25Pbmx5PXtjaGlsZHJlbiA/IGZhbHNlIDogdHJ1ZX0gbmFtZT17aWNvbn0gdGhlbWU9e3RoZW1lfSBzaXplPXsnMjJweCd9Lz4pfVxuICAgICAge2NoaWxkcmVuICYmIDxBbmNob3JUZXh0PntjaGlsZHJlbn08L0FuY2hvclRleHQ+fVxuICAgIDwvU3R5bGVkQW5jaG9yPik7XG59KSBhcyBSZWFjdC5TRkM8SWNvbkxpbmtQcm9wcz4pLCB7IGlubmVyOiB7XG4gICAgICAgIGdldCBTdHlsZWRBbmNob3IoKSB7IHJldHVybiBTdHlsZWRBbmNob3IgYXMgdHlwZW9mIFN0eWxlZEFuY2hvcjsgfSxcbiAgICAgICAgZ2V0IFN0eWxlZEljb24oKSB7IHJldHVybiBTdHlsZWRJY29uIGFzIHR5cGVvZiBTdHlsZWRJY29uOyB9LFxuICAgICAgICBnZXQgQW5jaG9yVGV4dCgpIHsgcmV0dXJuIEFuY2hvclRleHQgYXMgdHlwZW9mIEFuY2hvclRleHQ7IH1cbiAgICB9IH0pO1xuSWNvbkxpbmsuZGlzcGxheU5hbWUgPSAnSWNvbkxpbmsnO1xuIl19