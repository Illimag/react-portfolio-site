import * as React from 'react';
import * as colors from '../../colors';
import styled from '../../utils/styled';
import { distance } from '../../distance';
import { Icon } from '../Icon';
import { getFontStyle } from '../../textStyles';
const StyledCloseButton = styled.a `
  ${getFontStyle({ size: 'medium' })}

  position: absolute;
  top: ${distance.medium};
  right: ${distance.medium};
  background-color: ${colors.transparent};
  padding: 0;
  border: none;
  align-self: start;
  cursor: pointer;
  color: ${colors.black};
  opacity: 0.2;
  transition: opacity 0.2s ease-out;

  &:hover {
    opacity: 0.5;
  }
`;
/**
 * A simple close button as used in Modal dialogs.
 */
export const CloseButton = Object.assign((props => (React.createElement(StyledCloseButton, Object.assign({}, props),
    React.createElement(Icon, { name: "Close", size: 1.1 })))), { inner: {
        get StyledCloseButton() { return StyledCloseButton; },
        get Icon() { return Icon; }
    } });
CloseButton.displayName = 'CloseButton';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9DbG9zZUJ1dHRvbi9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxLQUFLLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDL0IsT0FBTyxLQUFLLE1BQU0sTUFBTSxjQUFjLENBQUM7QUFDdkMsT0FBTyxNQUFNLE1BQU0sb0JBQW9CLENBQUM7QUFDeEMsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFDL0IsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2hELE1BQU0saUJBQWlCLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUMvQixZQUFZLENBQUMsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLENBQUM7OztTQUczQixRQUFRLENBQUMsTUFBTTtXQUNiLFFBQVEsQ0FBQyxNQUFNO3NCQUNKLE1BQU0sQ0FBQyxXQUFXOzs7OztXQUs3QixNQUFNLENBQUMsS0FBSzs7Ozs7OztDQU90QixDQUFDO0FBQ0Y7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQyxvQkFBQyxpQkFBaUIsb0JBQUssS0FBSztJQUM3RSxvQkFBQyxJQUFJLElBQUMsSUFBSSxFQUFDLE9BQU8sRUFBQyxJQUFJLEVBQUUsR0FBRyxHQUFHLENBQ2IsQ0FBQyxDQUF3RCxFQUFFLEVBQUUsS0FBSyxFQUFFO1FBQ2xGLElBQUksaUJBQWlCLEtBQUssT0FBTyxpQkFBNkMsQ0FBQyxDQUFDLENBQUM7UUFDakYsSUFBSSxJQUFJLEtBQUssT0FBTyxJQUFtQixDQUFDLENBQUMsQ0FBQztLQUM3QyxFQUFFLENBQUMsQ0FBQztBQUNULFdBQVcsQ0FBQyxXQUFXLEdBQUcsYUFBYSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICogYXMgY29sb3JzIGZyb20gJy4uLy4uL2NvbG9ycyc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlZCc7XG5pbXBvcnQgeyBkaXN0YW5jZSB9IGZyb20gJy4uLy4uL2Rpc3RhbmNlJztcbmltcG9ydCB7IEljb24gfSBmcm9tICcuLi9JY29uJztcbmltcG9ydCB7IGdldEZvbnRTdHlsZSB9IGZyb20gJy4uLy4uL3RleHRTdHlsZXMnO1xuY29uc3QgU3R5bGVkQ2xvc2VCdXR0b24gPSBzdHlsZWQuYSBgXG4gICR7Z2V0Rm9udFN0eWxlKHsgc2l6ZTogJ21lZGl1bScgfSl9XG5cbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6ICR7ZGlzdGFuY2UubWVkaXVtfTtcbiAgcmlnaHQ6ICR7ZGlzdGFuY2UubWVkaXVtfTtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtjb2xvcnMudHJhbnNwYXJlbnR9O1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGFsaWduLXNlbGY6IHN0YXJ0O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGNvbG9yOiAke2NvbG9ycy5ibGFja307XG4gIG9wYWNpdHk6IDAuMjtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjJzIGVhc2Utb3V0O1xuXG4gICY6aG92ZXIge1xuICAgIG9wYWNpdHk6IDAuNTtcbiAgfVxuYDtcbi8qKlxuICogQSBzaW1wbGUgY2xvc2UgYnV0dG9uIGFzIHVzZWQgaW4gTW9kYWwgZGlhbG9ncy5cbiAqL1xuZXhwb3J0IGNvbnN0IENsb3NlQnV0dG9uID0gT2JqZWN0LmFzc2lnbigoKHByb3BzID0+ICg8U3R5bGVkQ2xvc2VCdXR0b24gey4uLnByb3BzfT5cbiAgICA8SWNvbiBuYW1lPVwiQ2xvc2VcIiBzaXplPXsxLjF9Lz5cbiAgPC9TdHlsZWRDbG9zZUJ1dHRvbj4pKSBhcyBSZWFjdC5TRkM8UmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTEFuY2hvckVsZW1lbnQ+PiksIHsgaW5uZXI6IHtcbiAgICAgICAgZ2V0IFN0eWxlZENsb3NlQnV0dG9uKCkgeyByZXR1cm4gU3R5bGVkQ2xvc2VCdXR0b24gYXMgdHlwZW9mIFN0eWxlZENsb3NlQnV0dG9uOyB9LFxuICAgICAgICBnZXQgSWNvbigpIHsgcmV0dXJuIEljb24gYXMgdHlwZW9mIEljb247IH1cbiAgICB9IH0pO1xuQ2xvc2VCdXR0b24uZGlzcGxheU5hbWUgPSAnQ2xvc2VCdXR0b24nO1xuIl19