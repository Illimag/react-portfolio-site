import * as React from 'react';
import { StandardProps } from '../../common';
import { Blocker, BlockerProps } from '../Blocker';
export declare type ModalCloseOrigin = 'button' | 'background';
export interface ModalCloseEvent {
    origin: ModalCloseOrigin;
}
declare type onBeforeCloseHandler = (e: ModalCloseEvent) => boolean | Promise<boolean>;
export interface ModalProps extends StandardProps {
    /**
     * Sets the content of the modal dialog.
     */
    children?: React.ReactNode;
    /**
     * Determines if the modal is currently open or not.
     */
    open?: boolean;
    /**
     * Event triggered before the modal is actually closed by the user.
     */
    onBeforeClose?: onBeforeCloseHandler;
    /**
     * Event triggered when the modal should be closed by the user.
     */
    onClose?(e: ModalCloseEvent): void;
    /**
     * When specified, default max-width of 500px will be overridden
     * @deprecated Please define through styled components and ${Modal.inner.ModalContent}
     */
    width?: string;
    /**
     * Specify the minimal height for the modal container
     * @deprecated Please define through styled components and ${Modal.inner.StyledModal}
     */
    minHeight?: string;
}
export interface ModalHeaderProps extends StandardProps {
    /**
     * @ignore
     */
    children?: void;
    /**
     * The title of the modal dialog.
     */
    title?: string;
    /**
     * The label (above title) of the dialog.
     */
    label?: string;
}
export interface ModalProps {
    width?: string;
}
export interface StyledModalProps extends ModalProps {
    closing: boolean;
}
export interface StyledBlockerProps extends BlockerProps {
    closing: boolean;
}
export interface ModalContentProps {
    minHeight?: string;
}
interface ModalState {
    closing: boolean;
}
/**
 * A simple modal dialog for requiring user interaction.
 */
export declare class Modal extends React.PureComponent<ModalProps, ModalState> {
    constructor(props: ModalProps);
    private closeFrom;
    private callOnBeforeCloseHandler;
    private closeBackground;
    private closeButton;
    render(): false | JSX.Element;
    static inner: {
        readonly StyledBlocker: import("styled-components").StyledComponent<typeof Blocker, import("../../common").PreciseTheme, StyledBlockerProps, never>;
        readonly StyledModal: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, StyledModalProps, never>;
        readonly ModalContent: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, ModalContentProps, never>;
        readonly CloseButton: React.FunctionComponent<React.HTMLAttributes<HTMLAnchorElement>> & {
            inner: {
                readonly StyledCloseButton: import("styled-components").StyledComponent<"a", import("../../common").PreciseTheme, {}, never>;
                readonly Icon: React.FunctionComponent<import("..").IconProps> & {
                    inner: {
                        readonly StyledIcon: import("styled-components").StyledComponent<"i", import("../../common").PreciseTheme, {}, never>;
                    };
                };
            };
        };
    };
}
/**
 * Styles the body of a modal dialog.
 */
export declare const ModalBody: React.FunctionComponent<StandardProps & {
    children: React.ReactNode;
}> & {
    inner: {
        readonly StyledModalBody: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, {}, never>;
    };
};
/**
 * Styles the header of a modal dialog
 */
export declare const ModalHeader: React.FunctionComponent<ModalHeaderProps> & {
    inner: {
        readonly StyledModalHeader: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, {}, never>;
        readonly ModalLabel: import("styled-components").StyledComponent<"span", import("../../common").PreciseTheme, {}, never>;
        readonly Headline: React.FunctionComponent<import("../Headline").HeadlineProps>;
    };
};
/**
 * Styles the footer of a modal dialog.
 */
export declare const ModalFooter: React.FunctionComponent<StandardProps> & {
    inner: {
        readonly StyledModalFooter: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, {}, never>;
    };
};
export {};
