var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
import * as React from 'react';
import styled, { css } from '../../utils/styled';
import { distance } from '../../distance';
const AttachedLabel = css `
  padding-left: ${distance.small};
  display: inline-block;
  cursor: inherit;
`;
const BlockLabel = css `
  display: block;
`;
const Styledlabel = styled.label `
  ${props => (props.attached ? AttachedLabel : BlockLabel)};
`;
/**
 * The label component displays an input or general label.
 */
export const Label = Object.assign(((_a) => {
    var { toolTip } = _a, props = __rest(_a, ["toolTip"]);
    return React.createElement(Styledlabel, Object.assign({ title: toolTip }, props));
}), { inner: {
        get Styledlabel() { return Styledlabel; }
    } });
Label.displayName = 'Label';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9MYWJlbC9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsT0FBTyxLQUFLLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDL0IsT0FBTyxNQUFNLEVBQUUsRUFBRSxHQUFHLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUVqRCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFlMUMsTUFBTSxhQUFhLEdBQUcsR0FBRyxDQUFDO2tCQUNSLFFBQVEsQ0FBQyxLQUFLOzs7Q0FHL0IsQ0FBQztBQUNGLE1BQU0sVUFBVSxHQUFHLEdBQUcsQ0FBQzs7Q0FFdEIsQ0FBQztBQUNGLE1BQU0sV0FBVyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQWE7SUFDekMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDO0NBQ3pELENBQUM7QUFDRjs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFFLENBQUMsQ0FBQyxFQUFxQixFQUFFLEVBQUU7UUFBekIsRUFBRSxPQUFPLE9BQVksRUFBViwrQkFBUTtJQUFPLE9BQUEsb0JBQUMsV0FBVyxrQkFBQyxLQUFLLEVBQUUsT0FBTyxJQUFNLEtBQUssRUFBRyxDQUFBO0NBQUEsQ0FBMkIsRUFBRSxFQUFFLEtBQUssRUFBRTtRQUN2SSxJQUFJLFdBQVcsS0FBSyxPQUFPLFdBQWlDLENBQUMsQ0FBQyxDQUFDO0tBQ2xFLEVBQUUsQ0FBQyxDQUFDO0FBQ1QsS0FBSyxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkLCB7IGNzcyB9IGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlZCc7XG5pbXBvcnQgeyBTdGFuZGFyZFByb3BzIH0gZnJvbSAnLi4vLi4vY29tbW9uJztcbmltcG9ydCB7IGRpc3RhbmNlIH0gZnJvbSAnLi4vLi4vZGlzdGFuY2UnO1xuZXhwb3J0IGludGVyZmFjZSBMYWJlbFByb3BzIGV4dGVuZHMgU3RhbmRhcmRQcm9wcyB7XG4gICAgLyoqXG4gICAgICogVGhlIGNvbnRlbnQgb2YgdGhlIGxhYmVsLlxuICAgICAqL1xuICAgIGNoaWxkcmVuPzogUmVhY3QuUmVhY3ROb2RlO1xuICAgIC8qKlxuICAgICAqIFRoZSBkaXNwbGF5ZWQgdG9vbHRpcCwgaWYgYW55LlxuICAgICAqL1xuICAgIHRvb2xUaXA/OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgbGFiZWwgaW50byBhbiBhdHRhY2hlZCBtb2RlLlxuICAgICAqL1xuICAgIGF0dGFjaGVkPzogYm9vbGVhbjtcbn1cbmNvbnN0IEF0dGFjaGVkTGFiZWwgPSBjc3MgYFxuICBwYWRkaW5nLWxlZnQ6ICR7ZGlzdGFuY2Uuc21hbGx9O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGN1cnNvcjogaW5oZXJpdDtcbmA7XG5jb25zdCBCbG9ja0xhYmVsID0gY3NzIGBcbiAgZGlzcGxheTogYmxvY2s7XG5gO1xuY29uc3QgU3R5bGVkbGFiZWwgPSBzdHlsZWQubGFiZWw8TGFiZWxQcm9wcz4gYFxuICAke3Byb3BzID0+IChwcm9wcy5hdHRhY2hlZCA/IEF0dGFjaGVkTGFiZWwgOiBCbG9ja0xhYmVsKX07XG5gO1xuLyoqXG4gKiBUaGUgbGFiZWwgY29tcG9uZW50IGRpc3BsYXlzIGFuIGlucHV0IG9yIGdlbmVyYWwgbGFiZWwuXG4gKi9cbmV4cG9ydCBjb25zdCBMYWJlbCA9IE9iamVjdC5hc3NpZ24oKCgoeyB0b29sVGlwLCAuLi5wcm9wcyB9KSA9PiA8U3R5bGVkbGFiZWwgdGl0bGU9e3Rvb2xUaXB9IHsuLi5wcm9wc30vPikgYXMgUmVhY3QuU0ZDPExhYmVsUHJvcHM+KSwgeyBpbm5lcjoge1xuICAgICAgICBnZXQgU3R5bGVkbGFiZWwoKSB7IHJldHVybiBTdHlsZWRsYWJlbCBhcyB0eXBlb2YgU3R5bGVkbGFiZWw7IH1cbiAgICB9IH0pO1xuTGFiZWwuZGlzcGxheU5hbWUgPSAnTGFiZWwnO1xuIl19