import * as React from 'react';
import { PreciseTheme } from '../../common';
import { FormContextProps } from '../../hoc/withFormContext';
import { TagBuilderProps } from './TagBuilder.types.part';
interface StyledTagsContainerProps {
    labelShown: boolean;
    tagRenderer: boolean;
}
interface StyledInputProps {
    value: string;
    disabled?: boolean;
    theme: any;
    valid?: boolean;
}
interface InputContainerProps {
    tagRenderer: boolean;
}
interface CloseIconProps {
    onClick?(): void;
    onMouseDown?(event: React.MouseEvent): void;
    theme?: PreciseTheme;
}
export interface TagBuilderState {
    inputValue: string;
    value: Array<string>;
    error?: React.ReactChild;
    focused: boolean;
    controlled: boolean;
    inputPosition?: number;
    valid?: boolean;
}
export declare class TagBuilderInt extends React.Component<TagBuilderProps & FormContextProps, TagBuilderState> {
    private _input;
    constructor(props: TagBuilderProps);
    UNSAFE_componentWillReceiveProps({ value, inputValue, error }: TagBuilderProps): void;
    componentDidMount(): void;
    componentWillUnmount(): void;
    private fireBeforeTagRemoveEvent;
    private inputChanged;
    private keyDownHandler;
    private inputFocused;
    private inputBlurred;
    private inputMoveLeft;
    private inputMoveRight;
    private inputMoveEnd;
    private inputMoveHome;
    private setFocus;
    private addTag;
    private removePrevTag;
    private removeNextTag;
    private removeTag;
    private onChange;
    private removeTagMouseDownHandler;
    private renderTag;
    private setContainer;
    render(): JSX.Element;
    static inner: {
        readonly RestyledTagItem: import("styled-components").StyledComponent<"span", PreciseTheme, import("../../quarks").StyledTagItemProps, never>;
        readonly StyledText: import("styled-components").StyledComponent<"span", PreciseTheme, {}, never>;
        readonly CloseIcon: React.FunctionComponent<CloseIconProps> & {
            inner: {
                readonly StyledIcon: import("styled-components").StyledComponent<React.FunctionComponent<import("../Icon").IconProps> & {
                    inner: {
                        readonly StyledIcon: import("styled-components").StyledComponent<"i", PreciseTheme, {}, never>;
                    };
                }, PreciseTheme, {}, never>;
            };
        };
        readonly InputContainer: import("styled-components").StyledComponent<"div", PreciseTheme, InputContainerProps, never>;
        readonly StyledInput: import("styled-components").StyledComponent<"input", PreciseTheme, StyledInputProps, never>;
        readonly TagBuilderContainer: import("styled-components").StyledComponent<"div", PreciseTheme, {}, never>;
        readonly StyledInputBox: import("styled-components").StyledComponent<"div", PreciseTheme, import("../../quarks").StyledInputBoxProps, never>;
        readonly StyledInputRow: React.FunctionComponent<import("../../quarks").StyledInputRowProps> & {
            inner: {
                readonly TextFieldBoxWithLabelWrapper: import("styled-components").StyledComponent<"div", PreciseTheme, {}, never>;
                readonly TextFieldLabel: import("styled-components").StyledComponent<"label", PreciseTheme, {}, never>;
                readonly TextFieldLabelText: import("styled-components").StyledComponent<"span", PreciseTheme, import("../../quarks").TextFieldLabelProps, never>;
            };
        };
        readonly StyledTagsContainer: import("styled-components").StyledComponent<"div", PreciseTheme, StyledTagsContainerProps, never>;
        readonly InputIcon: React.FunctionComponent<import("../InputIcon").InputIconProps> & {
            inner: {
                readonly StyledIconContainer: import("styled-components").StyledComponent<"div", PreciseTheme, import("../../quarks").StyledIconProps, never>;
                readonly IconLink: React.FunctionComponent<import("..").IconLinkProps> & {
                    inner: {
                        readonly StyledAnchor: import("styled-components").StyledComponent<typeof import("..").Anchor, PreciseTheme, import("..").StyledAnchorProps, never>;
                        readonly StyledIcon: import("styled-components").StyledComponent<React.FunctionComponent<import("../Icon").IconProps> & {
                            inner: {
                                readonly StyledIcon: import("styled-components").StyledComponent<"i", PreciseTheme, {}, never>;
                            };
                        }, PreciseTheme, import("..").StyledIconProps & import("../Icon").IconProps, never>;
                        readonly AnchorText: import("styled-components").StyledComponent<"span", PreciseTheme, {}, never>;
                    };
                };
                readonly Icon: React.FunctionComponent<import("../Icon").IconProps> & {
                    inner: {
                        readonly StyledIcon: import("styled-components").StyledComponent<"i", PreciseTheme, {}, never>;
                    };
                };
            };
        };
    };
}
export declare const TagBuilder: React.FunctionComponent<TagBuilderProps>;
export {};
