import * as React from 'react';
import { InputProps, InputChangeEvent } from '../../common';
export interface SliderChangeEvent extends InputChangeEvent<number> {
    /**
     * Gets the type of the changed value.
     */
    type: 'single' | 'multi';
    /**
     * Gets the index of the knob.
     */
    index: number;
}
export interface SliderProps extends InputProps<number | Array<number>> {
    /**
     * @ignore
     */
    children?: void;
    /**
     * Defines the color of the indicator.
     */
    color?: string;
    /**
     * Optionally sets the minimum value of the slider. By default is set to 0.
     * @default 0
     */
    minimum?: number;
    /**
     * Optionally sets the maximum value of the slider. By default is set to 1.
     * @default 1
     */
    maximum?: number;
    /**
     * Optionally sets the margin between the values.
     */
    margin?: number;
    /**
     * The stepping to use. By default is set to 0, i.e., no fixed stepping / continuous mode.
     * @default 0
     */
    step?: number;
    /**
     * Sets the orienatation of the slider. By default is set to horizontal.
     * @default horizontal
     */
    orientation?: 'horizontal' | 'vertical';
    /**
     * Sets the slider as disabled, i.e., not movable.
     * @default false
     */
    disabled?: boolean;
    /**
     * Show status tooltip
     * @default false
     */
    showTooltip?: boolean;
    /**
     * Emitted once the slider's value changed.
     */
    onChange?(e: SliderChangeEvent): void;
    /**
     * Emitted once the slider's value changing done and value is ready.
     */
    onChangeDone?(e: SliderChangeEvent): void;
}
export interface SliderState {
    value: number | Array<number>;
    error?: React.ReactChild;
    active: number;
    controlled: boolean;
    vertical: boolean;
    hovered: boolean;
}
/**
 * The slider component displays a data value picker in form of a sliding bar.
 */
export declare const Slider: React.FunctionComponent<SliderProps>;
