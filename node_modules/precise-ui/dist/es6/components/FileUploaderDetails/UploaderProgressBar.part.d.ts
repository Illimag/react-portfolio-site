import * as React from 'react';
import { IconName } from '../Icon';
import { ProgressStatus } from './FileUploaderDetails.types.part';
import { UploaderProgressBarLabels, ComponentLabel } from '../../utils/labels';
export interface StatusBarProps {
    status: ProgressStatus;
    iconName: IconName;
    count: number;
    title: string;
    itemPluralLabel?: ComponentLabel;
    itemSingularLabel?: ComponentLabel;
}
declare function StatusBar({ status, count, iconName, title, ...props }: StatusBarProps): JSX.Element;
export interface UploaderProgressBarProps extends UploaderProgressBarLabels {
    /**
     * The total progress from 0 to 100.
     */
    progressValue: number;
    /**
     * Determines if scanning is currently in progress.
     */
    scanning: boolean;
    /**
     * Event emitted when the status should be closed fully.
     */
    onClose(): void;
    /**
     * Event emitted when details should be shown.
     */
    onShow(): void;
    /**
     * Total number of files that are being uploaded.
     */
    total: number;
    /**
     * Number of files that are currently in progress.
     */
    inProgress: number;
    /**
     * Number of files that have failed.
     */
    errors: number;
}
export declare const UploaderProgressBar: React.FunctionComponent<UploaderProgressBarProps> & {
    inner: {
        readonly ProgressBarWrapper: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
        readonly BarInfo: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
        readonly StatusBarGroup: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
        readonly StatusBar: typeof StatusBar;
        readonly ActionGroup: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
        readonly ActionLink: React.FunctionComponent<import("../ActionLink").ActionLinkProps> & {
            inner: {
                readonly StyledActionLink: import("styled-components").StyledComponent<typeof import("..").Anchor, import("../..").PreciseTheme, import("../ActionLink").StyledActionLink, never>;
            };
        };
        readonly ActionIconContainer: React.ComponentType<import("../ActionLink").ActionLinkProps>;
        readonly Icon: React.FunctionComponent<import("../Icon").IconProps> & {
            inner: {
                readonly StyledIcon: import("styled-components").StyledComponent<"i", import("../..").PreciseTheme, {}, never>;
            };
        };
        readonly StyledProgressBar: import("styled-components").StyledComponent<React.FunctionComponent<import("../ProgressBar").ProgressBarProps> & {
            inner: {
                readonly ProgressIndicator: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
                readonly ProgressContainer: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
                readonly ProgressTitle: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
                readonly ProgressRail: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, import("../ProgressBar").ProgressContainerProps, never>;
                readonly ProgressStop: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, import("../ProgressBar").StopProps & React.HTMLProps<HTMLInputElement>, never>;
                readonly ProgressDescription: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
            };
        }, import("../..").PreciseTheme, {}, never>;
    };
};
export {};
