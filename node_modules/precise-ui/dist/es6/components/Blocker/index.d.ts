import * as React from 'react';
import { StandardProps } from '../../common';
export interface BlockerProps extends StandardProps {
    /**
     * Event emitted when the user wants to remove the blocker.
     */
    onClose?(e: React.SyntheticEvent<HTMLElement>): void;
}
/**
 * Defines a generic content blocking overlay element, e.g., for a modal dialog.
 */
export declare class Blocker extends React.Component<BlockerProps> {
    private modalNode;
    private getFocusables;
    componentDidMount(): void;
    componentWillUnmount(): void;
    private changeBodyOverflow;
    private keepFocus;
    private keepFirstFocus;
    private keepLastFocus;
    private setElement;
    private notifyClose;
    private onContainerClick;
    private onScrollbarClick;
    private onKeyPress;
    render(): JSX.Element;
    static inner: {
        readonly FixedContainer: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, {}, never>;
        readonly FocusKeeper: import("styled-components").StyledComponent<"a", import("../../common").PreciseTheme, {}, never>;
        readonly StyledModalBackground: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, {}, never>;
    };
}
