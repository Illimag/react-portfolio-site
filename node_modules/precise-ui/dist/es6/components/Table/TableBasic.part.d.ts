import * as React from 'react';
import { RefProps } from '../../common';
import { TableProps, TableSorting } from './Table.types.part';
export interface TableBasicState {
    sorting?: TableSorting;
    controlledSorting: boolean;
}
export declare class TableBasic<T> extends React.Component<TableProps<T> & RefProps, TableBasicState> {
    constructor(props: TableProps<T> & RefProps);
    static getDerivedStateFromProps(props: TableProps<any>, state: TableBasicState): TableBasicState;
    private getIndices;
    private isSortable;
    private headerClicked;
    private footerClicked;
    private defaultHeadRenderer;
    private defaultFootRenderer;
    private defaultRowRenderer;
    private renderCells;
    private renderRows;
    private renderHead;
    private renderFoot;
    render(): React.ReactNode;
    static inner: {
        readonly StyledTableHead: import("styled-components").StyledComponent<"thead", import("../../common").PreciseTheme, {}, never>;
        readonly StyledTableHeaderRow: import("styled-components").StyledComponent<"tr", import("../../common").PreciseTheme, {}, never>;
        readonly StyledTableHeader: import("styled-components").StyledComponent<"th", import("../../common").PreciseTheme, import("./TableShared.part").TableHeaderProps, never>;
        readonly HiddenCell: import("styled-components").StyledComponent<"td", import("../../common").PreciseTheme, {}, never>;
        readonly StyledTableFoot: import("styled-components").StyledComponent<"tfoot", import("../../common").PreciseTheme, {}, never>;
        readonly StyledTableRow: import("styled-components").StyledComponent<"tr", import("../../common").PreciseTheme, {}, never>;
        readonly StyledTableCell: import("styled-components").StyledComponent<"td", import("../../common").PreciseTheme, {}, never>;
        readonly StyledPlaceholderCell: import("styled-components").StyledComponent<"td", import("../../common").PreciseTheme, {}, never>;
    };
}
