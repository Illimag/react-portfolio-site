import * as React from 'react';
import { TableProps, TableBodyRenderEvent } from './Table.types.part';
export declare function defaultBodyRenderer(e: TableBodyRenderEvent): JSX.Element;
export declare class TableCard<T> extends React.Component<TableProps<T>> {
    constructor(props: TableProps<T>);
    private renderItem;
    private getHeader;
    private renderItemProps;
    render(): React.ReactNode;
    static inner: {
        readonly StyledListItem: import("styled-components").StyledComponent<React.FunctionComponent<import("../ListItem").ListItemProps> & {
            inner: {
                readonly StyledListItem: import("styled-components").StyledComponent<"li", import("../..").PreciseTheme, import("../ListItem").ListItemProps, never>;
            };
        }, import("../..").PreciseTheme, {}, never>;
        readonly Container: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
        readonly ContentContainer: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
        readonly PropContainer: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
        readonly PropName: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
        readonly PropValue: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
        readonly PlaceholderContainer: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
    };
}
