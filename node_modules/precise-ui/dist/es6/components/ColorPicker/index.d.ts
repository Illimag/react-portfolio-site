import * as React from 'react';
import { InputProps } from '../../common';
export interface ColorChangeEvent {
    /**
     * Gets the selected color.
     */
    value: FullColor;
}
export interface FullColor {
    h: number;
    s: number;
    v: number;
    r: number;
    g: number;
    b: number;
    a: number;
}
export interface RgbaColor {
    /**
     * The red part of the color.
     */
    r: number;
    /**
     * The green part of the color.
     */
    g: number;
    /**
     * The blue part of the color.
     */
    b: number;
    /**
     * The optional alpha part of the color - by default 1.
     */
    a?: number;
}
export interface ColorPickerProps extends InputProps<FullColor | RgbaColor | string> {
    /**
     * Sets if the color wheel bar should be hidden.
     */
    hideBar?: boolean;
    /**
     * Sets if the transparency can be changed.
     */
    allowOpacity?: boolean;
    /**
     * Emitted once color changed.
     */
    onChange?(e: ColorChangeEvent): void;
    /**
     * Sets the height of the picker area, usually 200px.
     */
    height?: string;
    /**
     * Sets the width of the picker area, usually 100%.
     */
    width?: string;
    /**
     * @ignore
     */
    children?: void;
}
export interface ColorPickerState {
    controlled: boolean;
    value: FullColor;
    error?: React.ReactChild;
    base: RgbaColor;
    active: boolean;
}
/**
 * A color picker for selecting a color in the UI.
 */
export declare const ColorPicker: React.FunctionComponent<ColorPickerProps>;
