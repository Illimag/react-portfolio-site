var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
import * as React from 'react';
import styled, { themed } from '../utils/styled';
import { distance } from '../distance';
import { purpleRed } from '../colors';
import { remCalc } from '../utils/remCalc';
const TextFieldBoxWithLabelWrapper = styled.div `
  flex-grow: 1;
  display: flex;
  flex-flow: column-reverse;
  height: 100%;
  position: relative;
  min-width: 0;
  margin: auto;
`;
const TextFieldLabel = styled.label `
  height: 100%;
`;
const TextFieldLabelText = styled('span') `
  display: block;
  font-size: ${remCalc('12px')};
  line-height: ${remCalc('16px')};
  max-width: 66.66%;
  box-sizing: border-box;
  cursor: text;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  transform-origin: left bottom;
  transform: ${props => (props.active || props.filled ? 'none' : 'translate(0, 0.85rem) scale(1.33)')};
  color: ${themed(({ theme, active, filled, error }) => error ? purpleRed : active || filled ? theme.ui0 : theme.text2)};
  transition: all 0.2s;
  position: absolute;
  top: 0;
  left: ${distance.medium};
  right: 0;
  padding-top: ${distance.small};
  background: ${themed(({ multiline, theme }) => (multiline ? theme.ui2 : 'transparent'))};

  > span {
    display: ${props => (props.active || props.filled ? 'none' : '')};
    transition: inherit;
  }
`;
export const StyledInputRow = Object.assign(((_a) => {
    var { children, label, focused = false, error = false, placeholder = '', hasValue = false, multiline = false } = _a, props = __rest(_a, ["children", "label", "focused", "error", "placeholder", "hasValue", "multiline"]);
    return (React.createElement(TextFieldBoxWithLabelWrapper, Object.assign({}, props), label !== undefined ? (React.createElement(TextFieldLabel, null,
        children,
        React.createElement(TextFieldLabelText, { active: focused, filled: !focused && hasValue, error: error, multiline: multiline },
            label,
            placeholder.length > 0 && React.createElement("span", null,
                " \u2014 ",
                placeholder)))) : (children)));
}), { inner: {
        get TextFieldBoxWithLabelWrapper() { return TextFieldBoxWithLabelWrapper; },
        get TextFieldLabel() { return TextFieldLabel; },
        get TextFieldLabelText() { return TextFieldLabelText; }
    } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3R5bGVkSW5wdXRSb3cuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcXVhcmtzL1N0eWxlZElucHV0Um93LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxPQUFPLEtBQUssS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUMvQixPQUFPLE1BQU0sRUFBRSxFQUFFLE1BQU0sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDdkMsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUN0QyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDM0MsTUFBTSw0QkFBNEIsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDOzs7Ozs7OztDQVEvQyxDQUFDO0FBQ0YsTUFBTSxjQUFjLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQzs7Q0FFbkMsQ0FBQztBQU9GLE1BQU0sa0JBQWtCLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFzQjs7ZUFFaEQsT0FBTyxDQUFDLE1BQU0sQ0FBQztpQkFDYixPQUFPLENBQUMsTUFBTSxDQUFDOzs7Ozs7OztlQVFqQixLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLE1BQU0sSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLG1DQUFtQyxDQUFDO1dBQzFGLE1BQU0sQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxNQUFNLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDOzs7O1VBSTdHLFFBQVEsQ0FBQyxNQUFNOztpQkFFUixRQUFRLENBQUMsS0FBSztnQkFDZixNQUFNLENBQUMsQ0FBQyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDOzs7ZUFHMUUsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7OztDQUduRSxDQUFDO0FBU0YsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUUsQ0FBQyxDQUFDLEVBQW9ILEVBQUUsRUFBRTtRQUF4SCxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsT0FBTyxHQUFHLEtBQUssRUFBRSxLQUFLLEdBQUcsS0FBSyxFQUFFLFdBQVcsR0FBRyxFQUFFLEVBQUUsUUFBUSxHQUFHLEtBQUssRUFBRSxTQUFTLEdBQUcsS0FBSyxPQUFZLEVBQVYscUdBQVE7SUFBTyxPQUFBLENBQUMsb0JBQUMsNEJBQTRCLG9CQUFLLEtBQUssR0FDM00sS0FBSyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxvQkFBQyxjQUFjO1FBQ2xDLFFBQVE7UUFDVCxvQkFBQyxrQkFBa0IsSUFBQyxNQUFNLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxDQUFDLE9BQU8sSUFBSSxRQUFRLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsU0FBUztZQUNsRyxLQUFLO1lBQ0wsV0FBVyxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUk7O2dCQUFVLFdBQVcsQ0FBUSxDQUNyQyxDQUNOLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FDSixDQUFDLENBQUE7Q0FBQSxDQUFvQyxFQUFFLEVBQUUsS0FBSyxFQUFFO1FBQ3pFLElBQUksNEJBQTRCLEtBQUssT0FBTyw0QkFBbUUsQ0FBQyxDQUFDLENBQUM7UUFDbEgsSUFBSSxjQUFjLEtBQUssT0FBTyxjQUF1QyxDQUFDLENBQUMsQ0FBQztRQUN4RSxJQUFJLGtCQUFrQixLQUFLLE9BQU8sa0JBQStDLENBQUMsQ0FBQyxDQUFDO0tBQ3ZGLEVBQUUsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCwgeyB0aGVtZWQgfSBmcm9tICcuLi91dGlscy9zdHlsZWQnO1xuaW1wb3J0IHsgZGlzdGFuY2UgfSBmcm9tICcuLi9kaXN0YW5jZSc7XG5pbXBvcnQgeyBwdXJwbGVSZWQgfSBmcm9tICcuLi9jb2xvcnMnO1xuaW1wb3J0IHsgcmVtQ2FsYyB9IGZyb20gJy4uL3V0aWxzL3JlbUNhbGMnO1xuY29uc3QgVGV4dEZpZWxkQm94V2l0aExhYmVsV3JhcHBlciA9IHN0eWxlZC5kaXYgYFxuICBmbGV4LWdyb3c6IDE7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogY29sdW1uLXJldmVyc2U7XG4gIGhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtaW4td2lkdGg6IDA7XG4gIG1hcmdpbjogYXV0bztcbmA7XG5jb25zdCBUZXh0RmllbGRMYWJlbCA9IHN0eWxlZC5sYWJlbCBgXG4gIGhlaWdodDogMTAwJTtcbmA7XG5leHBvcnQgaW50ZXJmYWNlIFRleHRGaWVsZExhYmVsUHJvcHMge1xuICAgIGFjdGl2ZTogYm9vbGVhbjtcbiAgICBmaWxsZWQ6IGJvb2xlYW47XG4gICAgZXJyb3I6IGJvb2xlYW47XG4gICAgbXVsdGlsaW5lOiBib29sZWFuO1xufVxuY29uc3QgVGV4dEZpZWxkTGFiZWxUZXh0ID0gc3R5bGVkKCdzcGFuJyk8VGV4dEZpZWxkTGFiZWxQcm9wcz4gYFxuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1zaXplOiAke3JlbUNhbGMoJzEycHgnKX07XG4gIGxpbmUtaGVpZ2h0OiAke3JlbUNhbGMoJzE2cHgnKX07XG4gIG1heC13aWR0aDogNjYuNjYlO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBjdXJzb3I6IHRleHQ7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0IGJvdHRvbTtcbiAgdHJhbnNmb3JtOiAke3Byb3BzID0+IChwcm9wcy5hY3RpdmUgfHwgcHJvcHMuZmlsbGVkID8gJ25vbmUnIDogJ3RyYW5zbGF0ZSgwLCAwLjg1cmVtKSBzY2FsZSgxLjMzKScpfTtcbiAgY29sb3I6ICR7dGhlbWVkKCh7IHRoZW1lLCBhY3RpdmUsIGZpbGxlZCwgZXJyb3IgfSkgPT4gZXJyb3IgPyBwdXJwbGVSZWQgOiBhY3RpdmUgfHwgZmlsbGVkID8gdGhlbWUudWkwIDogdGhlbWUudGV4dDIpfTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAke2Rpc3RhbmNlLm1lZGl1bX07XG4gIHJpZ2h0OiAwO1xuICBwYWRkaW5nLXRvcDogJHtkaXN0YW5jZS5zbWFsbH07XG4gIGJhY2tncm91bmQ6ICR7dGhlbWVkKCh7IG11bHRpbGluZSwgdGhlbWUgfSkgPT4gKG11bHRpbGluZSA/IHRoZW1lLnVpMiA6ICd0cmFuc3BhcmVudCcpKX07XG5cbiAgPiBzcGFuIHtcbiAgICBkaXNwbGF5OiAke3Byb3BzID0+IChwcm9wcy5hY3RpdmUgfHwgcHJvcHMuZmlsbGVkID8gJ25vbmUnIDogJycpfTtcbiAgICB0cmFuc2l0aW9uOiBpbmhlcml0O1xuICB9XG5gO1xuZXhwb3J0IGludGVyZmFjZSBTdHlsZWRJbnB1dFJvd1Byb3BzIGV4dGVuZHMgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTERpdkVsZW1lbnQ+IHtcbiAgICBmb2N1c2VkPzogYm9vbGVhbjtcbiAgICBlcnJvcj86IGJvb2xlYW47XG4gICAgcGxhY2Vob2xkZXI/OiBzdHJpbmc7XG4gICAgbGFiZWw/OiBSZWFjdC5SZWFjdENoaWxkO1xuICAgIGhhc1ZhbHVlPzogYm9vbGVhbjtcbiAgICBtdWx0aWxpbmU/OiBib29sZWFuO1xufVxuZXhwb3J0IGNvbnN0IFN0eWxlZElucHV0Um93ID0gT2JqZWN0LmFzc2lnbigoKCh7IGNoaWxkcmVuLCBsYWJlbCwgZm9jdXNlZCA9IGZhbHNlLCBlcnJvciA9IGZhbHNlLCBwbGFjZWhvbGRlciA9ICcnLCBoYXNWYWx1ZSA9IGZhbHNlLCBtdWx0aWxpbmUgPSBmYWxzZSwgLi4ucHJvcHMgfSkgPT4gKDxUZXh0RmllbGRCb3hXaXRoTGFiZWxXcmFwcGVyIHsuLi5wcm9wc30+XG4gICAge2xhYmVsICE9PSB1bmRlZmluZWQgPyAoPFRleHRGaWVsZExhYmVsPlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgIDxUZXh0RmllbGRMYWJlbFRleHQgYWN0aXZlPXtmb2N1c2VkfSBmaWxsZWQ9eyFmb2N1c2VkICYmIGhhc1ZhbHVlfSBlcnJvcj17ZXJyb3J9IG11bHRpbGluZT17bXVsdGlsaW5lfT5cbiAgICAgICAgICB7bGFiZWx9XG4gICAgICAgICAge3BsYWNlaG9sZGVyLmxlbmd0aCA+IDAgJiYgPHNwYW4+IOKAlCB7cGxhY2Vob2xkZXJ9PC9zcGFuPn1cbiAgICAgICAgPC9UZXh0RmllbGRMYWJlbFRleHQ+XG4gICAgICA8L1RleHRGaWVsZExhYmVsPikgOiAoY2hpbGRyZW4pfVxuICA8L1RleHRGaWVsZEJveFdpdGhMYWJlbFdyYXBwZXI+KSkgYXMgUmVhY3QuU0ZDPFN0eWxlZElucHV0Um93UHJvcHM+KSwgeyBpbm5lcjoge1xuICAgICAgICBnZXQgVGV4dEZpZWxkQm94V2l0aExhYmVsV3JhcHBlcigpIHsgcmV0dXJuIFRleHRGaWVsZEJveFdpdGhMYWJlbFdyYXBwZXIgYXMgdHlwZW9mIFRleHRGaWVsZEJveFdpdGhMYWJlbFdyYXBwZXI7IH0sXG4gICAgICAgIGdldCBUZXh0RmllbGRMYWJlbCgpIHsgcmV0dXJuIFRleHRGaWVsZExhYmVsIGFzIHR5cGVvZiBUZXh0RmllbGRMYWJlbDsgfSxcbiAgICAgICAgZ2V0IFRleHRGaWVsZExhYmVsVGV4dCgpIHsgcmV0dXJuIFRleHRGaWVsZExhYmVsVGV4dCBhcyB0eXBlb2YgVGV4dEZpZWxkTGFiZWxUZXh0OyB9XG4gICAgfSB9KTtcbiJdfQ==