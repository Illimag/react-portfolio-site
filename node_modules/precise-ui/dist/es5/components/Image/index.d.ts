import * as React from 'react';
import { StandardProps } from '../../common';
export declare type Status = 'idle' | 'loading' | 'loaded' | 'error';
export interface ImageProps extends StandardProps {
    /**
     * @ignore
     */
    children?: void;
    /**
     * This attribute defines the alternative text describing the image.
     * Users will see this text displayed if the image URL is wrong,
     * the image is not in one of the supported formats, or if the image is not yet downloaded.
     */
    alt: string;
    /**
     * When specified, image will be preloaded and the preloader shown during the preloading.
     * Default is false.
     * @default false
     */
    preload?: boolean;
    /**
     * The image URL. This attribute is mandatory for the <Image> component.
     */
    src: string;
    /**
     * Custom preloader component to indicate loading.
     */
    preloader?: React.ReactChild;
    /**
     * Custom error component that is displayed when the loading fails.
     */
    error?: React.ReactChild;
}
export interface ImageState {
    status: Status;
}
/**
 * Image component is meant to be a simple wrapper for standard DOM `img` element.
 * Component is fluid by default, meaning that it has max-width: 100% and height: auto,
 * so that it scales with it's parent.
 */
export declare class Image extends React.Component<ImageProps, ImageState> {
    constructor(props: ImageProps);
    componentDidMount(): void;
    render(): JSX.Element;
    static inner: {
        readonly StyledImageWrapper: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, {}, never>;
        readonly StyledImage: import("styled-components").StyledComponent<"img", import("../../common").PreciseTheme, {}, never>;
        readonly StyledError: import("styled-components").StyledComponent<"span", import("../../common").PreciseTheme, {}, never>;
        readonly Spinner: React.FunctionComponent<import("../Spinner").SpinnerProps> & {
            inner: {
                readonly SpinningContainer: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, {
                    hidden?: boolean | undefined;
                }, never>;
                readonly Cubes: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, {
                    size?: string | undefined;
                }, never>;
                readonly Cube0: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, {}, never>;
                readonly Cube1: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, {}, never>;
                readonly SpinningLabel: import("styled-components").StyledComponent<"label", import("../../common").PreciseTheme, import("../Spinner").SpinningLabelProps, never>;
            };
        };
    };
}
