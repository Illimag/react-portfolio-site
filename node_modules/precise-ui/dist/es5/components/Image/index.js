"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var Spinner_1 = require("../Spinner");
var styled_1 = require("../../utils/styled");
// Wrapper used only in case when preloader enabled
var StyledImageWrapper = styled_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  position: relative;\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  flex: 1 1 auto;\n  box-sizing: border-box;\n"], ["\n  position: relative;\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  flex: 1 1 auto;\n  box-sizing: border-box;\n"])));
var StyledImage = styled_1.default.img(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  margin: 0;\n  padding: 0;\n  border: 0;\n  display: inline-block;\n  vertical-align: middle;\n  max-width: 100%;\n  height: auto;\n  border-style: none;\n"], ["\n  margin: 0;\n  padding: 0;\n  border: 0;\n  display: inline-block;\n  vertical-align: middle;\n  max-width: 100%;\n  height: auto;\n  border-style: none;\n"])));
var StyledError = styled_1.default.span(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  background: ", ";\n  color: ", ";\n  font-family: inherit;\n"], ["\n  background: ", ";\n  color: ", ";\n  font-family: inherit;\n"])), styled_1.themed(function (props) { return props.theme.inputError; }), styled_1.themed(function (props) { return props.theme.text7; }));
/**
 * Image component is meant to be a simple wrapper for standard DOM `img` element.
 * Component is fluid by default, meaning that it has max-width: 100% and height: auto,
 * so that it scales with it's parent.
 */
var Image = /** @class */ (function (_super) {
    __extends(Image, _super);
    function Image(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            status: 'idle',
        };
        return _this;
    }
    Image.prototype.componentDidMount = function () {
        var _this = this;
        var _a = this.props, preload = _a.preload, src = _a.src;
        if (preload) {
            var image = document.createElement('img');
            image.onload = function () { return _this.setState({ status: 'loaded' }); };
            image.onerror = function () { return _this.setState({ status: 'error' }); };
            image.src = src;
        }
    };
    Image.prototype.render = function () {
        var _a = this.props, children = _a.children, preload = _a.preload, src = _a.src, alt = _a.alt, preloader = _a.preloader, error = _a.error, rest = __rest(_a, ["children", "preload", "src", "alt", "preloader", "error"]);
        var status = this.state.status;
        return preload ? (React.createElement(StyledImageWrapper, null, (function () {
            switch (status) {
                case 'loaded':
                    return React.createElement(StyledImage, __assign({ src: src, alt: alt }, rest));
                case 'error':
                    return error || React.createElement(StyledError, null,
                        "Error loading image from ",
                        src,
                        ".");
                case 'loading':
                case 'idle':
                default:
                    return preloader || React.createElement(Spinner_1.Spinner, null);
            }
        })())) : (React.createElement(StyledImage, __assign({ src: src, alt: alt }, rest)));
    };
    Image.inner = {
        get StyledImageWrapper() { return StyledImageWrapper; },
        get StyledImage() { return StyledImage; },
        get StyledError() { return StyledError; },
        get Spinner() { return Spinner_1.Spinner; }
    };
    return Image;
}(React.Component));
exports.Image = Image;
var templateObject_1, templateObject_2, templateObject_3;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9JbWFnZS9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsNkJBQStCO0FBQy9CLHNDQUFxQztBQUNyQyw2Q0FBb0Q7QUFvQ3BELG1EQUFtRDtBQUNuRCxJQUFNLGtCQUFrQixHQUFHLGdCQUFNLENBQUMsR0FBRyx1TUFBQyxvSUFPckMsSUFBQSxDQUFDO0FBQ0YsSUFBTSxXQUFXLEdBQUcsZ0JBQU0sQ0FBQyxHQUFHLG1PQUFDLGdLQVM5QixJQUFBLENBQUM7QUFDRixJQUFNLFdBQVcsR0FBRyxnQkFBTSxDQUFDLElBQUkscUlBQUMsa0JBQ2hCLEVBQXVDLGNBQzVDLEVBQWtDLDhCQUU1QyxLQUhlLGVBQU0sQ0FBQyxVQUFBLEtBQUssSUFBSSxPQUFBLEtBQUssQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUF0QixDQUFzQixDQUFDLEVBQzVDLGVBQU0sQ0FBQyxVQUFBLEtBQUssSUFBSSxPQUFBLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFqQixDQUFpQixDQUFDLENBRTVDLENBQUM7QUFDRjs7OztHQUlHO0FBQ0g7SUFBMkIseUJBQXVDO0lBQzlELGVBQVksS0FBaUI7UUFBN0IsWUFDSSxrQkFBTSxLQUFLLENBQUMsU0FJZjtRQUhHLEtBQUksQ0FBQyxLQUFLLEdBQUc7WUFDVCxNQUFNLEVBQUUsTUFBTTtTQUNqQixDQUFDOztJQUNOLENBQUM7SUFDRCxpQ0FBaUIsR0FBakI7UUFBQSxpQkFRQztRQVBTLElBQUEsZUFBNkIsRUFBM0Isb0JBQU8sRUFBRSxZQUFrQixDQUFDO1FBQ3BDLElBQUksT0FBTyxFQUFFO1lBQ1QsSUFBTSxLQUFLLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUM1QyxLQUFLLENBQUMsTUFBTSxHQUFHLGNBQU0sT0FBQSxLQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxDQUFDLEVBQW5DLENBQW1DLENBQUM7WUFDekQsS0FBSyxDQUFDLE9BQU8sR0FBRyxjQUFNLE9BQUEsS0FBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFsQyxDQUFrQyxDQUFDO1lBQ3pELEtBQUssQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDO1NBQ25CO0lBQ0wsQ0FBQztJQUNELHNCQUFNLEdBQU47UUFDSSxJQUFNLGVBQXVFLEVBQXJFLHNCQUFRLEVBQUUsb0JBQU8sRUFBRSxZQUFHLEVBQUUsWUFBRyxFQUFFLHdCQUFTLEVBQUUsZ0JBQUssRUFBRSw4RUFBc0IsQ0FBQztRQUN0RSxJQUFBLDBCQUFNLENBQWdCO1FBQzlCLE9BQU8sT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLG9CQUFDLGtCQUFrQixRQUNwQyxDQUFDO1lBQ0UsUUFBUSxNQUFNLEVBQUU7Z0JBQ1osS0FBSyxRQUFRO29CQUNULE9BQU8sb0JBQUMsV0FBVyxhQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsSUFBTSxJQUFJLEVBQUcsQ0FBQztnQkFDeEQsS0FBSyxPQUFPO29CQUNSLE9BQU8sS0FBSyxJQUFJLG9CQUFDLFdBQVc7O3dCQUEyQixHQUFHOzRCQUFnQixDQUFDO2dCQUMvRSxLQUFLLFNBQVMsQ0FBQztnQkFDZixLQUFLLE1BQU0sQ0FBQztnQkFDWjtvQkFDSSxPQUFPLFNBQVMsSUFBSSxvQkFBQyxpQkFBTyxPQUFHLENBQUM7YUFDdkM7UUFDTCxDQUFDLENBQUMsRUFBRSxDQUNlLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxvQkFBQyxXQUFXLGFBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxJQUFNLElBQUksRUFBRyxDQUFDLENBQUM7SUFDMUUsQ0FBQztJQUNNLFdBQUssR0FBRztRQUNYLElBQUksa0JBQWtCLEtBQUssT0FBTyxrQkFBK0MsQ0FBQyxDQUFDLENBQUM7UUFDcEYsSUFBSSxXQUFXLEtBQUssT0FBTyxXQUFpQyxDQUFDLENBQUMsQ0FBQztRQUMvRCxJQUFJLFdBQVcsS0FBSyxPQUFPLFdBQWlDLENBQUMsQ0FBQyxDQUFDO1FBQy9ELElBQUksT0FBTyxLQUFLLE9BQU8saUJBQXlCLENBQUMsQ0FBQyxDQUFDO0tBQ3RELENBQUM7SUFDTixZQUFDO0NBQUEsQUF4Q0QsQ0FBMkIsS0FBSyxDQUFDLFNBQVMsR0F3Q3pDO0FBeENZLHNCQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgU3Bpbm5lciB9IGZyb20gJy4uL1NwaW5uZXInO1xuaW1wb3J0IHN0eWxlZCwgeyB0aGVtZWQgfSBmcm9tICcuLi8uLi91dGlscy9zdHlsZWQnO1xuaW1wb3J0IHsgU3RhbmRhcmRQcm9wcyB9IGZyb20gJy4uLy4uL2NvbW1vbic7XG5leHBvcnQgdHlwZSBTdGF0dXMgPSAnaWRsZScgfCAnbG9hZGluZycgfCAnbG9hZGVkJyB8ICdlcnJvcic7XG5leHBvcnQgaW50ZXJmYWNlIEltYWdlUHJvcHMgZXh0ZW5kcyBTdGFuZGFyZFByb3BzIHtcbiAgICAvKipcbiAgICAgKiBAaWdub3JlXG4gICAgICovXG4gICAgY2hpbGRyZW4/OiB2b2lkO1xuICAgIC8qKlxuICAgICAqIFRoaXMgYXR0cmlidXRlIGRlZmluZXMgdGhlIGFsdGVybmF0aXZlIHRleHQgZGVzY3JpYmluZyB0aGUgaW1hZ2UuXG4gICAgICogVXNlcnMgd2lsbCBzZWUgdGhpcyB0ZXh0IGRpc3BsYXllZCBpZiB0aGUgaW1hZ2UgVVJMIGlzIHdyb25nLFxuICAgICAqIHRoZSBpbWFnZSBpcyBub3QgaW4gb25lIG9mIHRoZSBzdXBwb3J0ZWQgZm9ybWF0cywgb3IgaWYgdGhlIGltYWdlIGlzIG5vdCB5ZXQgZG93bmxvYWRlZC5cbiAgICAgKi9cbiAgICBhbHQ6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBXaGVuIHNwZWNpZmllZCwgaW1hZ2Ugd2lsbCBiZSBwcmVsb2FkZWQgYW5kIHRoZSBwcmVsb2FkZXIgc2hvd24gZHVyaW5nIHRoZSBwcmVsb2FkaW5nLlxuICAgICAqIERlZmF1bHQgaXMgZmFsc2UuXG4gICAgICogQGRlZmF1bHQgZmFsc2VcbiAgICAgKi9cbiAgICBwcmVsb2FkPzogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBUaGUgaW1hZ2UgVVJMLiBUaGlzIGF0dHJpYnV0ZSBpcyBtYW5kYXRvcnkgZm9yIHRoZSA8SW1hZ2U+IGNvbXBvbmVudC5cbiAgICAgKi9cbiAgICBzcmM6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBDdXN0b20gcHJlbG9hZGVyIGNvbXBvbmVudCB0byBpbmRpY2F0ZSBsb2FkaW5nLlxuICAgICAqL1xuICAgIHByZWxvYWRlcj86IFJlYWN0LlJlYWN0Q2hpbGQ7XG4gICAgLyoqXG4gICAgICogQ3VzdG9tIGVycm9yIGNvbXBvbmVudCB0aGF0IGlzIGRpc3BsYXllZCB3aGVuIHRoZSBsb2FkaW5nIGZhaWxzLlxuICAgICAqL1xuICAgIGVycm9yPzogUmVhY3QuUmVhY3RDaGlsZDtcbn1cbmV4cG9ydCBpbnRlcmZhY2UgSW1hZ2VTdGF0ZSB7XG4gICAgc3RhdHVzOiBTdGF0dXM7XG59XG4vLyBXcmFwcGVyIHVzZWQgb25seSBpbiBjYXNlIHdoZW4gcHJlbG9hZGVyIGVuYWJsZWRcbmNvbnN0IFN0eWxlZEltYWdlV3JhcHBlciA9IHN0eWxlZC5kaXYgYFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgZmxleDogMSAxIGF1dG87XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5gO1xuY29uc3QgU3R5bGVkSW1hZ2UgPSBzdHlsZWQuaW1nIGBcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbmA7XG5jb25zdCBTdHlsZWRFcnJvciA9IHN0eWxlZC5zcGFuIGBcbiAgYmFja2dyb3VuZDogJHt0aGVtZWQocHJvcHMgPT4gcHJvcHMudGhlbWUuaW5wdXRFcnJvcil9O1xuICBjb2xvcjogJHt0aGVtZWQocHJvcHMgPT4gcHJvcHMudGhlbWUudGV4dDcpfTtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG5gO1xuLyoqXG4gKiBJbWFnZSBjb21wb25lbnQgaXMgbWVhbnQgdG8gYmUgYSBzaW1wbGUgd3JhcHBlciBmb3Igc3RhbmRhcmQgRE9NIGBpbWdgIGVsZW1lbnQuXG4gKiBDb21wb25lbnQgaXMgZmx1aWQgYnkgZGVmYXVsdCwgbWVhbmluZyB0aGF0IGl0IGhhcyBtYXgtd2lkdGg6IDEwMCUgYW5kIGhlaWdodDogYXV0byxcbiAqIHNvIHRoYXQgaXQgc2NhbGVzIHdpdGggaXQncyBwYXJlbnQuXG4gKi9cbmV4cG9ydCBjbGFzcyBJbWFnZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxJbWFnZVByb3BzLCBJbWFnZVN0YXRlPiB7XG4gICAgY29uc3RydWN0b3IocHJvcHM6IEltYWdlUHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgc3RhdHVzOiAnaWRsZScsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICBjb25zdCB7IHByZWxvYWQsIHNyYyB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgaWYgKHByZWxvYWQpIHtcbiAgICAgICAgICAgIGNvbnN0IGltYWdlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG4gICAgICAgICAgICBpbWFnZS5vbmxvYWQgPSAoKSA9PiB0aGlzLnNldFN0YXRlKHsgc3RhdHVzOiAnbG9hZGVkJyB9KTtcbiAgICAgICAgICAgIGltYWdlLm9uZXJyb3IgPSAoKSA9PiB0aGlzLnNldFN0YXRlKHsgc3RhdHVzOiAnZXJyb3InIH0pO1xuICAgICAgICAgICAgaW1hZ2Uuc3JjID0gc3JjO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgeyBjaGlsZHJlbiwgcHJlbG9hZCwgc3JjLCBhbHQsIHByZWxvYWRlciwgZXJyb3IsIC4uLnJlc3QgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IHsgc3RhdHVzIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICByZXR1cm4gcHJlbG9hZCA/ICg8U3R5bGVkSW1hZ2VXcmFwcGVyPlxuICAgICAgICB7KCgpID0+IHtcbiAgICAgICAgICAgIHN3aXRjaCAoc3RhdHVzKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAnbG9hZGVkJzpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDxTdHlsZWRJbWFnZSBzcmM9e3NyY30gYWx0PXthbHR9IHsuLi5yZXN0fS8+O1xuICAgICAgICAgICAgICAgIGNhc2UgJ2Vycm9yJzpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVycm9yIHx8IDxTdHlsZWRFcnJvcj5FcnJvciBsb2FkaW5nIGltYWdlIGZyb20ge3NyY30uPC9TdHlsZWRFcnJvcj47XG4gICAgICAgICAgICAgICAgY2FzZSAnbG9hZGluZyc6XG4gICAgICAgICAgICAgICAgY2FzZSAnaWRsZSc6XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByZWxvYWRlciB8fCA8U3Bpbm5lciAvPjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkoKX1cbiAgICAgIDwvU3R5bGVkSW1hZ2VXcmFwcGVyPikgOiAoPFN0eWxlZEltYWdlIHNyYz17c3JjfSBhbHQ9e2FsdH0gey4uLnJlc3R9Lz4pO1xuICAgIH1cbiAgICBzdGF0aWMgaW5uZXIgPSB7XG4gICAgICAgIGdldCBTdHlsZWRJbWFnZVdyYXBwZXIoKSB7IHJldHVybiBTdHlsZWRJbWFnZVdyYXBwZXIgYXMgdHlwZW9mIFN0eWxlZEltYWdlV3JhcHBlcjsgfSxcbiAgICAgICAgZ2V0IFN0eWxlZEltYWdlKCkgeyByZXR1cm4gU3R5bGVkSW1hZ2UgYXMgdHlwZW9mIFN0eWxlZEltYWdlOyB9LFxuICAgICAgICBnZXQgU3R5bGVkRXJyb3IoKSB7IHJldHVybiBTdHlsZWRFcnJvciBhcyB0eXBlb2YgU3R5bGVkRXJyb3I7IH0sXG4gICAgICAgIGdldCBTcGlubmVyKCkgeyByZXR1cm4gU3Bpbm5lciBhcyB0eXBlb2YgU3Bpbm5lcjsgfVxuICAgIH07XG59XG4iXX0=