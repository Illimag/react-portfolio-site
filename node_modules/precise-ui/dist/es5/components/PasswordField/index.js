"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var styled_1 = require("../../utils/styled");
var TextField_1 = require("../TextField");
var IconLink_1 = require("../IconLink");
var StyledTextField = styled_1.default(TextField_1.TextField)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  font-family: ", ";\n"], ["\n  font-family: ", ";\n"])), function (props) { return (props.reveal ? 'inherit' : 'sans-serif'); });
/**
 * A password field for custom user input.
 */
var PasswordField = /** @class */ (function (_super) {
    __extends(PasswordField, _super);
    function PasswordField(props) {
        var _this = _super.call(this, props) || this;
        _this.showPassword = function (e) {
            _this.setState({
                reveal: true,
            });
            e.preventDefault();
        };
        _this.hidePassword = function (e) {
            _this.setState({
                reveal: false,
            });
            e.preventDefault();
        };
        _this.state = {
            reveal: false,
        };
        return _this;
    }
    PasswordField.prototype.renderDefaultSuffix = function (reveal, theme) {
        var iconName = reveal ? 'VisibilityOff' : 'Visibility';
        return React.createElement(IconLink_1.IconLink, { icon: iconName, onClick: reveal ? this.hidePassword : this.showPassword, theme: theme });
    };
    PasswordField.prototype.render = function () {
        var _a = this.props, theme = _a.theme, suffix = _a.suffix, rest = __rest(_a, ["theme", "suffix"]);
        var reveal = this.state.reveal;
        var props = __assign({ suffix: suffix === undefined ? this.renderDefaultSuffix(reveal, theme) : suffix, type: reveal ? 'text' : 'password', theme: theme,
            reveal: reveal }, rest);
        return React.createElement(StyledTextField, __assign({}, props));
    };
    PasswordField.inner = {
        get IconLink() { return IconLink_1.IconLink; },
        get StyledTextField() { return StyledTextField; }
    };
    return PasswordField;
}(React.Component));
exports.PasswordField = PasswordField;
var templateObject_1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9QYXNzd29yZEZpZWxkL2luZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSw2QkFBK0I7QUFDL0IsNkNBQXdDO0FBQ3hDLDBDQUF5RDtBQUV6RCx3Q0FBdUM7QUFJdkMsSUFBTSxlQUFlLEdBQUcsZ0JBQU0sQ0FBQyxxQkFBUyxDQUFDLDZGQUF1QixtQkFDL0MsRUFBa0QsS0FDbEUsS0FEZ0IsVUFBQSxLQUFLLElBQUksT0FBQSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLEVBQXpDLENBQXlDLENBQ2xFLENBQUM7QUFVRjs7R0FFRztBQUNIO0lBQW1DLGlDQUF1RDtJQUN0Rix1QkFBWSxLQUF5QjtRQUFyQyxZQUNJLGtCQUFNLEtBQUssQ0FBQyxTQUlmO1FBQ08sa0JBQVksR0FBRyxVQUFDLENBQXNDO1lBQzFELEtBQUksQ0FBQyxRQUFRLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLElBQUk7YUFDZixDQUFDLENBQUM7WUFDSCxDQUFDLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDdkIsQ0FBQyxDQUFDO1FBQ00sa0JBQVksR0FBRyxVQUFDLENBQXNDO1lBQzFELEtBQUksQ0FBQyxRQUFRLENBQUM7Z0JBQ1YsTUFBTSxFQUFFLEtBQUs7YUFDaEIsQ0FBQyxDQUFDO1lBQ0gsQ0FBQyxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQ3ZCLENBQUMsQ0FBQztRQWZFLEtBQUksQ0FBQyxLQUFLLEdBQUc7WUFDVCxNQUFNLEVBQUUsS0FBSztTQUNoQixDQUFDOztJQUNOLENBQUM7SUFhTywyQ0FBbUIsR0FBM0IsVUFBNEIsTUFBZSxFQUFFLEtBQW9CO1FBQzdELElBQU0sUUFBUSxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUM7UUFDekQsT0FBTyxvQkFBQyxtQkFBUSxJQUFDLElBQUksRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxLQUFLLEVBQUUsS0FBSyxHQUFHLENBQUM7SUFDOUcsQ0FBQztJQUNELDhCQUFNLEdBQU47UUFDSSxJQUFNLGVBQXVDLEVBQXJDLGdCQUFLLEVBQUUsa0JBQU0sRUFBRSxzQ0FBc0IsQ0FBQztRQUN0QyxJQUFBLDBCQUFNLENBQWdCO1FBQzlCLElBQU0sS0FBSyxjQUNQLE1BQU0sRUFBRSxNQUFNLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQy9FLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsVUFBVSxFQUNsQyxLQUFLLE9BQUE7WUFDTCxNQUFNLFFBQUEsSUFDSCxJQUFJLENBQ1YsQ0FBQztRQUNGLE9BQU8sb0JBQUMsZUFBZSxlQUFLLEtBQUssRUFBRyxDQUFDO0lBQ3pDLENBQUM7SUFDTSxtQkFBSyxHQUFHO1FBQ1gsSUFBSSxRQUFRLEtBQUssT0FBTyxtQkFBMkIsQ0FBQyxDQUFDLENBQUM7UUFDdEQsSUFBSSxlQUFlLEtBQUssT0FBTyxlQUF5QyxDQUFDLENBQUMsQ0FBQztLQUM5RSxDQUFDO0lBQ04sb0JBQUM7Q0FBQSxBQXZDRCxDQUFtQyxLQUFLLENBQUMsU0FBUyxHQXVDakQ7QUF2Q1ksc0NBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlZCc7XG5pbXBvcnQgeyBUZXh0RmllbGQsIFRleHRGaWVsZFByb3BzIH0gZnJvbSAnLi4vVGV4dEZpZWxkJztcbmltcG9ydCB7IFByZWNpc2VUaGVtZSwgVGV4dElucHV0UHJvcHMgfSBmcm9tICcuLi8uLi9jb21tb24nO1xuaW1wb3J0IHsgSWNvbkxpbmsgfSBmcm9tICcuLi9JY29uTGluayc7XG5pbnRlcmZhY2UgU3R5bGVkVGV4dEZpZWxkUHJvcHMgZXh0ZW5kcyBUZXh0RmllbGRQcm9wcyB7XG4gICAgcmV2ZWFsOiBib29sZWFuO1xufVxuY29uc3QgU3R5bGVkVGV4dEZpZWxkID0gc3R5bGVkKFRleHRGaWVsZCk8U3R5bGVkVGV4dEZpZWxkUHJvcHM+IGBcbiAgZm9udC1mYW1pbHk6ICR7cHJvcHMgPT4gKHByb3BzLnJldmVhbCA/ICdpbmhlcml0JyA6ICdzYW5zLXNlcmlmJyl9O1xuYDtcbmV4cG9ydCBpbnRlcmZhY2UgUGFzc3dvcmRGaWVsZFByb3BzIGV4dGVuZHMgVGV4dElucHV0UHJvcHMge1xuICAgIC8qKlxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBjaGlsZHJlbj86IHZvaWQ7XG59XG5leHBvcnQgaW50ZXJmYWNlIFBhc3N3b3JkRmllbGRTdGF0ZSB7XG4gICAgcmV2ZWFsOiBib29sZWFuO1xufVxuLyoqXG4gKiBBIHBhc3N3b3JkIGZpZWxkIGZvciBjdXN0b20gdXNlciBpbnB1dC5cbiAqL1xuZXhwb3J0IGNsYXNzIFBhc3N3b3JkRmllbGQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8UGFzc3dvcmRGaWVsZFByb3BzLCBQYXNzd29yZEZpZWxkU3RhdGU+IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wczogUGFzc3dvcmRGaWVsZFByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIHJldmVhbDogZmFsc2UsXG4gICAgICAgIH07XG4gICAgfVxuICAgIHByaXZhdGUgc2hvd1Bhc3N3b3JkID0gKGU6IFJlYWN0Lk1vdXNlRXZlbnQ8SFRNTEFuY2hvckVsZW1lbnQ+KSA9PiB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgcmV2ZWFsOiB0cnVlLFxuICAgICAgICB9KTtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH07XG4gICAgcHJpdmF0ZSBoaWRlUGFzc3dvcmQgPSAoZTogUmVhY3QuTW91c2VFdmVudDxIVE1MQW5jaG9yRWxlbWVudD4pID0+IHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICByZXZlYWw6IGZhbHNlLFxuICAgICAgICB9KTtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH07XG4gICAgcHJpdmF0ZSByZW5kZXJEZWZhdWx0U3VmZml4KHJldmVhbDogYm9vbGVhbiwgdGhlbWU/OiBQcmVjaXNlVGhlbWUpIHtcbiAgICAgICAgY29uc3QgaWNvbk5hbWUgPSByZXZlYWwgPyAnVmlzaWJpbGl0eU9mZicgOiAnVmlzaWJpbGl0eSc7XG4gICAgICAgIHJldHVybiA8SWNvbkxpbmsgaWNvbj17aWNvbk5hbWV9IG9uQ2xpY2s9e3JldmVhbCA/IHRoaXMuaGlkZVBhc3N3b3JkIDogdGhpcy5zaG93UGFzc3dvcmR9IHRoZW1lPXt0aGVtZX0vPjtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IHRoZW1lLCBzdWZmaXgsIC4uLnJlc3QgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IHsgcmV2ZWFsIH0gPSB0aGlzLnN0YXRlO1xuICAgICAgICBjb25zdCBwcm9wcyA9IHtcbiAgICAgICAgICAgIHN1ZmZpeDogc3VmZml4ID09PSB1bmRlZmluZWQgPyB0aGlzLnJlbmRlckRlZmF1bHRTdWZmaXgocmV2ZWFsLCB0aGVtZSkgOiBzdWZmaXgsXG4gICAgICAgICAgICB0eXBlOiByZXZlYWwgPyAndGV4dCcgOiAncGFzc3dvcmQnLFxuICAgICAgICAgICAgdGhlbWUsXG4gICAgICAgICAgICByZXZlYWwsXG4gICAgICAgICAgICAuLi5yZXN0LFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gPFN0eWxlZFRleHRGaWVsZCB7Li4ucHJvcHN9Lz47XG4gICAgfVxuICAgIHN0YXRpYyBpbm5lciA9IHtcbiAgICAgICAgZ2V0IEljb25MaW5rKCkgeyByZXR1cm4gSWNvbkxpbmsgYXMgdHlwZW9mIEljb25MaW5rOyB9LFxuICAgICAgICBnZXQgU3R5bGVkVGV4dEZpZWxkKCkgeyByZXR1cm4gU3R5bGVkVGV4dEZpZWxkIGFzIHR5cGVvZiBTdHlsZWRUZXh0RmllbGQ7IH1cbiAgICB9O1xufVxuIl19