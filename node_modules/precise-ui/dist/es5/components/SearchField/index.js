"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var Autocomplete_1 = require("../Autocomplete");
var debounce_1 = require("../../utils/debounce");
var Icon_1 = require("../Icon");
var themes_1 = require("../../themes");
var Button_1 = require("../Button");
var styled_1 = require("../../utils/styled");
var SearchContainer = styled_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: flex;\n  flex-direction: row;\n"], ["\n  display: flex;\n  flex-direction: row;\n"])));
var SearchButton = styled_1.default(Button_1.Button)(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  height: 54px;\n  width: 54px;\n  margin: 0;\n"], ["\n  height: 54px;\n  width: 54px;\n  margin: 0;\n"])));
var defaultDebounceDelay = 200;
/**
 * A search field for user search queries.
 */
var SearchField = /** @class */ (function (_super) {
    __extends(SearchField, _super);
    function SearchField(props) {
        var _this = _super.call(this, props) || this;
        _this.handleKeyDown = function (e) {
            e.keyCode === 13 /* enter */ && _this.fireSearch(_this.state.query);
        };
        _this.onSearchClick = function () {
            var onSearch = _this.props.onSearch;
            typeof onSearch === 'function' && onSearch({ query: _this.state.query });
        };
        _this.onClear = function () {
            var _a = _this.props, onClear = _a.onClear, _b = _a.triggerMode, triggerMode = _b === void 0 ? 'auto' : _b;
            typeof onClear === 'function' && onClear();
            // In case, triggerMode is set to manual, clicking on clear should also trigger the search.
            triggerMode === 'manual' && _this.fireSearch('');
        };
        _this.onSuggestionSelected = function (e) {
            var _a = _this.props, onSuggestionSelected = _a.onSuggestionSelected, _b = _a.triggerMode, triggerMode = _b === void 0 ? 'auto' : _b;
            typeof onSuggestionSelected === 'function' && onSuggestionSelected(e);
            // In case, triggerMode is set to manual, selecting a suggestion should also trigger the search.
            triggerMode === 'manual' && _this.fireSearch(String(e.value));
        };
        _this.change = function (e) {
            var _a = _this.props, onChange = _a.onChange, _b = _a.triggerMode, triggerMode = _b === void 0 ? 'auto' : _b;
            _this.setState({ query: e.value });
            typeof onChange === 'function' && onChange(e);
            triggerMode === 'auto' && _this.fireSearch(e.value);
        };
        var _a = props.delay, delay = _a === void 0 ? defaultDebounceDelay : _a;
        _this.state = { query: '' };
        _this.fireSearch = debounce_1.debounce(function (query) {
            var onSearch = _this.props.onSearch;
            typeof onSearch === 'function' && onSearch({ query: query });
        }, delay);
        return _this;
    }
    SearchField.prototype.render = function () {
        var _a = this.props, onSearch = _a.onSearch, delay = _a.delay, _b = _a.icon, icon = _b === void 0 ? 'Search' : _b, _c = _a.triggerMode, triggerMode = _c === void 0 ? 'auto' : _c, rest = __rest(_a, ["onSearch", "delay", "icon", "triggerMode"]);
        var autoTrigger = triggerMode === 'auto';
        var fieldIconColor = (rest.theme && rest.theme.text2) || themes_1.light.text2;
        var buttonIconColor = (rest.theme && rest.theme.text4) || themes_1.light.text4;
        var searchFieldIcon = React.createElement(Icon_1.Icon, { name: icon, color: fieldIconColor, size: "22px" });
        var searchButtonIcon = React.createElement(Icon_1.Icon, { name: icon, color: buttonIconColor, size: "22px" });
        return (React.createElement(SearchContainer, { onKeyDown: this.handleKeyDown },
            React.createElement(Autocomplete_1.Autocomplete, __assign({}, rest, { onClear: this.onClear, onChange: this.change, onSuggestionSelected: this.onSuggestionSelected, icon: autoTrigger ? searchFieldIcon : React.createElement(React.Fragment, null) })),
            !autoTrigger && (React.createElement(SearchButton, { disabled: rest.disabled, onClick: this.onSearchClick }, searchButtonIcon))));
    };
    SearchField.inner = {
        get Icon() { return Icon_1.Icon; },
        get SearchContainer() { return SearchContainer; },
        get Autocomplete() { return Autocomplete_1.Autocomplete; },
        get SearchButton() { return SearchButton; }
    };
    return SearchField;
}(React.Component));
exports.SearchField = SearchField;
var templateObject_1, templateObject_2;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9TZWFyY2hGaWVsZC9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsNkJBQStCO0FBQy9CLGdEQUEwRjtBQUUxRixpREFBZ0Q7QUFDaEQsZ0NBQXlDO0FBQ3pDLHVDQUFxQztBQUNyQyxvQ0FBbUM7QUFDbkMsNkNBQXdDO0FBRXhDLElBQU0sZUFBZSxHQUFHLGdCQUFNLENBQUMsR0FBRyxpSEFBQyw4Q0FHbEMsSUFBQSxDQUFDO0FBQ0YsSUFBTSxZQUFZLEdBQUcsZ0JBQU0sQ0FBQyxlQUFNLENBQUMsc0hBQUMsbURBSW5DLElBQUEsQ0FBQztBQW9DRixJQUFNLG9CQUFvQixHQUFHLEdBQUcsQ0FBQztBQUVqQzs7R0FFRztBQUNIO0lBQW9DLCtCQUFzRDtJQUV0RixxQkFBWSxLQUEwQjtRQUF0QyxZQUNJLGtCQUFNLEtBQUssQ0FBQyxTQU9mO1FBQ08sbUJBQWEsR0FBRyxVQUFDLENBQW1DO1lBQ3hELENBQUMsQ0FBQyxPQUFPLG1CQUFtQixJQUFJLEtBQUksQ0FBQyxVQUFVLENBQUMsS0FBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN0RSxDQUFDLENBQUM7UUFDTSxtQkFBYSxHQUFHO1lBQ1osSUFBQSwrQkFBUSxDQUFnQjtZQUNoQyxPQUFPLFFBQVEsS0FBSyxVQUFVLElBQUksUUFBUSxDQUFDLEVBQUUsS0FBSyxFQUFFLEtBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQztRQUM1RSxDQUFDLENBQUM7UUFDTSxhQUFPLEdBQUc7WUFDUixJQUFBLGdCQUE4QyxFQUE1QyxvQkFBTyxFQUFFLG1CQUFvQixFQUFwQix5Q0FBbUMsQ0FBQztZQUNyRCxPQUFPLE9BQU8sS0FBSyxVQUFVLElBQUksT0FBTyxFQUFFLENBQUM7WUFDM0MsMkZBQTJGO1lBQzNGLFdBQVcsS0FBSyxRQUFRLElBQUksS0FBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUNwRCxDQUFDLENBQUM7UUFDTSwwQkFBb0IsR0FBRyxVQUFDLENBQTRCO1lBQ2xELElBQUEsZ0JBQTJELEVBQXpELDhDQUFvQixFQUFFLG1CQUFvQixFQUFwQix5Q0FBbUMsQ0FBQztZQUNsRSxPQUFPLG9CQUFvQixLQUFLLFVBQVUsSUFBSSxvQkFBb0IsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN0RSxnR0FBZ0c7WUFDaEcsV0FBVyxLQUFLLFFBQVEsSUFBSSxLQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUNqRSxDQUFDLENBQUM7UUFDTSxZQUFNLEdBQUcsVUFBQyxDQUEyQjtZQUNuQyxJQUFBLGdCQUErQyxFQUE3QyxzQkFBUSxFQUFFLG1CQUFvQixFQUFwQix5Q0FBbUMsQ0FBQztZQUN0RCxLQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO1lBQ2xDLE9BQU8sUUFBUSxLQUFLLFVBQVUsSUFBSSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDOUMsV0FBVyxLQUFLLE1BQU0sSUFBSSxLQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN2RCxDQUFDLENBQUM7UUEvQlUsSUFBQSxnQkFBNEIsRUFBNUIsaURBQTRCLENBQVc7UUFDL0MsS0FBSSxDQUFDLEtBQUssR0FBRyxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsQ0FBQztRQUMzQixLQUFJLENBQUMsVUFBVSxHQUFHLG1CQUFRLENBQUMsVUFBQyxLQUFhO1lBQzdCLElBQUEsK0JBQVEsQ0FBZ0I7WUFDaEMsT0FBTyxRQUFRLEtBQUssVUFBVSxJQUFJLFFBQVEsQ0FBQyxFQUFFLEtBQUssT0FBQSxFQUFFLENBQUMsQ0FBQztRQUMxRCxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7O0lBQ2QsQ0FBQztJQTBCRCw0QkFBTSxHQUFOO1FBQ0ksSUFBTSxlQUFnRixFQUE5RSxzQkFBUSxFQUFFLGdCQUFLLEVBQUUsWUFBZSxFQUFmLG9DQUFlLEVBQUUsbUJBQW9CLEVBQXBCLHlDQUFvQixFQUFFLCtEQUFzQixDQUFDO1FBQ3ZGLElBQU0sV0FBVyxHQUFHLFdBQVcsS0FBSyxNQUFNLENBQUM7UUFDM0MsSUFBTSxjQUFjLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksY0FBSyxDQUFDLEtBQUssQ0FBQztRQUN2RSxJQUFNLGVBQWUsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxjQUFLLENBQUMsS0FBSyxDQUFDO1FBQ3hFLElBQU0sZUFBZSxHQUFHLG9CQUFDLFdBQUksSUFBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxjQUFjLEVBQUUsSUFBSSxFQUFDLE1BQU0sR0FBRSxDQUFDO1FBQy9FLElBQU0sZ0JBQWdCLEdBQUcsb0JBQUMsV0FBSSxJQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLGVBQWUsRUFBRSxJQUFJLEVBQUMsTUFBTSxHQUFFLENBQUM7UUFDakYsT0FBTyxDQUFDLG9CQUFDLGVBQWUsSUFBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLGFBQWE7WUFDdEQsb0JBQUMsMkJBQVksZUFBSyxJQUFJLElBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsb0JBQW9CLEVBQUUsSUFBSSxDQUFDLG9CQUFvQixFQUFFLElBQUksRUFBRSxXQUFXLENBQUMsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMseUNBQUssSUFBRztZQUNwSyxDQUFDLFdBQVcsSUFBSSxDQUFDLG9CQUFDLFlBQVksSUFBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLGFBQWEsSUFDL0UsZ0JBQWdCLENBQ0osQ0FBQyxDQUNGLENBQUMsQ0FBQztJQUN0QixDQUFDO0lBQ00saUJBQUssR0FBRztRQUNYLElBQUksSUFBSSxLQUFLLE9BQU8sV0FBbUIsQ0FBQyxDQUFDLENBQUM7UUFDMUMsSUFBSSxlQUFlLEtBQUssT0FBTyxlQUF5QyxDQUFDLENBQUMsQ0FBQztRQUMzRSxJQUFJLFlBQVksS0FBSyxPQUFPLDJCQUFtQyxDQUFDLENBQUMsQ0FBQztRQUNsRSxJQUFJLFlBQVksS0FBSyxPQUFPLFlBQW1DLENBQUMsQ0FBQyxDQUFDO0tBQ3JFLENBQUM7SUFDTixrQkFBQztDQUFBLEFBeERELENBQW9DLEtBQUssQ0FBQyxTQUFTLEdBd0RsRDtBQXhEWSxrQ0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEF1dG9jb21wbGV0ZSwgQXV0b2NvbXBsZXRlUHJvcHMsIEF1dG9zdWdnZXN0U2VsZWN0RXZlbnQgfSBmcm9tICcuLi9BdXRvY29tcGxldGUnO1xuaW1wb3J0IHsgSW5wdXRDaGFuZ2VFdmVudCB9IGZyb20gJy4uLy4uL2NvbW1vbic7XG5pbXBvcnQgeyBkZWJvdW5jZSB9IGZyb20gJy4uLy4uL3V0aWxzL2RlYm91bmNlJztcbmltcG9ydCB7IEljb24sIEljb25OYW1lIH0gZnJvbSAnLi4vSWNvbic7XG5pbXBvcnQgeyBsaWdodCB9IGZyb20gJy4uLy4uL3RoZW1lcyc7XG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICcuLi9CdXR0b24nO1xuaW1wb3J0IHN0eWxlZCBmcm9tICcuLi8uLi91dGlscy9zdHlsZWQnO1xuaW1wb3J0IHsgS2V5Q29kZXMgfSBmcm9tICcuLi8uLi91dGlscy9rZXlDb2Rlcyc7XG5jb25zdCBTZWFyY2hDb250YWluZXIgPSBzdHlsZWQuZGl2IGBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbmA7XG5jb25zdCBTZWFyY2hCdXR0b24gPSBzdHlsZWQoQnV0dG9uKSBgXG4gIGhlaWdodDogNTRweDtcbiAgd2lkdGg6IDU0cHg7XG4gIG1hcmdpbjogMDtcbmA7XG5leHBvcnQgaW50ZXJmYWNlIFNlYXJjaEV2ZW50IHtcbiAgICBxdWVyeTogc3RyaW5nO1xufVxuZXhwb3J0IGludGVyZmFjZSBTZWFyY2hGaWVsZFByb3BzPFQ+IGV4dGVuZHMgQXV0b2NvbXBsZXRlUHJvcHM8VD4ge1xuICAgIC8qKlxuICAgICAqIEBpZ25vcmVcbiAgICAgKi9cbiAgICBjaGlsZHJlbj86IHZvaWQ7XG4gICAgLyoqXG4gICAgICogVGhlIGljb24gdG8gYmUgdXNlZCBmb3IgdGhlIHNlYXJjaC5cbiAgICAgKiBAZGVmYXVsdCBTZWFyY2hcbiAgICAgKi9cbiAgICBpY29uPzogSWNvbk5hbWU7XG4gICAgLyoqXG4gICAgICogRGVmaW5lcyB3aGV0aGVyIHRoZSBzZWFyY2ggdHJpZ2dlcnMgb25TZWFyY2ggb24gZXZlcnkga2V5c3Ryb2tlIG9yXG4gICAgICogYnkgbWFudWFsbHkgY2xpY2tpbmcgb24gYSBidXR0b24gb3IgcHJlc3NpbmcgZW50ZXIuXG4gICAgICpcbiAgICAgKiBAZGVmYXVsdCBcImF1dG9cIlxuICAgICAqL1xuICAgIHRyaWdnZXJNb2RlPzogJ2F1dG8nIHwgJ21hbnVhbCc7XG4gICAgLyoqXG4gICAgICogVGhlIGRlYm91bmNlIHRpbWUgaW4gbWlsbGlzZWNvbmRzLlxuICAgICAqIEBkZWZhdWx0IDIwMFxuICAgICAqL1xuICAgIGRlbGF5PzogbnVtYmVyO1xuICAgIC8qKlxuICAgICAqIFRoZSBldmVudCBmaXJlZCB3aGVuIHRoZSBzZWFyY2ggaXMgdHJpZ2dlcmVkLlxuICAgICAqL1xuICAgIG9uU2VhcmNoPyhldjogU2VhcmNoRXZlbnQpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEFsd2F5cyBgdHJ1ZWAgb24gU2VhcmNoZmllbGQgY29tcG9uZW50cy5cbiAgICAgKiBAaWdub3JlXG4gICAgICovXG4gICAgY2xlYXJhYmxlPzogYm9vbGVhbjtcbn1cbmNvbnN0IGRlZmF1bHREZWJvdW5jZURlbGF5ID0gMjAwO1xudHlwZSBTZWFyY2hGaWVsZFN0YXRlID0gU2VhcmNoRXZlbnQ7XG4vKipcbiAqIEEgc2VhcmNoIGZpZWxkIGZvciB1c2VyIHNlYXJjaCBxdWVyaWVzLlxuICovXG5leHBvcnQgY2xhc3MgU2VhcmNoRmllbGQ8VD4gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8U2VhcmNoRmllbGRQcm9wczxUPiwgU2VhcmNoRmllbGRTdGF0ZT4ge1xuICAgIHByaXZhdGUgZmlyZVNlYXJjaDogKHE6IHN0cmluZykgPT4gdm9pZDtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wczogU2VhcmNoRmllbGRQcm9wczxUPikge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIGNvbnN0IHsgZGVsYXkgPSBkZWZhdWx0RGVib3VuY2VEZWxheSB9ID0gcHJvcHM7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7IHF1ZXJ5OiAnJyB9O1xuICAgICAgICB0aGlzLmZpcmVTZWFyY2ggPSBkZWJvdW5jZSgocXVlcnk6IHN0cmluZykgPT4ge1xuICAgICAgICAgICAgY29uc3QgeyBvblNlYXJjaCB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgICAgIHR5cGVvZiBvblNlYXJjaCA9PT0gJ2Z1bmN0aW9uJyAmJiBvblNlYXJjaCh7IHF1ZXJ5IH0pO1xuICAgICAgICB9LCBkZWxheSk7XG4gICAgfVxuICAgIHByaXZhdGUgaGFuZGxlS2V5RG93biA9IChlOiBSZWFjdC5LZXlib2FyZEV2ZW50PEhUTUxFbGVtZW50PikgPT4ge1xuICAgICAgICBlLmtleUNvZGUgPT09IEtleUNvZGVzLmVudGVyICYmIHRoaXMuZmlyZVNlYXJjaCh0aGlzLnN0YXRlLnF1ZXJ5KTtcbiAgICB9O1xuICAgIHByaXZhdGUgb25TZWFyY2hDbGljayA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgeyBvblNlYXJjaCB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgdHlwZW9mIG9uU2VhcmNoID09PSAnZnVuY3Rpb24nICYmIG9uU2VhcmNoKHsgcXVlcnk6IHRoaXMuc3RhdGUucXVlcnkgfSk7XG4gICAgfTtcbiAgICBwcml2YXRlIG9uQ2xlYXIgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgb25DbGVhciwgdHJpZ2dlck1vZGUgPSAnYXV0bycgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHR5cGVvZiBvbkNsZWFyID09PSAnZnVuY3Rpb24nICYmIG9uQ2xlYXIoKTtcbiAgICAgICAgLy8gSW4gY2FzZSwgdHJpZ2dlck1vZGUgaXMgc2V0IHRvIG1hbnVhbCwgY2xpY2tpbmcgb24gY2xlYXIgc2hvdWxkIGFsc28gdHJpZ2dlciB0aGUgc2VhcmNoLlxuICAgICAgICB0cmlnZ2VyTW9kZSA9PT0gJ21hbnVhbCcgJiYgdGhpcy5maXJlU2VhcmNoKCcnKTtcbiAgICB9O1xuICAgIHByaXZhdGUgb25TdWdnZXN0aW9uU2VsZWN0ZWQgPSAoZTogQXV0b3N1Z2dlc3RTZWxlY3RFdmVudDxUPikgPT4ge1xuICAgICAgICBjb25zdCB7IG9uU3VnZ2VzdGlvblNlbGVjdGVkLCB0cmlnZ2VyTW9kZSA9ICdhdXRvJyB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgdHlwZW9mIG9uU3VnZ2VzdGlvblNlbGVjdGVkID09PSAnZnVuY3Rpb24nICYmIG9uU3VnZ2VzdGlvblNlbGVjdGVkKGUpO1xuICAgICAgICAvLyBJbiBjYXNlLCB0cmlnZ2VyTW9kZSBpcyBzZXQgdG8gbWFudWFsLCBzZWxlY3RpbmcgYSBzdWdnZXN0aW9uIHNob3VsZCBhbHNvIHRyaWdnZXIgdGhlIHNlYXJjaC5cbiAgICAgICAgdHJpZ2dlck1vZGUgPT09ICdtYW51YWwnICYmIHRoaXMuZmlyZVNlYXJjaChTdHJpbmcoZS52YWx1ZSkpO1xuICAgIH07XG4gICAgcHJpdmF0ZSBjaGFuZ2UgPSAoZTogSW5wdXRDaGFuZ2VFdmVudDxzdHJpbmc+KSA9PiB7XG4gICAgICAgIGNvbnN0IHsgb25DaGFuZ2UsIHRyaWdnZXJNb2RlID0gJ2F1dG8nIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgcXVlcnk6IGUudmFsdWUgfSk7XG4gICAgICAgIHR5cGVvZiBvbkNoYW5nZSA9PT0gJ2Z1bmN0aW9uJyAmJiBvbkNoYW5nZShlKTtcbiAgICAgICAgdHJpZ2dlck1vZGUgPT09ICdhdXRvJyAmJiB0aGlzLmZpcmVTZWFyY2goZS52YWx1ZSk7XG4gICAgfTtcbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHsgb25TZWFyY2gsIGRlbGF5LCBpY29uID0gJ1NlYXJjaCcsIHRyaWdnZXJNb2RlID0gJ2F1dG8nLCAuLi5yZXN0IH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjb25zdCBhdXRvVHJpZ2dlciA9IHRyaWdnZXJNb2RlID09PSAnYXV0byc7XG4gICAgICAgIGNvbnN0IGZpZWxkSWNvbkNvbG9yID0gKHJlc3QudGhlbWUgJiYgcmVzdC50aGVtZS50ZXh0MikgfHwgbGlnaHQudGV4dDI7XG4gICAgICAgIGNvbnN0IGJ1dHRvbkljb25Db2xvciA9IChyZXN0LnRoZW1lICYmIHJlc3QudGhlbWUudGV4dDQpIHx8IGxpZ2h0LnRleHQ0O1xuICAgICAgICBjb25zdCBzZWFyY2hGaWVsZEljb24gPSA8SWNvbiBuYW1lPXtpY29ufSBjb2xvcj17ZmllbGRJY29uQ29sb3J9IHNpemU9XCIyMnB4XCIvPjtcbiAgICAgICAgY29uc3Qgc2VhcmNoQnV0dG9uSWNvbiA9IDxJY29uIG5hbWU9e2ljb259IGNvbG9yPXtidXR0b25JY29uQ29sb3J9IHNpemU9XCIyMnB4XCIvPjtcbiAgICAgICAgcmV0dXJuICg8U2VhcmNoQ29udGFpbmVyIG9uS2V5RG93bj17dGhpcy5oYW5kbGVLZXlEb3dufT5cbiAgICAgICAgPEF1dG9jb21wbGV0ZSB7Li4ucmVzdH0gb25DbGVhcj17dGhpcy5vbkNsZWFyfSBvbkNoYW5nZT17dGhpcy5jaGFuZ2V9IG9uU3VnZ2VzdGlvblNlbGVjdGVkPXt0aGlzLm9uU3VnZ2VzdGlvblNlbGVjdGVkfSBpY29uPXthdXRvVHJpZ2dlciA/IHNlYXJjaEZpZWxkSWNvbiA6IDw+PC8+fS8+XG4gICAgICAgIHshYXV0b1RyaWdnZXIgJiYgKDxTZWFyY2hCdXR0b24gZGlzYWJsZWQ9e3Jlc3QuZGlzYWJsZWR9IG9uQ2xpY2s9e3RoaXMub25TZWFyY2hDbGlja30+XG4gICAgICAgICAgICB7c2VhcmNoQnV0dG9uSWNvbn1cbiAgICAgICAgICA8L1NlYXJjaEJ1dHRvbj4pfVxuICAgICAgPC9TZWFyY2hDb250YWluZXI+KTtcbiAgICB9XG4gICAgc3RhdGljIGlubmVyID0ge1xuICAgICAgICBnZXQgSWNvbigpIHsgcmV0dXJuIEljb24gYXMgdHlwZW9mIEljb247IH0sXG4gICAgICAgIGdldCBTZWFyY2hDb250YWluZXIoKSB7IHJldHVybiBTZWFyY2hDb250YWluZXIgYXMgdHlwZW9mIFNlYXJjaENvbnRhaW5lcjsgfSxcbiAgICAgICAgZ2V0IEF1dG9jb21wbGV0ZSgpIHsgcmV0dXJuIEF1dG9jb21wbGV0ZSBhcyB0eXBlb2YgQXV0b2NvbXBsZXRlOyB9LFxuICAgICAgICBnZXQgU2VhcmNoQnV0dG9uKCkgeyByZXR1cm4gU2VhcmNoQnV0dG9uIGFzIHR5cGVvZiBTZWFyY2hCdXR0b247IH1cbiAgICB9O1xufVxuIl19