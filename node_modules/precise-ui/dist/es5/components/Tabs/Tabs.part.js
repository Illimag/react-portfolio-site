"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var themes_1 = require("../../themes");
var hoc_1 = require("../../hoc");
var TabPanel_part_1 = require("../TabPanel/TabPanel.part");
var DropdownPanel_part_1 = require("../DropdownPanel/DropdownPanel.part");
var TabInt = Object.assign((function (_a) {
    var theme = _a.theme, mode = _a.mode, innerRef = _a.innerRef, _b = _a.activeIndex, activeIndex = _b === void 0 ? 0 : _b, onSelect = _a.onSelect, _c = _a.headers, headers = _c === void 0 ? [] : _c, children = _a.children, props = __rest(_a, ["theme", "mode", "innerRef", "activeIndex", "onSelect", "headers", "children"]);
    var TabHeaderHolder = false;
    if (mode === 'tab') {
        TabHeaderHolder = (React.createElement(TabPanel_part_1.TabHeaders, __assign({ theme: theme }, props), headers.map(function (text, index) { return (React.createElement(TabPanel_part_1.TabHeader, { theme: theme, key: "head-" + index, active: index === activeIndex, onClick: function () { return onSelect(index); } }, text)); })));
    }
    else if (mode === 'dropdown') {
        TabHeaderHolder = (React.createElement(DropdownPanel_part_1.DropdownContainer, __assign({ theme: theme }, props),
            React.createElement(DropdownPanel_part_1.SlideDownTabs, { data: headers.map(function (content, index) { return ({
                    key: "" + index,
                    content: content,
                    type: 'item',
                }); }), selectedIndex: activeIndex, onChange: onSelect })));
    }
    return (React.createElement("div", { ref: innerRef },
        TabHeaderHolder,
        React.createElement(TabPanel_part_1.TabContent, { theme: theme }, children)));
}), { inner: {
        get TabHeaders() { return TabPanel_part_1.TabHeaders; },
        get TabHeader() { return TabPanel_part_1.TabHeader; },
        get DropdownContainer() { return DropdownPanel_part_1.DropdownContainer; },
        get SlideDownTabs() { return DropdownPanel_part_1.SlideDownTabs; },
        get TabContent() { return TabPanel_part_1.TabContent; }
    } });
exports.ResponsiveTabs = hoc_1.withResponsiveMode(function (width) { return !width || width > themes_1.breakpoints.medium ? 'tab' : 'dropdown'; })(TabInt);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGFicy5wYXJ0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvVGFicy9UYWJzLnBhcnQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSw2QkFBK0I7QUFFL0IsdUNBQTJDO0FBRTNDLGlDQUFrRTtBQUNsRSwyREFBOEU7QUFDOUUsMEVBQXNHO0FBSXRHLElBQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUUsQ0FBQyxVQUFDLEVBQXNGO0lBQXBGLElBQUEsZ0JBQUssRUFBRSxjQUFJLEVBQUUsc0JBQVEsRUFBRSxtQkFBZSxFQUFmLG9DQUFlLEVBQUUsc0JBQVEsRUFBRSxlQUFZLEVBQVosaUNBQVksRUFBRSxzQkFBUSxFQUFFLG1HQUFRO0lBQ2hILElBQUksZUFBZSxHQUFvQixLQUFLLENBQUM7SUFDN0MsSUFBSSxJQUFJLEtBQUssS0FBSyxFQUFFO1FBQ2hCLGVBQWUsR0FBRyxDQUFDLG9CQUFDLDBCQUFVLGFBQUMsS0FBSyxFQUFFLEtBQUssSUFBTSxLQUFLLEdBQ3JELE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBQyxJQUFJLEVBQUUsS0FBSyxJQUFLLE9BQUEsQ0FBQyxvQkFBQyx5QkFBUyxJQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLFVBQVEsS0FBTyxFQUFFLE1BQU0sRUFBRSxLQUFLLEtBQUssV0FBVyxFQUFFLE9BQU8sRUFBRSxjQUFNLE9BQUEsUUFBUSxDQUFDLEtBQUssQ0FBQyxFQUFmLENBQWUsSUFDdEksSUFBSSxDQUNLLENBQUMsRUFGZSxDQUVmLENBQUMsQ0FDTCxDQUFDLENBQUM7S0FDaEI7U0FDSSxJQUFJLElBQUksS0FBSyxVQUFVLEVBQUU7UUFDMUIsZUFBZSxHQUFHLENBQUMsb0JBQUMsc0NBQWlCLGFBQUMsS0FBSyxFQUFFLEtBQUssSUFBTSxLQUFLO1lBQzdELG9CQUFDLGtDQUFhLElBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBQyxPQUFPLEVBQUUsS0FBSyxJQUFLLE9BQUEsQ0FBQztvQkFDbEQsR0FBRyxFQUFFLEtBQUcsS0FBTztvQkFDZixPQUFPLFNBQUE7b0JBQ1AsSUFBSSxFQUFFLE1BQU07aUJBQ0csQ0FBQSxFQUprQyxDQUlsQyxDQUFDLEVBQUUsYUFBYSxFQUFFLFdBQVcsRUFBRSxRQUFRLEVBQUUsUUFBUSxHQUFHLENBQ3JELENBQUMsQ0FBQztLQUN2QjtJQUNELE9BQU8sQ0FBQyw2QkFBSyxHQUFHLEVBQUUsUUFBUTtRQUN2QixlQUFlO1FBQ2hCLG9CQUFDLDBCQUFVLElBQUMsS0FBSyxFQUFFLEtBQUssSUFBRyxRQUFRLENBQWMsQ0FDN0MsQ0FBQyxDQUFDO0FBQ1osQ0FBQyxDQUFvRCxFQUFFLEVBQUUsS0FBSyxFQUFFO1FBQ3hELElBQUksVUFBVSxLQUFLLE9BQU8sMEJBQStCLENBQUMsQ0FBQyxDQUFDO1FBQzVELElBQUksU0FBUyxLQUFLLE9BQU8seUJBQTZCLENBQUMsQ0FBQyxDQUFDO1FBQ3pELElBQUksaUJBQWlCLEtBQUssT0FBTyxzQ0FBNkMsQ0FBQyxDQUFDLENBQUM7UUFDakYsSUFBSSxhQUFhLEtBQUssT0FBTyxrQ0FBcUMsQ0FBQyxDQUFDLENBQUM7UUFDckUsSUFBSSxVQUFVLEtBQUssT0FBTywwQkFBK0IsQ0FBQyxDQUFDLENBQUM7S0FDL0QsRUFBRSxDQUFDLENBQUM7QUFNSSxRQUFBLGNBQWMsR0FBdUIsd0JBQWtCLENBQXFCLFVBQUEsS0FBSyxJQUFJLE9BQUEsQ0FBQyxLQUFLLElBQUksS0FBSyxHQUFHLG9CQUFXLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLFVBQVUsRUFBekQsQ0FBeUQsQ0FBQyxDQUFDLE1BQU0sQ0FBUSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgU3RhbmRhcmRQcm9wcyB9IGZyb20gJy4uLy4uL2NvbW1vbic7XG5pbXBvcnQgeyBicmVha3BvaW50cyB9IGZyb20gJy4uLy4uL3RoZW1lcyc7XG5pbXBvcnQgeyBUYWJDb250cm9sSG9sZGVyUHJvcHMgfSBmcm9tICcuLi9UYWJDb250cm9sJztcbmltcG9ydCB7IE1vZGVQcm92aWRlclByb3BzLCB3aXRoUmVzcG9uc2l2ZU1vZGUgfSBmcm9tICcuLi8uLi9ob2MnO1xuaW1wb3J0IHsgVGFiQ29udGVudCwgVGFiSGVhZGVyLCBUYWJIZWFkZXJzIH0gZnJvbSAnLi4vVGFiUGFuZWwvVGFiUGFuZWwucGFydCc7XG5pbXBvcnQgeyBEcm9wZG93bkNvbnRhaW5lciwgU2xpZGVEb3duVGFicywgVGFiSGVhZGVySXRlbSB9IGZyb20gJy4uL0Ryb3Bkb3duUGFuZWwvRHJvcGRvd25QYW5lbC5wYXJ0JztcbmV4cG9ydCB0eXBlIFRhYnNNb2RlID0gJ3RhYicgfCAnZHJvcGRvd24nO1xuZXhwb3J0IGludGVyZmFjZSBUYWJJbnRQcm9wcyBleHRlbmRzIFN0YW5kYXJkUHJvcHMsIE1vZGVQcm92aWRlclByb3BzPFRhYnNNb2RlPiwgVGFiQ29udHJvbEhvbGRlclByb3BzIHtcbn1cbmNvbnN0IFRhYkludCA9IE9iamVjdC5hc3NpZ24oKCgoeyB0aGVtZSwgbW9kZSwgaW5uZXJSZWYsIGFjdGl2ZUluZGV4ID0gMCwgb25TZWxlY3QsIGhlYWRlcnMgPSBbXSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+IHtcbiAgICBsZXQgVGFiSGVhZGVySG9sZGVyOiBSZWFjdC5SZWFjdE5vZGUgPSBmYWxzZTtcbiAgICBpZiAobW9kZSA9PT0gJ3RhYicpIHtcbiAgICAgICAgVGFiSGVhZGVySG9sZGVyID0gKDxUYWJIZWFkZXJzIHRoZW1lPXt0aGVtZX0gey4uLnByb3BzfT5cbiAgICAgICAge2hlYWRlcnMubWFwKCh0ZXh0LCBpbmRleCkgPT4gKDxUYWJIZWFkZXIgdGhlbWU9e3RoZW1lfSBrZXk9e2BoZWFkLSR7aW5kZXh9YH0gYWN0aXZlPXtpbmRleCA9PT0gYWN0aXZlSW5kZXh9IG9uQ2xpY2s9eygpID0+IG9uU2VsZWN0KGluZGV4KX0+XG4gICAgICAgICAgICB7dGV4dH1cbiAgICAgICAgICA8L1RhYkhlYWRlcj4pKX1cbiAgICAgIDwvVGFiSGVhZGVycz4pO1xuICAgIH1cbiAgICBlbHNlIGlmIChtb2RlID09PSAnZHJvcGRvd24nKSB7XG4gICAgICAgIFRhYkhlYWRlckhvbGRlciA9ICg8RHJvcGRvd25Db250YWluZXIgdGhlbWU9e3RoZW1lfSB7Li4ucHJvcHN9PlxuICAgICAgICA8U2xpZGVEb3duVGFicyBkYXRhPXtoZWFkZXJzLm1hcCgoY29udGVudCwgaW5kZXgpID0+ICh7XG4gICAgICAgICAgICBrZXk6IGAke2luZGV4fWAsXG4gICAgICAgICAgICBjb250ZW50LFxuICAgICAgICAgICAgdHlwZTogJ2l0ZW0nLFxuICAgICAgICB9IGFzIFRhYkhlYWRlckl0ZW0pKX0gc2VsZWN0ZWRJbmRleD17YWN0aXZlSW5kZXh9IG9uQ2hhbmdlPXtvblNlbGVjdH0vPlxuICAgICAgPC9Ecm9wZG93bkNvbnRhaW5lcj4pO1xuICAgIH1cbiAgICByZXR1cm4gKDxkaXYgcmVmPXtpbm5lclJlZn0+XG4gICAgICB7VGFiSGVhZGVySG9sZGVyfVxuICAgICAgPFRhYkNvbnRlbnQgdGhlbWU9e3RoZW1lfT57Y2hpbGRyZW59PC9UYWJDb250ZW50PlxuICAgIDwvZGl2Pik7XG59KSBhcyBSZWFjdC5GQzxSZWFjdC5Qcm9wc1dpdGhDaGlsZHJlbjxUYWJJbnRQcm9wcz4+KSwgeyBpbm5lcjoge1xuICAgICAgICBnZXQgVGFiSGVhZGVycygpIHsgcmV0dXJuIFRhYkhlYWRlcnMgYXMgdHlwZW9mIFRhYkhlYWRlcnM7IH0sXG4gICAgICAgIGdldCBUYWJIZWFkZXIoKSB7IHJldHVybiBUYWJIZWFkZXIgYXMgdHlwZW9mIFRhYkhlYWRlcjsgfSxcbiAgICAgICAgZ2V0IERyb3Bkb3duQ29udGFpbmVyKCkgeyByZXR1cm4gRHJvcGRvd25Db250YWluZXIgYXMgdHlwZW9mIERyb3Bkb3duQ29udGFpbmVyOyB9LFxuICAgICAgICBnZXQgU2xpZGVEb3duVGFicygpIHsgcmV0dXJuIFNsaWRlRG93blRhYnMgYXMgdHlwZW9mIFNsaWRlRG93blRhYnM7IH0sXG4gICAgICAgIGdldCBUYWJDb250ZW50KCkgeyByZXR1cm4gVGFiQ29udGVudCBhcyB0eXBlb2YgVGFiQ29udGVudDsgfVxuICAgIH0gfSk7XG5leHBvcnQgaW50ZXJmYWNlIFJlc3BvbnNpdmVUYWJzVHlwZSBleHRlbmRzIFJlYWN0LkZDPFRhYkludFByb3BzPiB7XG4gICAgKHByb3BzOiBUYWJJbnRQcm9wcyAmIHtcbiAgICAgICAgY2hpbGRyZW4/OiBSZWFjdC5SZWFjdE5vZGU7XG4gICAgfSwgY29udGV4dD86IGFueSk6IEpTWC5FbGVtZW50O1xufVxuZXhwb3J0IGNvbnN0IFJlc3BvbnNpdmVUYWJzOiBSZXNwb25zaXZlVGFic1R5cGUgPSB3aXRoUmVzcG9uc2l2ZU1vZGU8J3RhYicgfCAnZHJvcGRvd24nPih3aWR0aCA9PiAhd2lkdGggfHwgd2lkdGggPiBicmVha3BvaW50cy5tZWRpdW0gPyAndGFiJyA6ICdkcm9wZG93bicpKFRhYkludCkgYXMgYW55O1xuIl19