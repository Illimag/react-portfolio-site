"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var TabControl_1 = require("../TabControl");
var Tabs_part_1 = require("./Tabs.part");
var TabPanel_part_1 = require("../TabPanel/TabPanel.part");
var TabControl = TabControl_1.withTabControl(Tabs_part_1.ResponsiveTabs);
/**
 * The tabs component displays a toggling list of content. It features a
 * header that makes selecting tabs possible and a content list.
 *
 * The component contains an optional automatic selection of the best view.
 */
exports.Tabs = Object.assign((function (_a) {
    var theme = _a.theme, mode = _a.mode, children = _a.children, props = __rest(_a, ["theme", "mode", "children"]);
    return (React.createElement(TabControl, __assign({ tabItemRenderer: TabPanel_part_1.TabItem, mode: mode, theme: theme }, props), children));
}), { inner: {
        get TabControl() { return TabControl; }
    } });
exports.Tabs.displayName = 'Tabs';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9UYWJzL2luZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsNkJBQStCO0FBRS9CLDRDQUEyRDtBQUMzRCx5Q0FBdUQ7QUFDdkQsMkRBQW9EO0FBRXBELElBQU0sVUFBVSxHQUFHLDJCQUFjLENBQUMsMEJBQWMsQ0FBQyxDQUFDO0FBV2xEOzs7OztHQUtHO0FBQ1UsUUFBQSxJQUFJLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBRSxDQUFDLFVBQUMsRUFBbUM7SUFBakMsSUFBQSxnQkFBSyxFQUFFLGNBQUksRUFBRSxzQkFBUSxFQUFFLGlEQUFRO0lBQ2xFLE9BQU8sQ0FBQyxvQkFBQyxVQUFVLGFBQUMsZUFBZSxFQUFFLHVCQUFPLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsS0FBSyxJQUFNLEtBQUssR0FDOUUsUUFBUSxDQUNFLENBQUMsQ0FBQztBQUNuQixDQUFDLENBQXlCLEVBQUUsRUFBRSxLQUFLLEVBQUU7UUFDN0IsSUFBSSxVQUFVLEtBQUssT0FBTyxVQUErQixDQUFDLENBQUMsQ0FBQztLQUMvRCxFQUFFLENBQUMsQ0FBQztBQUNULFlBQUksQ0FBQyxXQUFXLEdBQUcsTUFBTSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgU3RhbmRhcmRQcm9wcyB9IGZyb20gJy4uLy4uL2NvbW1vbic7XG5pbXBvcnQgeyBUYWJPcHRpb25zLCB3aXRoVGFiQ29udHJvbCB9IGZyb20gJy4uL1RhYkNvbnRyb2wnO1xuaW1wb3J0IHsgUmVzcG9uc2l2ZVRhYnMsIFRhYnNNb2RlIH0gZnJvbSAnLi9UYWJzLnBhcnQnO1xuaW1wb3J0IHsgVGFiSXRlbSB9IGZyb20gJy4uL1RhYlBhbmVsL1RhYlBhbmVsLnBhcnQnO1xuZXhwb3J0IHsgVGFic01vZGUgfTtcbmNvbnN0IFRhYkNvbnRyb2wgPSB3aXRoVGFiQ29udHJvbChSZXNwb25zaXZlVGFicyk7XG5leHBvcnQgaW50ZXJmYWNlIFRhYnNQcm9wcyBleHRlbmRzIFRhYk9wdGlvbnMsIFN0YW5kYXJkUHJvcHMge1xuICAgIC8qKlxuICAgICAqIFRoZSBjaGlsZHJlbiwgdXN1YWxseSBwYXNzZWQgYXMgYSBjb2xsZWN0aW9uIG9mIFRhYlBhZ2UgZWxlbWVudHMuXG4gICAgICovXG4gICAgY2hpbGRyZW4/OiBSZWFjdC5SZWFjdE5vZGU7XG4gICAgLyoqXG4gICAgICogT3B0aW9uYWxseSBzZXRzIHRoZSB0YWJzIG1vZGUgdG8gdXNlLlxuICAgICAqL1xuICAgIG1vZGU/OiBUYWJzTW9kZTtcbn1cbi8qKlxuICogVGhlIHRhYnMgY29tcG9uZW50IGRpc3BsYXlzIGEgdG9nZ2xpbmcgbGlzdCBvZiBjb250ZW50LiBJdCBmZWF0dXJlcyBhXG4gKiBoZWFkZXIgdGhhdCBtYWtlcyBzZWxlY3RpbmcgdGFicyBwb3NzaWJsZSBhbmQgYSBjb250ZW50IGxpc3QuXG4gKlxuICogVGhlIGNvbXBvbmVudCBjb250YWlucyBhbiBvcHRpb25hbCBhdXRvbWF0aWMgc2VsZWN0aW9uIG9mIHRoZSBiZXN0IHZpZXcuXG4gKi9cbmV4cG9ydCBjb25zdCBUYWJzID0gT2JqZWN0LmFzc2lnbigoKCh7IHRoZW1lLCBtb2RlLCBjaGlsZHJlbiwgLi4ucHJvcHMgfSkgPT4ge1xuICAgIHJldHVybiAoPFRhYkNvbnRyb2wgdGFiSXRlbVJlbmRlcmVyPXtUYWJJdGVtfSBtb2RlPXttb2RlfSB0aGVtZT17dGhlbWV9IHsuLi5wcm9wc30+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9UYWJDb250cm9sPik7XG59KSBhcyBSZWFjdC5GQzxUYWJzUHJvcHM+KSwgeyBpbm5lcjoge1xuICAgICAgICBnZXQgVGFiQ29udHJvbCgpIHsgcmV0dXJuIFRhYkNvbnRyb2wgYXMgdHlwZW9mIFRhYkNvbnRyb2w7IH1cbiAgICB9IH0pO1xuVGFicy5kaXNwbGF5TmFtZSA9ICdUYWJzJztcbiJdfQ==