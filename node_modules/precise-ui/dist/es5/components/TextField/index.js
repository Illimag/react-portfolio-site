"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var styled_1 = require("../../utils/styled");
var StackPanel_1 = require("../StackPanel");
var colors_1 = require("../../colors");
var InputIcon_1 = require("../InputIcon");
var withFormContext_1 = require("../../hoc/withFormContext");
var input_1 = require("../../utils/input");
var distance_1 = require("../../distance");
var quarks_1 = require("../../quarks");
var textStyles_1 = require("../../textStyles");
var TextFieldContainer = styled_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  position: relative;\n"], ["\n  position: relative;\n"])));
var TextFieldWrapper = styled_1.default(StackPanel_1.StackPanel)(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  display: flex;\n"], ["\n  display: flex;\n"])));
var TextFieldArea = styled_1.default.textarea(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  ::-ms-clear { display: none; }\n\n  white-space: pre-wrap;\n  word-break: break-word;\n\n  ", "\n  color: ", ";\n  border-radius: 0;\n  font-family: inherit;\n  padding: ", ";\n  box-sizing: border-box;\n  box-shadow: none;\n  resize: ", ";\n  margin: 0;\n  width: 100%;\n  cursor: ", ";\n  border: none;\n  border-bottom: 1px solid\n    ", ";\n  background: ", ";\n\n  &::placeholder {\n    color: ", ";\n    opacity: ", ";\n    transition: inherit;\n  }\n\n  &:focus {\n    outline: none;\n\n    &::placeholder {\n      opacity: 1;\n    }\n  }\n"], ["\n  ::-ms-clear { display: none; }\n\n  white-space: pre-wrap;\n  word-break: break-word;\n\n  ", "\n  color: ", ";\n  border-radius: 0;\n  font-family: inherit;\n  padding: ", ";\n  box-sizing: border-box;\n  box-shadow: none;\n  resize: ", ";\n  margin: 0;\n  width: 100%;\n  cursor: ", ";\n  border: none;\n  border-bottom: 1px solid\n    ", ";\n  background: ", ";\n\n  &::placeholder {\n    color: ", ";\n    opacity: ", ";\n    transition: inherit;\n  }\n\n  &:focus {\n    outline: none;\n\n    &::placeholder {\n      opacity: 1;\n    }\n  }\n"])), textStyles_1.getFontSize('medium'), styled_1.themed(function (_a) {
    var theme = _a.theme, disabled = _a.disabled;
    return (disabled ? theme.text3 : theme.text2);
}), function (props) { return (props.labelShown ? distance_1.distance.large + " " + distance_1.distance.medium + " " + distance_1.distance.small : distance_1.distance.medium); }, function (props) { return props.resizable || 'none'; }, function (props) { return (props.disabled ? 'not-allowed' : 'auto'); }, styled_1.themed(function (_a) {
    var theme = _a.theme, border = _a.border;
    return (border === 3 /* error */ ? colors_1.purpleRed : theme.ui4);
}), styled_1.themed(function (_a) {
    var theme = _a.theme;
    return theme.ui2;
}), styled_1.themed(function (_a) {
    var theme = _a.theme, disabled = _a.disabled;
    return (disabled ? theme.text3 : theme.text2);
}), function (props) { return (props.labelShown ? '0' : '1'); });
var TextFieldElement = styled_1.default.div(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  ", "\n\n  display: flex;\n  align-items: center;\n  padding: ", ";\n  color: ", ";\n  background: ", ";\n"], ["\n  ", "\n\n  display: flex;\n  align-items: center;\n  padding: ", ";\n  color: ", ";\n  background: ", ";\n"])), textStyles_1.getFontSize('medium'), distance_1.distance.medium, styled_1.themed(function (_a) {
    var theme = _a.theme;
    return theme.text2;
}), styled_1.themed(function (_a) {
    var theme = _a.theme;
    return theme.ui3;
}));
var TextFieldInt = /** @class */ (function (_super) {
    __extends(TextFieldInt, _super);
    function TextFieldInt(props) {
        var _this = _super.call(this, props) || this;
        _this.changeValue = function (e) {
            _this.updateValue(e.target.value, e);
        };
        _this.changeHeight = function () {
            var resizable = _this.props.resizable;
            var element = _this._element;
            if (resizable === 'auto' && element) {
                element.style.height = '1px';
                element.style.height = element.scrollHeight + "px";
            }
        };
        _this.setTextFieldNode = function (node) {
            _this._element = node;
            var inputRef = _this.props.inputRef;
            if (typeof inputRef === 'function') {
                inputRef(node);
            }
        };
        _this.setFocus = function () {
            var onFocus = _this.props.onFocus;
            _this.setState({
                focused: true,
            }, onFocus);
        };
        _this.unsetFocus = function () {
            var onBlur = _this.props.onBlur;
            _this.setState({
                focused: false,
            }, onBlur);
        };
        _this.handleReset = function () {
            var onClear = _this.props.onClear;
            _this.updateValue('');
            if (typeof onClear === 'function') {
                onClear();
            }
        };
        _this.state = {
            focused: false,
            reveal: false,
            controlled: props.value !== undefined,
            value: props.value || props.defaultValue || '',
            error: props.error,
        };
        return _this;
    }
    TextFieldInt.prototype.UNSAFE_componentWillReceiveProps = function (_a) {
        var _b = _a.value, value = _b === void 0 ? '' : _b, error = _a.error;
        if (this.state.controlled) {
            this.setState({ value: value });
        }
        this.setState({ error: error });
    };
    TextFieldInt.prototype.componentDidMount = function () {
        this.changeHeight();
        var form = this.props.form;
        var controlled = this.state.controlled;
        if (!controlled && form) {
            form.subscribe(this);
        }
    };
    TextFieldInt.prototype.componentWillUnmount = function () {
        var form = this.props.form;
        var controlled = this.state.controlled;
        if (!controlled && form) {
            form.unsubscribe(this);
        }
    };
    TextFieldInt.prototype.updateValue = function (value, e) {
        var _a = this.props, onChange = _a.onChange, _b = _a.name, name = _b === void 0 ? '' : _b, form = _a.form;
        if (!this.state.controlled) {
            if (form) {
                form.change({
                    name: name,
                    value: value,
                });
            }
            else {
                this.setState({
                    value: value,
                });
            }
        }
        if (typeof onChange === 'function') {
            onChange({
                value: value,
                originalEvent: e,
            });
        }
    };
    TextFieldInt.prototype.render = function () {
        var _this = this;
        var _a = this.props, theme = _a.theme, borderless = _a.borderless, prefix = _a.prefix, suffix = _a.suffix, multiline = _a.multiline, _b = _a.resizable, resizable = _b === void 0 ? false : _b, disabled = _a.disabled, placeholder = _a.placeholder, info = _a.info, label = _a.label, clearable = _a.clearable, onClear = _a.onClear, icon = _a.icon, _0 = _a.onChange, _1 = _a.defaultValue, _2 = _a.value, _3 = _a.form, _4 = _a.onFocus, _5 = _a.onBlur, _6 = _a.inputRef, _7 = _a.onInput, rest = __rest(_a, ["theme", "borderless", "prefix", "suffix", "multiline", "resizable", "disabled", "placeholder", "info", "label", "clearable", "onClear", "icon", "onChange", "defaultValue", "value", "form", "onFocus", "onBlur", "inputRef", "onInput"]);
        var _c = this.state, focused = _c.focused, value = _c.value, error = _c.error;
        var rows = typeof multiline === 'number' ? multiline : undefined;
        var border = quarks_1.getTextFieldBorderType(borderless, !!error, focused);
        var hasValue = !!value;
        var input = rows !== undefined || multiline ? (React.createElement(TextFieldArea, __assign({ ref: this.setTextFieldNode, onInput: this.changeHeight, border: border, rows: rows, resizable: typeof resizable === 'string' ? resizable : resizable ? 'auto' : undefined, disabled: disabled, labelShown: label !== undefined, placeholder: placeholder, onFocus: this.setFocus, onBlur: this.unsetFocus, value: value, onChange: this.changeValue }, rest))) : (React.createElement(quarks_1.StyledInput, __assign({ ref: function (el) { return _this.setTextFieldNode(el); }, theme: theme, disabled: disabled, labelShown: label !== undefined, placeholder: placeholder, onFocus: this.setFocus, onBlur: this.unsetFocus, value: value, onChange: this.changeValue }, rest)));
        var textFieldWrapper = (React.createElement(quarks_1.StyledInputRow, { error: !!error, focused: focused, hasValue: hasValue, label: label, placeholder: placeholder, multiline: rows !== undefined || multiline !== undefined }, input));
        return (React.createElement(TextFieldContainer, null,
            rows !== undefined || multiline ? (textFieldWrapper) : (React.createElement(TextFieldWrapper, null,
                prefix && React.createElement(TextFieldElement, null, prefix),
                React.createElement(quarks_1.StyledInputBox, { border: border, disabled: disabled, focused: focused, hasValue: hasValue },
                    textFieldWrapper,
                    React.createElement(InputIcon_1.InputIcon, { disabled: disabled, defaultIcon: icon, theme: theme, error: error, hasValue: hasValue, clearable: clearable, onClear: this.handleReset, onClick: function () { return _this._element && _this._element.focus(); } })),
                suffix && React.createElement(TextFieldElement, null, suffix))),
            input_1.showInputInfo(error, info)));
    };
    TextFieldInt.inner = {
        get TextFieldArea() { return TextFieldArea; },
        get StyledInput() { return quarks_1.StyledInput; },
        get StyledInputRow() { return quarks_1.StyledInputRow; },
        get TextFieldContainer() { return TextFieldContainer; },
        get TextFieldWrapper() { return TextFieldWrapper; },
        get TextFieldElement() { return TextFieldElement; },
        get StyledInputBox() { return quarks_1.StyledInputBox; },
        get InputIcon() { return InputIcon_1.InputIcon; }
    };
    return TextFieldInt;
}(React.Component));
/**
 * A text field for custom user input.
 */
exports.TextField = withFormContext_1.withFormContext(TextFieldInt);
exports.TextField.displayName = 'TextField';
var templateObject_1, templateObject_2, templateObject_3, templateObject_4;
//# sourceMappingURL=data:application/json;base64,