"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var styled_1 = require("../../utils/styled");
var Headline_1 = require("../Headline");
var colors_1 = require("../../colors");
var Blocker_1 = require("../Blocker");
var CloseButton_1 = require("../CloseButton");
var distance_1 = require("../../distance");
var textStyles_1 = require("../../textStyles");
var openAnimationDuration = 300;
var closeAnimationDuration = 200;
var blockerAnimationDuration = 200;
var InAnimation = function (startOffset) { return styled_1.keyframes(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  from {\n    opacity: 0;\n    transform: translate(0, ", "px);\n  }\n  to {\n    opacity: 1;\n    transform: translate(0px);\n  }\n"], ["\n  from {\n    opacity: 0;\n    transform: translate(0, ", "px);\n  }\n  to {\n    opacity: 1;\n    transform: translate(0px);\n  }\n"])), startOffset); };
var OutAnimation = function () { return styled_1.keyframes(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n"], ["\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n"]))); };
var BlockerInAnimation = function () { return styled_1.keyframes(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n"], ["\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n"]))); };
var StyledModal = styled_1.default('div')(function (_a) {
    var width = _a.width, closing = _a.closing;
    return styled_1.css(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n    outline: none;\n    color: ", ";\n    ", ";\n    margin: ", " auto;\n    display: flex;\n    align-items: center;\n    min-height: calc(100% - (", " * 2));\n    animation: ", "\n      ", "ms cubic-bezier(0, 0, 0.25, 1);\n    animation-fill-mode: forwards;\n\n    @media screen and (max-width: ", ") {\n      width: 100%;\n      min-height: 100%;\n      margin: 0;\n      align-items: stretch;\n    }\n  "], ["\n    outline: none;\n    color: ", ";\n    ", ";\n    margin: ", " auto;\n    display: flex;\n    align-items: center;\n    min-height: calc(100% - (", " * 2));\n    animation: ", "\n      ", "ms cubic-bezier(0, 0, 0.25, 1);\n    animation-fill-mode: forwards;\n\n    @media screen and (max-width: ", ") {\n      width: 100%;\n      min-height: 100%;\n      margin: 0;\n      align-items: stretch;\n    }\n  "])), colors_1.dark, width ? "width: " + width : 'max-width: 500px', distance_1.distance.xlarge, distance_1.distance.xlarge, closing ? OutAnimation() : InAnimation(-72), closing ? closeAnimationDuration : openAnimationDuration, width || '500px');
});
var StyledBlocker = styled_1.default(Blocker_1.Blocker)(function (_a) {
    var closing = _a.closing;
    return styled_1.css(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n    animation: ", " ", "ms\n      cubic-bezier(0, 0, 0.25, 1);\n    animation-fill-mode: forwards;\n  "], ["\n    animation: ", " ", "ms\n      cubic-bezier(0, 0, 0.25, 1);\n    animation-fill-mode: forwards;\n  "])), closing ? OutAnimation() : BlockerInAnimation(), blockerAnimationDuration);
});
var ModalContent = styled_1.default.div(function (_a) {
    var minHeight = _a.minHeight;
    return "\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    background: " + colors_1.white + ";\n    box-shadow: 0 12px 24px 0 rgba(0, 0, 0, 0.1);\n    border-top: 4px solid " + colors_1.cyan + ";\n    width: 100%;\n    " + (minHeight ? "min-height: " + minHeight : '') + ";\n  ";
});
var ModalLabel = styled_1.default.span(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n  ", "\n\n  padding-bottom: ", ";\n"], ["\n  ", "\n\n  padding-bottom: ", ";\n"])), textStyles_1.getFontStyle({ size: 'small' }), distance_1.distance.small);
var StyledModalBody = styled_1.default.div(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n  ", "\n\n  text-align: left;\n  padding: 0 ", " ", ";\n  margin-bottom: auto;\n"], ["\n  ", "\n\n  text-align: left;\n  padding: 0 ", " ", ";\n  margin-bottom: auto;\n"])), textStyles_1.getFontStyle({ size: 'medium', weight: 'regular' }), distance_1.distance.xxlarge, distance_1.distance.xxlarge);
var StyledModalHeader = styled_1.default.div(templateObject_8 || (templateObject_8 = __makeTemplateObject(["\n  margin-bottom: ", ";\n  padding: ", " ", " 0;\n"], ["\n  margin-bottom: ", ";\n  padding: ", " ", " 0;\n"])), distance_1.distance.medium, distance_1.distance.xxlarge, distance_1.distance.xxlarge);
var StyledModalFooter = styled_1.default.div(templateObject_9 || (templateObject_9 = __makeTemplateObject(["\n  background: ", ";\n  padding: ", " ", ";\n  text-align: right;\n"], ["\n  background: ", ";\n  padding: ", " ", ";\n  text-align: right;\n"])), colors_1.grey6, distance_1.distance.large, distance_1.distance.xxlarge);
/**
 * A simple modal dialog for requiring user interaction.
 */
var Modal = /** @class */ (function (_super) {
    __extends(Modal, _super);
    function Modal(props) {
        var _this = _super.call(this, props) || this;
        _this.closeBackground = function () {
            _this.closeFrom('background');
        };
        _this.closeButton = function () {
            _this.closeFrom('button');
        };
        _this.state = {
            closing: false,
        };
        return _this;
    }
    Modal.prototype.closeFrom = function (origin) {
        var _this = this;
        var _a = this.props, onClose = _a.onClose, onBeforeClose = _a.onBeforeClose;
        var closeEvent = { origin: origin };
        this.callOnBeforeCloseHandler(onBeforeClose, closeEvent).then(function (closePermitted) {
            if (!closePermitted) {
                return;
            }
            _this.setState({ closing: true }, function () { return setTimeout(function () {
                if (typeof onClose === 'function') {
                    onClose(closeEvent);
                }
                _this.setState({ closing: false });
            }, closeAnimationDuration); });
        });
    };
    Modal.prototype.callOnBeforeCloseHandler = function (onBeforeClose, closeEvent) {
        if (typeof onBeforeClose !== 'function') {
            return Promise.resolve(true);
        }
        var canClose = onBeforeClose(closeEvent);
        return Promise.resolve(canClose);
    };
    Modal.prototype.render = function () {
        var _a = this.props, _0 = _a.onBeforeClose, children = _a.children, onClose = _a.onClose, _b = _a.open, open = _b === void 0 ? false : _b, minHeight = _a.minHeight, rest = __rest(_a, ["onBeforeClose", "children", "onClose", "open", "minHeight"]);
        var canClose = typeof onClose === 'function';
        var closing = this.state.closing;
        return (open && (React.createElement(StyledBlocker, { closing: closing, onClose: this.closeBackground },
            React.createElement(StyledModal, __assign({ tabIndex: 0, closing: closing }, rest),
                React.createElement(ModalContent, { minHeight: minHeight },
                    children,
                    canClose && React.createElement(CloseButton_1.CloseButton, { onClick: this.closeButton }))))));
    };
    Modal.inner = {
        get StyledBlocker() { return StyledBlocker; },
        get StyledModal() { return StyledModal; },
        get ModalContent() { return ModalContent; },
        get CloseButton() { return CloseButton_1.CloseButton; }
    };
    return Modal;
}(React.PureComponent));
exports.Modal = Modal;
/**
 * Styles the body of a modal dialog.
 */
exports.ModalBody = Object.assign((function (props) { return (React.createElement(StyledModalBody, __assign({}, props))); }), { inner: {
        get StyledModalBody() { return StyledModalBody; }
    } });
exports.ModalBody.displayName = 'ModalBody';
/**
 * Styles the header of a modal dialog
 */
exports.ModalHeader = Object.assign((function (_a) {
    var title = _a.title, label = _a.label, rest = __rest(_a, ["title", "label"]);
    return (React.createElement(StyledModalHeader, __assign({}, rest),
        label && React.createElement(ModalLabel, null, label),
        title && React.createElement(Headline_1.Headline, { level: 2 }, title)));
}), { inner: {
        get StyledModalHeader() { return StyledModalHeader; },
        get ModalLabel() { return ModalLabel; },
        get Headline() { return Headline_1.Headline; }
    } });
exports.ModalHeader.displayName = 'ModalHeader';
/**
 * Styles the footer of a modal dialog.
 */
exports.ModalFooter = Object.assign((function (props) { return React.createElement(StyledModalFooter, __assign({}, props)); }), { inner: {
        get StyledModalFooter() { return StyledModalFooter; }
    } });
exports.ModalFooter.displayName = 'ModalFooter';
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9Nb2RhbC9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsNkJBQStCO0FBQy9CLDZDQUE0RDtBQUU1RCx3Q0FBdUM7QUFDdkMsdUNBQXdEO0FBQ3hELHNDQUFtRDtBQUNuRCw4Q0FBNkM7QUFDN0MsMkNBQTBDO0FBQzFDLCtDQUFnRDtBQWdEaEQsSUFBTSxxQkFBcUIsR0FBRyxHQUFHLENBQUM7QUFDbEMsSUFBTSxzQkFBc0IsR0FBRyxHQUFHLENBQUM7QUFDbkMsSUFBTSx3QkFBd0IsR0FBRyxHQUFHLENBQUM7QUFDckMsSUFBTSxXQUFXLEdBQUcsVUFBQyxXQUFtQixJQUFLLE9BQUEsa0JBQVMsMk1BQUMsMkRBR3pCLEVBQVcsMkVBTXhDLEtBTjZCLFdBQVcsR0FISSxDQVM1QyxDQUFDO0FBQ0YsSUFBTSxZQUFZLEdBQUcsY0FBTSxPQUFBLGtCQUFTLHFJQUFDLGtFQU9wQyxNQVAwQixDQU8xQixDQUFDO0FBQ0YsSUFBTSxrQkFBa0IsR0FBRyxjQUFNLE9BQUEsa0JBQVMscUlBQUMsa0VBTzFDLE1BUGdDLENBT2hDLENBQUM7QUFPRixJQUFNLFdBQVcsR0FBRyxnQkFBTSxDQUFDLEtBQUssQ0FBQyxDQUFtQixVQUFDLEVBQWtCO1FBQWhCLGdCQUFLLEVBQUUsb0JBQU87SUFBTyxPQUFBLFlBQUcsOGRBQUMsbUNBRW5FLEVBQUksU0FDWCxFQUE4QyxpQkFDdEMsRUFBZSxxRkFHRSxFQUFlLDBCQUM3QixFQUEyQyxVQUNwRCxFQUF3RCwyR0FHNUIsRUFBZ0IsNEdBTWpELEtBaEJVLGFBQUksRUFDWCxLQUFLLENBQUMsQ0FBQyxDQUFDLFlBQVUsS0FBTyxDQUFDLENBQUMsQ0FBQyxrQkFBa0IsRUFDdEMsbUJBQVEsQ0FBQyxNQUFNLEVBR0UsbUJBQVEsQ0FB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QUE7Q0FBQSxDQUFpQyxFQUFFLEVBQUUsS0FBSyxFQUFFO1FBQzNELElBQUksaUJBQWlCLEtBQUssT0FBTyxpQkFBNkMsQ0FBQyxDQUFDLENBQUM7UUFDakYsSUFBSSxVQUFVLEtBQUssT0FBTyxVQUErQixDQUFDLENBQUMsQ0FBQztRQUM1RCxJQUFJLFFBQVEsS0FBSyxPQUFPLG1CQUEyQixDQUFDLENBQUMsQ0FBQztLQUN6RCxFQUFFLENBQUMsQ0FBQztBQUNULG1CQUFXLENBQUMsV0FBVyxHQUFHLGFBQWEsQ0FBQztBQUN4Qzs7R0FFRztBQUNVLFFBQUEsV0FBVyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUUsQ0FBQyxVQUFBLEtBQUssSUFBSSxPQUFBLG9CQUFDLGlCQUFpQixlQUFLLEtBQUssRUFBRyxFQUEvQixDQUErQixDQUE4QixFQUFFLEVBQUUsS0FBSyxFQUFFO1FBQ3BILElBQUksaUJBQWlCLEtBQUssT0FBTyxpQkFBNkMsQ0FBQyxDQUFDLENBQUM7S0FDcEYsRUFBRSxDQUFDLENBQUM7QUFDVCxtQkFBVyxDQUFDLFdBQVcsR0FBRyxhQUFhLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkLCB7IGtleWZyYW1lcywgY3NzIH0gZnJvbSAnLi4vLi4vdXRpbHMvc3R5bGVkJztcbmltcG9ydCB7IFN0YW5kYXJkUHJvcHMgfSBmcm9tICcuLi8uLi9jb21tb24nO1xuaW1wb3J0IHsgSGVhZGxpbmUgfSBmcm9tICcuLi9IZWFkbGluZSc7XG5pbXBvcnQgeyB3aGl0ZSwgY3lhbiwgZGFyaywgZ3JleTYgfSBmcm9tICcuLi8uLi9jb2xvcnMnO1xuaW1wb3J0IHsgQmxvY2tlciwgQmxvY2tlclByb3BzIH0gZnJvbSAnLi4vQmxvY2tlcic7XG5pbXBvcnQgeyBDbG9zZUJ1dHRvbiB9IGZyb20gJy4uL0Nsb3NlQnV0dG9uJztcbmltcG9ydCB7IGRpc3RhbmNlIH0gZnJvbSAnLi4vLi4vZGlzdGFuY2UnO1xuaW1wb3J0IHsgZ2V0Rm9udFN0eWxlIH0gZnJvbSAnLi4vLi4vdGV4dFN0eWxlcyc7XG5leHBvcnQgdHlwZSBNb2RhbENsb3NlT3JpZ2luID0gJ2J1dHRvbicgfCAnYmFja2dyb3VuZCc7XG5leHBvcnQgaW50ZXJmYWNlIE1vZGFsQ2xvc2VFdmVudCB7XG4gICAgb3JpZ2luOiBNb2RhbENsb3NlT3JpZ2luO1xufVxudHlwZSBvbkJlZm9yZUNsb3NlSGFuZGxlciA9IChlOiBNb2RhbENsb3NlRXZlbnQpID0+IGJvb2xlYW4gfCBQcm9taXNlPGJvb2xlYW4+O1xuZXhwb3J0IGludGVyZmFjZSBNb2RhbFByb3BzIGV4dGVuZHMgU3RhbmRhcmRQcm9wcyB7XG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgY29udGVudCBvZiB0aGUgbW9kYWwgZGlhbG9nLlxuICAgICAqL1xuICAgIGNoaWxkcmVuPzogUmVhY3QuUmVhY3ROb2RlO1xuICAgIC8qKlxuICAgICAqIERldGVybWluZXMgaWYgdGhlIG1vZGFsIGlzIGN1cnJlbnRseSBvcGVuIG9yIG5vdC5cbiAgICAgKi9cbiAgICBvcGVuPzogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBFdmVudCB0cmlnZ2VyZWQgYmVmb3JlIHRoZSBtb2RhbCBpcyBhY3R1YWxseSBjbG9zZWQgYnkgdGhlIHVzZXIuXG4gICAgICovXG4gICAgb25CZWZvcmVDbG9zZT86IG9uQmVmb3JlQ2xvc2VIYW5kbGVyO1xuICAgIC8qKlxuICAgICAqIEV2ZW50IHRyaWdnZXJlZCB3aGVuIHRoZSBtb2RhbCBzaG91bGQgYmUgY2xvc2VkIGJ5IHRoZSB1c2VyLlxuICAgICAqL1xuICAgIG9uQ2xvc2U/KGU6IE1vZGFsQ2xvc2VFdmVudCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogV2hlbiBzcGVjaWZpZWQsIGRlZmF1bHQgbWF4LXdpZHRoIG9mIDUwMHB4IHdpbGwgYmUgb3ZlcnJpZGRlblxuICAgICAqIEBkZXByZWNhdGVkIFBsZWFzZSBkZWZpbmUgdGhyb3VnaCBzdHlsZWQgY29tcG9uZW50cyBhbmQgJHtNb2RhbC5pbm5lci5Nb2RhbENvbnRlbnR9XG4gICAgICovXG4gICAgd2lkdGg/OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogU3BlY2lmeSB0aGUgbWluaW1hbCBoZWlnaHQgZm9yIHRoZSBtb2RhbCBjb250YWluZXJcbiAgICAgKiBAZGVwcmVjYXRlZCBQbGVhc2UgZGVmaW5lIHRocm91Z2ggc3R5bGVkIGNvbXBvbmVudHMgYW5kICR7TW9kYWwuaW5uZXIuU3R5bGVkTW9kYWx9XG4gICAgICovXG4gICAgbWluSGVpZ2h0Pzogc3RyaW5nO1xufVxuZXhwb3J0IGludGVyZmFjZSBNb2RhbEhlYWRlclByb3BzIGV4dGVuZHMgU3RhbmRhcmRQcm9wcyB7XG4gICAgLyoqXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuICAgIGNoaWxkcmVuPzogdm9pZDtcbiAgICAvKipcbiAgICAgKiBUaGUgdGl0bGUgb2YgdGhlIG1vZGFsIGRpYWxvZy5cbiAgICAgKi9cbiAgICB0aXRsZT86IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBUaGUgbGFiZWwgKGFib3ZlIHRpdGxlKSBvZiB0aGUgZGlhbG9nLlxuICAgICAqL1xuICAgIGxhYmVsPzogc3RyaW5nO1xufVxuY29uc3Qgb3BlbkFuaW1hdGlvbkR1cmF0aW9uID0gMzAwO1xuY29uc3QgY2xvc2VBbmltYXRpb25EdXJhdGlvbiA9IDIwMDtcbmNvbnN0IGJsb2NrZXJBbmltYXRpb25EdXJhdGlvbiA9IDIwMDtcbmNvbnN0IEluQW5pbWF0aW9uID0gKHN0YXJ0T2Zmc2V0OiBudW1iZXIpID0+IGtleWZyYW1lcyBgXG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgJHtzdGFydE9mZnNldH1weCk7XG4gIH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMHB4KTtcbiAgfVxuYDtcbmNvbnN0IE91dEFuaW1hdGlvbiA9ICgpID0+IGtleWZyYW1lcyBgXG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbmA7XG5jb25zdCBCbG9ja2VySW5BbmltYXRpb24gPSAoKSA9PiBrZXlmcmFtZXMgYFxuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG5gO1xuZXhwb3J0IGludGVyZmFjZSBNb2RhbFByb3BzIHtcbiAgICB3aWR0aD86IHN0cmluZztcbn1cbmV4cG9ydCBpbnRlcmZhY2UgU3R5bGVkTW9kYWxQcm9wcyBleHRlbmRzIE1vZGFsUHJvcHMge1xuICAgIGNsb3Npbmc6IGJvb2xlYW47XG59XG5jb25zdCBTdHlsZWRNb2RhbCA9IHN0eWxlZCgnZGl2Jyk8U3R5bGVkTW9kYWxQcm9wcz4oKHsgd2lkdGgsIGNsb3NpbmcgfSkgPT4gY3NzIGBcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGNvbG9yOiAke2Rhcmt9O1xuICAgICR7d2lkdGggPyBgd2lkdGg6ICR7d2lkdGh9YCA6ICdtYXgtd2lkdGg6IDUwMHB4J307XG4gICAgbWFyZ2luOiAke2Rpc3RhbmNlLnhsYXJnZX0gYXV0bztcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbWluLWhlaWdodDogY2FsYygxMDAlIC0gKCR7ZGlzdGFuY2UueGxhcmdlfSAqIDIpKTtcbiAgICBhbmltYXRpb246ICR7Y2xvc2luZyA/IE91dEFuaW1hdGlvbigpIDogSW5BbmltYXRpb24oLTcyKX1cbiAgICAgICR7Y2xvc2luZyA/IGNsb3NlQW5pbWF0aW9uRHVyYXRpb24gOiBvcGVuQW5pbWF0aW9uRHVyYXRpb259bXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMjUsIDEpO1xuICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xuXG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJHt3aWR0aCB8fCAnNTAwcHgnfSkge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtaW4taGVpZ2h0OiAxMDAlO1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG4gICAgfVxuICBgKTtcbmV4cG9ydCBpbnRlcmZhY2UgU3R5bGVkQmxvY2tlclByb3BzIGV4dGVuZHMgQmxvY2tlclByb3BzIHtcbiAgICBjbG9zaW5nOiBib29sZWFuO1xufVxuY29uc3QgU3R5bGVkQmxvY2tlciA9IHN0eWxlZChCbG9ja2VyKTxTdHlsZWRCbG9ja2VyUHJvcHM+KCh7IGNsb3NpbmcgfSkgPT4gY3NzIGBcbiAgICBhbmltYXRpb246ICR7Y2xvc2luZyA/IE91dEFuaW1hdGlvbigpIDogQmxvY2tlckluQW5pbWF0aW9uKCl9ICR7YmxvY2tlckFuaW1hdGlvbkR1cmF0aW9ufW1zXG4gICAgICBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSk7XG4gICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XG4gIGApO1xuZXhwb3J0IGludGVyZmFjZSBNb2RhbENvbnRlbnRQcm9wcyB7XG4gICAgbWluSGVpZ2h0Pzogc3RyaW5nO1xufVxuY29uc3QgTW9kYWxDb250ZW50ID0gc3R5bGVkLmRpdjxNb2RhbENvbnRlbnRQcm9wcz4oKHsgbWluSGVpZ2h0IH0pID0+IGBcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGJhY2tncm91bmQ6ICR7d2hpdGV9O1xuICAgIGJveC1zaGFkb3c6IDAgMTJweCAyNHB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpO1xuICAgIGJvcmRlci10b3A6IDRweCBzb2xpZCAke2N5YW59O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgICR7bWluSGVpZ2h0ID8gYG1pbi1oZWlnaHQ6ICR7bWluSGVpZ2h0fWAgOiAnJ307XG4gIGApO1xuY29uc3QgTW9kYWxMYWJlbCA9IHN0eWxlZC5zcGFuIGBcbiAgJHtnZXRGb250U3R5bGUoeyBzaXplOiAnc21hbGwnIH0pfVxuXG4gIHBhZGRpbmctYm90dG9tOiAke2Rpc3RhbmNlLnNtYWxsfTtcbmA7XG5jb25zdCBTdHlsZWRNb2RhbEJvZHkgPSBzdHlsZWQuZGl2IGBcbiAgJHtnZXRGb250U3R5bGUoeyBzaXplOiAnbWVkaXVtJywgd2VpZ2h0OiAncmVndWxhcicgfSl9XG5cbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgcGFkZGluZzogMCAke2Rpc3RhbmNlLnh4bGFyZ2V9ICR7ZGlzdGFuY2UueHhsYXJnZX07XG4gIG1hcmdpbi1ib3R0b206IGF1dG87XG5gO1xuY29uc3QgU3R5bGVkTW9kYWxIZWFkZXIgPSBzdHlsZWQuZGl2IGBcbiAgbWFyZ2luLWJvdHRvbTogJHtkaXN0YW5jZS5tZWRpdW19O1xuICBwYWRkaW5nOiAke2Rpc3RhbmNlLnh4bGFyZ2V9ICR7ZGlzdGFuY2UueHhsYXJnZX0gMDtcbmA7XG5jb25zdCBTdHlsZWRNb2RhbEZvb3RlciA9IHN0eWxlZC5kaXYgYFxuICBiYWNrZ3JvdW5kOiAke2dyZXk2fTtcbiAgcGFkZGluZzogJHtkaXN0YW5jZS5sYXJnZX0gJHtkaXN0YW5jZS54eGxhcmdlfTtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG5gO1xuaW50ZXJmYWNlIE1vZGFsU3RhdGUge1xuICAgIGNsb3Npbmc6IGJvb2xlYW47XG59XG4vKipcbiAqIEEgc2ltcGxlIG1vZGFsIGRpYWxvZyBmb3IgcmVxdWlyaW5nIHVzZXIgaW50ZXJhY3Rpb24uXG4gKi9cbmV4cG9ydCBjbGFzcyBNb2RhbCBleHRlbmRzIFJlYWN0LlB1cmVDb21wb25lbnQ8TW9kYWxQcm9wcywgTW9kYWxTdGF0ZT4ge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzOiBNb2RhbFByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGNsb3Npbmc6IGZhbHNlLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBwcml2YXRlIGNsb3NlRnJvbShvcmlnaW46IE1vZGFsQ2xvc2VPcmlnaW4pIHtcbiAgICAgICAgY29uc3QgeyBvbkNsb3NlLCBvbkJlZm9yZUNsb3NlIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjb25zdCBjbG9zZUV2ZW50ID0geyBvcmlnaW4gfTtcbiAgICAgICAgdGhpcy5jYWxsT25CZWZvcmVDbG9zZUhhbmRsZXIob25CZWZvcmVDbG9zZSwgY2xvc2VFdmVudCkudGhlbihjbG9zZVBlcm1pdHRlZCA9PiB7XG4gICAgICAgICAgICBpZiAoIWNsb3NlUGVybWl0dGVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGNsb3Npbmc6IHRydWUgfSwgKCkgPT4gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBvbkNsb3NlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgIG9uQ2xvc2UoY2xvc2VFdmVudCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBjbG9zaW5nOiBmYWxzZSB9KTtcbiAgICAgICAgICAgIH0sIGNsb3NlQW5pbWF0aW9uRHVyYXRpb24pKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHByaXZhdGUgY2FsbE9uQmVmb3JlQ2xvc2VIYW5kbGVyKG9uQmVmb3JlQ2xvc2U6IG9uQmVmb3JlQ2xvc2VIYW5kbGVyIHwgdW5kZWZpbmVkLCBjbG9zZUV2ZW50OiBNb2RhbENsb3NlRXZlbnQpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBvbkJlZm9yZUNsb3NlICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRydWUpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNhbkNsb3NlID0gb25CZWZvcmVDbG9zZShjbG9zZUV2ZW50KTtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShjYW5DbG9zZSk7XG4gICAgfVxuICAgIHByaXZhdGUgY2xvc2VCYWNrZ3JvdW5kID0gKCkgPT4ge1xuICAgICAgICB0aGlzLmNsb3NlRnJvbSgnYmFja2dyb3VuZCcpO1xuICAgIH07XG4gICAgcHJpdmF0ZSBjbG9zZUJ1dHRvbiA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5jbG9zZUZyb20oJ2J1dHRvbicpO1xuICAgIH07XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IG9uQmVmb3JlQ2xvc2U6IF8wLCBjaGlsZHJlbiwgb25DbG9zZSwgb3BlbiA9IGZhbHNlLCBtaW5IZWlnaHQsIC4uLnJlc3QgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IGNhbkNsb3NlID0gdHlwZW9mIG9uQ2xvc2UgPT09ICdmdW5jdGlvbic7XG4gICAgICAgIGNvbnN0IHsgY2xvc2luZyB9ID0gdGhpcy5zdGF0ZTtcbiAgICAgICAgcmV0dXJuIChvcGVuICYmICg8U3R5bGVkQmxvY2tlciBjbG9zaW5nPXtjbG9zaW5nfSBvbkNsb3NlPXt0aGlzLmNsb3NlQmFja2dyb3VuZH0+XG4gICAgICAgICAgPFN0eWxlZE1vZGFsIHRhYkluZGV4PXswfSBjbG9zaW5nPXtjbG9zaW5nfSB7Li4ucmVzdH0+XG4gICAgICAgICAgICA8TW9kYWxDb250ZW50IG1pbkhlaWdodD17bWluSGVpZ2h0fT5cbiAgICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgICB7Y2FuQ2xvc2UgJiYgPENsb3NlQnV0dG9uIG9uQ2xpY2s9e3RoaXMuY2xvc2VCdXR0b259Lz59XG4gICAgICAgICAgICA8L01vZGFsQ29udGVudD5cbiAgICAgICAgICA8L1N0eWxlZE1vZGFsPlxuICAgICAgICA8L1N0eWxlZEJsb2NrZXI+KSk7XG4gICAgfVxuICAgIHN0YXRpYyBpbm5lciA9IHtcbiAgICAgICAgZ2V0IFN0eWxlZEJsb2NrZXIoKSB7IHJldHVybiBTdHlsZWRCbG9ja2VyIGFzIHR5cGVvZiBTdHlsZWRCbG9ja2VyOyB9LFxuICAgICAgICBnZXQgU3R5bGVkTW9kYWwoKSB7IHJldHVybiBTdHlsZWRNb2RhbCBhcyB0eXBlb2YgU3R5bGVkTW9kYWw7IH0sXG4gICAgICAgIGdldCBNb2RhbENvbnRlbnQoKSB7IHJldHVybiBNb2RhbENvbnRlbnQgYXMgdHlwZW9mIE1vZGFsQ29udGVudDsgfSxcbiAgICAgICAgZ2V0IENsb3NlQnV0dG9uKCkgeyByZXR1cm4gQ2xvc2VCdXR0b24gYXMgdHlwZW9mIENsb3NlQnV0dG9uOyB9XG4gICAgfTtcbn1cbi8qKlxuICogU3R5bGVzIHRoZSBib2R5IG9mIGEgbW9kYWwgZGlhbG9nLlxuICovXG5leHBvcnQgY29uc3QgTW9kYWxCb2R5ID0gT2JqZWN0LmFzc2lnbigoKHByb3BzID0+ICg8U3R5bGVkTW9kYWxCb2R5IHsuLi5wcm9wc30vPikpIGFzIFJlYWN0LkZDPFN0YW5kYXJkUHJvcHMgJiB7XG4gICAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbn0+KSwgeyBpbm5lcjoge1xuICAgICAgICBnZXQgU3R5bGVkTW9kYWxCb2R5KCkgeyByZXR1cm4gU3R5bGVkTW9kYWxCb2R5IGFzIHR5cGVvZiBTdHlsZWRNb2RhbEJvZHk7IH1cbiAgICB9IH0pO1xuTW9kYWxCb2R5LmRpc3BsYXlOYW1lID0gJ01vZGFsQm9keSc7XG4vKipcbiAqIFN0eWxlcyB0aGUgaGVhZGVyIG9mIGEgbW9kYWwgZGlhbG9nXG4gKi9cbmV4cG9ydCBjb25zdCBNb2RhbEhlYWRlciA9IE9iamVjdC5hc3NpZ24oKCgoeyB0aXRsZSwgbGFiZWwsIC4uLnJlc3QgfSkgPT4gKDxTdHlsZWRNb2RhbEhlYWRlciB7Li4ucmVzdH0+XG4gICAge2xhYmVsICYmIDxNb2RhbExhYmVsPntsYWJlbH08L01vZGFsTGFiZWw+fVxuICAgIHt0aXRsZSAmJiA8SGVhZGxpbmUgbGV2ZWw9ezJ9Pnt0aXRsZX08L0hlYWRsaW5lPn1cbiAgPC9TdHlsZWRNb2RhbEhlYWRlcj4pKSBhcyBSZWFjdC5TRkM8TW9kYWxIZWFkZXJQcm9wcz4pLCB7IGlubmVyOiB7XG4gICAgICAgIGdldCBTdHlsZWRNb2RhbEhlYWRlcigpIHsgcmV0dXJuIFN0eWxlZE1vZGFsSGVhZGVyIGFzIHR5cGVvZiBTdHlsZWRNb2RhbEhlYWRlcjsgfSxcbiAgICAgICAgZ2V0IE1vZGFsTGFiZWwoKSB7IHJldHVybiBNb2RhbExhYmVsIGFzIHR5cGVvZiBNb2RhbExhYmVsOyB9LFxuICAgICAgICBnZXQgSGVhZGxpbmUoKSB7IHJldHVybiBIZWFkbGluZSBhcyB0eXBlb2YgSGVhZGxpbmU7IH1cbiAgICB9IH0pO1xuTW9kYWxIZWFkZXIuZGlzcGxheU5hbWUgPSAnTW9kYWxIZWFkZXInO1xuLyoqXG4gKiBTdHlsZXMgdGhlIGZvb3RlciBvZiBhIG1vZGFsIGRpYWxvZy5cbiAqL1xuZXhwb3J0IGNvbnN0IE1vZGFsRm9vdGVyID0gT2JqZWN0LmFzc2lnbigoKHByb3BzID0+IDxTdHlsZWRNb2RhbEZvb3RlciB7Li4ucHJvcHN9Lz4pIGFzIFJlYWN0LlNGQzxTdGFuZGFyZFByb3BzPiksIHsgaW5uZXI6IHtcbiAgICAgICAgZ2V0IFN0eWxlZE1vZGFsRm9vdGVyKCkgeyByZXR1cm4gU3R5bGVkTW9kYWxGb290ZXIgYXMgdHlwZW9mIFN0eWxlZE1vZGFsRm9vdGVyOyB9XG4gICAgfSB9KTtcbk1vZGFsRm9vdGVyLmRpc3BsYXlOYW1lID0gJ01vZGFsRm9vdGVyJztcbiJdfQ==