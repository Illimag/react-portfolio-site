"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var styled_1 = require("../../utils/styled");
var input_1 = require("../../utils/input");
var InputIcon_1 = require("../InputIcon");
var colors_1 = require("../../colors");
var distance_1 = require("../../distance");
var themes_1 = require("../../themes");
var Icon_1 = require("../Icon");
var Responsive_1 = require("../Responsive");
var WindowPopup_1 = require("../WindowPopup");
var InteractiveList_1 = require("../InteractiveList");
var quarks_1 = require("../../quarks");
var textStyles_1 = require("../../textStyles");
var DropdownContainer = styled_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  position: relative;\n  outline: 0;\n"], ["\n  position: relative;\n  outline: 0;\n"])));
exports.DropdownSelect = styled_1.default.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  display: flex;\n"], ["\n  display: flex;\n"])));
var DropdownInputBox = styled_1.default(quarks_1.StyledInputBox)(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  border: 1px solid ", ";\n"], ["\n  border: 1px solid ", ";\n"])), styled_1.themed(function (_a) {
    var focused = _a.focused, ui4 = _a.theme.ui4;
    return (focused ? ui4 : colors_1.transparent);
}));
var DropdownOptionText = styled_1.default.div(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  ", "\n  padding: ", ";\n  margin: 0;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  color: ", ";\n  font-family: inherit;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  cursor: ", ";\n"], ["\n  ", "\n  padding: ", ";\n  margin: 0;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  color: ", ";\n  font-family: inherit;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  cursor: ", ";\n"])), textStyles_1.getFontStyle({ size: 'medium' }), function (props) { return !props.labelShown ? "" + distance_1.distance.medium : distance_1.distance.large + " " + distance_1.distance.medium + " " + distance_1.distance.small; }, styled_1.themed(function (_a) {
    var theme = _a.theme, disabled = _a.disabled;
    return (disabled ? theme.text3 : theme.text1);
}), function (props) { return (props.disabled ? 'not-allowed' : 'auto'); });
var SingleDropdownItem = styled_1.default.span(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  display: inline-block;\n  line-height: normal;\n  border: 0;\n  color: ", ";\n"], ["\n  display: inline-block;\n  line-height: normal;\n  border: 0;\n  color: ", ";\n"])), styled_1.themed(function (props) { return props.theme.text6; }));
var StyledStandardWrapper = styled_1.default('ul')(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n  list-style: none;\n  width: 100%;\n  position: absolute;\n  transform: translateY(", "%);\n  box-sizing: border-box;\n  box-shadow: none;\n  margin: 0;\n  padding: 0;\n  background: ", ";\n  border: 1px solid\n    ", ";\n  max-height: 50vh;\n  ", ";\n  top: ", "px;\n  overflow-y: auto;\n  z-index: 100;\n"], ["\n  list-style: none;\n  width: 100%;\n  position: absolute;\n  transform: translateY(", "%);\n  box-sizing: border-box;\n  box-shadow: none;\n  margin: 0;\n  padding: 0;\n  background: ", ";\n  border: 1px solid\n    ", ";\n  max-height: 50vh;\n  ",
    ";\n  top: ", "px;\n  overflow-y: auto;\n  z-index: 100;\n"])), function (props) { return (props.direction === InteractiveList_1.InteractiveListDirection.normal ? 0 : -100); }, styled_1.themed(function (props) { return props.theme.ui1; }), styled_1.themed(function (_a) {
    var border = _a.border, _b = _a.theme, ui0 = _b.ui0, ui4 = _b.ui4;
    return (border === 0 /* none */ ? ui0 : ui4);
}), function (props) { return props.direction === InteractiveList_1.InteractiveListDirection.normal
    ? 'border-top-color: transparent'
    : 'border-bottom-color: transparent'; }, function (props) { return (props.direction === InteractiveList_1.InteractiveListDirection.normal ? -1 : -53); });
var StyledLabel = styled_1.default.div(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n  padding-left: ", ";\n"], ["\n  padding-left: ", ";\n"])), distance_1.distance.medium);
var DropdownPopup = styled_1.default(WindowPopup_1.WindowPopup)(templateObject_8 || (templateObject_8 = __makeTemplateObject(["\n  border: 2em solid transparent;\n"], ["\n  border: 2em solid transparent;\n"])));
// tslint:disable-next-line
var NotOpenComponent = null;
var StandardWrapper = Object.assign((function (_a) {
    var open = _a.open, props = __rest(_a, ["open"]);
    return open ? React.createElement(StyledStandardWrapper, __assign({}, props)) : NotOpenComponent;
}), { inner: {
        get StyledStandardWrapper() { return StyledStandardWrapper; }
    } });
StandardWrapper.displayName = 'StandardWrapper';
var getMobileWrapper = function (label) { return function (_a) {
    var onClick = _a.onClick, children = _a.children, open = _a.open;
    return open ? (React.createElement(DropdownPopup, { onClose: onClick, label: label }, children)) : (NotOpenComponent);
}; };
function getChosen(selected, multiple) {
    if (multiple) {
        return Array.isArray(selected) ? selected : [selected];
    }
    else {
        return [Array.isArray(selected) ? selected[0] : selected];
    }
}
function getKeys(data, selected) {
    return selected.map(function (index) {
        var item = data[index];
        return typeof item === 'string' ? item : item.key;
    });
}
function getIndices(data, selected, multiple) {
    var chosen = getChosen(selected, multiple);
    var indices = [];
    for (var i = 0; i < data.length; i++) {
        var item = data[i];
        var key = typeof item === 'string' ? item : item.key;
        if (chosen.indexOf(key) !== -1) {
            indices.push(i);
        }
    }
    if (!multiple && indices.length > 1) {
        indices.splice(1);
    }
    return indices;
}
function getContent(item) {
    if (typeof item !== 'string') {
        return item.content || item.key;
    }
    return item;
}
function getSingleContent(item, theme) {
    var key = typeof item === 'string' ? item : item.key;
    return (React.createElement(SingleDropdownItem, { theme: theme, key: key }, getContent(item)));
}
var MultipleDropdownItem = styled_1.default(quarks_1.StyledTagItem)(templateObject_9 || (templateObject_9 = __makeTemplateObject(["\n  margin: 0 ", " 0 0;\n"], ["\n  margin: 0 ", " 0 0;\n"])), distance_1.distance.small);
function getMultipleContent(item, theme) {
    var key = typeof item === 'string' ? item : item.key;
    return (React.createElement(MultipleDropdownItem, { theme: theme, key: key }, getContent(item)));
}
var DropdownFieldInt = /** @class */ (function (_super) {
    __extends(DropdownFieldInt, _super);
    function DropdownFieldInt(props) {
        var _this = _super.call(this, props) || this;
        _this.show = function () { return new Promise(function (resolve) {
            _this.setState({ open: true }, resolve);
        }); };
        _this.hide = function () { return new Promise(function (resolve) {
            _this.setState({ open: false }, resolve);
        }); };
        _this.handleClickOutside = _this.hide;
        _this.toggle = function () { return __awaiter(_this, void 0, void 0, function () {
            var _a, onToggle, disabled, open_1;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = this.props, onToggle = _a.onToggle, disabled = _a.disabled;
                        if (!!disabled) return [3 /*break*/, 4];
                        open_1 = this.state.open;
                        if (typeof onToggle === 'function') {
                            onToggle({
                                state: open_1 ? 'close' : 'open',
                            });
                        }
                        if (!open_1) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.hide()];
                    case 1:
                        _b.sent();
                        return [3 /*break*/, 4];
                    case 2: return [4 /*yield*/, this.show()];
                    case 3:
                        _b.sent();
                        _b.label = 4;
                    case 4: return [2 /*return*/];
                }
            });
        }); };
        _this.control = function (e) {
            switch (e.keyCode) {
                case 13 /* enter */:
                case 32 /* space */:
                    _this.show();
                    break;
                case 27 /* escape */:
                    _this.hide();
                    break;
                case 38 /* up */:
                case 40 /* down */:
                    if (!_this.state.open) {
                        _this.show();
                    }
                    return;
                default:
                    return;
            }
            e.stopPropagation();
            e.preventDefault();
        };
        _this.handleMouseDown = function (e) {
            _this.toggle();
            e.preventDefault();
        };
        _this.handleChange = function (_a) {
            var value = _a.value;
            var controlled = _this.state.controlled;
            var _b = _this.props, onChange = _b.onChange, data = _b.data, multiple = _b.multiple, form = _b.form, _c = _b.name, name = _c === void 0 ? '' : _c;
            if (!multiple) {
                _this.hide();
            }
            if (!controlled) {
                if (form) {
                    form.change({
                        name: name,
                        value: value,
                    });
                }
                else {
                    _this.setState({
                        value: value,
                    });
                }
            }
            if (typeof onChange === 'function') {
                onChange({
                    value: value.length ? getKeys(data, value) : [],
                });
            }
        };
        _this.renderList = function (screenSize) {
            var _a = _this.props, _b = _a.data, data = _b === void 0 ? [] : _b, theme = _a.theme, disabled = _a.disabled, multiple = _a.multiple, direction = _a.direction, disabledItems = _a.disabledItems;
            var _c = _this.state, open = _c.open, value = _c.value;
            var mobile = screenSize === 'small';
            var wrapper = mobile ? getMobileWrapper(React.createElement(StyledLabel, null, _this.props.label)) : StandardWrapper;
            return (React.createElement(InteractiveList_1.InteractiveList, { theme: theme, data: data, multiple: multiple, open: open && !disabled, onChange: _this.handleChange, onClick: mobile ? _this.toggle : undefined, onBlur: mobile ? undefined : _this.hide, onKeyDown: mobile ? _this.control : undefined, indices: value, customWrapper: wrapper, onClickOutside: function () { }, direction: direction, autoPosition: undefined === direction, disabledItems: disabledItems, autoFocus: true }));
        };
        var data = props.data || [];
        var value = [];
        if (typeof props.value === 'string' || Array.isArray(props.value)) {
            value = props.value;
        }
        else if (typeof props.defaultValue === 'string' || Array.isArray(props.defaultValue)) {
            value = props.defaultValue;
        }
        _this.state = {
            value: getIndices(data, value, props.multiple),
            open: props.open === true,
            controlled: props.value !== undefined,
            error: props.error,
        };
        return _this;
    }
    DropdownFieldInt.prototype.componentDidMount = function () {
        var form = this.props.form;
        var controlled = this.state.controlled;
        if (!controlled && form) {
            form.subscribe(this);
        }
    };
    DropdownFieldInt.prototype.componentWillUnmount = function () {
        var form = this.props.form;
        var controlled = this.state.controlled;
        if (!controlled && form) {
            form.unsubscribe(this);
        }
    };
    DropdownFieldInt.prototype.UNSAFE_componentWillReceiveProps = function (_a) {
        var _b = _a.data, data = _b === void 0 ? [] : _b, _c = _a.value, value = _c === void 0 ? [] : _c, error = _a.error, multiple = _a.multiple;
        var controlled = this.state.controlled;
        if (controlled) {
            this.setState({
                value: getIndices(data, value, multiple),
            });
        }
        this.setState({ error: error });
    };
    DropdownFieldInt.prototype.render = function () {
        var _a = this.props, borderless = _a.borderless, _0 = _a.children, _1 = _a.value, _2 = _a.defaultValue, _3 = _a.onInput, _b = _a.data, data = _b === void 0 ? [] : _b, theme = _a.theme, classNameProp = _a.className, label = _a.label, placeholder = _a.placeholder, _c = _a.maxSelectedShown, maxSelectedShown = _c === void 0 ? 8 : _c, disabled = _a.disabled, multiple = _a.multiple, info = _a.info, onChange = _a.onChange, disabledItems = _a.disabledItems, other = __rest(_a, ["borderless", "children", "value", "defaultValue", "onInput", "data", "theme", "className", "label", "placeholder", "maxSelectedShown", "disabled", "multiple", "info", "onChange", "disabledItems"]);
        var _d = this.state, openState = _d.open, value = _d.value, error = _d.error;
        var open = openState && !disabled;
        var getContent = multiple ? getMultipleContent : getSingleContent;
        var hasValue = !!value.length;
        var border = quarks_1.getTextFieldBorderType(borderless, !!error, open);
        var items = value.map(function (i) { return data[i]; });
        var th = theme || themes_1.light;
        if (value.length > maxSelectedShown) {
            var rest = 1 + value.length - maxSelectedShown;
            items.splice(maxSelectedShown - 1, rest, "+ " + rest);
        }
        return (React.createElement(DropdownContainer, __assign({}, other),
            React.createElement(exports.DropdownSelect, { onMouseDown: this.handleMouseDown, tabIndex: 0, onKeyDown: this.control },
                React.createElement(DropdownInputBox, { disabled: disabled, hasValue: hasValue, border: border, focused: open, theme: theme },
                    React.createElement(quarks_1.StyledInputRow, { label: label, placeholder: placeholder, error: !!error, focused: open, hasValue: hasValue },
                        React.createElement(DropdownOptionText, { labelShown: label !== undefined, disabled: disabled }, hasValue || label ? items.map(function (item) { return getContent(item, theme); }) : placeholder)),
                    React.createElement(InputIcon_1.InputIcon, { disabled: disabled, theme: theme, error: error, hasValue: hasValue }),
                    React.createElement(quarks_1.StyledIconContainer, null,
                        React.createElement(Icon_1.Icon, { name: open ? 'KeyboardArrowUp' : 'KeyboardArrowDown', color: disabled ? th.ui4 : th.ui5, size: "22px" })))),
            React.createElement(Responsive_1.Responsive, { render: this.renderList }),
            input_1.showInputInfo(error, info)));
    };
    DropdownFieldInt.inner = {
        get StyledLabel() { return StyledLabel; },
        get InteractiveList() { return InteractiveList_1.InteractiveList; },
        get DropdownContainer() { return DropdownContainer; },
        get DropdownSelect() { return exports.DropdownSelect; },
        get DropdownInputBox() { return DropdownInputBox; },
        get StyledInputRow() { return quarks_1.StyledInputRow; },
        get DropdownOptionText() { return DropdownOptionText; },
        get InputIcon() { return InputIcon_1.InputIcon; },
        get StyledIconContainer() { return quarks_1.StyledIconContainer; },
        get Icon() { return Icon_1.Icon; },
        get Responsive() { return Responsive_1.Responsive; }
    };
    return DropdownFieldInt;
}(React.Component));
exports.DropdownFieldInt = DropdownFieldInt;
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9;
//# sourceMappingURL=data:application/json;base64,