"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var styled_1 = require("../../utils/styled");
var InteractiveList_1 = require("../InteractiveList");
var Icon_1 = require("../Icon");
var colors_1 = require("../../colors");
var distance_1 = require("../../distance");
var react_onclickoutside_1 = require("react-onclickoutside");
var RootWrapper = styled_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  color: ", ";\n  &:hover {\n    color: ", ";\n  }\n"], ["\n  color: ", ";\n  &:hover {\n    color: ", ";\n  }\n"])), colors_1.cyan, colors_1.skyBlue);
var ButtonWrapper = styled_1.default.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  padding-left: ", ";\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n"], ["\n  padding-left: ", ";\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n"])), distance_1.distance.xsmall);
var StyledCustomWrapper = styled_1.default.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  position: absolute;\n  border: solid 1px #dfe3e6;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1);\n  position: absolute;\n  z-index: 2;\n  top: ", "px;\n  transform: translateY(", "%);\n  background: ", ";\n  border: 1px solid #dfe3e6;\n  max-height: 50vh;\n  overflow-y: auto;\n"], ["\n  position: absolute;\n  border: solid 1px #dfe3e6;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1);\n  position: absolute;\n  z-index: 2;\n  top: ", "px;\n  transform: translateY(", "%);\n  background: ", ";\n  border: 1px solid #dfe3e6;\n  max-height: 50vh;\n  overflow-y: auto;\n"])), function (props) { return (props.direction === InteractiveList_1.InteractiveListDirection.normal ? 8 : -30); }, function (props) { return (props.direction === InteractiveList_1.InteractiveListDirection.normal ? 0 : -100); }, colors_1.white);
var CustomWrapper = Object.assign((function (props) {
    return React.createElement(StyledCustomWrapper, __assign({}, props));
}), { inner: {
        get StyledCustomWrapper() { return StyledCustomWrapper; }
    } });
function renderValue(data, value) {
    for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {
        var item = data_1[_i];
        if (typeof item !== 'string' && item.key === value) {
            return item.content || value;
        }
    }
    return value;
}
var SelectButtonInt = /** @class */ (function (_super) {
    __extends(SelectButtonInt, _super);
    function SelectButtonInt(props) {
        var _this = _super.call(this, props) || this;
        _this.handleMouseDown = function (e) {
            var open = _this.state.open;
            _this.setState({
                open: !open,
            });
            e.preventDefault();
        };
        _this.handleChange = function (e) {
            var _a = _this.props, onChange = _a.onChange, data = _a.data;
            var controlled = _this.state.controlled;
            var index = e.value.length ? e.value[0] : -1;
            var item = data[index];
            var value = item && (typeof item === 'string' ? item : item.key);
            if (!value) {
                return;
            }
            if (!controlled) {
                _this.setState({
                    open: false,
                    value: value,
                });
            }
            else {
                _this.setState({
                    open: false,
                });
            }
            if (typeof onChange === 'function') {
                onChange({
                    index: index,
                    value: value,
                });
            }
        };
        _this.handleBlur = function () {
            _this.setState({
                open: false,
            });
        };
        _this.handleClickOutside = _this.handleBlur;
        var controlled = props.value !== undefined;
        _this.state = {
            open: false,
            value: (controlled ? props.value : props.defaultValue) || '',
            controlled: controlled,
        };
        return _this;
    }
    SelectButtonInt.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {
        var controlled = this.state.controlled;
        if (controlled) {
            this.setState({
                value: nextProps.value || '',
            });
        }
    };
    SelectButtonInt.prototype.render = function () {
        var _a = this.props, _b = _a.data, data = _b === void 0 ? [] : _b, _0 = _a.onChange, _1 = _a.value, props = __rest(_a, ["data", "onChange", "value"]);
        var _c = this.state, open = _c.open, value = _c.value;
        return (React.createElement(RootWrapper, __assign({}, props),
            React.createElement(ButtonWrapper, { onMouseDown: this.handleMouseDown },
                renderValue(data, value),
                React.createElement(Icon_1.Icon, { name: "ArrowDropDown", size: 1.5 })),
            React.createElement(InteractiveList_1.InteractiveList, { data: data, open: open, onBlur: this.handleBlur, onChange: this.handleChange, customWrapper: CustomWrapper, value: value, onClickOutside: function () { }, autoPosition: true, autoFocus: true, showTick: true })));
    };
    SelectButtonInt.inner = {
        get RootWrapper() { return RootWrapper; },
        get ButtonWrapper() { return ButtonWrapper; },
        get Icon() { return Icon_1.Icon; },
        get InteractiveList() { return InteractiveList_1.InteractiveList; }
    };
    return SelectButtonInt;
}(React.PureComponent));
/**
 * Represents a select button, which is a kind of dropdown button.
 */
exports.SelectButton = react_onclickoutside_1.default(SelectButtonInt);
var templateObject_1, templateObject_2, templateObject_3;
//# sourceMappingURL=data:application/json;base64,