"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var styled_1 = require("../../utils/styled");
var labels_1 = require("../../utils/labels");
var ItemControlsView_part_1 = require("./ItemControlsView.part");
var PageControls_part_1 = require("./PageControls.part");
labels_1.setLabels({
    itemsPerPageLabel: 'Items per page:',
});
function defaultItemsInfo(start, end, total) {
    return start + " - " + end + " of " + total;
}
function defaultPagesInfo(start, end) {
    return start + " of " + end + " pages";
}
function getPages(itemsPerPage, total) {
    var l = Math.ceil(total / itemsPerPage);
    var pages = [];
    for (var i = 1; i <= l; i++) {
        pages.push(i.toString());
    }
    return pages;
}
var ControlsContainer = styled_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: flex;\n  justify-content: space-between;\n  margin-left: auto;\n  align-items: center;\n  height: 40px;\n"], ["\n  display: flex;\n  justify-content: space-between;\n  margin-left: auto;\n  align-items: center;\n  height: 40px;\n"])));
var PaginationBar = /** @class */ (function (_super) {
    __extends(PaginationBar, _super);
    function PaginationBar() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.sizeChanged = function (e) {
            var _a = _this.props, onSizeChanged = _a.onSizeChanged, availableSizes = _a.availableSizes;
            if (Array.isArray(availableSizes) && typeof onSizeChanged === 'function') {
                onSizeChanged({
                    size: availableSizes[e.index],
                });
            }
        };
        _this.changeToPrevious = function () {
            var selectedPage = _this.props.selectedPage;
            _this.changeTo(selectedPage - 1);
        };
        _this.changeToNext = function () {
            var selectedPage = _this.props.selectedPage;
            _this.changeTo(selectedPage + 1);
        };
        _this.changeToSelect = function (_a) {
            var index = _a.index;
            _this.changeTo(index);
        };
        return _this;
    }
    PaginationBar.prototype.changeTo = function (page) {
        var onPageChanged = this.props.onPageChanged;
        if (page < 0) {
            page = 0;
        }
        if (typeof onPageChanged === 'function') {
            onPageChanged({
                page: page,
            });
        }
    };
    PaginationBar.prototype.render = function () {
        var _a = this.props, availableSizes = _a.availableSizes, size = _a.size, selectedPage = _a.selectedPage, _b = _a.pagesInfo, pagesInfo = _b === void 0 ? defaultPagesInfo : _b, _c = _a.itemsInfo, itemsInfo = _c === void 0 ? defaultItemsInfo : _c, items = _a.items, onSizeChanged = _a.onSizeChanged, onPageChanged = _a.onPageChanged, props = __rest(_a, ["availableSizes", "size", "selectedPage", "pagesInfo", "itemsInfo", "items", "onSizeChanged", "onPageChanged"]);
        var pages = getPages(size, items);
        var currentItem = selectedPage * size;
        var nextItem = currentItem + size;
        return (React.createElement(ControlsContainer, null,
            Array.isArray(availableSizes) && availableSizes.length > 0 && (React.createElement(ItemControlsView_part_1.ItemControls, { label: labels_1.getPropLabel(props, 'itemsPerPageLabel'), data: availableSizes.map(function (size) { return size.toString(); }), value: "" + size, onChange: this.sizeChanged }, itemsInfo(currentItem, Math.min(nextItem, items), items))),
            React.createElement(PageControls_part_1.PageControls, { current: selectedPage, total: pages.length, changeToPrevious: this.changeToPrevious, changeToNext: this.changeToNext, changeToSelect: this.changeToSelect, pages: pages }, pagesInfo(selectedPage + 1, Math.max(pages.length, 1)))));
    };
    PaginationBar.inner = {
        get ControlsContainer() { return ControlsContainer; },
        get ItemControls() { return ItemControlsView_part_1.ItemControls; },
        get PageControls() { return PageControls_part_1.PageControls; }
    };
    return PaginationBar;
}(React.Component));
exports.PaginationBar = PaginationBar;
var templateObject_1;
//# sourceMappingURL=data:application/json;base64,