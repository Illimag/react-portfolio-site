"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var icons = require("./icons");
var styled_1 = require("../../utils/styled");
var registerIcons_1 = require("./registerIcons");
__export(require("./icon.types"));
var StyledIcon = styled_1.default.i(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: inline-block;\n\n  > svg {\n    float: left;\n  }\n"], ["\n  display: inline-block;\n\n  > svg {\n    float: left;\n  }\n"])));
/**
 * The icon component displays an icon from the given set of icons.
 */
exports.Icon = Object.assign((function (_a) {
    var _b = _a.size, size = _b === void 0 ? 1 : _b, name = _a.name, stroke = _a.stroke, color = _a.color, rest = __rest(_a, ["size", "name", "stroke", "color"]);
    var dim = typeof size === 'number' ? size + "em" : size;
    var SvgIcon = icons[name] || registerIcons_1.getIcon(name);
    if (SvgIcon) {
        return (React.createElement(StyledIcon, __assign({}, rest),
            React.createElement(SvgIcon, { width: dim, height: dim, style: { fill: color || 'currentColor', stroke: stroke } })));
    }
    else if (process.env.NODE_ENV === 'development') {
        console.error("An icon with the name " + name + " could not be found.");
    }
    // tslint:disable-next-line
    return null;
}), { inner: {
        get StyledIcon() { return StyledIcon; }
    } });
exports.Icon.displayName = 'Icon';
var registerIcons_2 = require("./registerIcons");
exports.registerIcons = registerIcons_2.registerIcons;
var templateObject_1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9JY29uL2luZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDZCQUErQjtBQUMvQiwrQkFBaUM7QUFDakMsNkNBQXdDO0FBR3hDLGlEQUF5RDtBQUN6RCxrQ0FBNkI7QUFpQzdCLElBQU0sVUFBVSxHQUFHLGdCQUFNLENBQUMsQ0FBQyxxSUFBQyxrRUFNM0IsSUFBQSxDQUFDO0FBQ0Y7O0dBRUc7QUFDVSxRQUFBLElBQUksR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFFLENBQUMsVUFBQyxFQUEwQztJQUF4QyxJQUFBLFlBQVEsRUFBUiw2QkFBUSxFQUFFLGNBQUksRUFBRSxrQkFBTSxFQUFFLGdCQUFLLEVBQUUsc0RBQU87SUFDekUsSUFBTSxHQUFHLEdBQUcsT0FBTyxJQUFJLEtBQUssUUFBUSxDQUFDLENBQUMsQ0FBSSxJQUFJLE9BQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQzFELElBQU0sT0FBTyxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSx1QkFBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzdDLElBQUksT0FBTyxFQUFFO1FBQ1QsT0FBTyxDQUFDLG9CQUFDLFVBQVUsZUFBSyxJQUFJO1lBQzVCLG9CQUFDLE9BQU8sSUFBQyxLQUFLLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLEtBQUssSUFBSSxjQUFjLEVBQUUsTUFBTSxRQUFBLEVBQUUsR0FBRyxDQUMxRSxDQUFDLENBQUM7S0FDaEI7U0FDSSxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxLQUFLLGFBQWEsRUFBRTtRQUM3QyxPQUFPLENBQUMsS0FBSyxDQUFDLDJCQUF5QixJQUFJLHlCQUFzQixDQUFDLENBQUM7S0FDdEU7SUFDRCwyQkFBMkI7SUFDM0IsT0FBTyxJQUFJLENBQUM7QUFDaEIsQ0FBQyxDQUF5QixFQUFFLEVBQUUsS0FBSyxFQUFFO1FBQzdCLElBQUksVUFBVSxLQUFLLE9BQU8sVUFBK0IsQ0FBQyxDQUFDLENBQUM7S0FDL0QsRUFBRSxDQUFDLENBQUM7QUFDVCxZQUFJLENBQUMsV0FBVyxHQUFHLE1BQU0sQ0FBQztBQUMxQixpREFBZ0Q7QUFBdkMsd0NBQUEsYUFBYSxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICogYXMgaWNvbnMgZnJvbSAnLi9pY29ucyc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlZCc7XG5pbXBvcnQgeyBTdGFuZGFyZFByb3BzIH0gZnJvbSAnLi4vLi4vY29tbW9uJztcbmltcG9ydCB7IEljb25OYW1lLCBJY29uTmFtZXMgfSBmcm9tICcuL2ljb24udHlwZXMnO1xuaW1wb3J0IHsgZ2V0SWNvbiwgcmVnaXN0ZXJJY29ucyB9IGZyb20gJy4vcmVnaXN0ZXJJY29ucyc7XG5leHBvcnQgKiBmcm9tICcuL2ljb24udHlwZXMnO1xuZXhwb3J0IGludGVyZmFjZSBJY29uUHJvcHMgZXh0ZW5kcyBTdGFuZGFyZFByb3BzIHtcbiAgICAvKipcbiAgICAgKiBUaGUgbmFtZSBvZiB0aGUgaWNvbiB0byBkaXNwbGF5LlxuICAgICAqL1xuICAgIG5hbWU6IEljb25OYW1lO1xuICAgIC8qKlxuICAgICAqIFRoZSBDU1MgY29sb3Igb2YgdGhlIGljb24sIG90aGVyd2lzZSB1c2VzIHRoZSB0aGVtZSdzIGZvcmVncm91bmQgY29sb3IuXG4gICAgICogQGRlZmF1bHQgY3VycmVudENvbG9yXG4gICAgICovXG4gICAgY29sb3I/OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogVGhlIENTUyBzdHJva2UgY29sb3Igb2YgdGhlIGljb24sIG90aGVyd2lzZSBpcyBub3QgZGVmaW5lZC5cbiAgICAgKi9cbiAgICBzdHJva2U/OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogQGlnbm9yZVxuICAgICAqL1xuICAgIGNoaWxkcmVuPzogdm9pZDtcbiAgICAvKipcbiAgICAgKiBUaGUgcmVsYXRpdmUgKG51bWJlcikgb3IgYWJzb2x1dGUgc2l6ZSBvZiB0aGUgaWNvbiwgd2hlcmUgMVxuICAgICAqIGlzIHRoZSBkZWZhdWx0IHNpemUuXG4gICAgICovXG4gICAgc2l6ZT86IG51bWJlciB8IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBFdmVudCBlbWl0dGVkIHdoZW4gdGhlIGljb24gaXMgY2xpY2tlZC5cbiAgICAgKi9cbiAgICBvbkNsaWNrPygpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEV2ZW50IGVtaXR0ZWQgd2hlbiB0aGUgbW91c2UgZG93biBvbiB0aGUgaWNvbi5cbiAgICAgKi9cbiAgICBvbk1vdXNlRG93bj8oZTogUmVhY3QuTW91c2VFdmVudCk6IHZvaWQ7XG59XG5jb25zdCBTdHlsZWRJY29uID0gc3R5bGVkLmkgYFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cbiAgPiBzdmcge1xuICAgIGZsb2F0OiBsZWZ0O1xuICB9XG5gO1xuLyoqXG4gKiBUaGUgaWNvbiBjb21wb25lbnQgZGlzcGxheXMgYW4gaWNvbiBmcm9tIHRoZSBnaXZlbiBzZXQgb2YgaWNvbnMuXG4gKi9cbmV4cG9ydCBjb25zdCBJY29uID0gT2JqZWN0LmFzc2lnbigoKCh7IHNpemUgPSAxLCBuYW1lLCBzdHJva2UsIGNvbG9yLCAuLi5yZXN0IH0pID0+IHtcbiAgICBjb25zdCBkaW0gPSB0eXBlb2Ygc2l6ZSA9PT0gJ251bWJlcicgPyBgJHtzaXplfWVtYCA6IHNpemU7XG4gICAgY29uc3QgU3ZnSWNvbiA9IGljb25zW25hbWVdIHx8IGdldEljb24obmFtZSk7XG4gICAgaWYgKFN2Z0ljb24pIHtcbiAgICAgICAgcmV0dXJuICg8U3R5bGVkSWNvbiB7Li4ucmVzdH0+XG4gICAgICAgIDxTdmdJY29uIHdpZHRoPXtkaW19IGhlaWdodD17ZGltfSBzdHlsZT17eyBmaWxsOiBjb2xvciB8fCAnY3VycmVudENvbG9yJywgc3Ryb2tlIH19Lz5cbiAgICAgIDwvU3R5bGVkSWNvbj4pO1xuICAgIH1cbiAgICBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jykge1xuICAgICAgICBjb25zb2xlLmVycm9yKGBBbiBpY29uIHdpdGggdGhlIG5hbWUgJHtuYW1lfSBjb3VsZCBub3QgYmUgZm91bmQuYCk7XG4gICAgfVxuICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZVxuICAgIHJldHVybiBudWxsO1xufSkgYXMgUmVhY3QuRkM8SWNvblByb3BzPiksIHsgaW5uZXI6IHtcbiAgICAgICAgZ2V0IFN0eWxlZEljb24oKSB7IHJldHVybiBTdHlsZWRJY29uIGFzIHR5cGVvZiBTdHlsZWRJY29uOyB9XG4gICAgfSB9KTtcbkljb24uZGlzcGxheU5hbWUgPSAnSWNvbic7XG5leHBvcnQgeyByZWdpc3Rlckljb25zIH0gZnJvbSAnLi9yZWdpc3Rlckljb25zJztcbiJdfQ==