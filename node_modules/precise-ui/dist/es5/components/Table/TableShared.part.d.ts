import * as React from 'react';
import { TableBodyRenderEvent, TableColumns, TableCellRenderEvent, TableCellEvent, TableProps } from './Table.types.part';
export declare const StyledTableHead: import("styled-components").StyledComponent<"thead", import("../..").PreciseTheme, {}, never>;
export declare const StyledTableFoot: import("styled-components").StyledComponent<"tfoot", import("../..").PreciseTheme, {}, never>;
export declare const StyledTableHeaderRow: import("styled-components").StyledComponent<"tr", import("../..").PreciseTheme, {}, never>;
export declare const StyledTableRow: import("styled-components").StyledComponent<"tr", import("../..").PreciseTheme, {}, never>;
export interface TableHeaderProps {
    sortable?: boolean;
    width?: string;
}
export declare const StyledTableHeader: import("styled-components").StyledComponent<"th", import("../..").PreciseTheme, TableHeaderProps, never>;
export declare const getDefaultHeaderCellRenderer: (sort: (key: string, order: "ascending" | "descending") => void) => <T extends {}>({ value, sorting, column, key, }: TableCellRenderEvent<T>) => React.ReactNode;
export declare function defaultCellRenderer<T>({ value }: TableCellRenderEvent<T>): React.ReactNode;
export declare function defaultBodyRenderer(e: TableBodyRenderEvent): JSX.Element;
export declare function getColumns<T>(data: Array<T>, columns?: TableColumns): TableColumns;
export declare function handleDataClickedEvent<T>(tableCellEvent: TableCellEvent<T>, handler?: TableProps<T>['onDataClick']): <E extends HTMLElement = HTMLElement>(e: React.MouseEvent<E, MouseEvent>) => void;
