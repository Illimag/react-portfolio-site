"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var styled_1 = require("../../utils/styled");
var textStyles_1 = require("../../textStyles");
var IncreaseDecrease_1 = require("../IncreaseDecrease");
var distance_1 = require("../../distance");
var StyledIncreaseDecrease = styled_1.default(IncreaseDecrease_1.IncreaseDecrease)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  margin-left: ", ";\n"], ["\n  margin-left: ", ";\n"])), distance_1.distance.xsmall);
var HeaderLabel = styled_1.default.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  font-size: 0;\n  white-space: nowrap;\n\n  > span {\n    ", "\n\n    display: inline-block;\n    vertical-align: middle;\n  }\n"], ["\n  font-size: 0;\n  white-space: nowrap;\n\n  > span {\n    ", "\n\n    display: inline-block;\n    vertical-align: middle;\n  }\n"])), textStyles_1.getFontStyle({ size: 'small' }));
exports.StyledTableHead = styled_1.default.thead(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  ", "\n  \n  color: ", ";\n"], ["\n  ", "\n  \n  color: ", ";\n"])), textStyles_1.getFontStyle({ weight: 'bold' }), styled_1.themed(function (_a) {
    var theme = _a.theme;
    return theme.text6 || theme.text1;
}));
exports.StyledTableFoot = styled_1.default.tfoot(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  ", "\n"], ["\n  ", "\n"])), textStyles_1.getFontStyle({ size: 'xSmall' }));
exports.StyledTableHeaderRow = styled_1.default.tr(templateObject_5 || (templateObject_5 = __makeTemplateObject([""], [""])));
exports.StyledTableRow = styled_1.default.tr(styled_1.themed(function (_a) {
    var _b = _a.theme, ui3 = _b.ui3, ui4 = _b.ui4, text1 = _b.text1;
    return styled_1.css(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n      border-bottom: 1px solid ", ";\n      color: ", ";\n\n      &:hover {\n        background: ", ";\n      }\n    "], ["\n      border-bottom: 1px solid ", ";\n      color: ", ";\n\n      &:hover {\n        background: ", ";\n      }\n    "])), ui4, text1, ui3);
}));
exports.StyledTableHeader = styled_1.default('th')(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n  text-align: left;\n  border-bottom: 1px solid ", ";\n  cursor: ", ";\n  box-sizing: border-box;\n  ", ";\n"], ["\n  text-align: left;\n  border-bottom: 1px solid ", ";\n  cursor: ", ";\n  box-sizing: border-box;\n  ", ";\n"])), styled_1.themed(function (_a) {
    var theme = _a.theme;
    return theme.ui5;
}), function (_a) {
    var sortable = _a.sortable;
    return (sortable ? 'pointer' : 'default');
}, function (_a) {
    var width = _a.width;
    return (width && "width: " + width) || '';
});
exports.getDefaultHeaderCellRenderer = function (sort) { return function (_a) {
    var value = _a.value, sorting = _a.sorting, column = _a.column, key = _a.key;
    if (column !== -1) {
        return (React.createElement(HeaderLabel, null,
            React.createElement("span", null, value),
            sorting !== false && (React.createElement(StyledIncreaseDecrease, { value: sorting ? (sorting === 'descending' ? 'decrease' : 'increase') : undefined, onIncrease: function (e) {
                    e.stopPropagation();
                    sort(key, 'ascending');
                }, onDecrease: function (e) {
                    e.stopPropagation();
                    sort(key, 'descending');
                } }))));
    }
    return value;
}; };
function defaultCellRenderer(_a) {
    var value = _a.value;
    switch (typeof value) {
        case 'boolean':
        case 'number':
        case 'string':
            return value.toString();
        case 'object':
            if (value) {
                return value.toString();
            }
            break;
    }
    return '';
}
exports.defaultCellRenderer = defaultCellRenderer;
function defaultBodyRenderer(e) {
    var TableBody = e.table;
    return React.createElement(TableBody, __assign({}, e.props), e.rows);
}
exports.defaultBodyRenderer = defaultBodyRenderer;
function getColumns(data, columns) {
    return (columns ||
        Object.keys(data[0] || {}).reduce(function (columns, key) {
            columns[key] = {
                header: key,
                sortable: true,
            };
            return columns;
        }, {}));
}
exports.getColumns = getColumns;
function handleDataClickedEvent(tableCellEvent, handler) {
    return function (e) {
        e.preventDefault();
        var row = tableCellEvent.row, column = tableCellEvent.column, key = tableCellEvent.key, data = tableCellEvent.data;
        if (typeof handler === 'function') {
            handler(__assign({}, tableCellEvent, { value: data && (column === -1 ? row + 1 : data[key]) }));
        }
    };
}
exports.handleDataClickedEvent = handleDataClickedEvent;
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7;
//# sourceMappingURL=data:application/json;base64,