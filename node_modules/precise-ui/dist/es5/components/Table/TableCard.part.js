"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var styled_1 = require("../../utils/styled");
var List_1 = require("../List");
var ListItem_1 = require("../ListItem");
var TableShared_part_1 = require("./TableShared.part");
var distance_1 = require("../../distance");
var textStyles_1 = require("../../textStyles");
var Container = styled_1.default.div(styled_1.themed(function (_a) {
    var _b = _a.theme, ui4 = _b.ui4, text1 = _b.text1;
    return styled_1.css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n      ", "\n\n      position: relative;\n      border: 1px solid ", ";\n      color: ", ";\n    "], ["\n      ", "\n\n      position: relative;\n      border: 1px solid ", ";\n      color: ", ";\n    "])), textStyles_1.getFontStyle({ size: 'medium' }), ui4, text1);
}));
var ContentContainer = styled_1.default.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  padding: ", " ", " ", ";\n"], ["\n  padding: ", " ", " ", ";\n"])), distance_1.distance.medium, distance_1.distance.medium, distance_1.distance.large);
var PropContainer = styled_1.default.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  margin-bottom: ", ";\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n"], ["\n  margin-bottom: ", ";\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n"])), distance_1.distance.medium);
PropContainer.displayName = 'PropContainer';
var PropName = styled_1.default.div(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  ", "\n"], ["\n  ", "\n"])), textStyles_1.getFontStyle({ size: 'xSmall' }));
var PropValue = styled_1.default.div(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  ", "\n"], ["\n  ", "\n"])), textStyles_1.getFontStyle({ weight: 'medium' }));
var PlaceholderContainer = styled_1.default.div(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n  text-align: center;\n"], ["\n  text-align: center;\n"])));
var StyledListItem = styled_1.default(ListItem_1.ListItem)(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n  padding: 0;\n  margin-bottom: ", ";\n  border: none;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n"], ["\n  padding: 0;\n  margin-bottom: ", ";\n  border: none;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n"])), distance_1.distance.xlarge);
function defaultBodyRenderer(e) {
    var CardBody = e.table;
    return React.createElement(CardBody, null, e.rows);
}
exports.defaultBodyRenderer = defaultBodyRenderer;
var TableCardHost = Object.assign((function (props) { return React.createElement(List_1.List, __assign({}, props)); }), { inner: {
        get List() { return List_1.List; }
    } });
var TableCard = /** @class */ (function (_super) {
    __extends(TableCard, _super);
    function TableCard(props) {
        var _this = _super.call(this, props) || this;
        _this.renderItem = function (_a) {
            var item = _a.item, index = _a.index, keys = _a.keys;
            var theme = _this.props.theme;
            return (React.createElement(StyledListItem, { theme: theme, key: index },
                React.createElement(Container, { theme: theme },
                    React.createElement(ContentContainer, { theme: theme }, _this.renderItemProps(item, index, keys)))));
        };
        return _this;
    }
    TableCard.prototype.getHeader = function (key) {
        var columns = this.props.columns;
        if (columns) {
            var column = columns[key];
            return typeof column === 'string' ? column : column.header;
        }
        return key;
    };
    TableCard.prototype.renderItemProps = function (item, rowIndex, keys) {
        var _this = this;
        var _a = this.props, columns = _a.columns, _b = _a.cellRenderer, cellRenderer = _b === void 0 ? TableShared_part_1.defaultCellRenderer : _b, data = _a.data, onDataClick = _a.onDataClick;
        return keys
            .map(function (key, colIndex) {
            var column = columns ? columns[key] : key;
            if (typeof column === 'string' || !column.hidden) {
                var propKey = _this.getHeader(key);
                var value = cellRenderer({
                    column: colIndex,
                    row: rowIndex,
                    key: key,
                    value: item[key],
                    data: item,
                    render: TableShared_part_1.defaultCellRenderer,
                });
                return (React.createElement(PropContainer, { key: colIndex, onClick: TableShared_part_1.handleDataClickedEvent({ row: rowIndex, column: colIndex, key: key, data: data[rowIndex] }, onDataClick) },
                    React.createElement(PropName, null, propKey),
                    React.createElement(PropValue, null, value)));
            }
            return undefined;
        })
            .filter(function (m) { return !!m; });
    };
    TableCard.prototype.render = function () {
        var _a = this.props, _b = _a.data, data = _b === void 0 ? [] : _b, columns = _a.columns, placeholder = _a.placeholder, theme = _a.theme, _c = _a.cardRenderer, cardRenderer = _c === void 0 ? this.renderItem : _c, _d = _a.bodyRenderer, bodyRenderer = _d === void 0 ? defaultBodyRenderer : _d, props = __rest(_a, ["data", "columns", "placeholder", "theme", "cardRenderer", "bodyRenderer"]);
        var keys = Object.keys(columns || data[0] || {});
        var rows = data.length === 0
            ? placeholder
                ? [
                    React.createElement(StyledListItem, { theme: theme, key: 0 },
                        React.createElement(PlaceholderContainer, { theme: theme }, placeholder)),
                ]
                : []
            : data.map(function (item, index) { return cardRenderer({ item: item, index: index, keys: keys }); });
        return bodyRenderer({
            table: TableCardHost,
            props: __assign({ theme: theme, borderless: true }, props),
            rows: rows,
            mode: 'card',
        });
    };
    TableCard.inner = {
        get StyledListItem() { return StyledListItem; },
        get Container() { return Container; },
        get ContentContainer() { return ContentContainer; },
        get PropContainer() { return PropContainer; },
        get PropName() { return PropName; },
        get PropValue() { return PropValue; },
        get PlaceholderContainer() { return PlaceholderContainer; }
    };
    return TableCard;
}(React.Component));
exports.TableCard = TableCard;
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7;
//# sourceMappingURL=data:application/json;base64,