"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var styled_1 = require("../../utils/styled");
var distance_1 = require("../../distance");
var textStyles_1 = require("../../textStyles");
var spinningWidth = 50;
var ProgressContainer = styled_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  color: ", ";\n"], ["\n  color: ", ";\n"])), styled_1.themed(function (props) { return props.theme.text6; }));
var ProgressRail = styled_1.default('div')(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  position: relative;\n  border: 0;\n  background: ", ";\n  height: ", ";\n"], ["\n  position: relative;\n  border: 0;\n  background: ", ";\n  height: ", ";\n"])), styled_1.themed(function (props) { return props.theme.ui4; }), function (_a) {
    var type = _a.type;
    return (type === 'secondary' ? distance_1.distance.xsmall : distance_1.distance.xxsmall);
});
var ProgressTitle = styled_1.default.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  ", "\n\n  margin: 0 0 ", ";\n  padding: 0;\n  display: block;\n"], ["\n  ", "\n\n  margin: 0 0 ", ";\n  padding: 0;\n  display: block;\n"])), textStyles_1.getFontStyle({ size: 'medium' }), distance_1.distance.medium);
var ProgressDescription = styled_1.default.div(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  ", "\n\n  margin: ", " 0 0;\n"], ["\n  ", "\n\n  margin: ", " 0 0;\n"])), textStyles_1.getFontStyle({ size: 'small' }), distance_1.distance.small);
var ProgressIndicator = styled_1.default.div(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  border-radius: inherit;\n  border: 0;\n  background: ", ";\n  height: 100%;\n  width: 0;\n"], ["\n  border-radius: inherit;\n  border: 0;\n  background: ", ";\n  height: 100%;\n  width: 0;\n"])), styled_1.themed(function (props) { return props.theme.ui0; }));
var ProgressStop = styled_1.default('div')(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n  border-radius: ", ";\n  position: absolute;\n  width: ", ";\n  height: ", ";\n  background: ", ";\n  top: 50%;\n  transform: translateY(-50%);\n"], ["\n  border-radius: ", ";\n  position: absolute;\n  width: ", ";\n  height: ", ";\n  background: ", ";\n  top: 50%;\n  transform: translateY(-50%);\n"])), distance_1.distance.small, distance_1.distance.small, distance_1.distance.small, styled_1.themed(function (props) { return (props.active ? props.theme.ui7 : props.theme.text2); }));
var SpinningAnimation = styled_1.keyframes(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n  from {\n    left: -", "%;\n  }\n  to {\n    left: 100%;\n  }\n"], ["\n  from {\n    left: -", "%;\n  }\n  to {\n    left: 100%;\n  }\n"])), spinningWidth);
var MaskContainer = styled_1.default.div(templateObject_8 || (templateObject_8 = __makeTemplateObject(["\n  position: relative;\n  overflow: hidden;\n  height: 100%;\n"], ["\n  position: relative;\n  overflow: hidden;\n  height: 100%;\n"])));
var ProgressAnimation = styled_1.default.div(templateObject_9 || (templateObject_9 = __makeTemplateObject(["\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  left: -", "%;\n  animation: ", " 2s linear infinite;\n"], ["\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  left: -", "%;\n  animation: ", " 2s linear infinite;\n"])), spinningWidth, SpinningAnimation);
function getPercent(current, minimum, maximum) {
    var value = ~~((100 * (current - minimum)) / (maximum - minimum));
    var percent = Math.min(Math.max(0, value), 100);
    return percent + "%";
}
function spinning(child) {
    return (React.createElement(MaskContainer, null,
        React.createElement(ProgressAnimation, null, child)));
}
/**
 * The progress bar component displays a progress indicator ranging from min to max.
 */
exports.ProgressBar = Object.assign((function (_a) {
    var _b = _a.minimum, minimum = _b === void 0 ? 0 : _b, _c = _a.maximum, maximum = _c === void 0 ? 100 : _c, propValue = _a.value, title = _a.title, description = _a.description, animate = _a.animate, _d = _a.stops, stops = _d === void 0 ? [] : _d, _e = _a.type, type = _e === void 0 ? 'primary' : _e, theme = _a.theme, rest = __rest(_a, ["minimum", "maximum", "value", "title", "description", "animate", "stops", "type", "theme"]);
    var value = (animate === 'spinning' ? spinningWidth : propValue) || 0;
    var width = getPercent(value, minimum, maximum);
    var transition = animate ? 'width 200ms' : 'none';
    var indicator = React.createElement(ProgressIndicator, { style: { width: width, transition: transition }, theme: theme });
    return (React.createElement(ProgressContainer, { theme: theme },
        !!title && React.createElement(ProgressTitle, { theme: theme }, title),
        React.createElement(ProgressRail, __assign({ type: type, theme: theme }, rest),
            animate === 'spinning' ? spinning(indicator) : indicator,
            stops.map(function (stop, index) { return (React.createElement(ProgressStop, { key: index + "-at-" + stop, style: { left: getPercent(stop, minimum, maximum) }, active: stop <= value, theme: theme })); })),
        !!description && React.createElement(ProgressDescription, { theme: theme }, description)));
}), { inner: {
        get ProgressIndicator() { return ProgressIndicator; },
        get ProgressContainer() { return ProgressContainer; },
        get ProgressTitle() { return ProgressTitle; },
        get ProgressRail() { return ProgressRail; },
        get ProgressStop() { return ProgressStop; },
        get ProgressDescription() { return ProgressDescription; }
    } });
exports.ProgressBar.displayName = 'ProgressBar';
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9;
//# sourceMappingURL=data:application/json;base64,