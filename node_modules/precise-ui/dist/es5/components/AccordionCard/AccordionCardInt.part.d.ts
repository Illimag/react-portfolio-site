import * as React from 'react';
import { StandardProps } from '../../common';
import { AccordionCardLabels } from '../../utils/labels';
export interface ActiveProps {
    open: boolean;
    onClick?(e: React.MouseEvent): void;
}
export declare const StyledActionContainer: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, ActiveProps, never>;
export interface RenderActionEvent {
    opened: boolean;
}
export interface ActionClickEvent {
    opened: boolean;
}
export interface AccordionCardProps extends StandardProps, AccordionCardLabels {
    /**
     * Displays card header.
     */
    header: React.ReactNode;
    /**
     * Displayed content when card is opened.
     */
    children: React.ReactNode;
    /**
     * Determines if details are open for the card.
     */
    opened?: boolean;
    /**
     * Custom render for card action button.
     */
    renderAction?(e: RenderActionEvent): React.ReactNode;
    /**
     * Event fired when action button clicked.
     */
    onActionClick?(e: ActionClickEvent): void;
}
export interface AccordionCardState {
    opened: boolean;
    controlled: boolean;
}
export declare class AccordionCard extends React.Component<AccordionCardProps, AccordionCardState> {
    constructor(props: AccordionCardProps);
    static getDerivedStateFromProps(props: AccordionCardProps, state: AccordionCardState): {
        opened: boolean | undefined;
    } | {
        opened?: undefined;
    };
    private handleClick;
    private renderDefaultAction;
    private renderActions;
    render(): JSX.Element;
    static inner: {
        readonly StyledActionContainer: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, ActiveProps, never>;
        readonly StyledContainer: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, ActiveProps, never>;
        readonly StyledHeaderContainer: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, ActiveProps, never>;
        readonly StyledDetailsContainerAnimator: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, ActiveProps, never>;
    };
}
