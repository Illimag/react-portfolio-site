"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var styled_1 = require("../../utils/styled");
var themes_1 = require("../../themes");
var Label_1 = require("../Label");
var Icon_1 = require("../Icon");
var hoc_1 = require("../../hoc");
var withGroupContext_1 = require("../../hoc/withGroupContext");
var InputNotification_1 = require("../InputNotification");
var PaddedContainer_1 = require("../PaddedContainer");
var CheckboxContainer = styled_1.default('div')(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  position: relative;\n  display: inline-block;\n  opacity: ", ";\n  cursor: ", ";\n"], ["\n  position: relative;\n  display: inline-block;\n  opacity: ", ";\n  cursor: ", ";\n"])), function (props) { return (props.disabled ? '0.5' : '1.0'); }, function (props) { return (props.disabled ? 'not-allowed' : 'pointer'); });
var CheckboxBox = styled_1.default('div')(styled_1.themed(function (_a) {
    var disabled = _a.disabled, checked = _a.checked, _b = _a.theme, ui0 = _b.ui0, ui1 = _b.ui1, ui4 = _b.ui4, ui5 = _b.ui5;
    return styled_1.css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n      outline: 0;\n      flex: 0 0 1.0625em;\n      max-width: 1.0625em;\n      height: 1.0625em;\n      position: relative;\n      background: ", ";\n      transition: all 0.2s cubic-bezier(0, 0, 0.25, 1);\n      overflow: hidden;\n      border-radius: 2px;\n      border: 2px solid ", ";\n      box-sizing: border-box;\n\n      &:focus {\n        outline: ", " solid 2px;\n      }\n\n      > i {\n        position: relative;\n        top: -2px;\n        left: -2px;\n        transition: all 0.2s;\n        opacity: ", ";\n        transform: ", ";\n      }\n    "], ["\n      outline: 0;\n      flex: 0 0 1.0625em;\n      max-width: 1.0625em;\n      height: 1.0625em;\n      position: relative;\n      background: ", ";\n      transition: all 0.2s cubic-bezier(0, 0, 0.25, 1);\n      overflow: hidden;\n      border-radius: 2px;\n      border: 2px solid ", ";\n      box-sizing: border-box;\n\n      &:focus {\n        outline: ", " solid 2px;\n      }\n\n      > i {\n        position: relative;\n        top: -2px;\n        left: -2px;\n        transition: all 0.2s;\n        opacity: ", ";\n        transform: ", ";\n      }\n    "])), checked ? ui5 : ui1, disabled ? (checked ? ui5 : ui4) : ui5, ui0, checked ? '1' : '0', checked ? 'scale(1)' : 'scale(0)');
}));
var RealCheckbox = styled_1.default.input(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  display: none;\n"], ["\n  display: none;\n"])));
var FlexContainer = styled_1.default.div(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  display: flex;\n  padding-right: 0.25em;\n  align-items: ", ";\n"], ["\n  display: flex;\n  padding-right: 0.25em;\n  align-items: ", ";\n"])), function (_a) {
    var withInputInfo = _a.withInputInfo;
    return (withInputInfo ? 'start' : 'center');
});
var CheckboxInt = /** @class */ (function (_super) {
    __extends(CheckboxInt, _super);
    function CheckboxInt(props) {
        var _this = _super.call(this, props) || this;
        _this.setValue = function (value) {
            var onChange = _this.props.onChange;
            _this.setState({
                value: value,
            });
            if (typeof onChange === 'function') {
                onChange({
                    value: value,
                });
            }
        };
        _this.toggle = function () {
            var _a = _this.props, onChange = _a.onChange, disabled = _a.disabled, form = _a.form, group = _a.group, _b = _a.name, name = _b === void 0 ? '' : _b;
            if (!disabled) {
                var _c = _this.state, controlled = _c.controlled, value = _c.value;
                var checked = !value;
                if (!controlled) {
                    if (group) {
                        group.select(_this);
                    }
                    else if (form) {
                        form.change({
                            name: name,
                            value: checked,
                        });
                    }
                    else {
                        _this.setState({
                            value: checked,
                        });
                    }
                }
                if (typeof onChange === 'function') {
                    onChange({
                        value: checked,
                    });
                }
            }
        };
        _this.changeValue = function (e) {
            _this.toggle();
            e.preventDefault();
        };
        _this.control = function (e) {
            switch (e.keyCode) {
                case 13 /* enter */:
                case 32 /* space */:
                    _this.toggle();
                    break;
                default:
                    return;
            }
            e.stopPropagation();
            e.preventDefault();
        };
        _this.name = props.name;
        _this.state = {
            controlled: typeof props.value !== 'undefined',
            value: props.value || props.defaultValue || false,
            error: props.error,
        };
        return _this;
    }
    CheckboxInt.prototype.UNSAFE_componentWillReceiveProps = function (_a) {
        var _b = _a.value, value = _b === void 0 ? false : _b, error = _a.error;
        if (this.state.controlled) {
            this.setState({ value: value });
        }
        this.setState({ error: error });
    };
    CheckboxInt.prototype.componentDidMount = function () {
        var _a = this.props, group = _a.group, form = _a.form;
        var controlled = this.state.controlled;
        if (!controlled) {
            if (group) {
                group.subscribe(this);
            }
            else if (form) {
                form.subscribe(this);
            }
        }
    };
    CheckboxInt.prototype.componentWillUnmount = function () {
        var _a = this.props, group = _a.group, form = _a.form;
        var controlled = this.state.controlled;
        if (!controlled) {
            if (group) {
                group.unsubscribe(this);
            }
            else if (form) {
                form.unsubscribe(this);
            }
        }
    };
    CheckboxInt.prototype.render = function () {
        var _a = this.props, children = _a.children, disabled = _a.disabled, theme = _a.theme, _0 = _a.value, _1 = _a.defaultValue, _2 = _a.onChange, _3 = _a.onInput, info = _a.info, props = __rest(_a, ["children", "disabled", "theme", "value", "defaultValue", "onChange", "onInput", "info"]);
        var _b = this.state, value = _b.value, error = _b.error;
        var containerProps = __assign({}, props, { theme: theme, onClick: this.changeValue, disabled: disabled });
        var boxProps = {
            checked: value,
            disabled: !!disabled,
            onKeyDown: this.control,
            theme: theme,
            tabIndex: disabled ? undefined : 0,
        };
        var InputInfo = (error || info) && (React.createElement(PaddedContainer_1.PaddedContainer, { top: "xsmall", bottom: "xsmall" },
            React.createElement(InputNotification_1.InputNotification, { error: error, info: info })));
        return (React.createElement(CheckboxContainer, __assign({}, containerProps),
            React.createElement(RealCheckbox, { type: "checkbox", defaultChecked: value }),
            React.createElement(FlexContainer, { withInputInfo: !!(error || info) },
                React.createElement(CheckboxBox, __assign({}, boxProps),
                    React.createElement(Icon_1.Icon, { name: "Check", color: theme ? theme.ui1 : themes_1.light.ui1, size: 1.0625 })),
                children && (React.createElement(Label_1.Label, { attached: true, theme: theme },
                    children,
                    InputInfo))),
            !children && InputInfo));
    };
    CheckboxInt.inner = {
        get PaddedContainer() { return PaddedContainer_1.PaddedContainer; },
        get InputNotification() { return InputNotification_1.InputNotification; },
        get CheckboxContainer() { return CheckboxContainer; },
        get RealCheckbox() { return RealCheckbox; },
        get FlexContainer() { return FlexContainer; },
        get CheckboxBox() { return CheckboxBox; },
        get Icon() { return Icon_1.Icon; },
        get Label() { return Label_1.Label; }
    };
    return CheckboxInt;
}(React.PureComponent));
exports.CheckboxInt = CheckboxInt;
/**
 * The checkbox input field.
 */
exports.Checkbox = hoc_1.withFormContext(withGroupContext_1.withGroupContext(CheckboxInt));
exports.Checkbox.displayName = 'Checkbox';
var templateObject_1, templateObject_2, templateObject_3, templateObject_4;
//# sourceMappingURL=data:application/json;base64,