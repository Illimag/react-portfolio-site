"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var styled_1 = require("../../utils/styled");
var colorCycle_1 = require("../../utils/colorCycle");
var remCalc_1 = require("../../utils/remCalc");
var avatarSize = {
    'xx-small': '16px',
    'x-small': '24px',
    small: '32px',
    medium: '40px',
    large: '48px',
    'x-large': '72px',
};
var avatarFontSize = {
    'xx-small': remCalc_1.remCalc('9px'),
    'x-small': remCalc_1.remCalc('11px'),
    small: remCalc_1.remCalc('14px'),
    medium: remCalc_1.remCalc('14px'),
    large: remCalc_1.remCalc('17px'),
    'x-large': remCalc_1.remCalc('28px'),
};
var AvatarContainer = styled_1.default('div')(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  position: relative;\n  overflow: hidden;\n  ", ";\n"], ["\n  position: relative;\n  overflow: hidden;\n  ",
    ";\n"])), function (_a) {
    var size = _a.size;
    return "\n    width: " + avatarSize[size] + ";\n    height: " + avatarSize[size] + "\n  ";
});
var AvatarContent = styled_1.default('div')(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  border: 0;\n  perspective: 1px;\n\n  color: ", ";\n  border-radius: 50%;\n  overflow: hidden;\n\n  ", ";\n"], ["\n  border: 0;\n  perspective: 1px;\n\n  color: ", ";\n  border-radius: 50%;\n  overflow: hidden;\n\n  ",
    ";\n"])), styled_1.themed(function (props) { return props.theme.text7; }), function (_a) {
    var size = _a.size;
    return "\n    width: " + avatarSize[size] + ";\n    height: " + avatarSize[size] + ";\n  ";
});
var AvatarInitials = styled_1.default('div')(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  text-align: center;\n  background-color: ", ";\n  ", ";\n"], ["\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  text-align: center;\n  background-color: ", ";\n  ",
    ";\n"])), styled_1.themed(function (props) { return props.color || colorCycle_1.colorCycle(props.theme.colorCycle, props.initials); }), function (_a) {
    var size = _a.size;
    return "\n    height: " + avatarSize[size] + ";\n    width: " + avatarSize[size] + ";\n    font-size: " + avatarFontSize[size] + ";\n  ";
});
var AvatarImage = styled_1.default.img(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  transform: translate(-50%, -50%);\n  width: 100%;\n  height: auto;\n  left: 50%;\n  opacity: 1;\n  position: relative;\n  top: 50%;\n  display: block;\n"], ["\n  transform: translate(-50%, -50%);\n  width: 100%;\n  height: auto;\n  left: 50%;\n  opacity: 1;\n  position: relative;\n  top: 50%;\n  display: block;\n"])));
var avatarBadgeSize = {
    'xx-small': '6px',
    'x-small': '8px',
    small: '10px',
    medium: '12px',
    large: '16px',
    'x-large': '20px',
};
var avatarBadgeFontSize = {
    'xx-small': '0',
    'x-small': '0',
    small: '0',
    medium: '8px',
    large: '10px',
    'x-large': '10px',
};
var AvatarBadge = styled_1.default('div')(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  position: absolute;\n  overflow: hidden;\n  border-radius: 50%;\n  border: solid 2px ", ";\n  color: ", ";\n  bottom: -2px;\n  right: -2px;\n\n  ", ";\n"], ["\n  position: absolute;\n  overflow: hidden;\n  border-radius: 50%;\n  border: solid 2px ", ";\n  color: ", ";\n  bottom: -2px;\n  right: -2px;\n\n  ",
    ";\n"])), styled_1.themed(function (props) { return props.theme.ui1; }), styled_1.themed(function (props) { return props.theme.text7; }), function (_a) {
    var size = _a.size;
    return "\n    width: " + avatarBadgeSize[size] + ";\n    height: " + avatarBadgeSize[size] + ";\n    line-height: " + avatarBadgeSize[size] + ";\n    font-size: " + avatarBadgeFontSize[size] + "\n  ";
});
var defaultSize = 'medium';
/**
 * The avatar component renders an avatar sticker with an optional badge.
 *
 * We must provide either an `image` or an `initials` prop for the Avatar component to work correctly.
 */
exports.Avatar = Object.assign((function (_a) {
    var image = _a.image, description = _a.description, children = _a.children, _b = _a.size, size = _b === void 0 ? defaultSize : _b, props = __rest(_a, ["image", "description", "children", "size"]);
    return (React.createElement(AvatarContainer, __assign({}, props, { title: description, size: size }),
        React.createElement(AvatarContent, { size: size, theme: props.theme }, image ? (React.createElement(AvatarImage, { src: image, alt: description })) : (React.createElement(AvatarInitials, { size: size, theme: props.theme, color: props.color }, (props.initials || '').substr(0, 2)))),
        children && (React.createElement(AvatarBadge, { theme: props.theme, size: size }, children))));
}), { inner: {
        get AvatarContainer() { return AvatarContainer; },
        get AvatarContent() { return AvatarContent; },
        get AvatarImage() { return AvatarImage; },
        get AvatarInitials() { return AvatarInitials; },
        get AvatarBadge() { return AvatarBadge; }
    } });
exports.Avatar.displayName = 'Avatar';
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5;
//# sourceMappingURL=data:application/json;base64,