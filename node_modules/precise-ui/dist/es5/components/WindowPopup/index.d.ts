import * as React from 'react';
import { StandardProps } from '../../common';
import { Blocker, BlockerProps } from '../Blocker';
export interface WindowPopupProps extends StandardProps, BlockerProps {
    label?: React.ReactNode;
}
export declare class WindowPopup extends React.Component<WindowPopupProps> {
    render(): JSX.Element;
    static inner: {
        readonly Blocker: typeof Blocker;
        readonly StyledMobileDropdownWrapper: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, {}, never>;
        readonly StyledLabel: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, {}, never>;
        readonly CloseButton: React.FunctionComponent<React.HTMLAttributes<HTMLAnchorElement>> & {
            inner: {
                readonly StyledCloseButton: import("styled-components").StyledComponent<"a", import("../../common").PreciseTheme, {}, never>;
                readonly Icon: React.FunctionComponent<import("..").IconProps> & {
                    inner: {
                        readonly StyledIcon: import("styled-components").StyledComponent<"i", import("../../common").PreciseTheme, {}, never>;
                    };
                };
            };
        };
        readonly StyledMobileWrapper: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, {}, never>;
    };
}
