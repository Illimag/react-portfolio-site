"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var colors = require("../../colors");
var styled_1 = require("../../utils/styled");
var distance_1 = require("../../distance");
var IconLink_1 = require("../IconLink");
var Icon_1 = require("../Icon");
var textStyles_1 = require("../../textStyles");
function getNotificationColor(type, theme) {
    if (type === void 0) { type = 'none'; }
    switch (type) {
        case 'success':
            return theme.notificationColorSuccess;
        case 'info':
            return theme.notificationColorInfo;
        case 'warning':
            return theme.notificationColorWarning;
        case 'error':
            return theme.notificationColorError;
        case 'none':
        default:
            return theme.notificationColorNone;
    }
}
function getNotificationIcon(type) {
    if (type === void 0) { type = 'none'; }
    switch (type) {
        case 'success':
            return 'CheckCircle';
        case 'info':
            return 'Info';
        case 'warning':
            return 'Warning';
        case 'error':
            return 'Error';
        case 'none':
        default:
            return 'Notifications';
    }
}
var StyledNotification = styled_1.default.div(styled_1.themed(function (_a) {
    var closed = _a.closed, type = _a.type, theme = _a.theme;
    return "\n  position: relative;\n  display: " + (closed ? 'none' : 'flex') + ";\n  background: #fff;\n  border-style: solid;\n  border-color: " + getNotificationColor(type, theme) + ";\n  margin-bottom: " + distance_1.distance.small + ";\n  padding: " + theme.notificationPadding + ";\n  box-shadow: " + theme.notificationBoxShadow + ";\n  border-width: " + theme.notificationBorderWidth + ";\n";
}));
var StyledTitle = styled_1.default.div(styled_1.themed(function (_a) {
    var _b = _a.theme, notificationTitleFontSize = _b.notificationTitleFontSize, notificationTitleLineHeight = _b.notificationTitleLineHeight;
    return "\n  font-family: inherit;\n  font-size: " + notificationTitleFontSize + ";\n  line-height: " + notificationTitleLineHeight + ";\n  color: #404040;\n  margin-right: " + distance_1.distance.small + ";\n";
}));
var ContentWrapper = styled_1.default.span(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: contents;\n"], ["\n  display: contents;\n"])));
var StyledContent = styled_1.default.div(styled_1.themed(function (_a) {
    var inline = _a.inline, _b = _a.theme, notificationTextFontSize = _b.notificationTextFontSize, notificationTextLineHeight = _b.notificationTextLineHeight;
    return "\n  display: " + (inline ? 'inline' : 'block') + ";\n  font-family: inherit;\n  font-size: " + notificationTextFontSize + ";\n  line-height: " + notificationTextLineHeight + ";\n  color: #404040;\n  margin-right: " + distance_1.distance.small + ";\n";
}));
var ActionContainer = styled_1.default('div')(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  display: ", ";\n"], ["\n  display: ", ";\n"])), function (props) { return (props.inline ? 'inline' : 'block'); });
var CloseButton = styled_1.default(IconLink_1.IconLink)(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  ", "\n\n  position: absolute;\n  right: ", ";\n  top: ", ";\n  background-color: ", ";\n  color: ", ";\n  padding: 0;\n  border: none;\n  outline: none;\n"], ["\n  ", "\n\n  position: absolute;\n  right: ", ";\n  top: ", ";\n  background-color: ", ";\n  color: ", ";\n  padding: 0;\n  border: none;\n  outline: none;\n"])), textStyles_1.getFontStyle({ size: 'medium' }), distance_1.distance.small, distance_1.distance.small, colors.transparent, colors.black);
var LayoutVertical = styled_1.css(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  display: flex;\n  flex-direction: column;\n"], ["\n  display: flex;\n  flex-direction: column;\n"])));
var LayoutInline = styled_1.css(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  display: block;\n"], ["\n  display: block;\n"])));
var ContentContainer = styled_1.default.div(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n  ", ";\n  margin-right: ", ";\n  width: 100%;\n"], ["\n  ", ";\n  margin-right: ", ";\n  width: 100%;\n"])), function (props) { return (props.inline ? LayoutInline : LayoutVertical); }, distance_1.distance.medium);
var IconContainer = styled_1.default.div(styled_1.themed(function (_a) {
    var notificationIconMarginRight = _a.theme.notificationIconMarginRight;
    return styled_1.css(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n      margin-right: ", ";\n    "], ["\n      margin-right: ", ";\n    "])), notificationIconMarginRight);
}));
var StyledIconInt = Object.assign((function (_a) {
    var _0 = _a.type, props = __rest(_a, ["type"]);
    return React.createElement(Icon_1.Icon, __assign({}, props));
}), { inner: {
        get Icon() { return Icon_1.Icon; }
    } });
var StyledIcon = styled_1.default(StyledIconInt)(templateObject_8 || (templateObject_8 = __makeTemplateObject(["\n  color: ", ";\n"], ["\n  color: ", ";\n"])), styled_1.themed(function (props) { return getNotificationColor(props.type, props.theme); }));
/**
 * The Notification component for rendering an inline notification message.
 */
var Notification = /** @class */ (function (_super) {
    __extends(Notification, _super);
    function Notification(props) {
        var _this = _super.call(this, props) || this;
        _this.onCloseHandler = function (e) {
            var _a = _this.props, onClose = _a.onClose, closeable = _a.closeable;
            if (typeof onClose === 'function' && closeable) {
                var selfClose = onClose(e);
                if (selfClose === false) {
                    return;
                }
            }
            _this.setState({ closed: true });
        };
        _this.state = {
            closed: false,
        };
        return _this;
    }
    Notification.prototype.render = function () {
        var _a = this.props, _b = _a.type, type = _b === void 0 ? 'none' : _b, children = _a.children, title = _a.title, actionRenderer = _a.actionRenderer, theme = _a.theme, style = _a.style, closeable = _a.closeable, other = __rest(_a, ["type", "children", "title", "actionRenderer", "theme", "style", "closeable"]);
        var closed = this.state.closed;
        var isInline = !title;
        return (React.createElement(StyledNotification, __assign({ theme: theme, closed: closed, type: type }, other),
            React.createElement(IconContainer, { theme: theme },
                React.createElement(StyledIcon, { type: type, name: getNotificationIcon(type), size: "22px", theme: theme })),
            React.createElement(ContentContainer, { inline: isInline },
                title && React.createElement(StyledTitle, { theme: theme }, title),
                React.createElement(StyledContent, { inline: isInline, theme: theme }, children),
                React.createElement(ActionContainer, { inline: isInline },
                    React.createElement(ContentWrapper, { onClick: this.onCloseHandler }, actionRenderer && actionRenderer()))),
            closeable && React.createElement(CloseButton, { onClick: this.onCloseHandler, icon: "Close" })));
    };
    Notification.defaultProps = {
        closeable: true,
    };
    Notification.inner = {
        get StyledNotification() { return StyledNotification; },
        get IconContainer() { return IconContainer; },
        get StyledIcon() { return StyledIcon; },
        get ContentContainer() { return ContentContainer; },
        get StyledTitle() { return StyledTitle; },
        get StyledContent() { return StyledContent; },
        get ActionContainer() { return ActionContainer; },
        get ContentWrapper() { return ContentWrapper; },
        get CloseButton() { return CloseButton; }
    };
    return Notification;
}(React.Component));
exports.Notification = Notification;
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8;
//# sourceMappingURL=data:application/json;base64,