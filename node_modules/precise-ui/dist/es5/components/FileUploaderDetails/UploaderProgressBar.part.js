"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var styled_1 = require("../../utils/styled");
var Icon_1 = require("../Icon");
var helpers_1 = require("./helpers");
var ActionIconContainer_part_1 = require("./ActionIconContainer.part");
var ActionLink_1 = require("../ActionLink");
var ProgressBar_1 = require("../ProgressBar");
var StatusIcon_part_1 = require("./StatusIcon.part");
var distance_1 = require("../../distance");
var labels_1 = require("../../utils/labels");
var ProgressBarWrapper = styled_1.default.div(styled_1.themed(function (_a) {
    var theme = _a.theme;
    return styled_1.css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n      width: 100%;\n      max-width: 600px;\n      margin: 0 auto;\n      box-shadow: 0 2px 6px 0 rgba(75, 78, 82, 0.2);\n      border: solid 1px ", ";\n      background-color: ", ";\n    "], ["\n      width: 100%;\n      max-width: 600px;\n      margin: 0 auto;\n      box-shadow: 0 2px 6px 0 rgba(75, 78, 82, 0.2);\n      border: solid 1px ", ";\n      background-color: ", ";\n    "])), theme.ui4, theme.text4);
}));
var StyledProgressBar = styled_1.default(ProgressBar_1.ProgressBar)(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  border-radius: 0;\n  height: ", ";\n"], ["\n  border-radius: 0;\n  height: ", ";\n"])), distance_1.distance.xsmall);
var BarInfo = styled_1.default.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  min-height: 54px;\n"], ["\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  min-height: 54px;\n"])));
var StatusBarGroup = styled_1.default.div(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  padding: ", ";\n"], ["\n  padding: ", ";\n"])), distance_1.distance.small);
var StyledStatusBar = styled_1.default.div(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  padding: ", ";\n  display: flex;\n  align-items: center;\n"], ["\n  padding: ", ";\n  display: flex;\n  align-items: center;\n"])), distance_1.distance.small);
var ActionGroup = styled_1.default.div(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n  padding: ", ";\n  display: flex;\n  align-items: center;\n"], ["\n  padding: ", ";\n  display: flex;\n  align-items: center;\n"])), distance_1.distance.medium);
var StatusLabel = styled_1.default.span(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n  padding-left: ", ";\n"], ["\n  padding-left: ", ";\n"])), distance_1.distance.medium);
function StatusBar(_a) {
    var status = _a.status, count = _a.count, iconName = _a.iconName, title = _a.title, props = __rest(_a, ["status", "count", "iconName", "title"]);
    return (React.createElement(StyledStatusBar, null,
        React.createElement(StatusIcon_part_1.StatusIcon, { name: iconName, type: status }), count + " " + (count > 1 ? labels_1.getPropLabel(props, 'itemPluralLabel') : labels_1.getPropLabel(props, 'itemSingularLabel')),
        React.createElement(StatusLabel, null, title)));
}
exports.UploaderProgressBar = Object.assign((function (_a) {
    var total = _a.total, onClose = _a.onClose, onShow = _a.onShow, progressValue = _a.progressValue, inProgress = _a.inProgress, scanning = _a.scanning, errors = _a.errors, props = __rest(_a, ["total", "onClose", "onShow", "progressValue", "inProgress", "scanning", "errors"]);
    var completed = progressValue >= 100;
    return (React.createElement(ProgressBarWrapper, null,
        React.createElement(BarInfo, null,
            React.createElement(StatusBarGroup, null, !completed || scanning ? (inProgress > 0 && (React.createElement(StatusBar, __assign({}, props, { count: total, iconName: helpers_1.iconNames.progress, title: completed && scanning
                    ? labels_1.getPropLabel(props, 'uploadScanningLabel')
                    : labels_1.getPropLabel(props, 'uploadProgressLabel'), status: completed && scanning ? 'scanning' : 'progress' })))) : (React.createElement(React.Fragment, null,
                inProgress > 0 && (React.createElement(StatusBar, __assign({}, props, { count: inProgress, iconName: helpers_1.iconNames.success, title: labels_1.getPropLabel(props, 'uploadSuccessLabel'), status: "success" }))),
                errors > 0 && (React.createElement(StatusBar, __assign({}, props, { count: errors, iconName: helpers_1.iconNames.error, title: labels_1.getPropLabel(props, 'uploadErrorLabel'), status: "error" })))))),
            React.createElement(ActionGroup, null,
                React.createElement(ActionLink_1.ActionLink, { onClick: onShow }, labels_1.getPropLabel(props, 'viewDetailsLabel')),
                completed && !scanning && (React.createElement(ActionIconContainer_part_1.ActionIconContainer, { onClick: onClose },
                    React.createElement(Icon_1.Icon, { name: "Close" }))))),
        !completed && React.createElement(StyledProgressBar, { value: progressValue, animate: true })));
}), { inner: {
        get ProgressBarWrapper() { return ProgressBarWrapper; },
        get BarInfo() { return BarInfo; },
        get StatusBarGroup() { return StatusBarGroup; },
        get StatusBar() { return StatusBar; },
        get ActionGroup() { return ActionGroup; },
        get ActionLink() { return ActionLink_1.ActionLink; },
        get ActionIconContainer() { return ActionIconContainer_part_1.ActionIconContainer; },
        get Icon() { return Icon_1.Icon; },
        get StyledProgressBar() { return StyledProgressBar; }
    } });
exports.UploaderProgressBar.displayName = 'UploaderProgressBar';
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXBsb2FkZXJQcm9ncmVzc0Jhci5wYXJ0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvRmlsZVVwbG9hZGVyRGV0YWlscy9VcGxvYWRlclByb2dyZXNzQmFyLnBhcnQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsNkJBQStCO0FBQy9CLDZDQUF5RDtBQUN6RCxnQ0FBeUM7QUFFekMscUNBQXNDO0FBQ3RDLHVFQUFpRTtBQUNqRSw0Q0FBMkM7QUFDM0MsOENBQTZDO0FBQzdDLHFEQUErQztBQUMvQywyQ0FBMEM7QUFDMUMsNkNBQTZGO0FBQzdGLElBQU0sa0JBQWtCLEdBQUcsZ0JBQU0sQ0FBQyxHQUFHLENBQUMsZUFBTSxDQUFDLFVBQUMsRUFBUztRQUFQLGdCQUFLO0lBQU8sT0FBQSxZQUFHLG1RQUFDLHNKQUt0QyxFQUFTLDZCQUNULEVBQVcsU0FDaEMsS0FGcUIsS0FBSyxDQUFDLEdBQUcsRUFDVCxLQUFLLENBQUMsS0FBSztBQU51QixDQU92RCxDQUFDLENBQUMsQ0FBQztBQUNSLElBQU0saUJBQWlCLEdBQUcsZ0JBQU0sQ0FBQyx5QkFBVyxDQUFDLDZHQUFDLG1DQUVsQyxFQUFlLEtBQzFCLEtBRFcsbUJBQVEsQ0FBQyxNQUFNLENBQzFCLENBQUM7QUFDRixJQUFNLE9BQU8sR0FBRyxnQkFBTSxDQUFDLEdBQUcsNktBQUMsMEdBSzFCLElBQUEsQ0FBQztBQUNGLElBQU0sY0FBYyxHQUFHLGdCQUFNLENBQUMsR0FBRyx5RkFBQyxlQUNyQixFQUFjLEtBQzFCLEtBRFksbUJBQVEsQ0FBQyxLQUFLLENBQzFCLENBQUM7QUFDRixJQUFNLGVBQWUsR0FBRyxnQkFBTSxDQUFDLEdBQUcsbUlBQUMsZUFDdEIsRUFBYywrQ0FHMUIsS0FIWSxtQkFBUSxDQUFDLEtBQUssQ0FHMUIsQ0FBQztBQUNGLElBQU0sV0FBVyxHQUFHLGdCQUFNLENBQUMs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QUMsS0FBSyxFQUFFLGFBQWEsRUFBRSxPQUFPLFNBQUUsQ0FDOUMsQ0FBQyxDQUFDO0FBQzNCLENBQUMsQ0FBeUMsRUFBRSxFQUFFLEtBQUssRUFBRTtRQUM3QyxJQUFJLGtCQUFrQixLQUFLLE9BQU8sa0JBQStDLENBQUMsQ0FBQyxDQUFDO1FBQ3BGLElBQUksT0FBTyxLQUFLLE9BQU8sT0FBeUIsQ0FBQyxDQUFDLENBQUM7UUFDbkQsSUFBSSxjQUFjLEtBQUssT0FBTyxjQUF1QyxDQUFDLENBQUMsQ0FBQztRQUN4RSxJQUFJLFNBQVMsS0FBSyxPQUFPLFNBQTZCLENBQUMsQ0FBQyxDQUFDO1FBQ3pELElBQUksV0FBVyxLQUFLLE9BQU8sV0FBaUMsQ0FBQyxDQUFDLENBQUM7UUFDL0QsSUFBSSxVQUFVLEtBQUssT0FBTyx1QkFBK0IsQ0FBQyxDQUFDLENBQUM7UUFDNUQsSUFBSSxtQkFBbUIsS0FBSyxPQUFPLDhDQUFpRCxDQUFDLENBQUMsQ0FBQztRQUN2RixJQUFJLElBQUksS0FBSyxPQUFPLFdBQW1CLENBQUMsQ0FBQyxDQUFDO1FBQzFDLElBQUksaUJBQWlCLEtBQUssT0FBTyxpQkFBNkMsQ0FBQyxDQUFDLENBQUM7S0FDcEYsRUFBRSxDQUFDLENBQUM7QUFDVCwyQkFBbUIsQ0FBQyxXQUFXLEdBQUcscUJBQXFCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkLCB7IHRoZW1lZCwgY3NzIH0gZnJvbSAnLi4vLi4vdXRpbHMvc3R5bGVkJztcbmltcG9ydCB7IEljb24sIEljb25OYW1lIH0gZnJvbSAnLi4vSWNvbic7XG5pbXBvcnQgeyBQcm9ncmVzc1N0YXR1cyB9IGZyb20gJy4vRmlsZVVwbG9hZGVyRGV0YWlscy50eXBlcy5wYXJ0JztcbmltcG9ydCB7IGljb25OYW1lcyB9IGZyb20gJy4vaGVscGVycyc7XG5pbXBvcnQgeyBBY3Rpb25JY29uQ29udGFpbmVyIH0gZnJvbSAnLi9BY3Rpb25JY29uQ29udGFpbmVyLnBhcnQnO1xuaW1wb3J0IHsgQWN0aW9uTGluayB9IGZyb20gJy4uL0FjdGlvbkxpbmsnO1xuaW1wb3J0IHsgUHJvZ3Jlc3NCYXIgfSBmcm9tICcuLi9Qcm9ncmVzc0Jhcic7XG5pbXBvcnQgeyBTdGF0dXNJY29uIH0gZnJvbSAnLi9TdGF0dXNJY29uLnBhcnQnO1xuaW1wb3J0IHsgZGlzdGFuY2UgfSBmcm9tICcuLi8uLi9kaXN0YW5jZSc7XG5pbXBvcnQgeyBnZXRQcm9wTGFiZWwsIFVwbG9hZGVyUHJvZ3Jlc3NCYXJMYWJlbHMsIENvbXBvbmVudExhYmVsIH0gZnJvbSAnLi4vLi4vdXRpbHMvbGFiZWxzJztcbmNvbnN0IFByb2dyZXNzQmFyV3JhcHBlciA9IHN0eWxlZC5kaXYodGhlbWVkKCh7IHRoZW1lIH0pID0+IGNzcyBgXG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIG1heC13aWR0aDogNjAwcHg7XG4gICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgIGJveC1zaGFkb3c6IDAgMnB4IDZweCAwIHJnYmEoNzUsIDc4LCA4MiwgMC4yKTtcbiAgICAgIGJvcmRlcjogc29saWQgMXB4ICR7dGhlbWUudWk0fTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7dGhlbWUudGV4dDR9O1xuICAgIGApKTtcbmNvbnN0IFN0eWxlZFByb2dyZXNzQmFyID0gc3R5bGVkKFByb2dyZXNzQmFyKSBgXG4gIGJvcmRlci1yYWRpdXM6IDA7XG4gIGhlaWdodDogJHtkaXN0YW5jZS54c21hbGx9O1xuYDtcbmNvbnN0IEJhckluZm8gPSBzdHlsZWQuZGl2IGBcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgbWluLWhlaWdodDogNTRweDtcbmA7XG5jb25zdCBTdGF0dXNCYXJHcm91cCA9IHN0eWxlZC5kaXYgYFxuICBwYWRkaW5nOiAke2Rpc3RhbmNlLnNtYWxsfTtcbmA7XG5jb25zdCBTdHlsZWRTdGF0dXNCYXIgPSBzdHlsZWQuZGl2IGBcbiAgcGFkZGluZzogJHtkaXN0YW5jZS5zbWFsbH07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5gO1xuY29uc3QgQWN0aW9uR3JvdXAgPSBzdHlsZWQuZGl2IGBcbiAgcGFkZGluZzogJHtkaXN0YW5jZS5tZWRpdW19O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuYDtcbmV4cG9ydCBpbnRlcmZhY2UgU3RhdHVzQmFyUHJvcHMge1xuICAgIHN0YXR1czogUHJvZ3Jlc3NTdGF0dXM7XG4gICAgaWNvbk5hbWU6IEljb25OYW1lO1xuICAgIGNvdW50OiBudW1iZXI7XG4gICAgdGl0bGU6IHN0cmluZztcbiAgICBpdGVtUGx1cmFsTGFiZWw/OiBDb21wb25lbnRMYWJlbDtcbiAgICBpdGVtU2luZ3VsYXJMYWJlbD86IENvbXBvbmVudExhYmVsO1xufVxuY29uc3QgU3RhdHVzTGFiZWwgPSBzdHlsZWQuc3BhbiBgXG4gIHBhZGRpbmctbGVmdDogJHtkaXN0YW5jZS5tZWRpdW19O1xuYDtcbmZ1bmN0aW9uIFN0YXR1c0Jhcih7IHN0YXR1cywgY291bnQsIGljb25OYW1lLCB0aXRsZSwgLi4ucHJvcHMgfTogU3RhdHVzQmFyUHJvcHMpIHtcbiAgICByZXR1cm4gKDxTdHlsZWRTdGF0dXNCYXI+XG4gICAgICA8U3RhdHVzSWNvbiBuYW1lPXtpY29uTmFtZX0gdHlwZT17c3RhdHVzfS8+XG4gICAgICB7YCR7Y291bnR9ICR7Y291bnQgPiAxID8gZ2V0UHJvcExhYmVsKHByb3BzLCAnaXRlbVBsdXJhbExhYmVsJykgOiBnZXRQcm9wTGFiZWwocHJvcHMsICdpdGVtU2luZ3VsYXJMYWJlbCcpfWB9XG4gICAgICA8U3RhdHVzTGFiZWw+e3RpdGxlfTwvU3RhdHVzTGFiZWw+XG4gICAgPC9TdHlsZWRTdGF0dXNCYXI+KTtcbn1cbmV4cG9ydCBpbnRlcmZhY2UgVXBsb2FkZXJQcm9ncmVzc0JhclByb3BzIGV4dGVuZHMgVXBsb2FkZXJQcm9ncmVzc0JhckxhYmVscyB7XG4gICAgLyoqXG4gICAgICogVGhlIHRvdGFsIHByb2dyZXNzIGZyb20gMCB0byAxMDAuXG4gICAgICovXG4gICAgcHJvZ3Jlc3NWYWx1ZTogbnVtYmVyO1xuICAgIC8qKlxuICAgICAqIERldGVybWluZXMgaWYgc2Nhbm5pbmcgaXMgY3VycmVudGx5IGluIHByb2dyZXNzLlxuICAgICAqL1xuICAgIHNjYW5uaW5nOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIEV2ZW50IGVtaXR0ZWQgd2hlbiB0aGUgc3RhdHVzIHNob3VsZCBiZSBjbG9zZWQgZnVsbHkuXG4gICAgICovXG4gICAgb25DbG9zZSgpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEV2ZW50IGVtaXR0ZWQgd2hlbiBkZXRhaWxzIHNob3VsZCBiZSBzaG93bi5cbiAgICAgKi9cbiAgICBvblNob3coKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBUb3RhbCBudW1iZXIgb2YgZmlsZXMgdGhhdCBhcmUgYmVpbmcgdXBsb2FkZWQuXG4gICAgICovXG4gICAgdG90YWw6IG51bWJlcjtcbiAgICAvKipcbiAgICAgKiBOdW1iZXIgb2YgZmlsZXMgdGhhdCBhcmUgY3VycmVudGx5IGluIHByb2dyZXNzLlxuICAgICAqL1xuICAgIGluUHJvZ3Jlc3M6IG51bWJlcjtcbiAgICAvKipcbiAgICAgKiBOdW1iZXIgb2YgZmlsZXMgdGhhdCBoYXZlIGZhaWxlZC5cbiAgICAgKi9cbiAgICBlcnJvcnM6IG51bWJlcjtcbn1cbmV4cG9ydCBjb25zdCBVcGxvYWRlclByb2dyZXNzQmFyID0gT2JqZWN0LmFzc2lnbigoKCh7IHRvdGFsLCBvbkNsb3NlLCBvblNob3csIHByb2dyZXNzVmFsdWUsIGluUHJvZ3Jlc3MsIHNjYW5uaW5nLCBlcnJvcnMsIC4uLnByb3BzIH0pID0+IHtcbiAgICBjb25zdCBjb21wbGV0ZWQgPSBwcm9ncmVzc1ZhbHVlID49IDEwMDtcbiAgICByZXR1cm4gKDxQcm9ncmVzc0JhcldyYXBwZXI+XG4gICAgICA8QmFySW5mbz5cbiAgICAgICAgPFN0YXR1c0Jhckdyb3VwPlxuICAgICAgICAgIHshY29tcGxldGVkIHx8IHNjYW5uaW5nID8gKGluUHJvZ3Jlc3MgPiAwICYmICg8U3RhdHVzQmFyIHsuLi5wcm9wc30gY291bnQ9e3RvdGFsfSBpY29uTmFtZT17aWNvbk5hbWVzLnByb2dyZXNzfSB0aXRsZT17Y29tcGxldGVkICYmIHNjYW5uaW5nXG4gICAgICAgID8gZ2V0UHJvcExhYmVsKHByb3BzLCAndXBsb2FkU2Nhbm5pbmdMYWJlbCcpXG4gICAgICAgIDogZ2V0UHJvcExhYmVsKHByb3BzLCAndXBsb2FkUHJvZ3Jlc3NMYWJlbCcpfSBzdGF0dXM9e2NvbXBsZXRlZCAmJiBzY2FubmluZyA/ICdzY2FubmluZycgOiAncHJvZ3Jlc3MnfS8+KSkgOiAoPD5cbiAgICAgICAgICAgICAge2luUHJvZ3Jlc3MgPiAwICYmICg8U3RhdHVzQmFyIHsuLi5wcm9wc30gY291bnQ9e2luUHJvZ3Jlc3N9IGljb25OYW1lPXtpY29uTmFtZXMuc3VjY2Vzc30gdGl0bGU9e2dldFByb3BMYWJlbChwcm9wcywgJ3VwbG9hZFN1Y2Nlc3NMYWJlbCcpfSBzdGF0dXM9XCJzdWNjZXNzXCIvPil9XG4gICAgICAgICAgICAgIHtlcnJvcnMgPiAwICYmICg8U3RhdHVzQmFyIHsuLi5wcm9wc30gY291bnQ9e2Vycm9yc30gaWNvbk5hbWU9e2ljb25OYW1lcy5lcnJvcn0gdGl0bGU9e2dldFByb3BMYWJlbChwcm9wcywgJ3VwbG9hZEVycm9yTGFiZWwnKX0gc3RhdHVzPVwiZXJyb3JcIi8+KX1cbiAgICAgICAgICAgIDwvPil9XG4gICAgICAgIDwvU3RhdHVzQmFyR3JvdXA+XG4gICAgICAgIDxBY3Rpb25Hcm91cD5cbiAgICAgICAgICA8QWN0aW9uTGluayBvbkNsaWNrPXtvblNob3d9PntnZXRQcm9wTGFiZWwocHJvcHMsICd2aWV3RGV0YWlsc0xhYmVsJyl9PC9BY3Rpb25MaW5rPlxuICAgICAgICAgIHtjb21wbGV0ZWQgJiYgIXNjYW5uaW5nICYmICg8QWN0aW9uSWNvbkNvbnRhaW5lciBvbkNsaWNrPXtvbkNsb3NlfT5cbiAgICAgICAgICAgICAgPEljb24gbmFtZT1cIkNsb3NlXCIvPlxuICAgICAgICAgICAgPC9BY3Rpb25JY29uQ29udGFpbmVyPil9XG4gICAgICAgIDwvQWN0aW9uR3JvdXA+XG4gICAgICA8L0JhckluZm8+XG4gICAgICB7IWNvbXBsZXRlZCAmJiA8U3R5bGVkUHJvZ3Jlc3NCYXIgdmFsdWU9e3Byb2dyZXNzVmFsdWV9IGFuaW1hdGUvPn1cbiAgICA8L1Byb2dyZXNzQmFyV3JhcHBlcj4pO1xufSkgYXMgUmVhY3QuU0ZDPFVwbG9hZGVyUHJvZ3Jlc3NCYXJQcm9wcz4pLCB7IGlubmVyOiB7XG4gICAgICAgIGdldCBQcm9ncmVzc0JhcldyYXBwZXIoKSB7IHJldHVybiBQcm9ncmVzc0JhcldyYXBwZXIgYXMgdHlwZW9mIFByb2dyZXNzQmFyV3JhcHBlcjsgfSxcbiAgICAgICAgZ2V0IEJhckluZm8oKSB7IHJldHVybiBCYXJJbmZvIGFzIHR5cGVvZiBCYXJJbmZvOyB9LFxuICAgICAgICBnZXQgU3RhdHVzQmFyR3JvdXAoKSB7IHJldHVybiBTdGF0dXNCYXJHcm91cCBhcyB0eXBlb2YgU3RhdHVzQmFyR3JvdXA7IH0sXG4gICAgICAgIGdldCBTdGF0dXNCYXIoKSB7IHJldHVybiBTdGF0dXNCYXIgYXMgdHlwZW9mIFN0YXR1c0JhcjsgfSxcbiAgICAgICAgZ2V0IEFjdGlvbkdyb3VwKCkgeyByZXR1cm4gQWN0aW9uR3JvdXAgYXMgdHlwZW9mIEFjdGlvbkdyb3VwOyB9LFxuICAgICAgICBnZXQgQWN0aW9uTGluaygpIHsgcmV0dXJuIEFjdGlvbkxpbmsgYXMgdHlwZW9mIEFjdGlvbkxpbms7IH0sXG4gICAgICAgIGdldCBBY3Rpb25JY29uQ29udGFpbmVyKCkgeyByZXR1cm4gQWN0aW9uSWNvbkNvbnRhaW5lciBhcyB0eXBlb2YgQWN0aW9uSWNvbkNvbnRhaW5lcjsgfSxcbiAgICAgICAgZ2V0IEljb24oKSB7IHJldHVybiBJY29uIGFzIHR5cGVvZiBJY29uOyB9LFxuICAgICAgICBnZXQgU3R5bGVkUHJvZ3Jlc3NCYXIoKSB7IHJldHVybiBTdHlsZWRQcm9ncmVzc0JhciBhcyB0eXBlb2YgU3R5bGVkUHJvZ3Jlc3NCYXI7IH1cbiAgICB9IH0pO1xuVXBsb2FkZXJQcm9ncmVzc0Jhci5kaXNwbGF5TmFtZSA9ICdVcGxvYWRlclByb2dyZXNzQmFyJztcbiJdfQ==