import * as React from 'react';
import { UploadProgressDetailsLabels } from '../../utils/labels';
import { Modal } from '../Modal';
import { FileProgress, FileUploaderDetailsEvent } from './FileUploaderDetails.types.part';
export interface UploaderProgressDetailsProps extends UploadProgressDetailsLabels {
    /**
     * Determines if the details are shown or not.
     */
    open?: boolean;
    /**
     * Uploading files with progress value.
     */
    files: Array<FileProgress>;
    /**
     * Event emitted when upload canceled for individual or all files.
     */
    onCancel(e: FileUploaderDetailsEvent<FileProgress>): void;
    /**
     * Event emitted when upload deleted for individual or all files.
     */
    onDelete(e: FileUploaderDetailsEvent<FileProgress>): void;
    /**
     * Event emitted when details should be hidden.
     */
    onHide(): void;
    /**
     * The total progress from 0 to 100.
     */
    progressValue: number;
}
export declare class UploaderProgressDetails extends React.Component<UploaderProgressDetailsProps> {
    private cancelAll;
    render(): JSX.Element;
    static inner: {
        readonly StyledModal: import("styled-components").StyledComponent<typeof Modal, import("../..").PreciseTheme, {}, never>;
        readonly ModalHeader: React.FunctionComponent<import("../Modal").ModalHeaderProps> & {
            inner: {
                readonly StyledModalHeader: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
                readonly ModalLabel: import("styled-components").StyledComponent<"span", import("../..").PreciseTheme, {}, never>;
                readonly Headline: React.FunctionComponent<import("..").HeadlineProps>;
            };
        };
        readonly StyledModalBody: import("styled-components").StyledComponent<React.FunctionComponent<import("../..").StandardProps & {
            children: React.ReactNode;
        }> & {
            inner: {
                readonly StyledModalBody: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
            };
        }, import("../..").PreciseTheme, {}, never>;
        readonly StatusTable: React.FunctionComponent<import("./StatusTable.part").StatusTableProps> & {
            inner: {
                readonly StyledTableRow: import("styled-components").StyledComponent<"tr", import("../..").PreciseTheme, import("./StatusTable.part").StyledTableRowProps, never>;
                readonly ProgressTableRow: import("styled-components").StyledComponent<"tr", import("../..").PreciseTheme, {}, never>;
                readonly ProgressTableCell: import("styled-components").StyledComponent<"td", import("../..").PreciseTheme, {}, never>;
                readonly StyledProgressBar: import("styled-components").StyledComponent<React.FunctionComponent<import("..").ProgressBarProps> & {
                    inner: {
                        readonly ProgressIndicator: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
                        readonly ProgressContainer: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
                        readonly ProgressTitle: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
                        readonly ProgressRail: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, import("..").ProgressContainerProps, never>;
                        readonly ProgressStop: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, import("..").StopProps & React.HTMLProps<HTMLInputElement>, never>;
                        readonly ProgressDescription: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
                    };
                }, import("../..").PreciseTheme, {}, never>;
                readonly ActionIconContainer: React.ComponentType<import("..").ActionLinkProps>;
                readonly Icon: React.FunctionComponent<import("..").IconProps> & {
                    inner: {
                        readonly StyledIcon: import("styled-components").StyledComponent<"i", import("../..").PreciseTheme, {}, never>;
                    };
                };
                readonly TextWrapBox: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
                readonly StatusIcon: React.ComponentType<import("./StatusIcon.part").StatusIconProps>;
                readonly StyledTable: import("styled-components").StyledComponent<import("..").TableType, import("../..").PreciseTheme, {}, never>;
            };
        };
        readonly ModalFooter: React.FunctionComponent<import("../..").StandardProps> & {
            inner: {
                readonly StyledModalFooter: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
            };
        };
        readonly IconLink: React.FunctionComponent<import("../IconLink").IconLinkProps> & {
            inner: {
                readonly StyledAnchor: import("styled-components").StyledComponent<typeof import("..").Anchor, import("../..").PreciseTheme, import("../IconLink").StyledAnchorProps, never>;
                readonly StyledIcon: import("styled-components").StyledComponent<React.FunctionComponent<import("..").IconProps> & {
                    inner: {
                        readonly StyledIcon: import("styled-components").StyledComponent<"i", import("../..").PreciseTheme, {}, never>;
                    };
                }, import("../..").PreciseTheme, import("../IconLink").StyledIconProps & import("..").IconProps, never>;
                readonly AnchorText: import("styled-components").StyledComponent<"span", import("../..").PreciseTheme, {}, never>;
            };
        };
    };
}
