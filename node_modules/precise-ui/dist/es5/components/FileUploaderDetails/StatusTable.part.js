"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var styled_1 = require("../../utils/styled");
var labels_1 = require("../../utils/labels");
var Icon_1 = require("../Icon");
var ProgressBar_1 = require("../ProgressBar");
var Table_1 = require("../Table");
var ActionIconContainer_part_1 = require("./ActionIconContainer.part");
var StatusIcon_part_1 = require("./StatusIcon.part");
var helpers_1 = require("./helpers");
var TextWrapBox = styled_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n"], ["\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n"])));
var StyledTable = styled_1.default(Table_1.Table)(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  table-layout: fixed;\n"], ["\n  table-layout: fixed;\n"])));
var ProgressTableRow = styled_1.default.tr(styled_1.themed(function (_a) {
    var theme = _a.theme;
    return styled_1.css(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n      border-bottom: 1px solid ", ";\n      padding: 0;\n      &:hover {\n        background: ", ";\n      }\n    "], ["\n      border-bottom: 1px solid ", ";\n      padding: 0;\n      &:hover {\n        background: ", ";\n      }\n    "])), theme.ui4, theme.ui3);
}));
var ProgressTableCell = styled_1.default.td(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  padding: 0 !important;\n  &:hover {\n    background: ", ";\n  }\n"], ["\n  padding: 0 !important;\n  &:hover {\n    background: ", ";\n  }\n"])), styled_1.themed(function (_a) {
    var theme = _a.theme;
    return theme.ui3;
}));
var StyledProgressBar = styled_1.default(ProgressBar_1.ProgressBar)(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  border-radius: 0;\n  height: 2px;\n"], ["\n  border-radius: 0;\n  height: 2px;\n"])));
exports.StyledTableRow = styled_1.default.tr(styled_1.themed(function (_a) {
    var hasProgressBar = _a.hasProgressBar, theme = _a.theme;
    return styled_1.css(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n      border-bottom: ", "px solid ", ";\n      &:hover {\n        background: ", ";\n      }\n    "], ["\n      border-bottom: ", "px solid ", ";\n      &:hover {\n        background: ", ";\n      }\n    "])), hasProgressBar ? 0 : 1, theme.ui4, theme.ui4);
}));
exports.StatusTable = Object.assign((function (_a) {
    var theme = _a.theme, files = _a.files, onCancel = _a.onCancel, onDelete = _a.onDelete, props = __rest(_a, ["theme", "files", "onCancel", "onDelete"]);
    var columns = {
        name: {
            header: labels_1.getPropLabel(props, 'tableHeaderFileLabel'),
        },
        status: {
            header: labels_1.getPropLabel(props, 'tableHeaderStatusLabel'),
            width: '40%',
        },
        action: {
            header: '',
            width: '30px',
        },
    };
    var data = files.map(function (item) { return (__assign({}, item, { status: helpers_1.getStatus(item) })); });
    function rowRenderer(_a) {
        var cells = _a.cells, data = _a.data;
        var hasProgressBar = !(data.canceled || data.error || data.progress >= 100);
        return (React.createElement(React.Fragment, { key: data.fileId },
            React.createElement(exports.StyledTableRow, { hasProgressBar: hasProgressBar, theme: theme }, cells),
            hasProgressBar && (React.createElement(ProgressTableRow, { theme: theme },
                React.createElement(ProgressTableCell, { colSpan: 3 },
                    React.createElement(StyledProgressBar, { value: data.progress, animate: true }))))));
    }
    function cellRenderer(e) {
        var value = e.value;
        var fileData = e.data;
        if (e.key.toLowerCase() === 'action' && fileData) {
            var status_1 = helpers_1.getStatus(fileData);
            return status_1 === 'progress' || status_1 === 'scanning' ? (React.createElement(ActionIconContainer_part_1.ActionIconContainer, { onClick: function () { return onCancel({ files: [fileData] }); } },
                React.createElement(Icon_1.Icon, { name: "Close" }))) : status_1 === 'success' ? (React.createElement(ActionIconContainer_part_1.ActionIconContainer, { onClick: function () { return onDelete({ files: [fileData] }); } },
                React.createElement(Icon_1.Icon, { name: "Delete" }))) : (false);
        }
        if (e.key.toLowerCase() === 'status' && e.data) {
            var status_2 = helpers_1.getStatus(e.data);
            var error = status_2 === 'error' && e.data.error;
            return (React.createElement(TextWrapBox, null,
                React.createElement(StatusIcon_part_1.StatusIcon, { condensed: true, type: status_2, name: helpers_1.iconNames[value] }),
                labels_1.getPropLabel(props, status_2 + "TableUploadLabel", error)));
        }
        return React.createElement(TextWrapBox, null, value);
    }
    return (React.createElement(StyledTable, { data: data, theme: theme, columns: columns, rowRenderer: rowRenderer, cellRenderer: cellRenderer, mode: "table", condensed: true }));
}), { inner: {
        get StyledTableRow() { return exports.StyledTableRow; },
        get ProgressTableRow() { return ProgressTableRow; },
        get ProgressTableCell() { return ProgressTableCell; },
        get StyledProgressBar() { return StyledProgressBar; },
        get ActionIconContainer() { return ActionIconContainer_part_1.ActionIconContainer; },
        get Icon() { return Icon_1.Icon; },
        get TextWrapBox() { return TextWrapBox; },
        get StatusIcon() { return StatusIcon_part_1.StatusIcon; },
        get StyledTable() { return StyledTable; }
    } });
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6;
//# sourceMappingURL=data:application/json;base64,