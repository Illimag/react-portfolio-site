import * as React from 'react';
import { UploadProgressDetailsLabels, UploaderProgressBarLabels } from '../../utils/labels';
import { EventManager } from '../../utils/eventManager';
import { FileBase, FileItem, FileProgress, FileUploadActions, FileUploaderDetailsEvent } from './FileUploaderDetails.types.part';
import { UploaderProgressDetails } from './UploaderProgressDetails.part';
export { FileUploadActions, FileItem, FileProgress, FileBase, FileUploaderDetailsEvent };
export interface FileUploaderDetailsProps extends UploadProgressDetailsLabels, UploaderProgressBarLabels {
    /**
     * Sets the event manager to use. By default a standard event manager is used.
     */
    events?: EventManager;
    /**
     * Event emitted when files to upload are selected.
     */
    onUpload(e: FileUploaderDetailsEvent<FileItem>): void;
    /**
     * Event emitted when file upload has been canceled.
     */
    onCancel?(e: FileUploaderDetailsEvent<FileProgress>): void;
    /**
     * Event emitted when file upload should be deleted.
     */
    onDelete?(e: FileUploaderDetailsEvent<FileProgress>): void;
    /**
     * Event emitted when total progress overlay is closed.
     */
    onClose?(): void;
}
export interface FileUploaderDetailsState {
    files: Array<FileProgress>;
    showDetails: boolean;
    showUploader: boolean;
}
/**
 * The host element for global async file upload process. Use as a singleton only.
 */
export declare class FileUploaderDetails extends React.Component<FileUploaderDetailsProps, FileUploaderDetailsState> {
    private eventManager;
    constructor(props: FileUploaderDetailsProps);
    componentDidMount(): void;
    componentWillUnmount(): void;
    private onStart;
    private onChange;
    private onCancel;
    private onDelete;
    private onClear;
    private closeUploader;
    private hideDetails;
    private showDetails;
    render(): false | JSX.Element;
    static inner: {
        readonly StyledDetailsHost: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
        readonly UploaderProgressDetails: typeof UploaderProgressDetails;
        readonly StyledUploaderHost: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
        readonly UploaderProgressBar: React.FunctionComponent<import("./UploaderProgressBar.part").UploaderProgressBarProps> & {
            inner: {
                readonly ProgressBarWrapper: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
                readonly BarInfo: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
                readonly StatusBarGroup: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
                readonly StatusBar: ({ status, count, iconName, title, ...props }: import("./UploaderProgressBar.part").StatusBarProps) => JSX.Element;
                readonly ActionGroup: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
                readonly ActionLink: React.FunctionComponent<import("..").ActionLinkProps> & {
                    inner: {
                        readonly StyledActionLink: import("styled-components").StyledComponent<typeof import("..").Anchor, import("../..").PreciseTheme, import("..").StyledActionLink, never>;
                    };
                };
                readonly ActionIconContainer: React.ComponentType<import("..").ActionLinkProps>;
                readonly Icon: React.FunctionComponent<import("..").IconProps> & {
                    inner: {
                        readonly StyledIcon: import("styled-components").StyledComponent<"i", import("../..").PreciseTheme, {}, never>;
                    };
                };
                readonly StyledProgressBar: import("styled-components").StyledComponent<React.FunctionComponent<import("..").ProgressBarProps> & {
                    inner: {
                        readonly ProgressIndicator: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
                        readonly ProgressContainer: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
                        readonly ProgressTitle: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
                        readonly ProgressRail: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, import("..").ProgressContainerProps, never>;
                        readonly ProgressStop: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, import("..").StopProps & React.HTMLProps<HTMLInputElement>, never>;
                        readonly ProgressDescription: import("styled-components").StyledComponent<"div", import("../..").PreciseTheme, {}, never>;
                    };
                }, import("../..").PreciseTheme, {}, never>;
            };
        };
    };
}
