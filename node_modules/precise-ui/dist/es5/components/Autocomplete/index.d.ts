import * as React from 'react';
import { TextFieldProps } from '../TextField';
import { InputChangeEvent, Omit } from '../../common';
export interface AutosuggestItem {
    key: string;
    content?: React.ReactChild;
}
export interface AutosuggestSelectEvent<T> {
    value: T;
}
export interface AutocompleteInputProps {
    onChange(e: InputChangeEvent<string>): void;
    clearable: boolean;
    inputRef?(instance: HTMLElement | null): void;
    value: string;
    error: any;
    [index: string]: any;
}
export interface AutocompleteProps<T> extends TextFieldProps {
    /**
     * The optional message to show in case tehre are no suggestions to display.
     */
    noSuggestionsMessage?: React.ReactChild;
    /**
     * The current value of the text field, leading to a controlled text field.
     */
    suggestions?: Array<T>;
    /**
     * How to render each suggestion in the InteractiveList
     */
    renderSuggestion?(data: T): AutosuggestItem;
    /**
     * Event emitted every time suggestion is selected via mouse or keyboard.
     */
    onSuggestionSelected?(e: AutosuggestSelectEvent<T>): void;
    /**
     * Gets the suggestion value.
     */
    getSuggestionValue?(item: T): string;
    /**
     * The renderer of input field.
     */
    inputRenderer?(props: AutocompleteInputProps): JSX.Element;
    /**
     * Always `true` on Autocomplete components.
     * @ignore
     */
    clearable?: boolean;
    /**
     * @ignore
     */
    inputRef?(instance: HTMLElement | null): void;
}
export declare type SupportedAutocompleteProps<T> = Omit<AutocompleteProps<T>, 'clearable'>;
export interface AutocompleteState {
    controlled: boolean;
    listFocus: boolean;
    focus: boolean;
    open: boolean;
    value: string;
    error?: React.ReactChild;
}
/**
 * Extends a TextField with autocompletion capabilities.
 */
export declare const Autocomplete: React.FunctionComponent<Pick<AutocompleteProps<{}>, "label" | "style" | "children" | "error" | "theme" | "className" | "defaultValue" | "placeholder" | "prefix" | "onFocus" | "onBlur" | "onChange" | "onInput" | "name" | "icon" | "disabled" | "value" | "borderless" | "multiline" | "autoComplete" | "autoFocus" | "maxLength" | "type" | "onClear" | "info" | "resizable" | "inputRef" | "suffix" | "noSuggestionsMessage" | "suggestions" | "renderSuggestion" | "onSuggestionSelected" | "getSuggestionValue" | "inputRenderer">>;
