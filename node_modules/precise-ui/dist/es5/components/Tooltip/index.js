"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var styled_1 = require("../../utils/styled");
var Flyout_1 = require("../Flyout");
var colors_1 = require("../../colors");
var remCalc_1 = require("../../utils/remCalc");
var TooltipContainer = styled_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  position: relative;\n  width: fit-content;\n  display: inline-block;\n"], ["\n  position: relative;\n  width: fit-content;\n  display: inline-block;\n"])));
var Tooltip = /** @class */ (function (_super) {
    __extends(Tooltip, _super);
    function Tooltip(props) {
        var _this = _super.call(this, props) || this;
        _this.setTargetRef = function (el) {
            _this.targetContainer = el;
        };
        _this.onMouseOver = function () {
            if (!_this.state.controlled) {
                _this.setOpen(true);
            }
        };
        _this.onMouseOut = function () {
            if (!_this.state.controlled) {
                _this.setOpen(false);
            }
        };
        _this.state = {
            controlled: props.open !== undefined,
            open: props.open || false,
            targetRect: { top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0 },
            dirtyFlag: false,
        };
        return _this;
    }
    Tooltip.prototype.componentDidMount = function () {
        this.updateMeasurements();
    };
    Tooltip.prototype.UNSAFE_componentWillReceiveProps = function (nextProps) {
        if (this.state.controlled && nextProps.open !== undefined) {
            this.setOpen(nextProps.open);
        }
    };
    Tooltip.prototype.componentDidUpdate = function () {
        var dirtyFlag = this.state.dirtyFlag;
        if (dirtyFlag) {
            this.updateMeasurements();
            this.setState({
                dirtyFlag: false,
            });
        }
    };
    Tooltip.prototype.updateMeasurements = function () {
        if (this.targetContainer) {
            var targetRect = this.targetContainer.getBoundingClientRect();
            this.setState({
                targetRect: targetRect,
            });
        }
    };
    Tooltip.prototype.setOpen = function (open) {
        var onChange = this.props.onChange;
        if (typeof onChange === 'function') {
            onChange({ open: open });
        }
        this.setState({
            open: open,
            dirtyFlag: open === true,
        });
    };
    Tooltip.prototype.render = function () {
        var _a = this.props, _0 = _a.open, theme = _a.theme, props = __rest(_a, ["open", "theme"]);
        var open = this.state.open;
        var tooltipFlyoutTheme = __assign({ flyout: { background: colors_1.tuna, textColor: colors_1.white, fontSize: remCalc_1.remCalc('14px'), maxWidth: '250px' } }, theme);
        return (React.createElement(TooltipContainer, { ref: this.setTargetRef, onFocus: this.onMouseOver, onBlur: this.onMouseOut, onMouseOver: this.onMouseOver, onMouseOut: this.onMouseOut },
            React.createElement(Flyout_1.Flyout, __assign({}, props, { open: open, theme: tooltipFlyoutTheme }))));
    };
    Tooltip.inner = {
        get TooltipContainer() { return TooltipContainer; },
        get Flyout() { return Flyout_1.Flyout; }
    };
    return Tooltip;
}(React.Component));
exports.Tooltip = Tooltip;
var templateObject_1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9Ub29sdGlwL2luZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSw2QkFBK0I7QUFDL0IsNkNBQXdDO0FBRXhDLG9DQUFtQztBQUNuQyx1Q0FBMkM7QUFDM0MsK0NBQThDO0FBRTlDLElBQU0sZ0JBQWdCLEdBQUcsZ0JBQU0sQ0FBQyxHQUFHLCtJQUFDLDRFQUluQyxJQUFBLENBQUM7QUFPRjtJQUE2QiwyQkFBMkM7SUFFcEUsaUJBQVksS0FBbUI7UUFBL0IsWUFDSSxrQkFBTSxLQUFLLENBQUMsU0FPZjtRQTBCTyxrQkFBWSxHQUFHLFVBQUMsRUFBeUI7WUFDN0MsS0FBSSxDQUFDLGVBQWUsR0FBRyxFQUFFLENBQUM7UUFDOUIsQ0FBQyxDQUFDO1FBV00saUJBQVcsR0FBRztZQUNsQixJQUFJLENBQUMsS0FBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUU7Z0JBQ3hCLEtBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDdEI7UUFDTCxDQUFDLENBQUM7UUFDTSxnQkFBVSxHQUFHO1lBQ2pCLElBQUksQ0FBQyxLQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsRUFBRTtnQkFDeEIsS0FBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUN2QjtRQUNMLENBQUMsQ0FBQztRQXRERSxLQUFJLENBQUMsS0FBSyxHQUFHO1lBQ1QsVUFBVSxFQUFFLEtBQUssQ0FBQyxJQUFJLEtBQUssU0FBUztZQUNwQyxJQUFJLEVBQUUsS0FBSyxDQUFDLElBQUksSUFBSSxLQUFLO1lBQ3pCLFVBQVUsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFO1lBQ3pFLFNBQVMsRUFBRSxLQUFLO1NBQ25CLENBQUM7O0lBQ04sQ0FBQztJQUNELG1DQUFpQixHQUFqQjtRQUNJLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO0lBQzlCLENBQUM7SUFDRCxrREFBZ0MsR0FBaEMsVUFBaUMsU0FBdUI7UUFDcEQsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsSUFBSSxTQUFTLENBQUMsSUFBSSxLQUFLLFNBQVMsRUFBRTtZQUN2RCxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNoQztJQUNMLENBQUM7SUFDRCxvQ0FBa0IsR0FBbEI7UUFDWSxJQUFBLGdDQUFTLENBQWdCO1FBQ2pDLElBQUksU0FBUyxFQUFFO1lBQ1gsSUFBSSxDQUFDLGtCQUFrQixFQUFFLENBQUM7WUFDMUIsSUFBSSxDQUFDLFFBQVEsQ0FBQztnQkFDVixTQUFTLEVBQUUsS0FBSzthQUNuQixDQUFDLENBQUM7U0FDTjtJQUNMLENBQUM7SUFDTyxvQ0FBa0IsR0FBMUI7UUFDSSxJQUFJLElBQUksQ0FBQyxlQUFlLEVBQUU7WUFDdEIsSUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO1lBQ2hFLElBQUksQ0FBQyxRQUFRLENBQUM7Z0JBQ1YsVUFBVSxZQUFBO2FBQ2IsQ0FBQyxDQUFDO1NBQ047SUFDTCxDQUFDO0lBSU8seUJBQU8sR0FBZixVQUFnQixJQUFhO1FBQ2pCLElBQUEsOEJBQVEsQ0FBZ0I7UUFDaEMsSUFBSSxPQUFPLFFBQVEsS0FBSyxVQUFVLEVBQUU7WUFDaEMsUUFBUSxDQUFDLEVBQUUsSUFBSSxNQUFBLEVBQUUsQ0FBQyxDQUFDO1NBQ3RCO1FBQ0QsSUFBSSxDQUFDLFFBQVEsQ0FBQztZQUNWLElBQUksTUFBQTtZQUNKLFNBQVMsRUFBRSxJQUFJLEtBQUssSUFBSTtTQUMzQixDQUFDLENBQUM7SUFDUCxDQUFDO0lBV0Qsd0JBQU0sR0FBTjtRQUNJLElBQU0sZUFBMEMsRUFBeEMsWUFBUSxFQUFFLGdCQUFLLEVBQUUscUNBQXVCLENBQUM7UUFDekMsSUFBQSxzQkFBSSxDQUFnQjtRQUM1QixJQUFNLGtCQUFrQixjQUNwQixNQUFNLEVBQUUsRUFBRSxVQUFVLEVBQUUsYUFBSSxFQUFFLFNBQVMsRUFBRSxjQUFLLEVBQUUsUUFBUSxFQUFFLGlCQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSxJQUN6RixLQUFLLENBQ1gsQ0FBQztRQUNGLE9BQU8sQ0FBQyxvQkFBQyxnQkFBZ0IsSUFBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLFlBQVksRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLFVBQVUsRUFBRSxXQUFXLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxVQUFVLEVBQUUsSUFBSSxDQUFDLFVBQVU7WUFDaEssb0JBQUMsZUFBTSxlQUFLLEtBQUssSUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxrQkFBa0IsSUFBRyxDQUMxQyxDQUFDLENBQUM7SUFDdkIsQ0FBQztJQUNNLGFBQUssR0FBRztRQUNYLElBQUksZ0JBQWdCLEtBQUssT0FBTyxnQkFBMkMsQ0FBQyxDQUFDLENBQUM7UUFDOUUsSUFBSSxNQUFNLEtBQUssT0FBTyxlQUF1QixDQUFDLENBQUMsQ0FBQztLQUNuRCxDQUFDO0lBQ04sY0FBQztDQUFBLEFBMUVELENBQTZCLEtBQUssQ0FBQyxTQUFTLEdBMEUzQztBQTFFWSwwQkFBTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnLi4vLi4vdXRpbHMvc3R5bGVkJztcbmltcG9ydCB7IFRvb2x0aXBQcm9wcyB9IGZyb20gJy4vVG9vbHRpcC50eXBlcy5wYXJ0JztcbmltcG9ydCB7IEZseW91dCB9IGZyb20gJy4uL0ZseW91dCc7XG5pbXBvcnQgeyB0dW5hLCB3aGl0ZSB9IGZyb20gJy4uLy4uL2NvbG9ycyc7XG5pbXBvcnQgeyByZW1DYWxjIH0gZnJvbSAnLi4vLi4vdXRpbHMvcmVtQ2FsYyc7XG5leHBvcnQgeyBUb29sdGlwUG9zaXRpb24sIFRvb2x0aXBDaGFuZ2VFdmVudCwgVG9vbHRpcFByb3BzIH0gZnJvbSAnLi9Ub29sdGlwLnR5cGVzLnBhcnQnO1xuY29uc3QgVG9vbHRpcENvbnRhaW5lciA9IHN0eWxlZC5kaXYgYFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiBmaXQtY29udGVudDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuYDtcbmV4cG9ydCBpbnRlcmZhY2UgVG9vbHRpcFN0YXRlIHtcbiAgICBjb250cm9sbGVkOiBib29sZWFuO1xuICAgIHRhcmdldFJlY3Q6IENsaWVudFJlY3Q7XG4gICAgZGlydHlGbGFnOiBib29sZWFuO1xuICAgIG9wZW46IGJvb2xlYW47XG59XG5leHBvcnQgY2xhc3MgVG9vbHRpcCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxUb29sdGlwUHJvcHMsIFRvb2x0aXBTdGF0ZT4ge1xuICAgIHByaXZhdGUgdGFyZ2V0Q29udGFpbmVyOiBIVE1MRGl2RWxlbWVudCB8IG51bGw7XG4gICAgY29uc3RydWN0b3IocHJvcHM6IFRvb2x0aXBQcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBjb250cm9sbGVkOiBwcm9wcy5vcGVuICE9PSB1bmRlZmluZWQsXG4gICAgICAgICAgICBvcGVuOiBwcm9wcy5vcGVuIHx8IGZhbHNlLFxuICAgICAgICAgICAgdGFyZ2V0UmVjdDogeyB0b3A6IDAsIHJpZ2h0OiAwLCBib3R0b206IDAsIGxlZnQ6IDAsIHdpZHRoOiAwLCBoZWlnaHQ6IDAgfSxcbiAgICAgICAgICAgIGRpcnR5RmxhZzogZmFsc2UsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICB0aGlzLnVwZGF0ZU1lYXN1cmVtZW50cygpO1xuICAgIH1cbiAgICBVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHM6IFRvb2x0aXBQcm9wcykge1xuICAgICAgICBpZiAodGhpcy5zdGF0ZS5jb250cm9sbGVkICYmIG5leHRQcm9wcy5vcGVuICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMuc2V0T3BlbihuZXh0UHJvcHMub3Blbik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29tcG9uZW50RGlkVXBkYXRlKCkge1xuICAgICAgICBjb25zdCB7IGRpcnR5RmxhZyB9ID0gdGhpcy5zdGF0ZTtcbiAgICAgICAgaWYgKGRpcnR5RmxhZykge1xuICAgICAgICAgICAgdGhpcy51cGRhdGVNZWFzdXJlbWVudHMoKTtcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgIGRpcnR5RmxhZzogZmFsc2UsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwcml2YXRlIHVwZGF0ZU1lYXN1cmVtZW50cygpIHtcbiAgICAgICAgaWYgKHRoaXMudGFyZ2V0Q29udGFpbmVyKSB7XG4gICAgICAgICAgICBjb25zdCB0YXJnZXRSZWN0ID0gdGhpcy50YXJnZXRDb250YWluZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICB0YXJnZXRSZWN0LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcHJpdmF0ZSBzZXRUYXJnZXRSZWYgPSAoZWw6IEhUTUxEaXZFbGVtZW50IHwgbnVsbCkgPT4ge1xuICAgICAgICB0aGlzLnRhcmdldENvbnRhaW5lciA9IGVsO1xuICAgIH07XG4gICAgcHJpdmF0ZSBzZXRPcGVuKG9wZW46IGJvb2xlYW4pIHtcbiAgICAgICAgY29uc3QgeyBvbkNoYW5nZSB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgaWYgKHR5cGVvZiBvbkNoYW5nZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgb25DaGFuZ2UoeyBvcGVuIH0pO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgb3BlbixcbiAgICAgICAgICAgIGRpcnR5RmxhZzogb3BlbiA9PT0gdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHByaXZhdGUgb25Nb3VzZU92ZXIgPSAoKSA9PiB7XG4gICAgICAgIGlmICghdGhpcy5zdGF0ZS5jb250cm9sbGVkKSB7XG4gICAgICAgICAgICB0aGlzLnNldE9wZW4odHJ1ZSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHByaXZhdGUgb25Nb3VzZU91dCA9ICgpID0+IHtcbiAgICAgICAgaWYgKCF0aGlzLnN0YXRlLmNvbnRyb2xsZWQpIHtcbiAgICAgICAgICAgIHRoaXMuc2V0T3BlbihmYWxzZSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgeyBvcGVuOiBfMCwgdGhlbWUsIC4uLnByb3BzIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBjb25zdCB7IG9wZW4gfSA9IHRoaXMuc3RhdGU7XG4gICAgICAgIGNvbnN0IHRvb2x0aXBGbHlvdXRUaGVtZSA9IHtcbiAgICAgICAgICAgIGZseW91dDogeyBiYWNrZ3JvdW5kOiB0dW5hLCB0ZXh0Q29sb3I6IHdoaXRlLCBmb250U2l6ZTogcmVtQ2FsYygnMTRweCcpLCBtYXhXaWR0aDogJzI1MHB4JyB9LFxuICAgICAgICAgICAgLi4udGhlbWUsXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiAoPFRvb2x0aXBDb250YWluZXIgcmVmPXt0aGlzLnNldFRhcmdldFJlZn0gb25Gb2N1cz17dGhpcy5vbk1vdXNlT3Zlcn0gb25CbHVyPXt0aGlzLm9uTW91c2VPdXR9IG9uTW91c2VPdmVyPXt0aGlzLm9uTW91c2VPdmVyfSBvbk1vdXNlT3V0PXt0aGlzLm9uTW91c2VPdXR9PlxuICAgICAgICA8Rmx5b3V0IHsuLi5wcm9wc30gb3Blbj17b3Blbn0gdGhlbWU9e3Rvb2x0aXBGbHlvdXRUaGVtZX0vPlxuICAgICAgPC9Ub29sdGlwQ29udGFpbmVyPik7XG4gICAgfVxuICAgIHN0YXRpYyBpbm5lciA9IHtcbiAgICAgICAgZ2V0IFRvb2x0aXBDb250YWluZXIoKSB7IHJldHVybiBUb29sdGlwQ29udGFpbmVyIGFzIHR5cGVvZiBUb29sdGlwQ29udGFpbmVyOyB9LFxuICAgICAgICBnZXQgRmx5b3V0KCkgeyByZXR1cm4gRmx5b3V0IGFzIHR5cGVvZiBGbHlvdXQ7IH1cbiAgICB9O1xufVxuIl19