"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var withResponsive_1 = require("../../hoc/withResponsive");
var ContentSwitch_part_1 = require("./ContentSwitch.part");
var OverflowMenu_1 = require("../OverflowMenu");
var Icon_1 = require("../Icon");
var defaultOrientation = 'horizontal';
var overflowButtonWidth = 50;
var ContentSwitchInt = Object.assign((function (_a) {
    var _b = _a.orientation, orientation = _b === void 0 ? defaultOrientation : _b, children = _a.children, theme = _a.theme, headers = _a.headers, activeIndex = _a.activeIndex, onSelect = _a.onSelect, rest = __rest(_a, ["orientation", "children", "theme", "headers", "activeIndex", "onSelect"]);
    var _c = React.useState([]), overflowItems = _c[0], setOverflowItems = _c[1];
    var containerRef = React.createRef();
    var headerRef = React.createRef();
    React.useLayoutEffect(function () {
        if (headerRef.current && containerRef.current && orientation === 'horizontal') {
            var containerWidth_1 = containerRef.current.offsetWidth;
            var headerNodesWidth = Array.from(headerRef.current.childNodes).map(function (node) { return node.offsetWidth; });
            var headersUlWidth = headerNodesWidth.reduce(function (acc, cur) { return (acc += cur); }, 0);
            if (headersUlWidth > containerWidth_1) {
                var overflowItems_1 = [];
                var visibleItemsWidth_1 = overflowButtonWidth;
                headerNodesWidth.forEach(function (nodeWidth, index) {
                    visibleItemsWidth_1 += nodeWidth;
                    if (visibleItemsWidth_1 > containerWidth_1) {
                        overflowItems_1.push(headers[index]);
                    }
                });
                setOverflowItems(overflowItems_1);
            }
        }
        return function () { return setOverflowItems([]); };
    }, [headerRef.current, containerRef.current, orientation]);
    return (React.createElement(ContentSwitch_part_1.Container, __assign({ theme: theme }, rest, { ref: containerRef }),
        React.createElement(ContentSwitch_part_1.Headers, { theme: theme, orientation: orientation, ref: headerRef },
            headers.slice(0, headers.length - overflowItems.length).map(function (element, index) { return (React.createElement(ContentSwitch_part_1.Header, { theme: theme, key: "head-" + index, active: index === activeIndex, onClick: function () { return onSelect(index); }, orientation: orientation }, element)); }),
            overflowItems.length > 0 && (React.createElement(OverflowMenu_1.OverflowMenu, { key: "overflowButton", items: overflowItems.map(function (element, index, _a) {
                    var length = _a.length;
                    return (React.createElement(ContentSwitch_part_1.OverflowItems, { onClick: function () { return onSelect(headers.length - length + index); } }, element));
                }), button: React.createElement(ContentSwitch_part_1.Header, null,
                    React.createElement(Icon_1.Icon, { name: "MoreVert" })) }))),
        React.createElement(ContentSwitch_part_1.Content, { theme: theme }, children)));
}), { inner: {
        get Container() { return ContentSwitch_part_1.Container; },
        get Headers() { return ContentSwitch_part_1.Headers; },
        get Header() { return ContentSwitch_part_1.Header; },
        get OverflowMenu() { return OverflowMenu_1.OverflowMenu; },
        get Content() { return ContentSwitch_part_1.Content; }
    } });
exports.ResponsiveSwitchPanel = withResponsive_1.withResponsive(ContentSwitchInt);
//# sourceMappingURL=data:application/json;base64,