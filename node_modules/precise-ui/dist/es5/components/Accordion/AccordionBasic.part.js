"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var styled_1 = require("../../utils/styled");
var Icon_1 = require("../Icon");
var remCalc_1 = require("../../utils/remCalc");
var distance_1 = require("../../distance");
var indexHelper_1 = require("../AccordionTable/helpers/indexHelper");
var Expander_1 = require("../Expander");
var textStyles_1 = require("../../textStyles");
var animationDuration = '0.3s';
var animationFunction = 'cubic-bezier(0, 0, 0.25, 1)';
var AccordionContainer = styled_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject([""], [""])));
var AccordionItems = styled_1.default.ul(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  padding: 0;\n  list-style: none;\n"], ["\n  padding: 0;\n  list-style: none;\n"])));
var AccordionItem = styled_1.default.li(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  ", "\n\n  position: relative;\n  z-index: 1;\n  margin: 0;\n  text-align: left;\n  overflow: visible;\n  border-top: ", ";\n  box-sizing: border-box;\n  color: ", ";\n\n  &:last-child {\n    border-bottom: ", ";\n  }\n"], ["\n  ", "\n\n  position: relative;\n  z-index: 1;\n  margin: 0;\n  text-align: left;\n  overflow: visible;\n  border-top: ", ";\n  box-sizing: border-box;\n  color: ", ";\n\n  &:last-child {\n    border-bottom: ", ";\n  }\n"])), textStyles_1.getFontStyle({ size: 'small' }), styled_1.themed(function (_a) {
    var theme = _a.theme;
    return theme.accordionLine;
}), styled_1.themed(function (_a) {
    var theme = _a.theme;
    return theme.text1;
}), styled_1.themed(function (_a) {
    var theme = _a.theme;
    return theme.accordionLine;
}));
var AccordionItemHeaderContainer = styled_1.default('div')(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  transition: background-color ", " ", ";\n  background-color: ", ";\n"], ["\n  transition: background-color ", " ", ";\n  background-color: ", ";\n"])), animationDuration, animationFunction, styled_1.themed(function (props) { return (props.active ? props.theme.ui2 : props.theme.ui1); }));
var AccordionItemHeader = styled_1.default.div(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  display: flex;\n  white-space: pre-wrap;\n  align-items: center;\n  cursor: pointer;\n  padding: ", ";\n"], ["\n  display: flex;\n  white-space: pre-wrap;\n  align-items: center;\n  cursor: pointer;\n  padding: ", ";\n"])), styled_1.themed(function (_a) {
    var theme = _a.theme;
    return theme.accordionPadding;
}));
var StyledIcon = styled_1.default(Icon_1.Icon)(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n  font-size: ", ";\n  margin-right: ", ";\n  transition: transform 0.2s ", ";\n  transform: ", ";\n"], ["\n  font-size: ", ";\n  margin-right: ", ";\n  transition: transform 0.2s ", ";\n  transform: ", ";\n"])), remCalc_1.remCalc('18px'), distance_1.distance.medium, animationFunction, function (_a) {
    var isRotated = _a.isRotated;
    return "rotate(" + (isRotated ? 90 : 0) + "deg)";
});
var AccordionItemContent = styled_1.default.div(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n  padding: ", ";\n"], ["\n  padding: ", ";\n"])), styled_1.themed(function (_a) {
    var theme = _a.theme;
    return theme.accordionContentPadding;
}));
var AccordionBasic = /** @class */ (function (_super) {
    __extends(AccordionBasic, _super);
    function AccordionBasic(props) {
        var _this = _super.call(this, props) || this;
        _this.selects = [];
        _this.state = {
            selectedIndexes: props.selectedIndex !== undefined
                ? indexHelper_1.normalizeIndex(props.selectedIndex)
                : indexHelper_1.normalizeIndex(props.defaultSelectedIndex),
            controlled: props.selectedIndex !== undefined,
        };
        return _this;
    }
    AccordionBasic.prototype.componentDidMount = function () {
        var defaultSelectedIndex = this.props.defaultSelectedIndex;
        if (defaultSelectedIndex) {
            this.setState({
                selectedIndexes: indexHelper_1.normalizeIndex(defaultSelectedIndex),
            });
        }
    };
    AccordionBasic.getDerivedStateFromProps = function (props, state) {
        var selectedIndex = props.selectedIndex;
        if (state.controlled && selectedIndex !== undefined) {
            return {
                selectedIndexes: indexHelper_1.normalizeIndex(selectedIndex),
            };
        }
        return state;
    };
    AccordionBasic.prototype.changeIndex = function (target) {
        var _a = this.props, onChange = _a.onChange, multiple = _a.multiple;
        var _b = this.state, controlled = _b.controlled, selectedIndexes = _b.selectedIndexes;
        var nextIndexes = indexHelper_1.toggleIndex(selectedIndexes, target, multiple);
        if (typeof onChange === 'function') {
            onChange({
                selectedIndex: multiple ? nextIndexes : nextIndexes[0] !== undefined ? nextIndexes[0] : -1,
                previousIndex: multiple ? selectedIndexes : selectedIndexes[0] !== undefined ? selectedIndexes[0] : -1,
            });
        }
        if (!controlled) {
            this.setState({
                selectedIndexes: nextIndexes,
            });
        }
    };
    AccordionBasic.prototype.render = function () {
        var _this = this;
        var selectedIndexes = this.state.selectedIndexes;
        var _a = this.props, children = _a.children, theme = _a.theme, _0 = _a.onChange, _1 = _a.selectedIndex;
        var items = [];
        var selects = this.selects;
        React.Children.forEach(children, function (element, index) {
            if (element && React.isValidElement(element)) {
                var header = element.props.header;
                var active = indexHelper_1.hasIndex(selectedIndexes, index);
                if (selects[index] === undefined) {
                    selects[index] = function () { return _this.changeIndex(index); };
                }
                items.push(React.createElement(AccordionItem, { theme: theme, key: "item-" + index },
                    React.createElement(AccordionItemHeaderContainer, { active: active },
                        React.createElement(AccordionItemHeader, { theme: theme, onClick: selects[index] },
                            React.createElement(StyledIcon, { isRotated: active, name: "KeyboardArrowRight" }),
                            header)),
                    React.createElement(Expander_1.Expander, { expand: active, timeout: 300, unmountOnExit: true },
                        React.createElement(AccordionItemContent, { theme: theme }, element))));
            }
        });
        return (React.createElement(AccordionContainer, null,
            React.createElement(AccordionItems, { theme: theme }, items)));
    };
    AccordionBasic.inner = {
        get AccordionItem() { return AccordionItem; },
        get AccordionItemHeaderContainer() { return AccordionItemHeaderContainer; },
        get AccordionItemHeader() { return AccordionItemHeader; },
        get StyledIcon() { return StyledIcon; },
        get Expander() { return Expander_1.Expander; },
        get AccordionItemContent() { return AccordionItemContent; },
        get AccordionContainer() { return AccordionContainer; },
        get AccordionItems() { return AccordionItems; }
    };
    return AccordionBasic;
}(React.Component));
exports.AccordionBasic = AccordionBasic;
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7;
//# sourceMappingURL=data:application/json;base64,