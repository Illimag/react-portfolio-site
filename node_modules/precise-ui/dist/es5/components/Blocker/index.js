"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var styled_1 = require("../../utils/styled");
var utils_1 = require("../../utils");
var colors_1 = require("../../colors");
var FixedContainer = styled_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: fixed;\n  z-index: 10000;\n  overflow-x: hidden;\n  overflow-y: auto;\n"], ["\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: fixed;\n  z-index: 10000;\n  overflow-x: hidden;\n  overflow-y: auto;\n"])));
var FocusKeeper = styled_1.default.a(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  height: 0;\n  width: 0;\n  overflow: hidden;\n"], ["\n  height: 0;\n  width: 0;\n  overflow: hidden;\n"])));
var StyledModalBackground = styled_1.default(FixedContainer)(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  overflow: hidden;\n  z-index: 9999;\n  background: ", ";\n"], ["\n  overflow: hidden;\n  z-index: 9999;\n  background: ", ";\n"])), utils_1.transparentize(colors_1.dark, 0.4));
/**
 * Defines a generic content blocking overlay element, e.g., for a modal dialog.
 */
var Blocker = /** @class */ (function (_super) {
    __extends(Blocker, _super);
    function Blocker() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.keepFirstFocus = function () {
            _this.keepFocus('first');
        };
        _this.keepLastFocus = function () {
            _this.keepFocus('last');
        };
        _this.setElement = function (node) {
            if (node && node !== _this.modalNode) {
                var el = node.querySelector('*[tabindex]');
                (el || node).focus();
            }
            _this.modalNode = node;
        };
        _this.onContainerClick = function (e) {
            e.stopPropagation();
            if (!_this.onScrollbarClick(e) &&
                (e.target === e.currentTarget || (e.target instanceof HTMLElement && e.target.parentElement === e.currentTarget))) {
                _this.notifyClose(e);
            }
        };
        _this.onScrollbarClick = function (e) {
            return e.target instanceof HTMLElement && e.target.offsetLeft + e.target.scrollWidth < e.clientX;
        };
        _this.onKeyPress = function (e) {
            if (e.keyCode === 27 /* escape */) {
                _this.notifyClose(e);
            }
        };
        return _this;
    }
    Blocker.prototype.getFocusables = function () {
        if (this.modalNode) {
            return this.modalNode.querySelectorAll('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]');
        }
        return undefined;
    };
    Blocker.prototype.componentDidMount = function () {
        this.changeBodyOverflow(true);
    };
    Blocker.prototype.componentWillUnmount = function () {
        this.changeBodyOverflow(false);
    };
    Blocker.prototype.changeBodyOverflow = function (open) {
        var body = document.querySelector('body');
        if (body) {
            if (open) {
                body.style.setProperty('overflow', 'hidden');
            }
            else {
                body.style.removeProperty('overflow');
            }
        }
    };
    Blocker.prototype.keepFocus = function (position) {
        var focusables = this.getFocusables();
        if (focusables && focusables.length > 2) {
            var nextElement = (position === 'first' ? focusables[1] : focusables[focusables.length - 2]);
            nextElement.focus();
        }
    };
    Blocker.prototype.notifyClose = function (e) {
        var onClose = this.props.onClose;
        if (typeof onClose === 'function') {
            onClose(e);
        }
    };
    Blocker.prototype.render = function () {
        var _a = this.props, children = _a.children, onClose = _a.onClose, props = __rest(_a, ["children", "onClose"]);
        return (React.createElement(React.Fragment, null,
            React.createElement(FixedContainer, __assign({ ref: this.setElement, onMouseDown: this.onContainerClick, onKeyDown: this.onKeyPress }, props),
                React.createElement(FocusKeeper, { href: "#", onFocus: this.keepLastFocus }),
                children,
                React.createElement(FocusKeeper, { href: "#", onFocus: this.keepFirstFocus })),
            React.createElement(StyledModalBackground, __assign({}, props))));
    };
    Blocker.inner = {
        get FixedContainer() { return FixedContainer; },
        get FocusKeeper() { return FocusKeeper; },
        get StyledModalBackground() { return StyledModalBackground; }
    };
    return Blocker;
}(React.Component));
exports.Blocker = Blocker;
var templateObject_1, templateObject_2, templateObject_3;
//# sourceMappingURL=data:application/json;base64,