"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var styled_1 = require("../../utils/styled");
var distance_1 = require("../../distance");
var textStyles_1 = require("../../textStyles");
var Headlines = {};
function getComponentName(level) {
    return "h" + (level >= 1 && level <= 5 ? level : 3);
}
function getHeadlineStyle(level) {
    switch (level) {
        case 1:
            return textStyles_1.getFontStyle({ size: 'xxxLarge', weight: 'light' });
        case 2:
            return textStyles_1.getFontStyle({ size: 'xxLarge', weight: 'light' });
        case 3:
            return textStyles_1.getFontStyle({ size: 'xLarge', weight: 'medium' });
        case 4:
            return textStyles_1.getFontStyle({ size: 'large', weight: 'regular' });
        case 5:
            return textStyles_1.getFontStyle({ size: 'medium', weight: 'medium' });
        default:
            return '';
    }
}
function getStyledHeadline(level) {
    var component = getComponentName(level);
    var Headline = Headlines[component];
    if (!Headline) {
        var NewHeadline = styled_1.default(component)(styled_1.themed(function (props) { return styled_1.css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n          ", "\n\n          margin: 0;\n          padding: ", ";\n          font-family: ", ";\n          color: ", ";\n        "], ["\n          ", "\n\n          margin: 0;\n          padding: ", ";\n          font-family: ", ";\n          color: ", ";\n        "])), getHeadlineStyle(props.level), props.theme.headingsPadding || "0 " + distance_1.distance.small + " 0 0", props.theme.fontFamily || 'inherit', props.subheader ? props.theme.text5 : 'inherit'); }));
        Headlines[component] = NewHeadline;
        return NewHeadline;
    }
    return Headline;
}
/**
 * Headline component with styles for all headline levels.
 */
exports.Headline = function (_a) {
    var _b = _a.level, level = _b === void 0 ? 3 : _b, children = _a.children, rest = __rest(_a, ["level", "children"]);
    var StyledHeadline = getStyledHeadline(level);
    return (React.createElement(StyledHeadline, __assign({ level: level }, rest), children));
};
exports.Headline.displayName = 'Headline';
var templateObject_1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9IZWFkbGluZS9pbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSw2QkFBK0I7QUFDL0IsNkNBQXlEO0FBRXpELDJDQUEwQztBQUMxQywrQ0FBZ0Q7QUEwQmhELElBQU0sU0FBUyxHQUFrQixFQUFFLENBQUM7QUFDcEMsU0FBUyxnQkFBZ0IsQ0FBQyxLQUFhO0lBQ25DLE9BQU8sT0FBSSxLQUFLLElBQUksQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFFLENBQUM7QUFDdEQsQ0FBQztBQUNELFNBQVMsZ0JBQWdCLENBQUMsS0FBbUM7SUFDekQsUUFBUSxLQUFLLEVBQUU7UUFDWCxLQUFLLENBQUM7WUFDRixPQUFPLHlCQUFZLENBQUMsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDO1FBQy9ELEtBQUssQ0FBQztZQUNGLE9BQU8seUJBQVksQ0FBQyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxDQUFDLENBQUM7UUFDOUQsS0FBSyxDQUFDO1lBQ0YsT0FBTyx5QkFBWSxDQUFDLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLENBQUMsQ0FBQztRQUM5RCxLQUFLLENBQUM7WUFDRixPQUFPLHlCQUFZLENBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsQ0FBQyxDQUFDO1FBQzlELEtBQUssQ0FBQztZQUNGLE9BQU8seUJBQVksQ0FBQyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxDQUFDLENBQUM7UUFDOUQ7WUFDSSxPQUFPLEVBQUUsQ0FBQztLQUNqQjtBQUNMLENBQUM7QUFDRCxTQUFTLGlCQUFpQixDQUFDLEtBQWE7SUFDcEMsSUFBTSxTQUFTLEdBQUcsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDMUMsSUFBTSxRQUFRLEdBQUcsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3RDLElBQUksQ0FBQyxRQUFRLEVBQUU7UUFDWCxJQUFNLFdBQVcsR0FBRyxnQkFBTSxDQUFDLFNBQWlCLENBQUMsQ0FBc0IsZUFBTSxDQUFDLFVBQUEsS0FBSyxJQUFJLE9BQUEsWUFBRyx1TUFBQyxjQUNuRixFQUE2QiwrQ0FHcEIsRUFBd0QsNEJBQ3BELEVBQW1DLHNCQUN6QyxFQUErQyxhQUN6RCxLQU5HLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsRUFHcEIsS0FBSyxDQUFDLEtBQUssQ0FBQyxlQUFlLElBQUksT0FBSyxtQkFBUSxDQUFDLEtBQUssU0FBTSxFQUNwRCxLQUFLLENBQUMsS0FBSyxDQUFDLFVBQVUsSUFBSSxTQUFTLEVBQ3pDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxTQUFTLEdBTnlCLENBT2xGLENBQUMsQ0FBQyxDQUFDO1FBQ0osU0FBUyxDQUFDLFNBQVMsQ0FBQyxHQUFHLFdBQVcsQ0FBQztRQUNuQyxPQUFPLFdBQVcsQ0FBQztLQUN0QjtJQUNELE9BQU8sUUFBUSxDQUFDO0FBQ3BCLENBQUM7QUFDRDs7R0FFRztBQUNVLFFBQUEsUUFBUSxHQUE2QixVQUFDLEVBQWdDO0lBQTlCLElBQUEsYUFBUyxFQUFULDhCQUFTLEVBQUUsc0JBQVEsRUFBRSx3Q0FBTztJQUM3RSxJQUFNLGNBQWMsR0FBRyxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNoRCxPQUFPLENBQUMsb0JBQUMsY0FBYyxhQUFDLEtBQUssRUFBRSxLQUFLLElBQU0sSUFBSSxHQUMzQyxRQUFRLENBQ00sQ0FBQyxDQUFDO0FBQ3ZCLENBQUMsQ0FBQztBQUNGLGdCQUFRLENBQUMsV0FBVyxHQUFHLFVBQVUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQsIHsgdGhlbWVkLCBjc3MgfSBmcm9tICcuLi8uLi91dGlscy9zdHlsZWQnO1xuaW1wb3J0IHsgU3RhbmRhcmRQcm9wcyB9IGZyb20gJy4uLy4uL2NvbW1vbic7XG5pbXBvcnQgeyBkaXN0YW5jZSB9IGZyb20gJy4uLy4uL2Rpc3RhbmNlJztcbmltcG9ydCB7IGdldEZvbnRTdHlsZSB9IGZyb20gJy4uLy4uL3RleHRTdHlsZXMnO1xuZXhwb3J0IHR5cGUgSGVhZGxpbmVTaXplID0gJ3NtYWxsJyB8ICdtZWRpdW0nO1xuZXhwb3J0IGludGVyZmFjZSBIZWFkbGluZVByb3BzIGV4dGVuZHMgU3RhbmRhcmRQcm9wcyB7XG4gICAgLyoqXG4gICAgICogUmVwcmVzZW50IDUgbGV2ZWxzIG9mIGhlYWRpbmdzICgxLTUpXG4gICAgICogRGVmYXVsdCBpcyAzXG4gICAgICovXG4gICAgbGV2ZWw/OiAxIHwgMiB8IDMgfCA0IHwgNTtcbiAgICAvKipcbiAgICAgKiBXaGVuIHNwZWNpZmllZCBoZWFkbGluZSB3aWxsIGhhdmUgbXV0ZWQgdGV4dCBjb2xvclxuICAgICAqL1xuICAgIHN1YmhlYWRlcj86IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogVGhlIHRleHQgb2YgdGhlIGhlYWRsaW5lLlxuICAgICAqL1xuICAgIGNoaWxkcmVuPzogUmVhY3QuUmVhY3ROb2RlO1xufVxuZXhwb3J0IGludGVyZmFjZSBTdHlsZWRIZWFkbGluZVByb3BzIHtcbiAgICBzaXplOiBIZWFkbGluZVNpemU7XG4gICAgbGV2ZWw6IG51bWJlcjtcbiAgICB0aGVtZT86IGFueTtcbiAgICBzdWJoZWFkZXI/OiBib29sZWFuO1xufVxuaW50ZXJmYWNlIEhlYWRsaW5lQ2FjaGUge1xuICAgIFtrZXk6IHN0cmluZ106IGFueTtcbn1cbmNvbnN0IEhlYWRsaW5lczogSGVhZGxpbmVDYWNoZSA9IHt9O1xuZnVuY3Rpb24gZ2V0Q29tcG9uZW50TmFtZShsZXZlbDogbnVtYmVyKSB7XG4gICAgcmV0dXJuIGBoJHtsZXZlbCA+PSAxICYmIGxldmVsIDw9IDUgPyBsZXZlbCA6IDN9YDtcbn1cbmZ1bmN0aW9uIGdldEhlYWRsaW5lU3R5bGUobGV2ZWw6IFN0eWxlZEhlYWRsaW5lUHJvcHNbJ2xldmVsJ10pIHtcbiAgICBzd2l0Y2ggKGxldmVsKSB7XG4gICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgIHJldHVybiBnZXRGb250U3R5bGUoeyBzaXplOiAneHh4TGFyZ2UnLCB3ZWlnaHQ6ICdsaWdodCcgfSk7XG4gICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgIHJldHVybiBnZXRGb250U3R5bGUoeyBzaXplOiAneHhMYXJnZScsIHdlaWdodDogJ2xpZ2h0JyB9KTtcbiAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgcmV0dXJuIGdldEZvbnRTdHlsZSh7IHNpemU6ICd4TGFyZ2UnLCB3ZWlnaHQ6ICdtZWRpdW0nIH0pO1xuICAgICAgICBjYXNlIDQ6XG4gICAgICAgICAgICByZXR1cm4gZ2V0Rm9udFN0eWxlKHsgc2l6ZTogJ2xhcmdlJywgd2VpZ2h0OiAncmVndWxhcicgfSk7XG4gICAgICAgIGNhc2UgNTpcbiAgICAgICAgICAgIHJldHVybiBnZXRGb250U3R5bGUoeyBzaXplOiAnbWVkaXVtJywgd2VpZ2h0OiAnbWVkaXVtJyB9KTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiAnJztcbiAgICB9XG59XG5mdW5jdGlvbiBnZXRTdHlsZWRIZWFkbGluZShsZXZlbDogbnVtYmVyKSB7XG4gICAgY29uc3QgY29tcG9uZW50ID0gZ2V0Q29tcG9uZW50TmFtZShsZXZlbCk7XG4gICAgY29uc3QgSGVhZGxpbmUgPSBIZWFkbGluZXNbY29tcG9uZW50XTtcbiAgICBpZiAoIUhlYWRsaW5lKSB7XG4gICAgICAgIGNvbnN0IE5ld0hlYWRsaW5lID0gc3R5bGVkKGNvbXBvbmVudCBhcyAnaDEnKTxTdHlsZWRIZWFkbGluZVByb3BzPih0aGVtZWQocHJvcHMgPT4gY3NzIGBcbiAgICAgICAgICAke2dldEhlYWRsaW5lU3R5bGUocHJvcHMubGV2ZWwpfVxuXG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgIHBhZGRpbmc6ICR7cHJvcHMudGhlbWUuaGVhZGluZ3NQYWRkaW5nIHx8IGAwICR7ZGlzdGFuY2Uuc21hbGx9IDAgMGB9O1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiAke3Byb3BzLnRoZW1lLmZvbnRGYW1pbHkgfHwgJ2luaGVyaXQnfTtcbiAgICAgICAgICBjb2xvcjogJHtwcm9wcy5zdWJoZWFkZXIgPyBwcm9wcy50aGVtZS50ZXh0NSA6ICdpbmhlcml0J307XG4gICAgICAgIGApKTtcbiAgICAgICAgSGVhZGxpbmVzW2NvbXBvbmVudF0gPSBOZXdIZWFkbGluZTtcbiAgICAgICAgcmV0dXJuIE5ld0hlYWRsaW5lO1xuICAgIH1cbiAgICByZXR1cm4gSGVhZGxpbmU7XG59XG4vKipcbiAqIEhlYWRsaW5lIGNvbXBvbmVudCB3aXRoIHN0eWxlcyBmb3IgYWxsIGhlYWRsaW5lIGxldmVscy5cbiAqL1xuZXhwb3J0IGNvbnN0IEhlYWRsaW5lOiBSZWFjdC5TRkM8SGVhZGxpbmVQcm9wcz4gPSAoeyBsZXZlbCA9IDMsIGNoaWxkcmVuLCAuLi5yZXN0IH0pID0+IHtcbiAgICBjb25zdCBTdHlsZWRIZWFkbGluZSA9IGdldFN0eWxlZEhlYWRsaW5lKGxldmVsKTtcbiAgICByZXR1cm4gKDxTdHlsZWRIZWFkbGluZSBsZXZlbD17bGV2ZWx9IHsuLi5yZXN0fT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L1N0eWxlZEhlYWRsaW5lPik7XG59O1xuSGVhZGxpbmUuZGlzcGxheU5hbWUgPSAnSGVhZGxpbmUnO1xuIl19