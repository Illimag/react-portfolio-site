"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var colors = require("../../colors");
var react_onclickoutside_1 = require("react-onclickoutside");
var styled_1 = require("../../utils/styled");
var Icon_1 = require("../Icon");
var InteractiveList_1 = require("../InteractiveList");
var distance_1 = require("../../distance");
var Flyout_1 = require("../Flyout");
var textStyles_1 = require("../../textStyles");
var RootContainer = styled_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  position: relative;\n  margin-right: ", ";\n  &:last-child {\n    margin-right: 0;\n  }\n"], ["\n  position: relative;\n  margin-right: ", ";\n  &:last-child {\n    margin-right: 0;\n  }\n"])), distance_1.distance.xlarge);
var StyledInteractiveList = styled_1.default(InteractiveList_1.InteractiveList)(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  position: static;\n  white-space: nowrap;\n\n  ul {\n    background: ", ";\n  }\n"], ["\n  position: static;\n  white-space: nowrap;\n\n  ul {\n    background: ", ";\n  }\n"])), styled_1.themed(function (props) { return props.theme.ui1; }));
var DropdownButton = styled_1.default.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  color: ", ";\n  ", ";\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  span {\n    margin-left: ", ";\n  }\n  &:hover {\n    color: ", ";\n  }\n"], ["\n  color: ", ";\n  ", ";\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  span {\n    margin-left: ", ";\n  }\n  &:hover {\n    color: ", ";\n  }\n"])), function (props) { return (props.open ? colors.cyan : colors.grey2); }, function (_a) {
    var menuSize = _a.menuSize;
    return textStyles_1.getFontStyle({ size: menuSize });
}, distance_1.distance.small, colors.cyan);
var DropdownMenuInt = /** @class */ (function (_super) {
    __extends(DropdownMenuInt, _super);
    function DropdownMenuInt(props) {
        var _this = _super.call(this, props) || this;
        _this.handleClickOutside = function () {
            _this.container && _this.state.open && _this.toggleOpen();
        };
        _this.setContainer = function (el) {
            _this.container = el;
        };
        _this.handleKeyDown = function (e) {
            switch (e.keyCode) {
                case 32 /* space */:
                case 13 /* enter */:
                case 40 /* down */:
                    _this.toggleOpen();
                    break;
            }
        };
        _this.handleButtonMouseDown = function (e) {
            _this.toggleOpen();
            e.preventDefault();
        };
        _this.handleBlur = function () {
            _this.toggleOpen(false);
        };
        _this.handleChange = function (e) {
            var _a = _this.props, onChange = _a.onChange, keepOpen = _a.keepOpen;
            if (typeof onChange === 'function') {
                onChange({
                    indices: e.value,
                });
            }
            if (!keepOpen) {
                _this.toggleOpen(false);
            }
        };
        _this.state = {
            open: false,
        };
        return _this;
    }
    DropdownMenuInt.prototype.toggleOpen = function (force) {
        var _this = this;
        var open = this.state.open;
        var _a = this.props, items = _a.items, onToggle = _a.onToggle;
        var newState = force ? force : !open;
        this.setState({
            open: newState && !!items.length,
        }, function () {
            if (typeof onToggle === 'function') {
                onToggle({
                    open: _this.state.open,
                });
            }
        });
    };
    DropdownMenuInt.prototype.render = function () {
        var _a = this.props, _b = _a.items, items = _b === void 0 ? [] : _b, _c = _a.text, text = _c === void 0 ? '' : _c, icon = _a.icon, _0 = _a.onChange, _d = _a.menuSize, menuSize = _d === void 0 ? 'normal' : _d, _e = _a.iconSize, iconSize = _e === void 0 ? 1 : _e, rest = __rest(_a, ["items", "text", "icon", "onChange", "menuSize", "iconSize"]);
        var open = this.state.open;
        return (React.createElement(RootContainer, { ref: this.setContainer },
            React.createElement(Flyout_1.Flyout, { open: open, noGutter: true, content: React.createElement(StyledInteractiveList, { borderless: true, open: open, data: items, autoFocus: true, onBlur: this.handleBlur, onChange: this.handleChange }) },
                React.createElement(DropdownButton, __assign({ tabIndex: 0, onKeyDown: this.handleKeyDown, onMouseDown: this.handleButtonMouseDown, open: open, menuSize: menuSize }, rest),
                    icon && React.createElement(Icon_1.Icon, { name: icon, size: iconSize }),
                    React.createElement("span", null, text)))));
    };
    DropdownMenuInt.inner = {
        get RootContainer() { return RootContainer; },
        get Flyout() { return Flyout_1.Flyout; },
        get DropdownButton() { return DropdownButton; },
        get Icon() { return Icon_1.Icon; }
    };
    return DropdownMenuInt;
}(React.PureComponent));
/**
 * A dropdown menu for displaying menu items.
 */
exports.DropdownMenu = react_onclickoutside_1.default(DropdownMenuInt);
exports.DropdownMenu.displayName = 'DropdownMenu';
var templateObject_1, templateObject_2, templateObject_3;
//# sourceMappingURL=data:application/json;base64,