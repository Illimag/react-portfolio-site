"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var styled_1 = require("../../utils/styled");
var colors_1 = require("../../colors");
var textStyles_1 = require("../../textStyles");
var RootContainer = styled_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  ", "\n  \n  color: ", ";\n"], ["\n  ", "\n  \n  color: ", ";\n"])), textStyles_1.getFontStyle({ size: 'small' }), colors_1.dark);
exports.PaginationLayout = Object.assign((function (_a) {
    var _b = _a.host, host = _b === void 0 ? 'div' : _b, controls = _a.controls, content = _a.content, props = __rest(_a, ["host", "controls", "content"]);
    var Content = host;
    return (React.createElement(RootContainer, null,
        React.createElement(Content, __assign({}, props), content),
        controls));
}), { inner: {
        get RootContainer() { return RootContainer; }
    } });
var templateObject_1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGFnaW5hdGlvbkxheW91dC5wYXJ0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvUGFnaW5hdGlvbi9QYWdpbmF0aW9uTGF5b3V0LnBhcnQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsNkJBQStCO0FBQy9CLDZDQUF3QztBQUN4Qyx1Q0FBb0M7QUFDcEMsK0NBQWdEO0FBQ2hELElBQU0sYUFBYSxHQUFHLGdCQUFNLENBQUMsR0FBRyxtR0FBQyxNQUM3QixFQUErQixpQkFFeEIsRUFBSSxLQUNkLEtBSEcseUJBQVksQ0FBQyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUV4QixhQUFJLENBQ2QsQ0FBQztBQU1XLFFBQUEsZ0JBQWdCLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBRSxDQUFDLFVBQUMsRUFBNkM7SUFBM0MsSUFBQSxZQUFZLEVBQVosaUNBQVksRUFBRSxzQkFBUSxFQUFFLG9CQUFPLEVBQUUsbURBQVE7SUFDeEYsSUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDO0lBQ3JCLE9BQU8sQ0FBQyxvQkFBQyxhQUFhO1FBQ3BCLG9CQUFDLE9BQU8sZUFBSyxLQUFLLEdBQUcsT0FBTyxDQUFXO1FBQ3RDLFFBQVEsQ0FDSyxDQUFDLENBQUM7QUFDdEIsQ0FBQyxDQUFnQyxFQUFFLEVBQUUsS0FBSyxFQUFFO1FBQ3BDLElBQUksYUFBYSxLQUFLLE9BQU8sYUFBcUMsQ0FBQyxDQUFDLENBQUM7S0FDeEUsRUFBRSxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlZCc7XG5pbXBvcnQgeyBkYXJrIH0gZnJvbSAnLi4vLi4vY29sb3JzJztcbmltcG9ydCB7IGdldEZvbnRTdHlsZSB9IGZyb20gJy4uLy4uL3RleHRTdHlsZXMnO1xuY29uc3QgUm9vdENvbnRhaW5lciA9IHN0eWxlZC5kaXYgYFxuICAke2dldEZvbnRTdHlsZSh7IHNpemU6ICdzbWFsbCcgfSl9XG4gIFxuICBjb2xvcjogJHtkYXJrfTtcbmA7XG5leHBvcnQgaW50ZXJmYWNlIFBhZ2luYXRpb25Qcm9wcyB7XG4gICAgaG9zdD86IHN0cmluZyB8IFJlYWN0LkNvbXBvbmVudENsYXNzIHwgUmVhY3QuU3RhdGVsZXNzQ29tcG9uZW50O1xuICAgIGNvbnRyb2xzOiBSZWFjdC5SZWFjdENoaWxkO1xuICAgIGNvbnRlbnQ6IFJlYWN0LlJlYWN0Tm9kZTtcbn1cbmV4cG9ydCBjb25zdCBQYWdpbmF0aW9uTGF5b3V0ID0gT2JqZWN0LmFzc2lnbigoKCh7IGhvc3QgPSAnZGl2JywgY29udHJvbHMsIGNvbnRlbnQsIC4uLnByb3BzIH0pID0+IHtcbiAgICBjb25zdCBDb250ZW50ID0gaG9zdDtcbiAgICByZXR1cm4gKDxSb290Q29udGFpbmVyPlxuICAgICAgPENvbnRlbnQgey4uLnByb3BzfT57Y29udGVudH08L0NvbnRlbnQ+XG4gICAgICB7Y29udHJvbHN9XG4gICAgPC9Sb290Q29udGFpbmVyPik7XG59KSBhcyBSZWFjdC5TRkM8UGFnaW5hdGlvblByb3BzPiksIHsgaW5uZXI6IHtcbiAgICAgICAgZ2V0IFJvb3RDb250YWluZXIoKSB7IHJldHVybiBSb290Q29udGFpbmVyIGFzIHR5cGVvZiBSb290Q29udGFpbmVyOyB9XG4gICAgfSB9KTtcbiJdfQ==