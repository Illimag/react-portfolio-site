"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var CloseButton_1 = require("../CloseButton");
var SidebarContainer_part_1 = require("./SidebarContainer.part");
var SidebarBlocker_part_1 = require("./SidebarBlocker.part");
exports.SidebarPopup = Object.assign((function (_a) {
    var _b = _a.open, open = _b === void 0 ? false : _b, size = _a.size, position = _a.position, children = _a.children, onClose = _a.onClose, props = __rest(_a, ["open", "size", "position", "children", "onClose"]);
    return (React.createElement(React.Fragment, null,
        React.createElement(SidebarContainer_part_1.SidebarContainer, __assign({}, props, { open: open, position: position, size: size }),
            React.createElement(CloseButton_1.CloseButton, { onClick: onClose }),
            children),
        React.createElement(SidebarBlocker_part_1.SidebarBlocker, { open: open, onClose: onClose })));
}), { inner: {
        get SidebarContainer() { return SidebarContainer_part_1.SidebarContainer; },
        get CloseButton() { return CloseButton_1.CloseButton; },
        get SidebarBlocker() { return SidebarBlocker_part_1.SidebarBlocker; }
    } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2lkZWJhclBvcHVwLnBhcnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9TaWRlYmFyL1NpZGViYXJQb3B1cC5wYXJ0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsNkJBQStCO0FBQy9CLDhDQUE2QztBQUM3QyxpRUFBMkQ7QUFFM0QsNkRBQXVEO0FBTzFDLFFBQUEsWUFBWSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUUsQ0FBQyxVQUFDLEVBQTZEO0lBQTNELElBQUEsWUFBWSxFQUFaLGlDQUFZLEVBQUUsY0FBSSxFQUFFLHNCQUFRLEVBQUUsc0JBQVEsRUFBRSxvQkFBTyxFQUFFLHVFQUFRO0lBQU8sT0FBQSxDQUFDO1FBQzVHLG9CQUFDLHdDQUFnQixlQUFLLEtBQUssSUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLElBQUk7WUFDckUsb0JBQUMseUJBQVcsSUFBQyxPQUFPLEVBQUUsT0FBTyxHQUFHO1lBQy9CLFFBQVEsQ0FDUTtRQUNuQixvQkFBQyxvQ0FBYyxJQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLE9BQU8sR0FBRyxDQUM5QyxDQUFDLENBQUE7Q0FBQSxDQUFpQyxFQUFFLEVBQUUsS0FBSyxFQUFFO1FBQzFDLElBQUksZ0JBQWdCLEtBQUssT0FBTyx3Q0FBMkMsQ0FBQyxDQUFDLENBQUM7UUFDOUUsSUFBSSxXQUFXLEtBQUssT0FBTyx5QkFBaUMsQ0FBQyxDQUFDLENBQUM7UUFDL0QsSUFBSSxjQUFjLEtBQUssT0FBTyxvQ0FBdUMsQ0FBQyxDQUFDLENBQUM7S0FDM0UsRUFBRSxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBDbG9zZUJ1dHRvbiB9IGZyb20gJy4uL0Nsb3NlQnV0dG9uJztcbmltcG9ydCB7IFNpZGViYXJDb250YWluZXIgfSBmcm9tICcuL1NpZGViYXJDb250YWluZXIucGFydCc7XG5pbXBvcnQgeyBQb3NpdGlvblR5cGUgfSBmcm9tICcuL1NpZGViYXJQb3B1cC50eXBlcy5wYXJ0JztcbmltcG9ydCB7IFNpZGViYXJCbG9ja2VyIH0gZnJvbSAnLi9TaWRlYmFyQmxvY2tlci5wYXJ0JztcbmV4cG9ydCBpbnRlcmZhY2UgU2lkZWJhclBvcHVwUHJvcHMge1xuICAgIHBvc2l0aW9uPzogUG9zaXRpb25UeXBlO1xuICAgIHNpemU/OiBzdHJpbmc7XG4gICAgb3Blbj86IGJvb2xlYW47XG4gICAgb25DbG9zZT86ICgpID0+IHZvaWQ7XG59XG5leHBvcnQgY29uc3QgU2lkZWJhclBvcHVwID0gT2JqZWN0LmFzc2lnbigoKCh7IG9wZW4gPSBmYWxzZSwgc2l6ZSwgcG9zaXRpb24sIGNoaWxkcmVuLCBvbkNsb3NlLCAuLi5wcm9wcyB9KSA9PiAoPD5cbiAgICA8U2lkZWJhckNvbnRhaW5lciB7Li4ucHJvcHN9IG9wZW49e29wZW59IHBvc2l0aW9uPXtwb3NpdGlvbn0gc2l6ZT17c2l6ZX0+XG4gICAgICA8Q2xvc2VCdXR0b24gb25DbGljaz17b25DbG9zZX0vPlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvU2lkZWJhckNvbnRhaW5lcj5cbiAgICA8U2lkZWJhckJsb2NrZXIgb3Blbj17b3Blbn0gb25DbG9zZT17b25DbG9zZX0vPlxuICA8Lz4pKSBhcyBSZWFjdC5GQzxTaWRlYmFyUG9wdXBQcm9wcz4pLCB7IGlubmVyOiB7XG4gICAgICAgIGdldCBTaWRlYmFyQ29udGFpbmVyKCkgeyByZXR1cm4gU2lkZWJhckNvbnRhaW5lciBhcyB0eXBlb2YgU2lkZWJhckNvbnRhaW5lcjsgfSxcbiAgICAgICAgZ2V0IENsb3NlQnV0dG9uKCkgeyByZXR1cm4gQ2xvc2VCdXR0b24gYXMgdHlwZW9mIENsb3NlQnV0dG9uOyB9LFxuICAgICAgICBnZXQgU2lkZWJhckJsb2NrZXIoKSB7IHJldHVybiBTaWRlYmFyQmxvY2tlciBhcyB0eXBlb2YgU2lkZWJhckJsb2NrZXI7IH1cbiAgICB9IH0pO1xuIl19