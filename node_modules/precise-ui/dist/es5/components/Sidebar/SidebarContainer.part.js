"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var styled_1 = require("../../utils/styled");
exports.SidebarContainer = styled_1.default.div(function (_a) {
    var open = _a.open, _b = _a.position, position = _b === void 0 ? 'right' : _b, _c = _a.size, size = _c === void 0 ? '275px' : _c;
    return "\n    transition: all 0.3s cubic-bezier(0, 0, 0.25, 1);\n    user-select: none;\n    position: fixed;\n    background-color: white;\n    z-index: 100001;\n    " + (!open
        ? "\n        visibility: hidden;\n        opacity: 0;\n        overflow: initial;\n        "
        : "\n        visibility: visible;\n        opacity: 1;\n        overflow: auto;\n        ") + "\n    " + getSizeStyles(position, size) + "\n    " + getPositionStyles(position, open, size) + "\n  ";
});
function getSizeStyles(position, size) {
    if (position === 'top' || position === 'bottom') {
        return "\n      height: " + size + "; \n      width: 100%;\n    ";
    }
    else {
        return "\n      width: " + size + "; \n      height: 100%;\n    ";
    }
}
function getPositionStyles(position, open, size) {
    var opposite = {
        top: 'bottom',
        bottom: 'top',
        left: 'right',
        right: 'left',
    };
    var positionValue = {
        top: '0',
        bottom: '0',
        left: '0',
        right: '0',
    };
    positionValue[opposite[position]] = 'auto';
    if (!open) {
        var match = size.match(/^(\d+)(.+?)$/);
        if (match) {
            positionValue[position] = "-" + parseInt(match[1], undefined) / 2 + match[2];
        }
        else {
            positionValue[position] = "-50%";
        }
    }
    return (Object.keys(positionValue)
        .map(function (positionName) { return positionName + ": " + positionValue[positionName]; })
        .join(';') + ';');
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2lkZWJhckNvbnRhaW5lci5wYXJ0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvU2lkZWJhci9TaWRlYmFyQ29udGFpbmVyLnBhcnQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsNkNBQXdDO0FBTzNCLFFBQUEsZ0JBQWdCLEdBQUcsZ0JBQU0sQ0FBQyxHQUFHLENBQW1CLFVBQUMsRUFBNEQ7UUFBMUQsY0FBSSxFQUFFLGdCQUFrQyxFQUFsQyx1Q0FBa0MsRUFBRSxZQUFjLEVBQWQsbUNBQWM7SUFDcEgsT0FBTyxxS0FNTCxDQUFDLElBQUk7UUFDSCxDQUFDLENBQUMsMEZBSUQ7UUFDRCxDQUFDLENBQUMsd0ZBSUQsZUFDSCxhQUFhLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxjQUM3QixpQkFBaUIsQ0FBQyxRQUFRLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxTQUMxQyxDQUFDO0FBQ0osQ0FBQyxDQUFDLENBQUM7QUFDSCxTQUFTLGFBQWEsQ0FBQyxRQUFzQixFQUFFLElBQVk7SUFDdkQsSUFBSSxRQUFRLEtBQUssS0FBSyxJQUFJLFFBQVEsS0FBSyxRQUFRLEVBQUU7UUFDN0MsT0FBTyxxQkFDQyxJQUFJLGlDQUVmLENBQUM7S0FDRDtTQUNJO1FBQ0QsT0FBTyxvQkFDQSxJQUFJLGtDQUVkLENBQUM7S0FDRDtBQUNMLENBQUM7QUFDRCxTQUFTLGlCQUFpQixDQUFDLFFBQXNCLEVBQUUsSUFBYSxFQUFFLElBQVk7SUFDMUUsSUFBTSxRQUFRLEdBQUc7UUFDYixHQUFHLEVBQUUsUUFBUTtRQUNiLE1BQU0sRUFBRSxLQUFLO1FBQ2IsSUFBSSxFQUFFLE9BQU87UUFDYixLQUFLLEVBQUUsTUFBTTtLQUNoQixDQUFDO0lBQ0YsSUFBTSxhQUFhLEdBQUc7UUFDbEIsR0FBRyxFQUFFLEdBQUc7UUFDUixNQUFNLEVBQUUsR0FBRztRQUNYLElBQUksRUFBRSxHQUFHO1FBQ1QsS0FBSyxFQUFFLEdBQUc7S0FDYixDQUFDO0lBQ0YsYUFBYSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQztJQUMzQyxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQ1AsSUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUN6QyxJQUFJLEtBQUssRUFBRTtZQUNQLGFBQWEsQ0FBQyxRQUFRLENBQUMsR0FBRyxNQUFJLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsU0FBUyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUcsQ0FBQztTQUNoRjthQUNJO1lBQ0QsYUFBYSxDQUFDLFFBQVEsQ0FBQyxHQUFHLE1BQU0sQ0FBQztTQUNwQztLQUNKO0lBQ0QsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDO1NBQzdCLEdBQUcsQ0FBQyxVQUFBLFlBQVksSUFBSSxPQUFHLFlBQVksVUFBSyxhQUFhLENBQUMsWUFBWSxDQUFHLEVBQWpELENBQWlELENBQUM7U0FDdEUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDO0FBQzFCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlZCc7XG5pbXBvcnQgeyBQb3NpdGlvblR5cGUgfSBmcm9tICcuL1NpZGViYXJQb3B1cC50eXBlcy5wYXJ0JztcbmV4cG9ydCBpbnRlcmZhY2UgU2lkZWJhckNvbnRhaW5lciB7XG4gICAgb3BlbjogYm9vbGVhbjtcbiAgICBwb3NpdGlvbj86IFBvc2l0aW9uVHlwZTtcbiAgICBzaXplPzogc3RyaW5nO1xufVxuZXhwb3J0IGNvbnN0IFNpZGViYXJDb250YWluZXIgPSBzdHlsZWQuZGl2PFNpZGViYXJDb250YWluZXI+KCh7IG9wZW4sIHBvc2l0aW9uID0gJ3JpZ2h0JyBhcyBQb3NpdGlvblR5cGUsIHNpemUgPSAnMjc1cHgnIH0pID0+IHtcbiAgICByZXR1cm4gYFxuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKTtcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgei1pbmRleDogMTAwMDAxO1xuICAgICR7IW9wZW5cbiAgICAgICAgPyBgXG4gICAgICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgb3ZlcmZsb3c6IGluaXRpYWw7XG4gICAgICAgIGBcbiAgICAgICAgOiBgXG4gICAgICAgIHZpc2liaWxpdHk6IHZpc2libGU7XG4gICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIG92ZXJmbG93OiBhdXRvO1xuICAgICAgICBgfVxuICAgICR7Z2V0U2l6ZVN0eWxlcyhwb3NpdGlvbiwgc2l6ZSl9XG4gICAgJHtnZXRQb3NpdGlvblN0eWxlcyhwb3NpdGlvbiwgb3Blbiwgc2l6ZSl9XG4gIGA7XG59KTtcbmZ1bmN0aW9uIGdldFNpemVTdHlsZXMocG9zaXRpb246IFBvc2l0aW9uVHlwZSwgc2l6ZTogc3RyaW5nKSB7XG4gICAgaWYgKHBvc2l0aW9uID09PSAndG9wJyB8fCBwb3NpdGlvbiA9PT0gJ2JvdHRvbScpIHtcbiAgICAgICAgcmV0dXJuIGBcbiAgICAgIGhlaWdodDogJHtzaXplfTsgXG4gICAgICB3aWR0aDogMTAwJTtcbiAgICBgO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGBcbiAgICAgIHdpZHRoOiAke3NpemV9OyBcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICBgO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGdldFBvc2l0aW9uU3R5bGVzKHBvc2l0aW9uOiBQb3NpdGlvblR5cGUsIG9wZW46IGJvb2xlYW4sIHNpemU6IHN0cmluZykge1xuICAgIGNvbnN0IG9wcG9zaXRlID0ge1xuICAgICAgICB0b3A6ICdib3R0b20nLFxuICAgICAgICBib3R0b206ICd0b3AnLFxuICAgICAgICBsZWZ0OiAncmlnaHQnLFxuICAgICAgICByaWdodDogJ2xlZnQnLFxuICAgIH07XG4gICAgY29uc3QgcG9zaXRpb25WYWx1ZSA9IHtcbiAgICAgICAgdG9wOiAnMCcsXG4gICAgICAgIGJvdHRvbTogJzAnLFxuICAgICAgICBsZWZ0OiAnMCcsXG4gICAgICAgIHJpZ2h0OiAnMCcsXG4gICAgfTtcbiAgICBwb3NpdGlvblZhbHVlW29wcG9zaXRlW3Bvc2l0aW9uXV0gPSAnYXV0byc7XG4gICAgaWYgKCFvcGVuKSB7XG4gICAgICAgIGNvbnN0IG1hdGNoID0gc2l6ZS5tYXRjaCgvXihcXGQrKSguKz8pJC8pO1xuICAgICAgICBpZiAobWF0Y2gpIHtcbiAgICAgICAgICAgIHBvc2l0aW9uVmFsdWVbcG9zaXRpb25dID0gYC0ke3BhcnNlSW50KG1hdGNoWzFdLCB1bmRlZmluZWQpIC8gMn0ke21hdGNoWzJdfWA7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBwb3NpdGlvblZhbHVlW3Bvc2l0aW9uXSA9IGAtNTAlYDtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gKE9iamVjdC5rZXlzKHBvc2l0aW9uVmFsdWUpXG4gICAgICAgIC5tYXAocG9zaXRpb25OYW1lID0+IGAke3Bvc2l0aW9uTmFtZX06ICR7cG9zaXRpb25WYWx1ZVtwb3NpdGlvbk5hbWVdfWApXG4gICAgICAgIC5qb2luKCc7JykgKyAnOycpO1xufVxuIl19