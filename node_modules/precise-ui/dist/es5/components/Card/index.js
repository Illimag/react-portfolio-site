"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var styled_1 = require("../../utils/styled");
var StackPanel_1 = require("../StackPanel");
var StyledCard = styled_1.default(StackPanel_1.StackPanel)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  position: relative;\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n"], ["\n  position: relative;\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n"])));
var StyledCardChildWrapper = styled_1.default.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  box-sizing: border-box;\n  overflow: auto;\n  transition: flex-grow 0.4s;\n  ", ";\n"], ["\n  box-sizing: border-box;\n  overflow: auto;\n  transition: flex-grow 0.4s;\n  ",
    ";\n"])), function (props) { return props.grow
    ? "\n    flex-grow: " + props.grow + ";\n    flex-basis: 0;"
    : ''; });
exports.Card = Object.assign((function (_a) {
    var _b = _a.orientation, orientation = _b === void 0 ? 'vertical' : _b, children = _a.children, propsLayout = _a.layout, rest = __rest(_a, ["orientation", "children", "layout"]);
    var layout = propsLayout || React.Children.map(children, function (_) { return 0; }) || [];
    var cardChildComponents = [];
    React.Children.forEach(children, function (child, index) {
        if (!child) {
            return;
        }
        var _a = child.props, grandChildren = _a.children, childProps = __rest(_a, ["children"]);
        var sticky = children && child.type && child.type.displayName === 'Sticky';
        cardChildComponents.push(sticky ? (React.createElement(child.type, __assign({ key: index }, childProps), grandChildren)) : (React.createElement(StyledCardChildWrapper, { key: index, grow: layout[index] },
            React.createElement(child.type, __assign({}, childProps), grandChildren))));
    });
    return (React.createElement(StyledCard, __assign({ direction: orientation === 'vertical' ? StackPanel_1.StackPanelDirection.topToBottom : StackPanel_1.StackPanelDirection.leftToRight }, rest), cardChildComponents));
}), { inner: {
        get StyledCardChildWrapper() { return StyledCardChildWrapper; },
        get StyledCard() { return StyledCard; }
    } });
exports.Card.displayName = 'Card';
var templateObject_1, templateObject_2;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9DYXJkL2luZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDZCQUErQjtBQUMvQiw2Q0FBd0M7QUFDeEMsNENBQWdFO0FBc0JoRSxJQUFNLFVBQVUsR0FBRyxnQkFBTSxDQUFDLHVCQUFVLENBQUMsdUxBQUMsb0hBT3JDLElBQUEsQ0FBQztBQUNGLElBQU0sc0JBQXNCLEdBQUcsZ0JBQU0sQ0FBQyxHQUFHLDZKQUF1QixtRkFJNUQ7SUFJSSxLQUNQLEtBTEcsVUFBQSxLQUFLLElBQUksT0FBQSxLQUFLLENBQUMsSUFBSTtJQUNuQixDQUFDLENBQUMsc0JBQ1csS0FBSyxDQUFDLElBQUksMEJBQ1I7SUFDZixDQUFDLENBQUMsRUFBRSxFQUpLLENBSUwsQ0FDUCxDQUFDO0FBQ1csUUFBQSxJQUFJLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBRSxDQUFDLFVBQUMsRUFBb0U7SUFBbEUsSUFBQSxtQkFBd0IsRUFBeEIsNkNBQXdCLEVBQUUsc0JBQVEsRUFBRSx1QkFBbUIsRUFBRSx3REFBTztJQUNuRyxJQUFNLE1BQU0sR0FBRyxXQUFXLElBQUksS0FBSyxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxFQUFELENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN6RSxJQUFNLG1CQUFtQixHQUFlLEVBQUUsQ0FBQztJQUMzQyxLQUFLLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsVUFBQyxLQUF1QyxFQUFFLEtBQUs7UUFDNUUsSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNSLE9BQU87U0FDVjtRQUNELElBQU0sZ0JBQXdELEVBQXRELDJCQUF1QixFQUFFLHFDQUE2QixDQUFDO1FBQy9ELElBQU0sTUFBTSxHQUFHLFFBQVEsSUFBSSxLQUFLLENBQUMsSUFBSSxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBVyxLQUFLLFFBQVEsQ0FBQztRQUM3RSxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLG9CQUFDLEtBQUssQ0FBQyxJQUFJLGFBQUMsR0FBRyxFQUFFLEtBQUssSUFBTSxVQUFVLEdBQ3RFLGFBQWEsQ0FDSCxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsb0JBQUMsc0JBQXNCLElBQUMsR0FBRyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQztZQUN2RSxvQkFBQyxLQUFLLENBQUMsSUFBSSxlQUFLLFVBQVUsR0FBRyxhQUFhLENBQWMsQ0FDakMsQ0FBQyxDQUFDLENBQUM7SUFDaEMsQ0FBQyxDQUFDLENBQUM7SUFDSCxPQUFPLENBQUMsb0JBQUMsVUFBVSxhQUFDLFNBQVMsRUFBRSxXQUFXLEtBQUssVUFBVSxDQUFDLENBQUMsQ0FBQyxnQ0FBbUIsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLGdDQUFtQixDQUFDLFdBQVcsSUFBTSxJQUFJLEdBQ3BJLG1CQUFtQixDQUNULENBQUMsQ0FBQztBQUNuQixDQUFDLENBQTBCLEVBQUUsRUFBRSxLQUFLLEVBQUU7UUFDOUIsSUFBSSxzQkFBc0IsS0FBSyxPQUFPLHNCQUF1RCxDQUFDLENBQUMsQ0FBQztRQUNoRyxJQUFJLFVBQVUsS0FBSyxPQUFPLFVBQStCLENBQUMsQ0FBQyxDQUFDO0tBQy9ELEVBQUUsQ0FBQyxDQUFDO0FBQ1QsWUFBSSxDQUFDLFdBQVcsR0FBRyxNQUFNLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJy4uLy4uL3V0aWxzL3N0eWxlZCc7XG5pbXBvcnQgeyBTdGFja1BhbmVsLCBTdGFja1BhbmVsRGlyZWN0aW9uIH0gZnJvbSAnLi4vU3RhY2tQYW5lbCc7XG5pbXBvcnQgeyBTdGFuZGFyZFByb3BzIH0gZnJvbSAnLi4vLi4vY29tbW9uJztcbmV4cG9ydCBpbnRlcmZhY2UgQ2FyZFByb3BzIGV4dGVuZHMgU3RhbmRhcmRQcm9wcyB7XG4gICAgLyoqXG4gICAgICogRGlyZWN0aW9uIG9mIHRoZSBjYXJkIGlzIGRldGVybWluaW5nIHdoZXRoZXIgdGhlIGNhcmQgc2hvdWxkIGJlXG4gICAgICogbGF5ZWQtb3V0IGZyb20gdG9wIHRvIGJvdHRvbSAodmVydGljYWwpIG9yIGZyb20gbGVmdCB0byByaWdodCAoaG9yaXpvbnRhbClcbiAgICAgKi9cbiAgICBvcmllbnRhdGlvbj86ICdob3Jpem9udGFsJyB8ICd2ZXJ0aWNhbCc7XG4gICAgLyoqXG4gICAgICogTGF5b3V0IHByb3BlcnR5IGxldHMgdGhlIGNvbnN1bWVyIHRvIGRldGVybWluZSBzcGFjaW5nIGRpc3RyaWJ1dGlvbiBvZiB0aCBjaGlsZHJlblxuICAgICAqIERlZmF1bHQgaXMgMSBmb3IgZXZlciBjaGlsZCwgbWVhbmluZyB0aGF0IGFsbCB0aGUgY2hpbGQgZWxlbWVudHNcbiAgICAgKiB3aWxsIGJlIGRpc3RyaWJ1dGVkIGluIGEgd2F5IHRoYXQgdGhleSBzaGFyZSBzcGFjZSBlcXVhbGx5XG4gICAgICovXG4gICAgbGF5b3V0PzogQXJyYXk8bnVtYmVyPjtcbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSBjaGlsZHJlbiBvZiB0aGUgY2FyZCB0byByZW5kZXIuXG4gICAgICovXG4gICAgY2hpbGRyZW4/OiBSZWFjdC5SZWFjdE5vZGU7XG59XG5leHBvcnQgaW50ZXJmYWNlIFN0eWxlZENhcmRDaGlsZFByb3BzIHtcbiAgICBncm93PzogbnVtYmVyO1xufVxuY29uc3QgU3R5bGVkQ2FyZCA9IHN0eWxlZChTdGFja1BhbmVsKSBgXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuYDtcbmNvbnN0IFN0eWxlZENhcmRDaGlsZFdyYXBwZXIgPSBzdHlsZWQuZGl2PFN0eWxlZENhcmRDaGlsZFByb3BzPiBgXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIG92ZXJmbG93OiBhdXRvO1xuICB0cmFuc2l0aW9uOiBmbGV4LWdyb3cgMC40cztcbiAgJHtwcm9wcyA9PiBwcm9wcy5ncm93XG4gICAgPyBgXG4gICAgZmxleC1ncm93OiAke3Byb3BzLmdyb3d9O1xuICAgIGZsZXgtYmFzaXM6IDA7YFxuICAgIDogJyd9O1xuYDtcbmV4cG9ydCBjb25zdCBDYXJkID0gT2JqZWN0LmFzc2lnbigoKCh7IG9yaWVudGF0aW9uID0gJ3ZlcnRpY2FsJywgY2hpbGRyZW4sIGxheW91dDogcHJvcHNMYXlvdXQsIC4uLnJlc3QgfSkgPT4ge1xuICAgIGNvbnN0IGxheW91dCA9IHByb3BzTGF5b3V0IHx8IFJlYWN0LkNoaWxkcmVuLm1hcChjaGlsZHJlbiwgXyA9PiAwKSB8fCBbXTtcbiAgICBjb25zdCBjYXJkQ2hpbGRDb21wb25lbnRzOiBBcnJheTxhbnk+ID0gW107XG4gICAgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaChjaGlsZHJlbiwgKGNoaWxkOiBSZWFjdC5Db21wb25lbnRFbGVtZW50PGFueSwgYW55PiwgaW5kZXgpID0+IHtcbiAgICAgICAgaWYgKCFjaGlsZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHsgY2hpbGRyZW46IGdyYW5kQ2hpbGRyZW4sIC4uLmNoaWxkUHJvcHMgfSA9IGNoaWxkLnByb3BzO1xuICAgICAgICBjb25zdCBzdGlja3kgPSBjaGlsZHJlbiAmJiBjaGlsZC50eXBlICYmIGNoaWxkLnR5cGUuZGlzcGxheU5hbWUgPT09ICdTdGlja3knO1xuICAgICAgICBjYXJkQ2hpbGRDb21wb25lbnRzLnB1c2goc3RpY2t5ID8gKDxjaGlsZC50eXBlIGtleT17aW5kZXh9IHsuLi5jaGlsZFByb3BzfT5cbiAgICAgICAgICB7Z3JhbmRDaGlsZHJlbn1cbiAgICAgICAgPC9jaGlsZC50eXBlPikgOiAoPFN0eWxlZENhcmRDaGlsZFdyYXBwZXIga2V5PXtpbmRleH0gZ3Jvdz17bGF5b3V0W2luZGV4XX0+XG4gICAgICAgICAgPGNoaWxkLnR5cGUgey4uLmNoaWxkUHJvcHN9PntncmFuZENoaWxkcmVufTwvY2hpbGQudHlwZT5cbiAgICAgICAgPC9TdHlsZWRDYXJkQ2hpbGRXcmFwcGVyPikpO1xuICAgIH0pO1xuICAgIHJldHVybiAoPFN0eWxlZENhcmQgZGlyZWN0aW9uPXtvcmllbnRhdGlvbiA9PT0gJ3ZlcnRpY2FsJyA/IFN0YWNrUGFuZWxEaXJlY3Rpb24udG9wVG9Cb3R0b20gOiBTdGFja1BhbmVsRGlyZWN0aW9uLmxlZnRUb1JpZ2h0fSB7Li4ucmVzdH0+XG4gICAgICB7Y2FyZENoaWxkQ29tcG9uZW50c31cbiAgICA8L1N0eWxlZENhcmQ+KTtcbn0pIGFzIFJlYWN0LlNGQzxDYXJkUHJvcHM+KSwgeyBpbm5lcjoge1xuICAgICAgICBnZXQgU3R5bGVkQ2FyZENoaWxkV3JhcHBlcigpIHsgcmV0dXJuIFN0eWxlZENhcmRDaGlsZFdyYXBwZXIgYXMgdHlwZW9mIFN0eWxlZENhcmRDaGlsZFdyYXBwZXI7IH0sXG4gICAgICAgIGdldCBTdHlsZWRDYXJkKCkgeyByZXR1cm4gU3R5bGVkQ2FyZCBhcyB0eXBlb2YgU3R5bGVkQ2FyZDsgfVxuICAgIH0gfSk7XG5DYXJkLmRpc3BsYXlOYW1lID0gJ0NhcmQnO1xuIl19