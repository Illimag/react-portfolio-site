import * as React from 'react';
import { StandardProps } from '../../common';
export interface CardProps extends StandardProps {
    /**
     * Direction of the card is determining whether the card should be
     * layed-out from top to bottom (vertical) or from left to right (horizontal)
     */
    orientation?: 'horizontal' | 'vertical';
    /**
     * Layout property lets the consumer to determine spacing distribution of th children
     * Default is 1 for ever child, meaning that all the child elements
     * will be distributed in a way that they share space equally
     */
    layout?: Array<number>;
    /**
     * Sets the children of the card to render.
     */
    children?: React.ReactNode;
}
export interface StyledCardChildProps {
    grow?: number;
}
export declare const Card: React.FunctionComponent<CardProps> & {
    inner: {
        readonly StyledCardChildWrapper: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, StyledCardChildProps, never>;
        readonly StyledCard: import("styled-components").StyledComponent<React.FunctionComponent<import("../StackPanel").StackPanelProps> & {
            inner: {
                readonly StackLayout: import("styled-components").StyledComponent<"div", import("../../common").PreciseTheme, import("../StackPanel").StackLayoutProps, never>;
            };
        }, import("../../common").PreciseTheme, {}, never>;
    };
};
