"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var remCalc_1 = require("../utils/remCalc");
var styled_1 = require("../utils/styled");
var distance_1 = require("../distance");
var PreviewImageWrapper = styled_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: inline-flex;\n  background-color: ", ";\n  padding: ", " ", " ", " ", ";\n  margin-right: ", ";\n  margin-bottom: ", ";\n"], ["\n  display: inline-flex;\n  background-color: ", ";\n  padding: ", " ", " ", " ", ";\n  margin-right: ", ";\n  margin-bottom: ", ";\n"])), styled_1.themed(function (_a) {
    var theme = _a.theme;
    return theme.ui3;
}), distance_1.distance.xsmall, distance_1.distance.small, distance_1.distance.xsmall, distance_1.distance.xsmall, distance_1.distance.xsmall, distance_1.distance.xsmall);
var PreviewImage = styled_1.default.img(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  max-width: ", ";\n  max-height: ", ";\n"], ["\n  max-width: ", ";\n  max-height: ", ";\n"])), remCalc_1.remCalc('96px'), remCalc_1.remCalc('96px'));
exports.StyledFileImagePreview = Object.assign((function (_a) {
    var src = _a.src, children = _a.children;
    return (React.createElement(PreviewImageWrapper, null,
        src && React.createElement(PreviewImage, { src: src }),
        children));
}), { inner: {
        get PreviewImageWrapper() { return PreviewImageWrapper; },
        get PreviewImage() { return PreviewImage; }
    } });
var templateObject_1, templateObject_2;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3R5bGVkRmlsZUltYWdlUHJldmlldy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9xdWFya3MvU3R5bGVkRmlsZUltYWdlUHJldmlldy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsNkJBQStCO0FBQy9CLDRDQUEyQztBQUMzQywwQ0FBaUQ7QUFDakQsd0NBQXVDO0FBUXZDLElBQU0sbUJBQW1CLEdBQUcsZ0JBQU0sQ0FBQyxHQUFHLDJNQUFDLGlEQUVqQixFQUFnQyxnQkFDekMsRUFBZSxHQUFJLEVBQWMsR0FBSSxFQUFlLEdBQUksRUFBZSxxQkFDbEUsRUFBZSxzQkFDZCxFQUFlLEtBQ2pDLEtBSnFCLGVBQU0sQ0FBQyxVQUFDLEVBQVM7UUFBUCxnQkFBSztJQUFPLE9BQUEsS0FBSyxDQUFDLEdBQUc7QUFBVCxDQUFTLENBQUMsRUFDekMsbUJBQVEsQ0FBQyxNQUFNLEVBQUksbUJBQVEsQ0FBQyxLQUFLLEVBQUksbUJBQVEsQ0FBQyxNQUFNLEVBQUksbUJBQVEsQ0FBQyxNQUFNLEVBQ2xFLG1CQUFRLENBQUMsTUFBTSxFQUNkLG1CQUFRLENBQUMsTUFBTSxDQUNqQyxDQUFDO0FBQ0YsSUFBTSxZQUFZLEdBQUcsZ0JBQU0sQ0FBQyxHQUFHLGdIQUFDLGlCQUNqQixFQUFlLG1CQUNkLEVBQWUsS0FDOUIsS0FGYyxpQkFBTyxDQUFDLE1BQU0sQ0FBQyxFQUNkLGlCQUFPLENBQUMsTUFBTSxDQUFDLENBQzlCLENBQUM7QUFDVyxRQUFBLHNCQUFzQixHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUUsQ0FBQyxVQUFDLEVBQWlCO1FBQWYsWUFBRyxFQUFFLHNCQUFRO0lBQ2xFLE9BQU8sQ0FBQyxvQkFBQyxtQkFBbUI7UUFDekIsR0FBRyxJQUFJLG9CQUFDLFlBQVksSUFBQyxHQUFHLEVBQUUsR0FBRyxHQUFHO1FBQ2hDLFFBQVEsQ0FDVyxDQUFDLENBQUM7QUFDNUIsQ0FBQyxDQUE0QyxFQUFFLEVBQUUsS0FBSyxFQUFFO1FBQ2hELElBQUksbUJBQW1CLEtBQUssT0FBTyxtQkFBaUQsQ0FBQyxDQUFDLENBQUM7UUFDdkYsSUFBSSxZQUFZLEtBQUssT0FBTyxZQUFtQyxDQUFDLENBQUMsQ0FBQztLQUNyRSxFQUFFLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHJlbUNhbGMgfSBmcm9tICcuLi91dGlscy9yZW1DYWxjJztcbmltcG9ydCBzdHlsZWQsIHsgdGhlbWVkIH0gZnJvbSAnLi4vdXRpbHMvc3R5bGVkJztcbmltcG9ydCB7IGRpc3RhbmNlIH0gZnJvbSAnLi4vZGlzdGFuY2UnO1xuZXhwb3J0IGludGVyZmFjZSBGaWxlSW1hZ2VQcmV2aWV3IHtcbiAgICBmaWxlOiBGaWxlO1xuICAgIGRhdGE6IHN0cmluZztcbn1cbmV4cG9ydCBpbnRlcmZhY2UgU3R5bGVkRmlsZUltYWdlUHJldmlld1Byb3BzIHtcbiAgICBzcmM/OiBzdHJpbmc7XG59XG5jb25zdCBQcmV2aWV3SW1hZ2VXcmFwcGVyID0gc3R5bGVkLmRpdiBgXG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoZW1lZCgoeyB0aGVtZSB9KSA9PiB0aGVtZS51aTMpfTtcbiAgcGFkZGluZzogJHtkaXN0YW5jZS54c21hbGx9ICR7ZGlzdGFuY2Uuc21hbGx9ICR7ZGlzdGFuY2UueHNtYWxsfSAke2Rpc3RhbmNlLnhzbWFsbH07XG4gIG1hcmdpbi1yaWdodDogJHtkaXN0YW5jZS54c21hbGx9O1xuICBtYXJnaW4tYm90dG9tOiAke2Rpc3RhbmNlLnhzbWFsbH07XG5gO1xuY29uc3QgUHJldmlld0ltYWdlID0gc3R5bGVkLmltZyBgXG4gIG1heC13aWR0aDogJHtyZW1DYWxjKCc5NnB4Jyl9O1xuICBtYXgtaGVpZ2h0OiAke3JlbUNhbGMoJzk2cHgnKX07XG5gO1xuZXhwb3J0IGNvbnN0IFN0eWxlZEZpbGVJbWFnZVByZXZpZXcgPSBPYmplY3QuYXNzaWduKCgoKHsgc3JjLCBjaGlsZHJlbiB9KSA9PiB7XG4gICAgcmV0dXJuICg8UHJldmlld0ltYWdlV3JhcHBlcj5cbiAgICAgIHtzcmMgJiYgPFByZXZpZXdJbWFnZSBzcmM9e3NyY30vPn1cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L1ByZXZpZXdJbWFnZVdyYXBwZXI+KTtcbn0pIGFzIFJlYWN0LlNGQzxTdHlsZWRGaWxlSW1hZ2VQcmV2aWV3UHJvcHM+KSwgeyBpbm5lcjoge1xuICAgICAgICBnZXQgUHJldmlld0ltYWdlV3JhcHBlcigpIHsgcmV0dXJuIFByZXZpZXdJbWFnZVdyYXBwZXIgYXMgdHlwZW9mIFByZXZpZXdJbWFnZVdyYXBwZXI7IH0sXG4gICAgICAgIGdldCBQcmV2aWV3SW1hZ2UoKSB7IHJldHVybiBQcmV2aWV3SW1hZ2UgYXMgdHlwZW9mIFByZXZpZXdJbWFnZTsgfVxuICAgIH0gfSk7XG4iXX0=