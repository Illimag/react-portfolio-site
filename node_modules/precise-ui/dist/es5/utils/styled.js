"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var styledComponents = require("styled-components");
var themes_1 = require("./../themes");
var _a = styledComponents, styled = _a.default, css = _a.css, keyframes = _a.keyframes, createGlobalStyle = _a.createGlobalStyle, withTheme = _a.withTheme, ThemeProvider = _a.ThemeProvider, ThemeConsumer = _a.ThemeConsumer, ThemeContext = _a.ThemeContext, isStyledComponent = _a.isStyledComponent, ServerStyleSheet = _a.ServerStyleSheet, StyleSheetManager = _a.StyleSheetManager;
exports.css = css;
exports.keyframes = keyframes;
exports.createGlobalStyle = createGlobalStyle;
exports.withTheme = withTheme;
exports.ThemeProvider = ThemeProvider;
exports.ThemeConsumer = ThemeConsumer;
exports.ThemeContext = ThemeContext;
exports.isStyledComponent = isStyledComponent;
exports.ServerStyleSheet = ServerStyleSheet;
exports.StyleSheetManager = StyleSheetManager;
/*
  Helper function which insures that theme is always available in the interpolation callback.
*/
exports.themed = function (interpolation) { return function (props) {
    var _a = props, theme = _a.theme, rest = __rest(_a, ["theme"]);
    var hasNestedProps = function (prop) {
        return typeof prop === 'object' && !Array.isArray(prop) && Object.keys(prop).length > 0;
    };
    var mergedTheme = Object.keys(theme).reduce(function (acc, prop) { return (hasNestedProps(theme[prop]) ? (acc[prop] = __assign({}, acc[prop], theme[prop])) : (acc[prop] = theme[prop]), acc); }, __assign({}, themes_1.light));
    return interpolation(__assign({ theme: mergedTheme }, rest));
}; };
exports.default = styled;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3R5bGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWxzL3N0eWxlZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsb0RBQXNEO0FBUXRELHNDQUFvQztBQUc5QixJQUFBLHFCQVk0RCxFQVhoRSxtQkFBZSxFQUNmLFlBQUcsRUFDSCx3QkFBUyxFQUNULHdDQUFpQixFQUNqQix3QkFBUyxFQUNULGdDQUFhLEVBQ2IsZ0NBQWEsRUFDYiw4QkFBWSxFQUNaLHdDQUFpQixFQUNqQixzQ0FBZ0IsRUFDaEIsd0NBQ2dFLENBQUM7QUE2QmpFLGtCQUFHO0FBQ0gsOEJBQVM7QUFDVCw4Q0FBaUI7QUFDakIsOEJBQVM7QUFDVCxzQ0FBYTtBQUNiLHNDQUFhO0FBQ2Isb0NBQVk7QUFDWiw4Q0FBaUI7QUFDakIsNENBQWdCO0FBQ2hCLDhDQUFpQjtBQTlCbkI7O0VBRUU7QUFDVyxRQUFBLE1BQU0sR0FBRyxVQUFRLGFBQWdFLElBQUssT0FBQSxVQUNqRyxLQUE2QztJQUU3QyxJQUFNLFVBQWtFLEVBQWhFLGdCQUFLLEVBQUUsNEJBQXlELENBQUM7SUFFekUsSUFBTSxjQUFjLEdBQUcsVUFBQyxJQUFZO1FBQ2xDLE9BQUEsT0FBTyxJQUFJLEtBQUssUUFBUSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDO0lBQWhGLENBQWdGLENBQUM7SUFFbkYsSUFBTSxXQUFXLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLENBQzNDLFVBQUMsR0FBRyxFQUFFLElBQUksSUFBSyxPQUFBLENBQ2IsY0FBYyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsZ0JBQVEsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFLLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FDOUcsRUFGYyxDQUVkLGVBQ0ksY0FBSyxFQUNYLENBQUM7SUFDRixPQUFPLGFBQWEsWUFBRyxLQUFLLEVBQUUsV0FBVyxJQUFLLElBQUksRUFBRyxDQUFDO0FBQ3hELENBQUMsRUFma0csQ0FlbEcsQ0FBQztBQWdCRixrQkFBZSxNQUFNLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiB0c2xpbnQ6ZGlzYWJsZTppbXBvcnQtYmxhY2tsaXN0ICovXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgKiBhcyBzdHlsZWRDb21wb25lbnRzIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcbmltcG9ydCB7XG4gIFRoZW1lZFN0eWxlZENvbXBvbmVudHNNb2R1bGUsXG4gIFRoZW1lZENzc0Z1bmN0aW9uLFxuICBTdHlsZWRGdW5jdGlvbixcbiAgVGhlbWVkU3R5bGVkUHJvcHMsXG4gIEludGVycG9sYXRpb25GdW5jdGlvbixcbn0gZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgbGlnaHQgfSBmcm9tICcuLy4uL3RoZW1lcyc7XG5pbXBvcnQgeyBQcmVjaXNlVGhlbWUsIFByZWNpc2VGdWxsVGhlbWUsIE9taXQgfSBmcm9tICcuLi9jb21tb24nO1xuXG5jb25zdCB7XG4gIGRlZmF1bHQ6IHN0eWxlZCxcbiAgY3NzLFxuICBrZXlmcmFtZXMsXG4gIGNyZWF0ZUdsb2JhbFN0eWxlLFxuICB3aXRoVGhlbWUsXG4gIFRoZW1lUHJvdmlkZXIsXG4gIFRoZW1lQ29uc3VtZXIsXG4gIFRoZW1lQ29udGV4dCxcbiAgaXNTdHlsZWRDb21wb25lbnQsXG4gIFNlcnZlclN0eWxlU2hlZXQsXG4gIFN0eWxlU2hlZXRNYW5hZ2VyLFxufSA9IHN0eWxlZENvbXBvbmVudHMgYXMgVGhlbWVkU3R5bGVkQ29tcG9uZW50c01vZHVsZTxQcmVjaXNlVGhlbWU+O1xuXG5leHBvcnQgdHlwZSBXaXRoT3B0aW9uYWxUaGVtZTxQIGV4dGVuZHMgeyB0aGVtZT86IFQgfSwgVD4gPSBPbWl0PFAsICd0aGVtZSc+ICYgeyB0aGVtZT86IFQgfTtcblxuZXhwb3J0IHR5cGUgUHJlY2lzZUludGVycG9sYXRpb25GdW5jPFByb3BzLCBUaGVtZT4gPSBJbnRlcnBvbGF0aW9uRnVuY3Rpb248XG4gIFRoZW1lZFN0eWxlZFByb3BzPFdpdGhPcHRpb25hbFRoZW1lPFByb3BzLCBUaGVtZT4sIFRoZW1lPlxuPjtcblxuLypcbiAgSGVscGVyIGZ1bmN0aW9uIHdoaWNoIGluc3VyZXMgdGhhdCB0aGVtZSBpcyBhbHdheXMgYXZhaWxhYmxlIGluIHRoZSBpbnRlcnBvbGF0aW9uIGNhbGxiYWNrLlxuKi9cbmV4cG9ydCBjb25zdCB0aGVtZWQgPSA8UHJvcHM+KGludGVycG9sYXRpb246IFByZWNpc2VJbnRlcnBvbGF0aW9uRnVuYzxQcm9wcywgUHJlY2lzZUZ1bGxUaGVtZT4pID0+IChcbiAgcHJvcHM6IFRoZW1lZFN0eWxlZFByb3BzPFByb3BzLCBQcmVjaXNlVGhlbWU+LFxuKSA9PiB7XG4gIGNvbnN0IHsgdGhlbWUsIC4uLnJlc3QgfSA9IHByb3BzIGFzIFRoZW1lZFN0eWxlZFByb3BzPGFueSwgUHJlY2lzZVRoZW1lPjtcblxuICBjb25zdCBoYXNOZXN0ZWRQcm9wcyA9IChwcm9wOiBvYmplY3QpID0+XG4gICAgdHlwZW9mIHByb3AgPT09ICdvYmplY3QnICYmICFBcnJheS5pc0FycmF5KHByb3ApICYmIE9iamVjdC5rZXlzKHByb3ApLmxlbmd0aCA+IDA7XG5cbiAgY29uc3QgbWVyZ2VkVGhlbWUgPSBPYmplY3Qua2V5cyh0aGVtZSkucmVkdWNlKFxuICAgIChhY2MsIHByb3ApID0+IChcbiAgICAgIGhhc05lc3RlZFByb3BzKHRoZW1lW3Byb3BdKSA/IChhY2NbcHJvcF0gPSB7IC4uLmFjY1twcm9wXSwgLi4udGhlbWVbcHJvcF0gfSkgOiAoYWNjW3Byb3BdID0gdGhlbWVbcHJvcF0pLCBhY2NcbiAgICApLFxuICAgIHsgLi4ubGlnaHQgfSxcbiAgKTtcbiAgcmV0dXJuIGludGVycG9sYXRpb24oeyB0aGVtZTogbWVyZ2VkVGhlbWUsIC4uLnJlc3QgfSk7XG59O1xuXG5leHBvcnQge1xuICBjc3MsXG4gIGtleWZyYW1lcyxcbiAgY3JlYXRlR2xvYmFsU3R5bGUsXG4gIHdpdGhUaGVtZSxcbiAgVGhlbWVQcm92aWRlcixcbiAgVGhlbWVDb25zdW1lcixcbiAgVGhlbWVDb250ZXh0LFxuICBpc1N0eWxlZENvbXBvbmVudCxcbiAgU2VydmVyU3R5bGVTaGVldCxcbiAgU3R5bGVTaGVldE1hbmFnZXIsXG4gIFRoZW1lZENzc0Z1bmN0aW9uLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgc3R5bGVkO1xuIl19