'use strict';

exports.__esModule = true;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Gist = function (_React$PureComponent) {
  _inherits(Gist, _React$PureComponent);

  function Gist() {
    _classCallCheck(this, Gist);

    return _possibleConstructorReturn(this, _React$PureComponent.apply(this, arguments));
  }

  Gist.prototype.componentDidMount = function componentDidMount() {
    this._updateIframeContent();
  };

  Gist.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
    this._updateIframeContent();
  };

  Gist.prototype._defineUrl = function _defineUrl() {
    var _props = this.props,
        id = _props.id,
        file = _props.file;


    var fileArg = file ? '?file=' + file : '';

    return 'https://gist.github.com/' + id + '.js' + fileArg;
  };

  Gist.prototype._updateIframeContent = function _updateIframeContent() {
    var _props2 = this.props,
        id = _props2.id,
        file = _props2.file;


    var iframe = this.iframeNode;

    var doc = iframe.document;
    if (iframe.contentDocument) doc = iframe.contentDocument;else if (iframe.contentWindow) doc = iframe.contentWindow.document;

    var gistLink = this._defineUrl();
    var gistScript = '<script type="text/javascript" src="' + gistLink + '"></script>';
    var styles = '<style>*{font-size:12px;}</style>';
    var elementId = file ? 'gist-' + id + '-' + file : 'gist-' + id;
    var resizeScript = 'onload="parent.document.getElementById(\'' + elementId + '\').style.height=document.body.scrollHeight + \'px\'"';
    var iframeHtml = '<html><head><base target="_parent">' + styles + '</head><body ' + resizeScript + '>' + gistScript + '</body></html>';

    doc.open();
    doc.writeln(iframeHtml);
    doc.close();
  };

  Gist.prototype.render = function render() {
    var _this2 = this;

    var _props3 = this.props,
        id = _props3.id,
        file = _props3.file;


    return _react2.default.createElement('iframe', {
      ref: function ref(n) {
        _this2.iframeNode = n;
      },
      width: '100%',
      frameBorder: 0,
      id: file ? 'gist-' + id + '-' + file : 'gist-' + id
    });
  };

  return Gist;
}(_react2.default.PureComponent);

exports.default = Gist;
module.exports = exports['default'];