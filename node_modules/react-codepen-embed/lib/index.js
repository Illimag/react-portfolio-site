"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; return newObj; } }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var SCRIPT_URL = 'https://production-assets.codepen.io/assets/embed/ei.js';
var LOAD_STATE = {
  booting: '__booting__',
  error: '__error__',
  loading: '__loading__',
  loaded: '__loaded__'
};

var ReactCodepen = function ReactCodepen(props) {
  var _useState = (0, _react.useState)(LOAD_STATE.booting),
      _useState2 = _slicedToArray(_useState, 2),
      loadState = _useState2[0],
      setLoadState = _useState2[1];

  var _useState3 = (0, _react.useState)(),
      _useState4 = _slicedToArray(_useState3, 2),
      error = _useState4[0],
      setError = _useState4[1];

  var _isMounted = (0, _react.useRef)(false);

  var loadScript = function loadScript() {
    // load the codepen embed script
    var script = document.createElement('script');
    script.src = SCRIPT_URL;
    script.async = 1;

    script.onload = function () {
      // do not do anything if the component is already unmounted.
      if (!_isMounted.current) return;
      setLoadState(LOAD_STATE.loaded);
    };

    script.onerror = function () {
      if (!_isMounted.current) return;
      setLoadState(LOAD_STATE.error);
      setError('Failed to load the pen');
    };

    setLoadState(LOAD_STATE.loading);
    document.body.appendChild(script);
  };

  (0, _react.useEffect)(function () {
    if (_isMounted.current === false) _isMounted.current = true;
    loadScript();
    return function () {
      return _isMounted.current = false;
    };
  }, []);
  var showLoader = loadState === LOAD_STATE.loading && props.loader !== undefined;
  var visibility = loadState === LOAD_STATE.loaded ? 'visible' : 'hidden';
  var penLink = "https://codepen.io/".concat(props.user, "/pen/").concat(props.hash, "/");
  var userProfileLink = "https://codepen.io/".concat(props.user);
  var styles = {
    visibility: visibility
  };
  return _react["default"].createElement(_react["default"].Fragment, null, showLoader && _react["default"].createElement(props.loader, {
    isLoading: loadState === LOAD_STATE.loading,
    error: error
  }), _react["default"].createElement("p", {
    "data-height": props.height,
    "data-theme-id": props.themeId,
    "data-slug-hash": props.hash,
    "data-default-tab": props.defaultTab,
    "data-user": props.user,
    "data-embed-version": props.version,
    "data-pen-title": props.title,
    "data-preview": props.preview,
    className: "codepen",
    style: styles
  }, "See the Pen ", _react["default"].createElement("a", {
    href: penLink
  }, props.title), "by ", props.user, " (", _react["default"].createElement("a", {
    href: userProfileLink
  }, "@", props.user), ") on", ' ', _react["default"].createElement("a", {
    href: "https://codepen.io"
  }, "CodePen"), "."));
};

ReactCodepen.defaultProps = {
  defaultTab: 'css,result',
  height: 300,
  preview: true,
  themeId: 'dark',
  version: 2
};
ReactCodepen.propTypes = {
  defaultTab: _propTypes["default"].string,
  hash: _propTypes["default"].string.isRequired,
  height: _propTypes["default"].number,
  loader: _propTypes["default"].oneOfType([_propTypes["default"].element, _propTypes["default"].func]),
  preview: _propTypes["default"].bool,
  title: _propTypes["default"].string,
  themeId: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]),
  user: _propTypes["default"].string.isRequired,
  version: _propTypes["default"].number
};
var _default = ReactCodepen;
exports["default"] = _default;