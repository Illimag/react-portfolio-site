{"ast":null,"code":"import _classCallCheck from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  // We override the 'z-index' of the styled component 'FixedContainer' of 'Blocker' (which is called by 'Modal').\\n  // This fixes the problem of showing 'UploadProgressDetails' behind modal in IE.\\n  & > div:first-child {\\n    z-index: 10001;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  z-index: 10001;\\n  width: 100%;\\n  position: fixed;\\n  left: 0;\\n  bottom: \", \";\\n  height: 0px;\\n  overflow: visible;\\n  display: flex;\\n  align-items: flex-end;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport styled from '../../utils/styled';\nimport { eventManagers } from '../../utils/eventManager';\nimport { FileUploadActions } from './FileUploaderDetails.types.part';\nimport { UploaderProgressBar } from './UploaderProgressBar.part';\nimport { UploaderProgressDetails } from './UploaderProgressDetails.part';\nimport { mergeData } from './helpers';\nimport { distance } from '../../distance';\nexport { FileUploadActions };\nvar initialState = {\n  files: [],\n  showDetails: false,\n  showUploader: false\n};\nvar StyledUploaderHost = styled.div(_templateObject(), distance.large);\nvar StyledDetailsHost = styled.div(_templateObject2());\n/**\n * The host element for global async file upload process. Use as a singleton only.\n */\n\nexport var FileUploaderDetails = /*#__PURE__*/function (_React$Component) {\n  _inherits(FileUploaderDetails, _React$Component);\n\n  var _super = _createSuper(FileUploaderDetails);\n\n  function FileUploaderDetails(props) {\n    var _this;\n\n    _classCallCheck(this, FileUploaderDetails);\n\n    _this = _super.call(this, props);\n\n    _this.onStart = function (e) {\n      _this.props.onUpload(e);\n\n      _this.setState({\n        showUploader: true\n      });\n    };\n\n    _this.onChange = function (_ref) {\n      var files = _ref.files;\n      var currentFiles = _this.state.files;\n\n      _this.setState({\n        files: mergeData(files, currentFiles)\n      });\n    };\n\n    _this.onCancel = function (_ref2) {\n      var files = _ref2.files;\n      var onCancel = _this.props.onCancel;\n\n      if (typeof onCancel === 'function') {\n        onCancel({\n          files: files.filter(function (item) {\n            return item.progress < 100 && !item.canceled && !item.error;\n          })\n        });\n      }\n    };\n\n    _this.onDelete = function (_ref3) {\n      var files = _ref3.files;\n      var onDelete = _this.props.onDelete;\n\n      if (typeof onDelete === 'function') {\n        onDelete({\n          files: files.filter(function (item) {\n            return item.progress >= 100 && !item.canceled && !item.error;\n          })\n        });\n      }\n    };\n\n    _this.onClear = function (uploaderId) {\n      var currentFiles = _this.state.files;\n      var newFiles = currentFiles.filter(function (item) {\n        return item.uploaderId !== uploaderId;\n      });\n      var oldFiles = currentFiles.filter(function (item) {\n        return item.uploaderId === uploaderId;\n      });\n\n      _this.setState({\n        files: newFiles\n      }, function () {\n        _this.onCancel({\n          files: oldFiles\n        });\n      });\n    };\n\n    _this.closeUploader = function () {\n      var onClose = _this.props.onClose;\n\n      if (typeof onClose === 'function') {\n        onClose();\n      }\n\n      _this.setState(Object.assign({}, initialState));\n    };\n\n    _this.hideDetails = function () {\n      _this.setState({\n        showDetails: false\n      });\n    };\n\n    _this.showDetails = function () {\n      _this.setState({\n        showDetails: true\n      });\n    };\n\n    var events = props.events;\n    _this.eventManager = events || eventManagers[0];\n    _this.state = Object.assign({}, initialState);\n    return _this;\n  }\n\n  _createClass(FileUploaderDetails, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var em = this.eventManager;\n      em.on(FileUploadActions.startUpload, this.onStart);\n      em.on(FileUploadActions.cancelUpload, this.onCancel);\n      em.on(FileUploadActions.uploadProgress, this.onChange);\n      em.on(FileUploadActions.uploadFailure, this.onChange);\n      em.on(FileUploadActions.showUploads, this.showDetails);\n      em.on(FileUploadActions.clearUploads, this.onClear);\n      em.on(FileUploadActions.deleteUploads, this.onDelete);\n      eventManagers.push(em);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var em = this.eventManager;\n      em.off(FileUploadActions.startUpload, this.onStart);\n      em.off(FileUploadActions.cancelUpload, this.onCancel);\n      em.off(FileUploadActions.uploadProgress, this.onChange);\n      em.off(FileUploadActions.uploadFailure, this.onChange);\n      em.off(FileUploadActions.showUploads, this.showDetails);\n      em.off(FileUploadActions.clearUploads, this.onClear);\n      em.off(FileUploadActions.deleteUploads, this.onDelete);\n      eventManagers.splice(eventManagers.lastIndexOf(em), 1);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          events = _a.events,\n          onCancel = _a.onCancel,\n          onClose = _a.onClose,\n          onDelete = _a.onDelete,\n          onUpload = _a.onUpload,\n          props = __rest(_a, [\"events\", \"onCancel\", \"onClose\", \"onDelete\", \"onUpload\"]);\n\n      var _this$state = this.state,\n          showDetails = _this$state.showDetails,\n          showUploader = _this$state.showUploader,\n          files = _this$state.files;\n      var inprogressFiles = files.filter(function (item) {\n        return !(item.canceled || item.error);\n      }).map(function (item) {\n        return item.progress;\n      });\n      var errorFiles = files.filter(function (item) {\n        return item.canceled || item.error;\n      });\n      var totalProgress = inprogressFiles.length > 0 ? inprogressFiles.reduce(function (acc, curr) {\n        return acc + curr;\n      }, 0) / inprogressFiles.length : 100;\n      var scanning = files.filter(function (item) {\n        return item.scanning && !item.canceled;\n      }).length > 0;\n      var show = showUploader && files.length > 0;\n      return show && React.createElement(React.Fragment, null, React.createElement(StyledDetailsHost, null, React.createElement(UploaderProgressDetails, Object.assign({}, props, {\n        open: showDetails,\n        files: files,\n        onCancel: this.onCancel,\n        onDelete: this.onDelete,\n        onHide: this.hideDetails,\n        progressValue: totalProgress\n      }))), !showDetails && React.createElement(StyledUploaderHost, null, React.createElement(UploaderProgressBar, Object.assign({}, props, {\n        scanning: scanning,\n        progressValue: totalProgress,\n        inProgress: inprogressFiles.length,\n        errors: errorFiles.length,\n        total: files.length,\n        onShow: this.showDetails,\n        onClose: this.closeUploader\n      }))));\n    }\n  }]);\n\n  return FileUploaderDetails;\n}(React.Component);\nFileUploaderDetails.inner = {\n  get StyledDetailsHost() {\n    return StyledDetailsHost;\n  },\n\n  get UploaderProgressDetails() {\n    return UploaderProgressDetails;\n  },\n\n  get StyledUploaderHost() {\n    return StyledUploaderHost;\n  },\n\n  get UploaderProgressBar() {\n    return UploaderProgressBar;\n  }\n\n};","map":{"version":3,"sources":["../../../../src/components/FileUploaderDetails/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from '../../utils/styled';\nimport { UploadProgressDetailsLabels, UploaderProgressBarLabels } from '../../utils/labels';\nimport { EventManager, eventManagers } from '../../utils/eventManager';\nimport { FileBase, FileItem, FileProgress, FileUploadActions, FileUploaderDetailsEvent, } from './FileUploaderDetails.types.part';\nimport { UploaderProgressBar } from './UploaderProgressBar.part';\nimport { UploaderProgressDetails } from './UploaderProgressDetails.part';\nimport { mergeData } from './helpers';\nimport { distance } from '../../distance';\nexport { FileUploadActions, FileItem, FileProgress, FileBase, FileUploaderDetailsEvent };\nexport interface FileUploaderDetailsProps extends UploadProgressDetailsLabels, UploaderProgressBarLabels {\n    /**\n     * Sets the event manager to use. By default a standard event manager is used.\n     */\n    events?: EventManager;\n    /**\n     * Event emitted when files to upload are selected.\n     */\n    onUpload(e: FileUploaderDetailsEvent<FileItem>): void;\n    /**\n     * Event emitted when file upload has been canceled.\n     */\n    onCancel?(e: FileUploaderDetailsEvent<FileProgress>): void;\n    /**\n     * Event emitted when file upload should be deleted.\n     */\n    onDelete?(e: FileUploaderDetailsEvent<FileProgress>): void;\n    /**\n     * Event emitted when total progress overlay is closed.\n     */\n    onClose?(): void;\n}\nexport interface FileUploaderDetailsState {\n    files: Array<FileProgress>;\n    showDetails: boolean;\n    showUploader: boolean;\n}\nconst initialState: FileUploaderDetailsState = {\n    files: [],\n    showDetails: false,\n    showUploader: false,\n};\nconst StyledUploaderHost = styled.div `\n  z-index: 10001;\n  width: 100%;\n  position: fixed;\n  left: 0;\n  bottom: ${distance.large};\n  height: 0px;\n  overflow: visible;\n  display: flex;\n  align-items: flex-end;\n`;\nconst StyledDetailsHost = styled.div `\n  // We override the 'z-index' of the styled component 'FixedContainer' of 'Blocker' (which is called by 'Modal').\n  // This fixes the problem of showing 'UploadProgressDetails' behind modal in IE.\n  & > div:first-child {\n    z-index: 10001;\n  }\n`;\n/**\n * The host element for global async file upload process. Use as a singleton only.\n */\nexport class FileUploaderDetails extends React.Component<FileUploaderDetailsProps, FileUploaderDetailsState> {\n    private eventManager: EventManager;\n    constructor(props: FileUploaderDetailsProps) {\n        super(props);\n        const { events } = props;\n        this.eventManager = events || eventManagers[0];\n        this.state = {\n            ...initialState,\n        };\n    }\n    componentDidMount() {\n        const em = this.eventManager;\n        em.on(FileUploadActions.startUpload, this.onStart);\n        em.on(FileUploadActions.cancelUpload, this.onCancel);\n        em.on(FileUploadActions.uploadProgress, this.onChange);\n        em.on(FileUploadActions.uploadFailure, this.onChange);\n        em.on(FileUploadActions.showUploads, this.showDetails);\n        em.on(FileUploadActions.clearUploads, this.onClear);\n        em.on(FileUploadActions.deleteUploads, this.onDelete);\n        eventManagers.push(em);\n    }\n    componentWillUnmount() {\n        const em = this.eventManager;\n        em.off(FileUploadActions.startUpload, this.onStart);\n        em.off(FileUploadActions.cancelUpload, this.onCancel);\n        em.off(FileUploadActions.uploadProgress, this.onChange);\n        em.off(FileUploadActions.uploadFailure, this.onChange);\n        em.off(FileUploadActions.showUploads, this.showDetails);\n        em.off(FileUploadActions.clearUploads, this.onClear);\n        em.off(FileUploadActions.deleteUploads, this.onDelete);\n        eventManagers.splice(eventManagers.lastIndexOf(em), 1);\n    }\n    private onStart = (e: FileUploaderDetailsEvent<FileItem>) => {\n        this.props.onUpload(e);\n        this.setState({\n            showUploader: true,\n        });\n    };\n    private onChange = ({ files }: FileUploaderDetailsEvent<FileProgress>) => {\n        const { files: currentFiles } = this.state;\n        this.setState({\n            files: mergeData(files, currentFiles),\n        });\n    };\n    private onCancel = ({ files }: FileUploaderDetailsEvent<FileProgress>) => {\n        const { onCancel } = this.props;\n        if (typeof onCancel === 'function') {\n            onCancel({\n                files: files.filter(item => item.progress < 100 && !item.canceled && !item.error),\n            });\n        }\n    };\n    private onDelete = ({ files }: FileUploaderDetailsEvent<FileProgress>) => {\n        const { onDelete } = this.props;\n        if (typeof onDelete === 'function') {\n            onDelete({\n                files: files.filter(item => item.progress >= 100 && !item.canceled && !item.error),\n            });\n        }\n    };\n    private onClear = (uploaderId: string) => {\n        const { files: currentFiles } = this.state;\n        const newFiles = currentFiles.filter(item => item.uploaderId !== uploaderId);\n        const oldFiles = currentFiles.filter(item => item.uploaderId === uploaderId);\n        this.setState({\n            files: newFiles,\n        }, () => {\n            this.onCancel({\n                files: oldFiles,\n            });\n        });\n    };\n    private closeUploader = () => {\n        const { onClose } = this.props;\n        if (typeof onClose === 'function') {\n            onClose();\n        }\n        this.setState({\n            ...initialState,\n        });\n    };\n    private hideDetails = () => {\n        this.setState({\n            showDetails: false,\n        });\n    };\n    private showDetails = () => {\n        this.setState({\n            showDetails: true,\n        });\n    };\n    render() {\n        const { events, onCancel, onClose, onDelete, onUpload, ...props } = this.props;\n        const { showDetails, showUploader, files } = this.state;\n        const inprogressFiles = files.filter(item => !(item.canceled || item.error)).map(item => item.progress);\n        const errorFiles = files.filter(item => item.canceled || item.error);\n        const totalProgress = inprogressFiles.length > 0 ? inprogressFiles.reduce((acc, curr) => acc + curr, 0) / inprogressFiles.length : 100;\n        const scanning = files.filter(item => item.scanning && !item.canceled).length > 0;\n        const show = showUploader && files.length > 0;\n        return (show && (<>\n          <StyledDetailsHost>\n            <UploaderProgressDetails {...props} open={showDetails} files={files} onCancel={this.onCancel} onDelete={this.onDelete} onHide={this.hideDetails} progressValue={totalProgress}/>\n          </StyledDetailsHost>\n          {!showDetails && (<StyledUploaderHost>\n              <UploaderProgressBar {...props} scanning={scanning} progressValue={totalProgress} inProgress={inprogressFiles.length} errors={errorFiles.length} total={files.length} onShow={this.showDetails} onClose={this.closeUploader}/>\n            </StyledUploaderHost>)}\n        </>));\n    }\n    static inner = {\n        get StyledDetailsHost() { return StyledDetailsHost as typeof StyledDetailsHost; },\n        get UploaderProgressDetails() { return UploaderProgressDetails as typeof UploaderProgressDetails; },\n        get StyledUploaderHost() { return StyledUploaderHost as typeof StyledUploaderHost; },\n        get UploaderProgressBar() { return UploaderProgressBar as typeof UploaderProgressBar; }\n    };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}