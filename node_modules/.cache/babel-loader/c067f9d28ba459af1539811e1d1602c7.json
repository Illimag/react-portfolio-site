{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport * as React from 'react';\nimport * as colors from '../../colors';\nimport styled from '../../utils/styled';\nimport { Headline } from '../Headline';\nimport { Icon } from '../Icon';\nimport { Breadcrumbs } from '../Breadcrumbs';\nimport { Breadcrumb } from '../Breadcrumb';\nimport { ActionLink } from '../ActionLink';\nimport { distance } from '../../distance';\nimport { getFontStyle } from '../../textStyles';\nconst MainHeadline = styled(Headline)`\n  margin-bottom: ${distance.xlarge} !important;\n\n  @media (max-width: 739px) {\n    margin-bottom: ${distance.large} !important;\n    font-size: 28px !important;\n  }\n`;\nconst Navigation = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: ${distance.xlarge};\n\n  @media (max-width: 739px) {\n    margin-bottom: 0px;\n  }\n`;\nconst HelpButton = styled(ActionLink)`\n  ${getFontStyle({\n  size: 'xSmall',\n  weight: 'light'\n})}\n\n  display: flex;\n  align-items: center;\n  color: ${colors.dark};\n\n  @media (max-width: 600px) {\n    display: none;\n  }\n`;\nconst HelpLabel = styled.span`\n  margin-left: ${distance.small};\n`;\nexport const PageHead = Object.assign(({\n  title,\n  breadcrumbs = [],\n  help,\n  onHelp\n}) => React.createElement(React.Fragment, null, React.createElement(Navigation, null, React.createElement(Breadcrumbs, null, breadcrumbs.map((_a, i) => {\n  var {\n    children: _0\n  } = _a,\n      b = __rest(_a, [\"children\"]);\n\n  return React.createElement(Breadcrumb, Object.assign({}, b, {\n    key: `${b.title}-${i}`\n  }));\n}), React.createElement(Breadcrumb, {\n  title: title\n})), help && React.createElement(HelpButton, {\n  onClick: onHelp\n}, React.createElement(Icon, {\n  name: \"HelpOutline\"\n}), React.createElement(HelpLabel, null, help))), React.createElement(MainHeadline, {\n  level: 1\n}, title)), {\n  inner: {\n    get Navigation() {\n      return Navigation;\n    },\n\n    get Breadcrumbs() {\n      return Breadcrumbs;\n    },\n\n    get Breadcrumb() {\n      return Breadcrumb;\n    },\n\n    get HelpButton() {\n      return HelpButton;\n    },\n\n    get Icon() {\n      return Icon;\n    },\n\n    get HelpLabel() {\n      return HelpLabel;\n    },\n\n    get MainHeadline() {\n      return MainHeadline;\n    }\n\n  }\n});\nPageHead.displayName = 'PageHead';","map":{"version":3,"sources":["../../../../src/components/PageHead/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as colors from '../../colors';\nimport styled from '../../utils/styled';\nimport { Headline } from '../Headline';\nimport { Icon } from '../Icon';\nimport { Breadcrumbs } from '../Breadcrumbs';\nimport { Breadcrumb, BreadcrumbProps } from '../Breadcrumb';\nimport { ActionLink } from '../ActionLink';\nimport { distance } from '../../distance';\nimport { getFontStyle } from '../../textStyles';\nexport interface PageHeadProps {\n    /**\n     * The title to display.\n     */\n    title: string;\n    /**\n     * The optional breadcrumbs to show.\n     */\n    breadcrumbs?: Array<BreadcrumbProps>;\n    /**\n     * The text for the optional help button.\n     */\n    help?: string;\n    /**\n     * Event fired when the help button was pressed.\n     */\n    onHelp?(): void;\n}\nconst MainHeadline = styled(Headline) `\n  margin-bottom: ${distance.xlarge} !important;\n\n  @media (max-width: 739px) {\n    margin-bottom: ${distance.large} !important;\n    font-size: 28px !important;\n  }\n`;\nconst Navigation = styled.div `\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: ${distance.xlarge};\n\n  @media (max-width: 739px) {\n    margin-bottom: 0px;\n  }\n`;\nconst HelpButton = styled(ActionLink) `\n  ${getFontStyle({ size: 'xSmall', weight: 'light' })}\n\n  display: flex;\n  align-items: center;\n  color: ${colors.dark};\n\n  @media (max-width: 600px) {\n    display: none;\n  }\n`;\nconst HelpLabel = styled.span `\n  margin-left: ${distance.small};\n`;\nexport const PageHead = Object.assign(((({ title, breadcrumbs = [], help, onHelp }) => (<>\n    <Navigation>\n      <Breadcrumbs>\n        {breadcrumbs.map(({ children: _0, ...b }, i) => (<Breadcrumb {...b} key={`${b.title}-${i}`}/>))}\n        <Breadcrumb title={title}/>\n      </Breadcrumbs>\n      {help && (<HelpButton onClick={onHelp}>\n          <Icon name=\"HelpOutline\"/>\n          <HelpLabel>{help}</HelpLabel>\n        </HelpButton>)}\n    </Navigation>\n    <MainHeadline level={1}>{title}</MainHeadline>\n  </>)) as React.SFC<PageHeadProps>), { inner: {\n        get Navigation() { return Navigation as typeof Navigation; },\n        get Breadcrumbs() { return Breadcrumbs as typeof Breadcrumbs; },\n        get Breadcrumb() { return Breadcrumb as typeof Breadcrumb; },\n        get HelpButton() { return HelpButton as typeof HelpButton; },\n        get Icon() { return Icon as typeof Icon; },\n        get HelpLabel() { return HelpLabel as typeof HelpLabel; },\n        get MainHeadline() { return MainHeadline as typeof MainHeadline; }\n    } });\nPageHead.displayName = 'PageHead';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}