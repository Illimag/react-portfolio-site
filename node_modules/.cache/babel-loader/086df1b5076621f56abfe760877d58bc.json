{"ast":null,"code":"import { AccordionInt } from './AccordionInt.part';\nimport { withResponsiveMode } from '../../hoc/withResponsiveMode';\nimport { breakpoints } from '../../themes';\n/**\n * The accordion component displays a toggling list of content. It features a\n * list of headers that makes selecting different parts of content possible.\n */\n\nexport const Accordion = withResponsiveMode(width => !width || width > breakpoints.medium ? 'accordion' : 'card')(AccordionInt);","map":{"version":3,"sources":["../../../../src/components/Accordion/index.tsx"],"names":[],"mappings":"AACA,SAAS,YAAT,QAA6B,qBAA7B;AAEA,SAAS,kBAAT,QAAmC,8BAAnC;AACA,SAAS,WAAT,QAA4B,cAA5B;AAOA;;;;;AAIA,OAAO,MAAM,SAAS,GAAkB,kBAAkB,CAAgB,KAAK,IAAI,CAAC,KAAD,IAAU,KAAK,GAAG,WAAW,CAAC,MAA9B,GAAuC,WAAvC,GAAqD,MAA9E,CAAlB,CAAwG,YAAxG,CAAjC","sourcesContent":["import * as React from 'react';\nimport { AccordionInt } from './AccordionInt.part';\nimport { AccordionProps, AccordionMode } from './Accordion.types.part';\nimport { withResponsiveMode } from '../../hoc/withResponsiveMode';\nimport { breakpoints } from '../../themes';\nexport { AccordionMode, AccordionProps, AccordionChangeEvent, AccordionCardRendererEvent, } from './Accordion.types.part';\nexport interface AccordionType extends React.SFC<AccordionProps> {\n    (props: AccordionProps & {\n        children?: React.ReactNode;\n    }, context?: any): JSX.Element;\n}\n/**\n * The accordion component displays a toggling list of content. It features a\n * list of headers that makes selecting different parts of content possible.\n */\nexport const Accordion: AccordionType = withResponsiveMode<AccordionMode>(width => !width || width > breakpoints.medium ? 'accordion' : 'card')(AccordionInt) as any;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}