{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"../utils\");\n\nvar _helpers = require(\"../helpers\");\n\nvar _View = require(\"./View\");\n\nvar _Scroll = require(\"./Scroll\");\n\nvar _Element = require(\"./Element\");\n\nvar _constants = require(\"../constants\");\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * -------------------------------------------------------\n * Parallax Controller\n * -------------------------------------------------------\n *\n * The global controller for setting up window scroll/resize\n * listeners, managing and caching parallax element positions,\n * determining which elements are inside the viewport based on\n * scroll position, and then updating parallax element styles\n * based on x/y offsets and current scroll position.\n *\n */\n\n\nfunction ParallaxController(_ref) {\n  var _ref$scrollAxis = _ref.scrollAxis,\n      scrollAxis = _ref$scrollAxis === void 0 ? _constants.VERTICAL : _ref$scrollAxis,\n      scrollContainer = _ref.scrollContainer; // All parallax elements to be updated\n\n  var elements = [];\n  var hasScrollContainer = !!scrollContainer;\n  var viewEl = scrollContainer || window; // Scroll and View\n\n  var x = hasScrollContainer ? viewEl.scrollLeft : window.pageXOffset;\n  var y = hasScrollContainer ? viewEl.scrollTop : window.pageYOffset;\n  var scroll = new _Scroll.Scroll(x, y);\n  var view = new _View.View({\n    width: 0,\n    height: 0,\n    scrollContainer: scrollContainer\n  }); // Ticking\n\n  var ticking = false; // Passive support\n\n  var supportsPassive = (0, _utils.testForPassiveScroll)();\n\n  function _addListeners(el) {\n    el.addEventListener('scroll', _handleScroll, supportsPassive ? {\n      passive: true\n    } : false);\n    window.addEventListener('resize', _handleResize, false);\n  }\n\n  function _removeListeners(el) {\n    el.removeEventListener('scroll', _handleScroll, supportsPassive ? {\n      passive: true\n    } : false);\n    window.removeEventListener('resize', _handleResize, false);\n  }\n\n  _addListeners(viewEl);\n\n  _setViewSize();\n  /**\n   * Window scroll handler sets scroll position\n   * and then calls '_updateAllElements()'.\n   */\n\n\n  function _handleScroll() {\n    // Save current scroll\n    // Supports IE 9 and up.\n    var nx = hasScrollContainer ? viewEl.scrollLeft : window.pageXOffset;\n    var ny = hasScrollContainer ? viewEl.scrollTop : window.pageYOffset;\n    scroll.setScroll(nx, ny); // Only called if the last animation request has been\n    // completed and there are parallax elements to update\n\n    if (!ticking && elements.length > 0) {\n      ticking = true;\n      window.requestAnimationFrame(_updateAllElements);\n    }\n  }\n  /**\n   * Window resize handler. Sets the new window inner height\n   * then updates parallax element attributes and positions.\n   */\n\n\n  function _handleResize() {\n    _setViewSize();\n\n    _updateAllElements({\n      updateCache: true\n    });\n  }\n  /**\n   * Update element positions.\n   * Determines if the element is in view based on the cached\n   * attributes, if so set the elements parallax styles.\n   */\n\n\n  function _updateAllElements() {\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        updateCache = _ref2.updateCache;\n\n    elements.forEach(function (element) {\n      _updateElementPosition(element);\n\n      if (updateCache) {\n        element.setCachedAttributes(view, scroll);\n      }\n    }); // reset ticking so more animations can be called\n\n    ticking = false;\n  }\n  /**\n   * Update element positions.\n   * Determines if the element is in view based on the cached\n   * attributes, if so set the elements parallax styles.\n   */\n\n\n  function _updateElementPosition(element) {\n    if (element.props.disabled) return;\n    element.updatePosition(view, scroll);\n  }\n  /**\n   * Cache the window height.\n   */\n\n\n  function _setViewSize() {\n    if (hasScrollContainer) {\n      var _width = viewEl.offsetWidth;\n      var _height = viewEl.offsetHeight;\n      return view.setSize(_width, _height);\n    }\n\n    var html = document.documentElement;\n    var width = window.innerWidth || html.clientWidth;\n    var height = window.innerHeight || html.clientHeight;\n    return view.setSize(width, height);\n  }\n  /**\n   * -------------------------------------------------------\n   * Public methods\n   * -------------------------------------------------------\n   */\n\n  /**\n   * Gets the parallax elements in the controller\n   * @return {array} parallax elements\n   */\n\n\n  this.getElements = function () {\n    return elements;\n  };\n  /**\n   * Creates a new parallax element object with new id\n   * and options to store in the 'elements' array.\n   * @param {object} options\n   * @return {object} element\n   */\n\n\n  this.createElement = function (options) {\n    var newElement = new _Element.Element(_objectSpread({}, options, {\n      scrollAxis: scrollAxis\n    }));\n    newElement.setCachedAttributes(view, scroll);\n    elements = [].concat(_toConsumableArray(elements), [newElement]);\n\n    _updateElementPosition(newElement);\n\n    return newElement;\n  };\n  /**\n   * Remove an element by id\n   * @param {object} element\n   */\n\n\n  this.removeElementById = function (id) {\n    if (!elements) return;\n    elements = elements.filter(function (el) {\n      return el.id !== id;\n    });\n  };\n  /**\n   * Updates an existing parallax element object with new options.\n   * @param {object} element\n   * @param {object} options\n   */\n\n\n  this.updateElementPropsById = function (id, props) {\n    elements = elements.map(function (el) {\n      if (el.id === id) {\n        return el.updateProps(props);\n      }\n\n      return el;\n    });\n    this.update();\n  };\n  /**\n   * Remove element styles.\n   * @param {object} element\n   */\n\n\n  this.resetElementStyles = function (element) {\n    (0, _helpers.resetStyles)(element);\n  };\n  /**\n   * Updates all parallax element attributes and positions.\n   */\n\n\n  this.update = function () {\n    _setViewSize();\n\n    _updateAllElements({\n      updateCache: true\n    });\n  };\n\n  this.updateScrollContainer = function (el) {\n    // remove existing listeners with current el first\n    _removeListeners(viewEl);\n\n    viewEl = el;\n    hasScrollContainer = !!el;\n    view = new _View.View({\n      width: 0,\n      height: 0,\n      scrollContainer: el\n    });\n\n    _setViewSize();\n\n    _addListeners(viewEl);\n\n    _updateAllElements({\n      updateCache: true\n    });\n  };\n  /**\n   * Removes listeners, reset all styles then nullifies the global ParallaxController.\n   */\n\n\n  this.destroy = function () {\n    _removeListeners(viewEl);\n\n    elements.forEach(function (element) {\n      return (0, _helpers.resetStyles)(element);\n    });\n    elements = undefined;\n  };\n}\n/**\n * Static method to instantiate the ParallaxController.\n * @returns {Object} ParallaxController\n */\n\n\nParallaxController.init = function (options) {\n  var hasWindow = typeof window !== 'undefined';\n\n  if (!hasWindow) {\n    throw new Error('Looks like ParallaxController.init() was called on the server. This method must be called on the client.');\n  }\n\n  return new ParallaxController(options);\n};\n\nvar _default = ParallaxController;\nexports.default = _default;","map":{"version":3,"sources":["/mnt/c/Users/jaemn/Desktop/react-portfolio-site/node_modules/react-scroll-parallax/cjs/classes/ParallaxController.js"],"names":["Object","defineProperty","exports","value","default","_utils","require","_helpers","_View","_Scroll","_Element","_constants","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","prototype","toString","call","Array","from","isArray","i","arr2","length","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","configurable","writable","ParallaxController","_ref","_ref$scrollAxis","scrollAxis","VERTICAL","scrollContainer","elements","hasScrollContainer","viewEl","window","x","scrollLeft","pageXOffset","y","scrollTop","pageYOffset","scroll","Scroll","view","View","width","height","ticking","supportsPassive","testForPassiveScroll","_addListeners","el","addEventListener","_handleScroll","passive","_handleResize","_removeListeners","removeEventListener","_setViewSize","nx","ny","setScroll","requestAnimationFrame","_updateAllElements","updateCache","_ref2","undefined","element","_updateElementPosition","setCachedAttributes","props","disabled","updatePosition","_width","offsetWidth","_height","offsetHeight","setSize","html","document","documentElement","innerWidth","clientWidth","innerHeight","clientHeight","getElements","createElement","options","newElement","Element","concat","removeElementById","id","updateElementPropsById","map","updateProps","update","resetElementStyles","resetStyles","updateScrollContainer","destroy","init","hasWindow","Error","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"../utils\");\n\nvar _helpers = require(\"../helpers\");\n\nvar _View = require(\"./View\");\n\nvar _Scroll = require(\"./Scroll\");\n\nvar _Element = require(\"./Element\");\n\nvar _constants = require(\"../constants\");\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * -------------------------------------------------------\n * Parallax Controller\n * -------------------------------------------------------\n *\n * The global controller for setting up window scroll/resize\n * listeners, managing and caching parallax element positions,\n * determining which elements are inside the viewport based on\n * scroll position, and then updating parallax element styles\n * based on x/y offsets and current scroll position.\n *\n */\nfunction ParallaxController(_ref) {\n  var _ref$scrollAxis = _ref.scrollAxis,\n      scrollAxis = _ref$scrollAxis === void 0 ? _constants.VERTICAL : _ref$scrollAxis,\n      scrollContainer = _ref.scrollContainer;\n  // All parallax elements to be updated\n  var elements = [];\n  var hasScrollContainer = !!scrollContainer;\n  var viewEl = scrollContainer || window; // Scroll and View\n\n  var x = hasScrollContainer ? viewEl.scrollLeft : window.pageXOffset;\n  var y = hasScrollContainer ? viewEl.scrollTop : window.pageYOffset;\n  var scroll = new _Scroll.Scroll(x, y);\n  var view = new _View.View({\n    width: 0,\n    height: 0,\n    scrollContainer: scrollContainer\n  }); // Ticking\n\n  var ticking = false; // Passive support\n\n  var supportsPassive = (0, _utils.testForPassiveScroll)();\n\n  function _addListeners(el) {\n    el.addEventListener('scroll', _handleScroll, supportsPassive ? {\n      passive: true\n    } : false);\n    window.addEventListener('resize', _handleResize, false);\n  }\n\n  function _removeListeners(el) {\n    el.removeEventListener('scroll', _handleScroll, supportsPassive ? {\n      passive: true\n    } : false);\n    window.removeEventListener('resize', _handleResize, false);\n  }\n\n  _addListeners(viewEl);\n\n  _setViewSize();\n  /**\n   * Window scroll handler sets scroll position\n   * and then calls '_updateAllElements()'.\n   */\n\n\n  function _handleScroll() {\n    // Save current scroll\n    // Supports IE 9 and up.\n    var nx = hasScrollContainer ? viewEl.scrollLeft : window.pageXOffset;\n    var ny = hasScrollContainer ? viewEl.scrollTop : window.pageYOffset;\n    scroll.setScroll(nx, ny); // Only called if the last animation request has been\n    // completed and there are parallax elements to update\n\n    if (!ticking && elements.length > 0) {\n      ticking = true;\n      window.requestAnimationFrame(_updateAllElements);\n    }\n  }\n  /**\n   * Window resize handler. Sets the new window inner height\n   * then updates parallax element attributes and positions.\n   */\n\n\n  function _handleResize() {\n    _setViewSize();\n\n    _updateAllElements({\n      updateCache: true\n    });\n  }\n  /**\n   * Update element positions.\n   * Determines if the element is in view based on the cached\n   * attributes, if so set the elements parallax styles.\n   */\n\n\n  function _updateAllElements() {\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        updateCache = _ref2.updateCache;\n\n    elements.forEach(function (element) {\n      _updateElementPosition(element);\n\n      if (updateCache) {\n        element.setCachedAttributes(view, scroll);\n      }\n    }); // reset ticking so more animations can be called\n\n    ticking = false;\n  }\n  /**\n   * Update element positions.\n   * Determines if the element is in view based on the cached\n   * attributes, if so set the elements parallax styles.\n   */\n\n\n  function _updateElementPosition(element) {\n    if (element.props.disabled) return;\n    element.updatePosition(view, scroll);\n  }\n  /**\n   * Cache the window height.\n   */\n\n\n  function _setViewSize() {\n    if (hasScrollContainer) {\n      var _width = viewEl.offsetWidth;\n      var _height = viewEl.offsetHeight;\n      return view.setSize(_width, _height);\n    }\n\n    var html = document.documentElement;\n    var width = window.innerWidth || html.clientWidth;\n    var height = window.innerHeight || html.clientHeight;\n    return view.setSize(width, height);\n  }\n  /**\n   * -------------------------------------------------------\n   * Public methods\n   * -------------------------------------------------------\n   */\n\n  /**\n   * Gets the parallax elements in the controller\n   * @return {array} parallax elements\n   */\n\n\n  this.getElements = function () {\n    return elements;\n  };\n  /**\n   * Creates a new parallax element object with new id\n   * and options to store in the 'elements' array.\n   * @param {object} options\n   * @return {object} element\n   */\n\n\n  this.createElement = function (options) {\n    var newElement = new _Element.Element(_objectSpread({}, options, {\n      scrollAxis: scrollAxis\n    }));\n    newElement.setCachedAttributes(view, scroll);\n    elements = [].concat(_toConsumableArray(elements), [newElement]);\n\n    _updateElementPosition(newElement);\n\n    return newElement;\n  };\n  /**\n   * Remove an element by id\n   * @param {object} element\n   */\n\n\n  this.removeElementById = function (id) {\n    if (!elements) return;\n    elements = elements.filter(function (el) {\n      return el.id !== id;\n    });\n  };\n  /**\n   * Updates an existing parallax element object with new options.\n   * @param {object} element\n   * @param {object} options\n   */\n\n\n  this.updateElementPropsById = function (id, props) {\n    elements = elements.map(function (el) {\n      if (el.id === id) {\n        return el.updateProps(props);\n      }\n\n      return el;\n    });\n    this.update();\n  };\n  /**\n   * Remove element styles.\n   * @param {object} element\n   */\n\n\n  this.resetElementStyles = function (element) {\n    (0, _helpers.resetStyles)(element);\n  };\n  /**\n   * Updates all parallax element attributes and positions.\n   */\n\n\n  this.update = function () {\n    _setViewSize();\n\n    _updateAllElements({\n      updateCache: true\n    });\n  };\n\n  this.updateScrollContainer = function (el) {\n    // remove existing listeners with current el first\n    _removeListeners(viewEl);\n\n    viewEl = el;\n    hasScrollContainer = !!el;\n    view = new _View.View({\n      width: 0,\n      height: 0,\n      scrollContainer: el\n    });\n\n    _setViewSize();\n\n    _addListeners(viewEl);\n\n    _updateAllElements({\n      updateCache: true\n    });\n  };\n  /**\n   * Removes listeners, reset all styles then nullifies the global ParallaxController.\n   */\n\n\n  this.destroy = function () {\n    _removeListeners(viewEl);\n\n    elements.forEach(function (element) {\n      return (0, _helpers.resetStyles)(element);\n    });\n    elements = undefined;\n  };\n}\n/**\n * Static method to instantiate the ParallaxController.\n * @returns {Object} ParallaxController\n */\n\n\nParallaxController.init = function (options) {\n  var hasWindow = typeof window !== 'undefined';\n\n  if (!hasWindow) {\n    throw new Error('Looks like ParallaxController.init() was called on the server. This method must be called on the client.');\n  }\n\n  return new ParallaxController(options);\n};\n\nvar _default = ParallaxController;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}