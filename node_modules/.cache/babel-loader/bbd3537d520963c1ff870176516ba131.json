{"ast":null,"code":"import _classCallCheck from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  background: \", \";\\n  color: \", \";\\n  font-family: inherit;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 0;\\n  padding: 0;\\n  border: 0;\\n  display: inline-block;\\n  vertical-align: middle;\\n  max-width: 100%;\\n  height: auto;\\n  border-style: none;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  display: inline-block;\\n  width: 100%;\\n  height: 100%;\\n  flex: 1 1 auto;\\n  box-sizing: border-box;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { Spinner } from '../Spinner';\nimport styled, { themed } from '../../utils/styled'; // Wrapper used only in case when preloader enabled\n\nvar StyledImageWrapper = styled.div(_templateObject());\nvar StyledImage = styled.img(_templateObject2());\nvar StyledError = styled.span(_templateObject3(), themed(function (props) {\n  return props.theme.inputError;\n}), themed(function (props) {\n  return props.theme.text7;\n}));\n/**\n * Image component is meant to be a simple wrapper for standard DOM `img` element.\n * Component is fluid by default, meaning that it has max-width: 100% and height: auto,\n * so that it scales with it's parent.\n */\n\nexport var Image = /*#__PURE__*/function (_React$Component) {\n  _inherits(Image, _React$Component);\n\n  var _super = _createSuper(Image);\n\n  function Image(props) {\n    var _this;\n\n    _classCallCheck(this, Image);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      status: 'idle'\n    };\n    return _this;\n  }\n\n  _createClass(Image, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          preload = _this$props.preload,\n          src = _this$props.src;\n\n      if (preload) {\n        var image = document.createElement('img');\n\n        image.onload = function () {\n          return _this2.setState({\n            status: 'loaded'\n          });\n        };\n\n        image.onerror = function () {\n          return _this2.setState({\n            status: 'error'\n          });\n        };\n\n        image.src = src;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          children = _a.children,\n          preload = _a.preload,\n          src = _a.src,\n          alt = _a.alt,\n          preloader = _a.preloader,\n          error = _a.error,\n          rest = __rest(_a, [\"children\", \"preload\", \"src\", \"alt\", \"preloader\", \"error\"]);\n\n      var status = this.state.status;\n      return preload ? React.createElement(StyledImageWrapper, null, function () {\n        switch (status) {\n          case 'loaded':\n            return React.createElement(StyledImage, Object.assign({\n              src: src,\n              alt: alt\n            }, rest));\n\n          case 'error':\n            return error || React.createElement(StyledError, null, \"Error loading image from \", src, \".\");\n\n          case 'loading':\n          case 'idle':\n          default:\n            return preloader || React.createElement(Spinner, null);\n        }\n      }()) : React.createElement(StyledImage, Object.assign({\n        src: src,\n        alt: alt\n      }, rest));\n    }\n  }]);\n\n  return Image;\n}(React.Component);\nImage.inner = {\n  get StyledImageWrapper() {\n    return StyledImageWrapper;\n  },\n\n  get StyledImage() {\n    return StyledImage;\n  },\n\n  get StyledError() {\n    return StyledError;\n  },\n\n  get Spinner() {\n    return Spinner;\n  }\n\n};","map":{"version":3,"sources":["../../../../src/components/Image/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Spinner } from '../Spinner';\nimport styled, { themed } from '../../utils/styled';\nimport { StandardProps } from '../../common';\nexport type Status = 'idle' | 'loading' | 'loaded' | 'error';\nexport interface ImageProps extends StandardProps {\n    /**\n     * @ignore\n     */\n    children?: void;\n    /**\n     * This attribute defines the alternative text describing the image.\n     * Users will see this text displayed if the image URL is wrong,\n     * the image is not in one of the supported formats, or if the image is not yet downloaded.\n     */\n    alt: string;\n    /**\n     * When specified, image will be preloaded and the preloader shown during the preloading.\n     * Default is false.\n     * @default false\n     */\n    preload?: boolean;\n    /**\n     * The image URL. This attribute is mandatory for the <Image> component.\n     */\n    src: string;\n    /**\n     * Custom preloader component to indicate loading.\n     */\n    preloader?: React.ReactChild;\n    /**\n     * Custom error component that is displayed when the loading fails.\n     */\n    error?: React.ReactChild;\n}\nexport interface ImageState {\n    status: Status;\n}\n// Wrapper used only in case when preloader enabled\nconst StyledImageWrapper = styled.div `\n  position: relative;\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  flex: 1 1 auto;\n  box-sizing: border-box;\n`;\nconst StyledImage = styled.img `\n  margin: 0;\n  padding: 0;\n  border: 0;\n  display: inline-block;\n  vertical-align: middle;\n  max-width: 100%;\n  height: auto;\n  border-style: none;\n`;\nconst StyledError = styled.span `\n  background: ${themed(props => props.theme.inputError)};\n  color: ${themed(props => props.theme.text7)};\n  font-family: inherit;\n`;\n/**\n * Image component is meant to be a simple wrapper for standard DOM `img` element.\n * Component is fluid by default, meaning that it has max-width: 100% and height: auto,\n * so that it scales with it's parent.\n */\nexport class Image extends React.Component<ImageProps, ImageState> {\n    constructor(props: ImageProps) {\n        super(props);\n        this.state = {\n            status: 'idle',\n        };\n    }\n    componentDidMount() {\n        const { preload, src } = this.props;\n        if (preload) {\n            const image = document.createElement('img');\n            image.onload = () => this.setState({ status: 'loaded' });\n            image.onerror = () => this.setState({ status: 'error' });\n            image.src = src;\n        }\n    }\n    render() {\n        const { children, preload, src, alt, preloader, error, ...rest } = this.props;\n        const { status } = this.state;\n        return preload ? (<StyledImageWrapper>\n        {(() => {\n            switch (status) {\n                case 'loaded':\n                    return <StyledImage src={src} alt={alt} {...rest}/>;\n                case 'error':\n                    return error || <StyledError>Error loading image from {src}.</StyledError>;\n                case 'loading':\n                case 'idle':\n                default:\n                    return preloader || <Spinner />;\n            }\n        })()}\n      </StyledImageWrapper>) : (<StyledImage src={src} alt={alt} {...rest}/>);\n    }\n    static inner = {\n        get StyledImageWrapper() { return StyledImageWrapper as typeof StyledImageWrapper; },\n        get StyledImage() { return StyledImage as typeof StyledImage; },\n        get StyledError() { return StyledError as typeof StyledError; },\n        get Spinner() { return Spinner as typeof Spinner; }\n    };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}