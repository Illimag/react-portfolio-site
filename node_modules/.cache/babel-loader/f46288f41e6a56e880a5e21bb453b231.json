{"ast":null,"code":"import * as React from 'react';\nimport styled, { themed, css } from '../../utils/styled';\nimport { distance } from '../../distance';\nimport { List } from '../List';\nimport { ListItem } from '../ListItem';\nimport { normalizeIndex, toggleIndex, hasIndex } from '../AccordionTable/helpers/indexHelper';\nimport { getFontStyle } from '../../textStyles';\nconst animationDuration = '0.3s';\nconst animationFunction = 'cubic-bezier(0, 0, 0.25, 1)';\nconst StyledList = styled(List)`\n  overflow: visible;\n`;\nconst StyledListItem = styled(ListItem)`\n  padding: 0;\n  margin-bottom: ${distance.xlarge};\n  border: none;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\nconst Container = styled.div`\n  ${getFontStyle({\n  size: 'medium'\n})}\n\n  position: relative;\n  color: ${themed(({\n  theme\n}) => theme.text1)};\n`;\nconst ContentContainer = styled.div(themed(({\n  open,\n  theme: {\n    ui1,\n    ui2,\n    ui4,\n    ui5\n  }\n}) => css`\n      ${getFontStyle({\n  size: 'small'\n})}\n\n      padding: ${distance.medium};\n      background: ${open ? ui2 : ui1};\n      border: 1px solid ${open ? ui5 : ui4};\n      border-bottom: ${open ? `1px solid ${ui4}` : 'none'};\n    `));\nconst DetailsContainerAnimator = styled('div')`\n  transition: all ${animationDuration} ${animationFunction};\n  max-height: ${({\n  open\n}) => open ? '10000px' : '0'};\n  opacity: ${({\n  open\n}) => open ? '1' : '0'};\n  overflow: hidden;\n`;\nconst DetailsContainer = styled.div(themed(({\n  open,\n  theme: {\n    ui4,\n    ui5\n  }\n}) => css`\n      border-right: 1px solid ${open ? ui5 : ui4};\n      border-left: 1px solid ${open ? ui5 : ui4};\n    `));\nconst ActionContainer = styled.div(themed(({\n  open,\n  theme: {\n    ui0,\n    ui1\n  }\n}) => css`\n      text-align: center;\n      padding: ${distance.small} ${distance.medium};\n      cursor: pointer;\n      background: ${open ? ui1 : ui0};\n      border: ${open ? `1px solid ${ui0}` : 'none'};\n      color: ${open ? ui0 : ui1};\n    `));\nexport class AccordionCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.selects = [];\n    this.state = {\n      selectedIndexes: props.selectedIndex !== undefined ? normalizeIndex(props.selectedIndex) : normalizeIndex(props.defaultSelectedIndex),\n      controlled: props.selectedIndex !== undefined\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const {\n      selectedIndex,\n      defaultSelectedIndex\n    } = props;\n\n    if (state.controlled && selectedIndex !== undefined) {\n      return {\n        selectedIndexes: normalizeIndex(selectedIndex)\n      };\n    } else if (defaultSelectedIndex !== undefined) {\n      return {\n        selectedIndexes: normalizeIndex(defaultSelectedIndex)\n      };\n    }\n\n    return state;\n  }\n\n  changeIndex(target) {\n    const {\n      onChange,\n      multiple\n    } = this.props;\n    const {\n      controlled,\n      selectedIndexes\n    } = this.state;\n    const nextIndexes = toggleIndex(selectedIndexes, target, multiple);\n\n    if (typeof onChange === 'function') {\n      onChange({\n        selectedIndex: multiple ? nextIndexes : nextIndexes[0] !== undefined ? nextIndexes[0] : -1,\n        previousIndex: multiple ? selectedIndexes : selectedIndexes[0] !== undefined ? selectedIndexes[0] : -1\n      });\n    }\n\n    if (!controlled) {\n      this.setState({\n        selectedIndexes: nextIndexes\n      });\n    }\n  }\n\n  render() {\n    const {\n      selectedIndexes\n    } = this.state;\n    const {\n      children,\n      theme,\n      onChange: _0,\n      selectedIndex: _1,\n      openLabel,\n      closeLabel\n    } = this.props;\n    const items = [];\n    const selects = this.selects;\n    React.Children.forEach(children, (element, index) => {\n      if (element && React.isValidElement(element)) {\n        const {\n          header\n        } = element.props;\n        const open = hasIndex(selectedIndexes, index);\n\n        if (selects[index] === undefined) {\n          selects[index] = () => this.changeIndex(index);\n        }\n\n        items.push(React.createElement(StyledListItem, {\n          theme: theme,\n          key: `item-${index}`\n        }, React.createElement(Container, {\n          theme: theme\n        }, React.createElement(ContentContainer, {\n          theme: theme,\n          open: open\n        }, header), React.createElement(DetailsContainerAnimator, {\n          open: open\n        }, React.createElement(DetailsContainer, {\n          open: open\n        }, element)), React.createElement(ActionContainer, {\n          theme: theme,\n          onClick: selects[index],\n          open: open\n        }, open ? closeLabel || 'Close Details' : openLabel || 'Open Details'))));\n      }\n    });\n    return React.createElement(StyledList, {\n      borderless: true\n    }, items);\n  }\n\n}\nAccordionCard.inner = {\n  get StyledListItem() {\n    return StyledListItem;\n  },\n\n  get Container() {\n    return Container;\n  },\n\n  get ContentContainer() {\n    return ContentContainer;\n  },\n\n  get DetailsContainerAnimator() {\n    return DetailsContainerAnimator;\n  },\n\n  get DetailsContainer() {\n    return DetailsContainer;\n  },\n\n  get ActionContainer() {\n    return ActionContainer;\n  },\n\n  get StyledList() {\n    return StyledList;\n  }\n\n};","map":{"version":3,"sources":["../../../../src/components/Accordion/AccordionCard.part.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled, { themed, css } from '../../utils/styled';\nimport { AccordionProps } from './Accordion.types.part';\nimport { distance } from '../../distance';\nimport { AccordionTabProps } from '../AccordionTab';\nimport { List } from '../List';\nimport { ListItem } from '../ListItem';\nimport { normalizeIndex, toggleIndex, hasIndex } from '../AccordionTable/helpers/indexHelper';\nimport { getFontStyle } from '../../textStyles';\nexport interface AccordionCardState {\n    /**\n     * The currently selected indices.\n     */\n    selectedIndexes: Array<number>;\n    /**\n     * Determines if the accordion table component is controlled from the outside or not.\n     */\n    controlled: boolean;\n}\ninterface ActiveProps {\n    open?: boolean;\n    onClick?(e: React.MouseEvent): void;\n}\nconst animationDuration = '0.3s';\nconst animationFunction = 'cubic-bezier(0, 0, 0.25, 1)';\nconst StyledList = styled(List) `\n  overflow: visible;\n`;\nconst StyledListItem = styled(ListItem) `\n  padding: 0;\n  margin-bottom: ${distance.xlarge};\n  border: none;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\nconst Container = styled.div `\n  ${getFontStyle({ size: 'medium' })}\n\n  position: relative;\n  color: ${themed(({ theme }) => theme.text1)};\n`;\nconst ContentContainer = styled.div<ActiveProps>(themed(({ open, theme: { ui1, ui2, ui4, ui5 } }) => css `\n      ${getFontStyle({ size: 'small' })}\n\n      padding: ${distance.medium};\n      background: ${open ? ui2 : ui1};\n      border: 1px solid ${open ? ui5 : ui4};\n      border-bottom: ${open ? `1px solid ${ui4}` : 'none'};\n    `));\nconst DetailsContainerAnimator = styled('div')<ActiveProps> `\n  transition: all ${animationDuration} ${animationFunction};\n  max-height: ${({ open }) => (open ? '10000px' : '0')};\n  opacity: ${({ open }) => (open ? '1' : '0')};\n  overflow: hidden;\n`;\nconst DetailsContainer = styled.div<ActiveProps>(themed(({ open, theme: { ui4, ui5 } }) => css `\n      border-right: 1px solid ${open ? ui5 : ui4};\n      border-left: 1px solid ${open ? ui5 : ui4};\n    `));\nconst ActionContainer = styled.div<ActiveProps>(themed(({ open, theme: { ui0, ui1 } }) => css `\n      text-align: center;\n      padding: ${distance.small} ${distance.medium};\n      cursor: pointer;\n      background: ${open ? ui1 : ui0};\n      border: ${open ? `1px solid ${ui0}` : 'none'};\n      color: ${open ? ui0 : ui1};\n    `));\nexport class AccordionCard extends React.Component<AccordionProps, AccordionCardState> {\n    private selects: Array<() => void> = [];\n    constructor(props: AccordionProps) {\n        super(props);\n        this.state = {\n            selectedIndexes: props.selectedIndex !== undefined\n                ? normalizeIndex(props.selectedIndex)\n                : normalizeIndex(props.defaultSelectedIndex),\n            controlled: props.selectedIndex !== undefined,\n        };\n    }\n    static getDerivedStateFromProps(props: AccordionProps, state: AccordionCardState) {\n        const { selectedIndex, defaultSelectedIndex } = props;\n        if (state.controlled && selectedIndex !== undefined) {\n            return {\n                selectedIndexes: normalizeIndex(selectedIndex),\n            };\n        }\n        else if (defaultSelectedIndex !== undefined) {\n            return {\n                selectedIndexes: normalizeIndex(defaultSelectedIndex),\n            };\n        }\n        return state;\n    }\n    private changeIndex(target: number) {\n        const { onChange, multiple } = this.props;\n        const { controlled, selectedIndexes } = this.state;\n        const nextIndexes = toggleIndex(selectedIndexes, target, multiple);\n        if (typeof onChange === 'function') {\n            onChange({\n                selectedIndex: multiple ? nextIndexes : nextIndexes[0] !== undefined ? nextIndexes[0] : -1,\n                previousIndex: multiple ? selectedIndexes : selectedIndexes[0] !== undefined ? selectedIndexes[0] : -1,\n            });\n        }\n        if (!controlled) {\n            this.setState({\n                selectedIndexes: nextIndexes,\n            });\n        }\n    }\n    render() {\n        const { selectedIndexes } = this.state;\n        const { children, theme, onChange: _0, selectedIndex: _1, openLabel, closeLabel } = this.props;\n        const items: Array<React.ReactChild> = [];\n        const selects = this.selects;\n        React.Children.forEach(children, (element: React.ReactElement<AccordionTabProps>, index) => {\n            if (element && React.isValidElement(element)) {\n                const { header } = element.props;\n                const open = hasIndex(selectedIndexes, index);\n                if (selects[index] === undefined) {\n                    selects[index] = () => this.changeIndex(index);\n                }\n                items.push(<StyledListItem theme={theme} key={`item-${index}`}>\n            <Container theme={theme}>\n              <ContentContainer theme={theme} open={open}>\n                {header}\n              </ContentContainer>\n\n              <DetailsContainerAnimator open={open}>\n                <DetailsContainer open={open}>{element}</DetailsContainer>\n              </DetailsContainerAnimator>\n\n              <ActionContainer theme={theme} onClick={selects[index]} open={open}>\n                {open ? closeLabel || 'Close Details' : openLabel || 'Open Details'}\n              </ActionContainer>\n            </Container>\n          </StyledListItem>);\n            }\n        });\n        return <StyledList borderless>{items}</StyledList>;\n    }\n    static inner = {\n        get StyledListItem() { return StyledListItem as typeof StyledListItem; },\n        get Container() { return Container as typeof Container; },\n        get ContentContainer() { return ContentContainer as typeof ContentContainer; },\n        get DetailsContainerAnimator() { return DetailsContainerAnimator as typeof DetailsContainerAnimator; },\n        get DetailsContainer() { return DetailsContainer as typeof DetailsContainer; },\n        get ActionContainer() { return ActionContainer as typeof ActionContainer; },\n        get StyledList() { return StyledList as typeof StyledList; }\n    };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}