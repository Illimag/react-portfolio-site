{"ast":null,"code":"function byte(v) {\n  return v < 0 ? 0 : v >= 1 ? 255 : ~~(v * 256);\n}\n\nexport function hsvToRgb(h, s, v, a = 1) {\n  const i = Math.floor(h * 6);\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  let r = 0;\n  let g = 0;\n  let b = 0;\n\n  switch (i % 6) {\n    case 0:\n      r = v, g = t, b = p;\n      break;\n\n    case 1:\n      r = q, g = v, b = p;\n      break;\n\n    case 2:\n      r = p, g = v, b = t;\n      break;\n\n    case 3:\n      r = p, g = q, b = v;\n      break;\n\n    case 4:\n      r = t, g = p, b = v;\n      break;\n\n    case 5:\n      r = v, g = p, b = q;\n      break;\n  }\n\n  return {\n    r: byte(r),\n    g: byte(g),\n    b: byte(b),\n    a\n  };\n}\nexport function rgbToHsv(r, g, b, a = 1) {\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const d = max - min;\n  const s = max === 0 ? 0 : d / max;\n  const v = max / 255;\n  let h = 0;\n\n  switch (max) {\n    case min:\n      h = 0;\n      break;\n\n    case r:\n      h = (g - b + d * (g < b ? 6 : 0)) / (6 * d);\n      break;\n\n    case g:\n      h = (b - r + d * 2) / (6 * d);\n      break;\n\n    case b:\n      h = (r - g + d * 4) / (6 * d);\n      break;\n  }\n\n  return {\n    h,\n    s,\n    v,\n    a\n  };\n}\nexport function parseColor(color) {\n  if (color.match(/^rgb\\(/)) {\n    const parts = color.substring(4, color.length - 1).split(',');\n    return {\n      r: +parts[0],\n      g: +parts[1],\n      b: +parts[2],\n      a: 1\n    };\n  } else if (color.match(/^rgba\\(/)) {\n    const parts = color.substring(5, color.length - 1).split(',');\n    return {\n      r: +parts[0],\n      g: +parts[1],\n      b: +parts[2],\n      a: +parts[3]\n    };\n  } else if (color[0] === '#') {\n    const value = parseInt(color.substr(1), 16);\n    const full = color.length === 7;\n    const convert = full ? (v, p) => v >> p * 8 & 255 : (v, p) => (v >> p * 4 & 15) * 17;\n    return {\n      r: convert(value, 2),\n      g: convert(value, 1),\n      b: convert(value, 0),\n      a: 1\n    };\n  }\n\n  return {\n    r: 0,\n    g: 0,\n    b: 0,\n    a: 1\n  };\n}\nexport function serializeColor(c) {\n  return `rgba(${c.r}, ${c.g}, ${c.b}, ${c.a})`;\n}\nexport function transparentize(color, alpha) {\n  const c = parseColor(color);\n  c.a = alpha;\n  return serializeColor(c);\n}\nexport function invertColor(color, blackWhite = false) {\n  const {\n    r,\n    g,\n    b\n  } = parseColor(color);\n\n  if (!blackWhite) {\n    const newR = (255 - r).toString(16);\n    const newG = (255 - g).toString(16);\n    const newB = (255 - b).toString(16);\n    return `rgb(${newR}, ${newG}, ${newB})`;\n  }\n\n  return r * 0.299 + g * 0.587 + b * 0.114 > 186 ? 'rgb(0, 0, 0)' : 'rgb(255, 255, 255)';\n}","map":{"version":3,"sources":["../../../src/utils/colors.ts"],"names":[],"mappings":"AAAA,SAAS,IAAT,CAAc,CAAd,EAAuB;AACrB,SAAO,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAY,CAAC,IAAI,CAAL,GAAS,GAAT,GAAe,CAAC,EAAE,CAAC,GAAG,GAAN,CAAnC;AACD;;AAED,OAAM,SAAU,QAAV,CAAmB,CAAnB,EAA8B,CAA9B,EAAyC,CAAzC,EAAoD,CAAC,GAAG,CAAxD,EAAyD;AAC7D,QAAM,CAAC,GAAG,IAAI,CAAC,KAAL,CAAW,CAAC,GAAG,CAAf,CAAV;AACA,QAAM,CAAC,GAAG,CAAC,GAAG,CAAJ,GAAQ,CAAlB;AACA,QAAM,CAAC,GAAG,CAAC,IAAI,IAAI,CAAR,CAAX;AACA,QAAM,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAZ,CAAX;AACA,QAAM,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAL,IAAU,CAAlB,CAAX;AACA,MAAI,CAAC,GAAG,CAAR;AACA,MAAI,CAAC,GAAG,CAAR;AACA,MAAI,CAAC,GAAG,CAAR;;AAEA,UAAQ,CAAC,GAAG,CAAZ;AACE,SAAK,CAAL;AACG,MAAA,CAAC,GAAG,CAAL,EAAU,CAAC,GAAG,CAAd,EAAmB,CAAC,GAAG,CAAvB;AACA;;AACF,SAAK,CAAL;AACG,MAAA,CAAC,GAAG,CAAL,EAAU,CAAC,GAAG,CAAd,EAAmB,CAAC,GAAG,CAAvB;AACA;;AACF,SAAK,CAAL;AACG,MAAA,CAAC,GAAG,CAAL,EAAU,CAAC,GAAG,CAAd,EAAmB,CAAC,GAAG,CAAvB;AACA;;AACF,SAAK,CAAL;AACG,MAAA,CAAC,GAAG,CAAL,EAAU,CAAC,GAAG,CAAd,EAAmB,CAAC,GAAG,CAAvB;AACA;;AACF,SAAK,CAAL;AACG,MAAA,CAAC,GAAG,CAAL,EAAU,CAAC,GAAG,CAAd,EAAmB,CAAC,GAAG,CAAvB;AACA;;AACF,SAAK,CAAL;AACG,MAAA,CAAC,GAAG,CAAL,EAAU,CAAC,GAAG,CAAd,EAAmB,CAAC,GAAG,CAAvB;AACA;AAlBJ;;AAqBA,SAAO;AACL,IAAA,CAAC,EAAE,IAAI,CAAC,CAAD,CADF;AAEL,IAAA,CAAC,EAAE,IAAI,CAAC,CAAD,CAFF;AAGL,IAAA,CAAC,EAAE,IAAI,CAAC,CAAD,CAHF;AAIL,IAAA;AAJK,GAAP;AAMD;AAED,OAAM,SAAU,QAAV,CAAmB,CAAnB,EAA8B,CAA9B,EAAyC,CAAzC,EAAoD,CAAC,GAAG,CAAxD,EAAyD;AAC7D,QAAM,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAAZ;AACA,QAAM,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAAZ;AACA,QAAM,CAAC,GAAG,GAAG,GAAG,GAAhB;AACA,QAAM,CAAC,GAAG,GAAG,KAAK,CAAR,GAAY,CAAZ,GAAgB,CAAC,GAAG,GAA9B;AACA,QAAM,CAAC,GAAG,GAAG,GAAG,GAAhB;AACA,MAAI,CAAC,GAAG,CAAR;;AAEA,UAAQ,GAAR;AACE,SAAK,GAAL;AACE,MAAA,CAAC,GAAG,CAAJ;AACA;;AACF,SAAK,CAAL;AACE,MAAA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAJ,GAAQ,CAAC,IAAI,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAY,CAAhB,CAAV,KAAiC,IAAI,CAArC,CAAJ;AACA;;AACF,SAAK,CAAL;AACE,MAAA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAJ,GAAQ,CAAC,GAAG,CAAb,KAAmB,IAAI,CAAvB,CAAJ;AACA;;AACF,SAAK,CAAL;AACE,MAAA,CAAC,GAAG,CAAC,CAAC,GAAG,CAAJ,GAAQ,CAAC,GAAG,CAAb,KAAmB,IAAI,CAAvB,CAAJ;AACA;AAZJ;;AAeA,SAAO;AACL,IAAA,CADK;AAEL,IAAA,CAFK;AAGL,IAAA,CAHK;AAIL,IAAA;AAJK,GAAP;AAMD;AASD,OAAM,SAAU,UAAV,CAAqB,KAArB,EAAkC;AACtC,MAAI,KAAK,CAAC,KAAN,CAAY,QAAZ,CAAJ,EAA2B;AACzB,UAAM,KAAK,GAAG,KAAK,CAAC,SAAN,CAAgB,CAAhB,EAAmB,KAAK,CAAC,MAAN,GAAe,CAAlC,EAAqC,KAArC,CAA2C,GAA3C,CAAd;AACA,WAAO;AACL,MAAA,CAAC,EAAE,CAAC,KAAK,CAAC,CAAD,CADJ;AAEL,MAAA,CAAC,EAAE,CAAC,KAAK,CAAC,CAAD,CAFJ;AAGL,MAAA,CAAC,EAAE,CAAC,KAAK,CAAC,CAAD,CAHJ;AAIL,MAAA,CAAC,EAAE;AAJE,KAAP;AAMD,GARD,MAQO,IAAI,KAAK,CAAC,KAAN,CAAY,SAAZ,CAAJ,EAA4B;AACjC,UAAM,KAAK,GAAG,KAAK,CAAC,SAAN,CAAgB,CAAhB,EAAmB,KAAK,CAAC,MAAN,GAAe,CAAlC,EAAqC,KAArC,CAA2C,GAA3C,CAAd;AACA,WAAO;AACL,MAAA,CAAC,EAAE,CAAC,KAAK,CAAC,CAAD,CADJ;AAEL,MAAA,CAAC,EAAE,CAAC,KAAK,CAAC,CAAD,CAFJ;AAGL,MAAA,CAAC,EAAE,CAAC,KAAK,CAAC,CAAD,CAHJ;AAIL,MAAA,CAAC,EAAE,CAAC,KAAK,CAAC,CAAD;AAJJ,KAAP;AAMD,GARM,MAQA,IAAI,KAAK,CAAC,CAAD,CAAL,KAAa,GAAjB,EAAsB;AAC3B,UAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAN,CAAa,CAAb,CAAD,EAAkB,EAAlB,CAAtB;AACA,UAAM,IAAI,GAAG,KAAK,CAAC,MAAN,KAAiB,CAA9B;AACA,UAAM,OAAO,GAAG,IAAI,GAChB,CAAC,CAAD,EAAY,CAAZ,KAA2B,CAAC,IAAK,CAAC,GAAG,CAAX,GAAiB,GAD3B,GAEhB,CAAC,CAAD,EAAY,CAAZ,KAA0B,CAAE,CAAC,IAAK,CAAC,GAAG,CAAX,GAAiB,EAAlB,IAAwB,EAFtD;AAGA,WAAO;AACL,MAAA,CAAC,EAAE,OAAO,CAAC,KAAD,EAAQ,CAAR,CADL;AAEL,MAAA,CAAC,EAAE,OAAO,CAAC,KAAD,EAAQ,CAAR,CAFL;AAGL,MAAA,CAAC,EAAE,OAAO,CAAC,KAAD,EAAQ,CAAR,CAHL;AAIL,MAAA,CAAC,EAAE;AAJE,KAAP;AAMD;;AAED,SAAO;AACL,IAAA,CAAC,EAAE,CADE;AAEL,IAAA,CAAC,EAAE,CAFE;AAGL,IAAA,CAAC,EAAE,CAHE;AAIL,IAAA,CAAC,EAAE;AAJE,GAAP;AAMD;AAED,OAAM,SAAU,cAAV,CAAyB,CAAzB,EAAqC;AACzC,SAAO,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAA1C;AACD;AAED,OAAM,SAAU,cAAV,CAAyB,KAAzB,EAAwC,KAAxC,EAAqD;AACzD,QAAM,CAAC,GAAG,UAAU,CAAC,KAAD,CAApB;AACA,EAAA,CAAC,CAAC,CAAF,GAAM,KAAN;AACA,SAAO,cAAc,CAAC,CAAD,CAArB;AACD;AAED,OAAM,SAAU,WAAV,CAAsB,KAAtB,EAAqC,UAAU,GAAG,KAAlD,EAAuD;AAC3D,QAAM;AAAE,IAAA,CAAF;AAAK,IAAA,CAAL;AAAQ,IAAA;AAAR,MAAc,UAAU,CAAC,KAAD,CAA9B;;AAEA,MAAI,CAAC,UAAL,EAAiB;AACf,UAAM,IAAI,GAAG,CAAC,MAAM,CAAP,EAAU,QAAV,CAAmB,EAAnB,CAAb;AACA,UAAM,IAAI,GAAG,CAAC,MAAM,CAAP,EAAU,QAAV,CAAmB,EAAnB,CAAb;AACA,UAAM,IAAI,GAAG,CAAC,MAAM,CAAP,EAAU,QAAV,CAAmB,EAAnB,CAAb;AACA,WAAO,OAAO,IAAI,KAAK,IAAI,KAAK,IAAI,GAApC;AACD;;AAED,SAAO,CAAC,GAAG,KAAJ,GAAY,CAAC,GAAG,KAAhB,GAAwB,CAAC,GAAG,KAA5B,GAAoC,GAApC,GAA0C,cAA1C,GAA2D,oBAAlE;AACD","sourcesContent":["function byte(v: number) {\n  return v < 0 ? 0 : v >= 1 ? 255 : ~~(v * 256);\n}\n\nexport function hsvToRgb(h: number, s: number, v: number, a = 1) {\n  const i = Math.floor(h * 6);\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  let r = 0;\n  let g = 0;\n  let b = 0;\n\n  switch (i % 6) {\n    case 0:\n      (r = v), (g = t), (b = p);\n      break;\n    case 1:\n      (r = q), (g = v), (b = p);\n      break;\n    case 2:\n      (r = p), (g = v), (b = t);\n      break;\n    case 3:\n      (r = p), (g = q), (b = v);\n      break;\n    case 4:\n      (r = t), (g = p), (b = v);\n      break;\n    case 5:\n      (r = v), (g = p), (b = q);\n      break;\n  }\n\n  return {\n    r: byte(r),\n    g: byte(g),\n    b: byte(b),\n    a,\n  };\n}\n\nexport function rgbToHsv(r: number, g: number, b: number, a = 1) {\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const d = max - min;\n  const s = max === 0 ? 0 : d / max;\n  const v = max / 255;\n  let h = 0;\n\n  switch (max) {\n    case min:\n      h = 0;\n      break;\n    case r:\n      h = (g - b + d * (g < b ? 6 : 0)) / (6 * d);\n      break;\n    case g:\n      h = (b - r + d * 2) / (6 * d);\n      break;\n    case b:\n      h = (r - g + d * 4) / (6 * d);\n      break;\n  }\n\n  return {\n    h,\n    s,\n    v,\n    a,\n  };\n}\n\nexport interface RGBAColor {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n}\n\nexport function parseColor(color: string): RGBAColor {\n  if (color.match(/^rgb\\(/)) {\n    const parts = color.substring(4, color.length - 1).split(',');\n    return {\n      r: +parts[0],\n      g: +parts[1],\n      b: +parts[2],\n      a: 1,\n    };\n  } else if (color.match(/^rgba\\(/)) {\n    const parts = color.substring(5, color.length - 1).split(',');\n    return {\n      r: +parts[0],\n      g: +parts[1],\n      b: +parts[2],\n      a: +parts[3],\n    };\n  } else if (color[0] === '#') {\n    const value = parseInt(color.substr(1), 16);\n    const full = color.length === 7;\n    const convert = full\n      ? (v: number, p: number) => (v >> (p * 8)) & 255\n      : (v: number, p: number) => ((v >> (p * 4)) & 15) * 17;\n    return {\n      r: convert(value, 2),\n      g: convert(value, 1),\n      b: convert(value, 0),\n      a: 1,\n    };\n  }\n\n  return {\n    r: 0,\n    g: 0,\n    b: 0,\n    a: 1,\n  };\n}\n\nexport function serializeColor(c: RGBAColor): string {\n  return `rgba(${c.r}, ${c.g}, ${c.b}, ${c.a})`;\n}\n\nexport function transparentize(color: string, alpha: number): string {\n  const c = parseColor(color);\n  c.a = alpha;\n  return serializeColor(c);\n}\n\nexport function invertColor(color: string, blackWhite = false) {\n  const { r, g, b } = parseColor(color);\n\n  if (!blackWhite) {\n    const newR = (255 - r).toString(16);\n    const newG = (255 - g).toString(16);\n    const newB = (255 - b).toString(16);\n    return `rgb(${newR}, ${newG}, ${newB})`;\n  }\n\n  return r * 0.299 + g * 0.587 + b * 0.114 > 186 ? 'rgb(0, 0, 0)' : 'rgb(255, 255, 255)';\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}