{"ast":null,"code":"import _classCallCheck from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _toConsumableArray from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  cursor: pointer;\\n  line-height: 1;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: none;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport styled from '../../utils/styled';\nimport { StyledFileImagePreview, StyledFileItem, StyledFileList } from '../../quarks';\nimport { withFormContext } from '../../hoc/withFormContext';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Spinner } from '../Spinner';\nimport { showInputInfo } from '../../utils/input';\nvar FileInput = styled.input(_templateObject());\nvar Remove = styled.div(_templateObject2());\n\nfunction getFiles(target) {\n  var files = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  target.push.apply(target, _toConsumableArray(files));\n  return target;\n}\n\nvar FileSelectInt = /*#__PURE__*/function (_React$Component) {\n  _inherits(FileSelectInt, _React$Component);\n\n  var _super = _createSuper(FileSelectInt);\n\n  function FileSelectInt(props) {\n    var _this;\n\n    _classCallCheck(this, FileSelectInt);\n\n    _this = _super.call(this, props);\n\n    _this.addFileEntries = function (ev) {\n      var _this$props = _this.props,\n          multiple = _this$props.multiple,\n          form = _this$props.form,\n          _this$props$name = _this$props.name,\n          name = _this$props$name === void 0 ? '' : _this$props$name;\n      var files = ev.target.files;\n\n      if (!_this.state.controlled) {\n        if (form) {\n          form.change({\n            name: name,\n            value: getFiles(multiple ? _toConsumableArray(_this.state.value) : [], files)\n          });\n        } else {\n          _this.setState(function (prevState) {\n            return {\n              value: getFiles(multiple ? _toConsumableArray(prevState.value) : [], files),\n              previews: []\n            };\n          }, function () {\n            return _this.notifyChanges(_this.state.value);\n          });\n        }\n      } else {\n        _this.notifyChanges(getFiles(multiple ? _toConsumableArray(_this.state.value) : [], files));\n      }\n    };\n\n    _this.setInputRef = function (el) {\n      _this.fileInput = el;\n    };\n\n    _this.openFilePicker = function () {\n      var onOpen = _this.props.onOpen;\n      var open = true;\n\n      if (typeof onOpen === 'function') {\n        onOpen({\n          preventDefault: function preventDefault() {\n            open = false;\n          }\n        });\n      }\n\n      if (open && _this.fileInput) {\n        _this.fileInput.click();\n      }\n    };\n\n    var value = props.value || props.defaultValue || [];\n    _this.state = {\n      value: value,\n      controlled: props.value !== undefined,\n      previews: [],\n      error: props.error\n    };\n    return _this;\n  }\n\n  _createClass(FileSelectInt, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var form = this.props.form;\n      var controlled = this.state.controlled;\n\n      if (!controlled && form) {\n        form.subscribe(this);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var form = this.props.form;\n      var controlled = this.state.controlled;\n\n      if (!controlled && form) {\n        form.unsubscribe(this);\n      }\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(_ref) {\n      var _ref$value = _ref.value,\n          value = _ref$value === void 0 ? [] : _ref$value,\n          error = _ref.error;\n\n      if (this.state.controlled && value && this.state.value !== value) {\n        this.setState({\n          value: value,\n          previews: []\n        });\n      }\n\n      this.setState({\n        error: error\n      });\n    }\n  }, {\n    key: \"removeFileEntry\",\n    value: function removeFileEntry(f) {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          form = _this$props2.form,\n          _this$props2$name = _this$props2.name,\n          name = _this$props2$name === void 0 ? '' : _this$props2$name;\n\n      if (!this.state.controlled) {\n        if (form) {\n          form.change({\n            name: name,\n            value: this.state.value.filter(function (file) {\n              return f !== file;\n            })\n          });\n        } else {\n          this.setState(function (prevState) {\n            return {\n              value: prevState.value.filter(function (file) {\n                return f !== file;\n              }),\n              previews: prevState.previews.filter(function (preview) {\n                return preview.file !== f;\n              })\n            };\n          }, function () {\n            return _this2.notifyChanges(_this2.state.value);\n          });\n        }\n      } else {\n        var files = this.state.value.filter(function (file) {\n          return f !== file;\n        });\n        this.notifyChanges(files);\n      }\n    }\n  }, {\n    key: \"notifyChanges\",\n    value: function notifyChanges(files) {\n      var onChange = this.props.onChange;\n\n      if (typeof onChange === 'function') {\n        onChange({\n          value: files\n        });\n      }\n    }\n  }, {\n    key: \"renderPreview\",\n    value: function renderPreview(f) {\n      var _this3 = this;\n\n      var preview = this.state.previews.filter(function (preview) {\n        return preview.file === f;\n      })[0];\n\n      if (f.size > 1000000 || !f.type.match(/image/)) {\n        return this.renderItem(f);\n      }\n\n      if (preview) {\n        return React.createElement(StyledFileImagePreview, {\n          src: preview.data\n        }, React.createElement(Remove, {\n          onClick: function onClick() {\n            return _this3.removeFileEntry(f);\n          }\n        }, React.createElement(Icon, {\n          name: \"RemoveCircle\",\n          size: 1\n        })));\n      }\n\n      var reader = new FileReader();\n\n      reader.onload = function (file) {\n        return function () {\n          var result = reader.result;\n          typeof result === 'string' && _this3.setState(function (prevState) {\n            return {\n              previews: [].concat(_toConsumableArray(prevState.previews), [{\n                file: file,\n                data: result\n              }])\n            };\n          });\n        };\n      }(f);\n\n      reader.readAsDataURL(f);\n      return React.createElement(StyledFileImagePreview, null, React.createElement(Spinner, {\n        size: \"small\"\n      }));\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(f) {\n      var _this4 = this;\n\n      return React.createElement(StyledFileItem, {\n        key: f.name,\n        name: f.name\n      }, React.createElement(Remove, {\n        onClick: function onClick() {\n          return _this4.removeFileEntry(f);\n        }\n      }, React.createElement(Icon, {\n        name: \"RemoveCircle\",\n        size: 1\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          disabled = _this$props3.disabled,\n          multiple = _this$props3.multiple,\n          info = _this$props3.info;\n      var _this$state = this.state,\n          value = _this$state.value,\n          error = _this$state.error;\n      return React.createElement(\"div\", null, React.createElement(Button, {\n        onClick: this.openFilePicker,\n        disabled: disabled,\n        buttonStyle: \"secondary\",\n        type: \"button\"\n      }, children), React.createElement(FileInput, {\n        ref: this.setInputRef,\n        type: \"file\",\n        multiple: multiple,\n        onChange: this.addFileEntries,\n        value: \"\"\n      }), value && value.length > 0 && React.createElement(StyledFileList, null, value.map(function (file) {\n        return _this5.props.preview ? _this5.renderPreview(file) : _this5.renderItem(file);\n      })), showInputInfo(error, info));\n    }\n  }]);\n\n  return FileSelectInt;\n}(React.Component);\n\nFileSelectInt.inner = {\n  get StyledFileImagePreview() {\n    return StyledFileImagePreview;\n  },\n\n  get Remove() {\n    return Remove;\n  },\n\n  get Icon() {\n    return Icon;\n  },\n\n  get Spinner() {\n    return Spinner;\n  },\n\n  get StyledFileItem() {\n    return StyledFileItem;\n  },\n\n  get Button() {\n    return Button;\n  },\n\n  get FileInput() {\n    return FileInput;\n  },\n\n  get StyledFileList() {\n    return StyledFileList;\n  }\n\n};\n/**\n * A custom field for handling file selection.\n */\n\nexport var FileSelect = withFormContext(FileSelectInt);\nFileSelect.displayName = 'FileSelect';","map":{"version":3,"sources":["../../../../src/components/FileSelect/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,oBAAnB;AACA,SAA2B,sBAA3B,EAAmD,cAAnD,EAAmE,cAAnE,QAAyF,cAAzF;AACA,SAA2B,eAA3B,QAAkD,2BAAlD;AAEA,SAAS,MAAT,QAAuB,WAAvB;AACA,SAAS,IAAT,QAAqB,SAArB;AACA,SAAS,OAAT,QAAwB,YAAxB;AACA,SAAS,aAAT,QAA8B,mBAA9B;AA6BA,IAAM,SAAS,GAAG,MAAM,CAAC,KAAV,mBAAf;AAGA,IAAM,MAAM,GAAG,MAAM,CAAC,GAAV,oBAAZ;;AAIA,SAAS,QAAT,CAAkB,MAAlB,EAAsD;AAAA,MAAf,KAAe,uEAAF,EAAE;AAClD,EAAA,MAAM,CAAC,IAAP,OAAA,MAAM,qBAAS,KAAT,EAAN;AACA,SAAO,MAAP;AACH;;IACK,a;;;;;AAEF,yBAAY,KAAZ,EAAkC;AAAA;;AAAA;;AAC9B,8BAAM,KAAN;;AAgCI,UAAA,cAAA,GAAiB,UAAC,EAAD,EAA4C;AAAA,wBAC3B,MAAK,KADsB;AAAA,UACzD,QADyD,eACzD,QADyD;AAAA,UAC/C,IAD+C,eAC/C,IAD+C;AAAA,yCACzC,IADyC;AAAA,UACzC,IADyC,iCAClC,EADkC;AAEjE,UAAM,KAAK,GAAG,EAAE,CAAC,MAAH,CAAU,KAAxB;;AACA,UAAI,CAAC,MAAK,KAAL,CAAW,UAAhB,EAA4B;AACxB,YAAI,IAAJ,EAAU;AACN,UAAA,IAAI,CAAC,MAAL,CAAY;AACR,YAAA,IAAI,EAAJ,IADQ;AAER,YAAA,KAAK,EAAE,QAAQ,CAAC,QAAQ,sBAAO,MAAK,KAAL,CAAW,KAAlB,IAA2B,EAApC,EAAwC,KAAxC;AAFP,WAAZ;AAIH,SALD,MAMK;AACD,gBAAK,QAAL,CAAc,UAAA,SAAS;AAAA,mBAAK;AACxB,cAAA,KAAK,EAAE,QAAQ,CAAC,QAAQ,sBAAO,SAAS,CAAC,KAAjB,IAA0B,EAAnC,EAAuC,KAAvC,CADS;AAExB,cAAA,QAAQ,EAAE;AAFc,aAAL;AAAA,WAAvB,EAGI;AAAA,mBAAM,MAAK,aAAL,CAAmB,MAAK,KAAL,CAAW,KAA9B,CAAN;AAAA,WAHJ;AAIH;AACJ,OAbD,MAcK;AACD,cAAK,aAAL,CAAmB,QAAQ,CAAC,QAAQ,sBAAO,MAAK,KAAL,CAAW,KAAlB,IAA2B,EAApC,EAAwC,KAAxC,CAA3B;AACH;AACJ,KApBO;;AAwFA,UAAA,WAAA,GAAc,UAAC,EAAD,EAAyB;AAC3C,YAAK,SAAL,GAAiB,EAAjB;AACH,KAFO;;AAGA,UAAA,cAAA,GAAiB,YAAK;AAAA,UAClB,MADkB,GACP,MAAK,KADE,CAClB,MADkB;AAE1B,UAAI,IAAI,GAAG,IAAX;;AACA,UAAI,OAAO,MAAP,KAAkB,UAAtB,EAAkC;AAC9B,QAAA,MAAM,CAAC;AACH,UAAA,cADG,4BACW;AACV,YAAA,IAAI,GAAG,KAAP;AACH;AAHE,SAAD,CAAN;AAKH;;AACD,UAAI,IAAI,IAAI,MAAK,SAAjB,EAA4B;AACxB,cAAK,SAAL,CAAe,KAAf;AACH;AACJ,KAbO;;AA1HJ,QAAM,KAAK,GAAG,KAAK,CAAC,KAAN,IAAe,KAAK,CAAC,YAArB,IAAqC,EAAnD;AACA,UAAK,KAAL,GAAa;AACT,MAAA,KAAK,EAAL,KADS;AAET,MAAA,UAAU,EAAE,KAAK,CAAC,KAAN,KAAgB,SAFnB;AAGT,MAAA,QAAQ,EAAE,EAHD;AAIT,MAAA,KAAK,EAAE,KAAK,CAAC;AAJJ,KAAb;AAH8B;AASjC;;;;wCACgB;AAAA,UACL,IADK,GACI,KAAK,KADT,CACL,IADK;AAAA,UAEL,UAFK,GAEU,KAAK,KAFf,CAEL,UAFK;;AAGb,UAAI,CAAC,UAAD,IAAe,IAAnB,EAAyB;AACrB,QAAA,IAAI,CAAC,SAAL,CAAe,IAAf;AACH;AACJ;;;2CACmB;AAAA,UACR,IADQ,GACC,KAAK,KADN,CACR,IADQ;AAAA,UAER,UAFQ,GAEO,KAAK,KAFZ,CAER,UAFQ;;AAGhB,UAAI,CAAC,UAAD,IAAe,IAAnB,EAAyB;AACrB,QAAA,IAAI,CAAC,WAAL,CAAiB,IAAjB;AACH;AACJ;;;2DACsE;AAAA,4BAApC,KAAoC;AAAA,UAApC,KAAoC,2BAA5B,EAA4B;AAAA,UAAxB,KAAwB,QAAxB,KAAwB;;AACnE,UAAI,KAAK,KAAL,CAAW,UAAX,IAAyB,KAAzB,IAAkC,KAAK,KAAL,CAAW,KAAX,KAAqB,KAA3D,EAAkE;AAC9D,aAAK,QAAL,CAAc;AACV,UAAA,KAAK,EAAL,KADU;AAEV,UAAA,QAAQ,EAAE;AAFA,SAAd;AAIH;;AACD,WAAK,QAAL,CAAc;AAAE,QAAA,KAAK,EAAL;AAAF,OAAd;AACH;;;oCAsBuB,C,EAAO;AAAA;;AAAA,yBACC,KAAK,KADN;AAAA,UACnB,IADmB,gBACnB,IADmB;AAAA,2CACb,IADa;AAAA,UACb,IADa,kCACN,EADM;;AAE3B,UAAI,CAAC,KAAK,KAAL,CAAW,UAAhB,EAA4B;AACxB,YAAI,IAAJ,EAAU;AACN,UAAA,IAAI,CAAC,MAAL,CAAY;AACR,YAAA,IAAI,EAAJ,IADQ;AAER,YAAA,KAAK,EAAE,KAAK,KAAL,CAAW,KAAX,CAAiB,MAAjB,CAAwB,UAAA,IAAI;AAAA,qBAAI,CAAC,KAAK,IAAV;AAAA,aAA5B;AAFC,WAAZ;AAIH,SALD,MAMK;AACD,eAAK,QAAL,CAAc,UAAA,SAAS;AAAA,mBAAK;AACxB,cAAA,KAAK,EAAE,SAAS,CAAC,KAAV,CAAgB,MAAhB,CAAuB,UAAA,IAAI;AAAA,uBAAI,CAAC,KAAK,IAAV;AAAA,eAA3B,CADiB;AAExB,cAAA,QAAQ,EAAE,SAAS,CAAC,QAAV,CAAmB,MAAnB,CAA0B,UAAA,OAAO;AAAA,uBAAI,OAAO,CAAC,IAAR,KAAiB,CAArB;AAAA,eAAjC;AAFc,aAAL;AAAA,WAAvB,EAGI;AAAA,mBAAM,MAAI,CAAC,aAAL,CAAmB,MAAI,CAAC,KAAL,CAAW,KAA9B,CAAN;AAAA,WAHJ;AAIH;AACJ,OAbD,MAcK;AACD,YAAM,KAAK,GAAG,KAAK,KAAL,CAAW,KAAX,CAAiB,MAAjB,CAAwB,UAAA,IAAI;AAAA,iBAAI,CAAC,KAAK,IAAV;AAAA,SAA5B,CAAd;AACA,aAAK,aAAL,CAAmB,KAAnB;AACH;AACJ;;;kCACqB,K,EAAkB;AAAA,UAC5B,QAD4B,GACf,KAAK,KADU,CAC5B,QAD4B;;AAEpC,UAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AAChC,QAAA,QAAQ,CAAC;AACL,UAAA,KAAK,EAAE;AADF,SAAD,CAAR;AAGH;AACJ;;;kCACqB,C,EAAO;AAAA;;AACzB,UAAM,OAAO,GAAG,KAAK,KAAL,CAAW,QAAX,CAAoB,MAApB,CAA2B,UAAA,OAAO;AAAA,eAAI,OAAO,CAAC,IAAR,KAAiB,CAArB;AAAA,OAAlC,EAA0D,CAA1D,CAAhB;;AACA,UAAI,CAAC,CAAC,IAAF,GAAS,OAAT,IAAoB,CAAC,CAAC,CAAC,IAAF,CAAO,KAAP,CAAa,OAAb,CAAzB,EAAgD;AAC5C,eAAO,KAAK,UAAL,CAAgB,CAAhB,CAAP;AACH;;AACD,UAAI,OAAJ,EAAa;AACT,eAAQ,KAAA,CAAA,aAAA,CAAC,sBAAD,EAAuB;AAAC,UAAA,GAAG,EAAE,OAAO,CAAC;AAAd,SAAvB,EACV,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO;AAAC,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAAC,eAAL,CAAqB,CAArB,CAAN;AAAA;AAAV,SAAP,EACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,UAAA,IAAI,EAAC,cAAN;AAAqB,UAAA,IAAI,EAAE;AAA3B,SAAL,CADF,CADU,CAAR;AAKH;;AACD,UAAM,MAAM,GAAG,IAAI,UAAJ,EAAf;;AACA,MAAA,MAAM,CAAC,MAAP,GAAiB,UAAA,IAAI;AAAA,eAAI,YAAK;AAC1B,cAAM,MAAM,GAAG,MAAM,CAAC,MAAtB;AACA,iBAAO,MAAP,KAAkB,QAAlB,IACI,MAAI,CAAC,QAAL,CAAc,UAAA,SAAS;AAAA,mBAAK;AACxB,cAAA,QAAQ,+BACD,SAAS,CAAC,QADT,IAEJ;AACI,gBAAA,IAAI,EAAJ,IADJ;AAEI,gBAAA,IAAI,EAAE;AAFV,eAFI;AADgB,aAAL;AAAA,WAAvB,CADJ;AAUH,SAZoB;AAAA,OAAL,CAYb,CAZa,CAAhB;;AAaA,MAAA,MAAM,CAAC,aAAP,CAAqB,CAArB;AACA,aAAQ,KAAA,CAAA,aAAA,CAAC,sBAAD,EAAuB,IAAvB,EACR,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ;AAAC,QAAA,IAAI,EAAC;AAAN,OAAR,CADQ,CAAR;AAGH;;;+BACkB,C,EAAO;AAAA;;AACtB,aAAQ,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe;AAAC,QAAA,GAAG,EAAE,CAAC,CAAC,IAAR;AAAc,QAAA,IAAI,EAAE,CAAC,CAAC;AAAtB,OAAf,EACR,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO;AAAC,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAC,eAAL,CAAqB,CAArB,CAAN;AAAA;AAAV,OAAP,EACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,QAAA,IAAI,EAAC,cAAN;AAAqB,QAAA,IAAI,EAAE;AAA3B,OAAL,CADF,CADQ,CAAR;AAKH;;;6BAkBK;AAAA;;AAAA,yBAC6C,KAAK,KADlD;AAAA,UACM,QADN,gBACM,QADN;AAAA,UACgB,QADhB,gBACgB,QADhB;AAAA,UAC0B,QAD1B,gBAC0B,QAD1B;AAAA,UACoC,IADpC,gBACoC,IADpC;AAAA,wBAEuB,KAAK,KAF5B;AAAA,UAEM,KAFN,eAEM,KAFN;AAAA,UAEa,KAFb,eAEa,KAFb;AAGF,aAAQ,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EACR,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO;AAAC,QAAA,OAAO,EAAE,KAAK,cAAf;AAA+B,QAAA,QAAQ,EAAE,QAAzC;AAAmD,QAAA,WAAW,EAAC,WAA/D;AAA2E,QAAA,IAAI,EAAC;AAAhF,OAAP,EACG,QADH,CADQ,EAIR,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU;AAAC,QAAA,GAAG,EAAE,KAAK,WAAX;AAAwB,QAAA,IAAI,EAAC,MAA7B;AAAoC,QAAA,QAAQ,EAAE,QAA9C;AAAwD,QAAA,QAAQ,EAAE,KAAK,cAAvE;AAAuF,QAAA,KAAK,EAAC;AAA7F,OAAV,CAJQ,EAKP,KAAK,IAAI,KAAK,CAAC,MAAN,GAAe,CAAxB,IAA8B,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,IAAf,EAC1B,KAAK,CAAC,GAAN,CAAU,UAAA,IAAI;AAAA,eAAK,MAAI,CAAC,KAAL,CAAW,OAAX,GAAqB,MAAI,CAAC,aAAL,CAAmB,IAAnB,CAArB,GAAgD,MAAI,CAAC,UAAL,CAAgB,IAAhB,CAArD;AAAA,OAAd,CAD0B,CALvB,EAQP,aAAa,CAAC,KAAD,EAAQ,IAAR,CARN,CAAR;AAUH;;;;EAzJuB,KAAK,CAAC,S;;AA0JvB,aAAA,CAAA,KAAA,GAAQ;AACX,MAAI,sBAAJ,GAA0B;AAAK,WAAO,sBAAP;AAAiE,GADrF;;AAEX,MAAI,MAAJ,GAAU;AAAK,WAAO,MAAP;AAAiC,GAFrC;;AAGX,MAAI,IAAJ,GAAQ;AAAK,WAAO,IAAP;AAA6B,GAH/B;;AAIX,MAAI,OAAJ,GAAW;AAAK,WAAO,OAAP;AAAmC,GAJxC;;AAKX,MAAI,cAAJ,GAAkB;AAAK,WAAO,cAAP;AAAiD,GAL7D;;AAMX,MAAI,MAAJ,GAAU;AAAK,WAAO,MAAP;AAAiC,GANrC;;AAOX,MAAI,SAAJ,GAAa;AAAK,WAAO,SAAP;AAAuC,GAP9C;;AAQX,MAAI,cAAJ,GAAkB;AAAK,WAAO,cAAP;AAAiD;;AAR7D,CAAR;AAWX;;;;AAGA,OAAO,IAAM,UAAU,GAAG,eAAe,CAAC,aAAD,CAAlC;AACP,UAAU,CAAC,WAAX,GAAyB,YAAzB","sourcesContent":["import * as React from 'react';\nimport styled from '../../utils/styled';\nimport { FileImagePreview, StyledFileImagePreview, StyledFileItem, StyledFileList } from '../../quarks';\nimport { FormContextProps, withFormContext } from '../../hoc/withFormContext';\nimport { InputChangeEvent, InputProps } from '../../common';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { Spinner } from '../Spinner';\nimport { showInputInfo } from '../../utils/input';\nexport type FileSelectChangeEvent = InputChangeEvent<Array<File>>;\nexport interface FileSelectOpenEvent {\n    preventDefault(): void;\n}\nexport interface FileSelectProps extends InputProps<Array<File>> {\n    /**\n     * Show preview instead of file list.\n     */\n    preview?: boolean;\n    /**\n     * Allow selecting multiple files.\n     */\n    multiple?: boolean;\n    /**\n     * The content of the fileselect.\n     */\n    children?: React.ReactNode;\n    /**\n     * Event fired when the file picker should be opened.\n     */\n    onOpen?(e: FileSelectOpenEvent): void;\n}\nexport interface FileSelectState {\n    value: Array<File>;\n    error?: React.ReactChild;\n    controlled: boolean;\n    previews: Array<FileImagePreview>;\n}\nconst FileInput = styled.input `\n  display: none;\n`;\nconst Remove = styled.div `\n  cursor: pointer;\n  line-height: 1;\n`;\nfunction getFiles(target: Array<File>, files: any = []) {\n    target.push(...files);\n    return target;\n}\nclass FileSelectInt extends React.Component<FileSelectProps & FormContextProps, FileSelectState> {\n    private fileInput: HTMLInputElement | null;\n    constructor(props: FileSelectProps) {\n        super(props);\n        const value = props.value || props.defaultValue || [];\n        this.state = {\n            value,\n            controlled: props.value !== undefined,\n            previews: [],\n            error: props.error,\n        };\n    }\n    componentDidMount() {\n        const { form } = this.props;\n        const { controlled } = this.state;\n        if (!controlled && form) {\n            form.subscribe(this);\n        }\n    }\n    componentWillUnmount() {\n        const { form } = this.props;\n        const { controlled } = this.state;\n        if (!controlled && form) {\n            form.unsubscribe(this);\n        }\n    }\n    UNSAFE_componentWillReceiveProps({ value = [], error }: FileSelectProps) {\n        if (this.state.controlled && value && this.state.value !== value) {\n            this.setState({\n                value,\n                previews: [],\n            });\n        }\n        this.setState({ error });\n    }\n    private addFileEntries = (ev: React.ChangeEvent<HTMLInputElement>) => {\n        const { multiple, form, name = '' } = this.props;\n        const files = ev.target.files;\n        if (!this.state.controlled) {\n            if (form) {\n                form.change({\n                    name,\n                    value: getFiles(multiple ? [...this.state.value] : [], files),\n                });\n            }\n            else {\n                this.setState(prevState => ({\n                    value: getFiles(multiple ? [...prevState.value] : [], files),\n                    previews: [],\n                }), () => this.notifyChanges(this.state.value));\n            }\n        }\n        else {\n            this.notifyChanges(getFiles(multiple ? [...this.state.value] : [], files));\n        }\n    };\n    private removeFileEntry(f: File) {\n        const { form, name = '' } = this.props;\n        if (!this.state.controlled) {\n            if (form) {\n                form.change({\n                    name,\n                    value: this.state.value.filter(file => f !== file),\n                });\n            }\n            else {\n                this.setState(prevState => ({\n                    value: prevState.value.filter(file => f !== file),\n                    previews: prevState.previews.filter(preview => preview.file !== f),\n                }), () => this.notifyChanges(this.state.value));\n            }\n        }\n        else {\n            const files = this.state.value.filter(file => f !== file);\n            this.notifyChanges(files);\n        }\n    }\n    private notifyChanges(files: Array<File>) {\n        const { onChange } = this.props;\n        if (typeof onChange === 'function') {\n            onChange({\n                value: files,\n            });\n        }\n    }\n    private renderPreview(f: File) {\n        const preview = this.state.previews.filter(preview => preview.file === f)[0];\n        if (f.size > 1000000 || !f.type.match(/image/)) {\n            return this.renderItem(f);\n        }\n        if (preview) {\n            return (<StyledFileImagePreview src={preview.data}>\n          <Remove onClick={() => this.removeFileEntry(f)}>\n            <Icon name=\"RemoveCircle\" size={1}/>\n          </Remove>\n        </StyledFileImagePreview>);\n        }\n        const reader = new FileReader();\n        reader.onload = (file => () => {\n            const result = reader.result;\n            typeof result === 'string' &&\n                this.setState(prevState => ({\n                    previews: [\n                        ...prevState.previews,\n                        {\n                            file,\n                            data: result,\n                        },\n                    ],\n                }));\n        })(f);\n        reader.readAsDataURL(f);\n        return (<StyledFileImagePreview>\n        <Spinner size=\"small\"/>\n      </StyledFileImagePreview>);\n    }\n    private renderItem(f: File) {\n        return (<StyledFileItem key={f.name} name={f.name}>\n        <Remove onClick={() => this.removeFileEntry(f)}>\n          <Icon name=\"RemoveCircle\" size={1}/>\n        </Remove>\n      </StyledFileItem>);\n    }\n    private setInputRef = (el: HTMLInputElement) => {\n        this.fileInput = el;\n    };\n    private openFilePicker = () => {\n        const { onOpen } = this.props;\n        let open = true;\n        if (typeof onOpen === 'function') {\n            onOpen({\n                preventDefault() {\n                    open = false;\n                },\n            });\n        }\n        if (open && this.fileInput) {\n            this.fileInput.click();\n        }\n    };\n    render() {\n        const { children, disabled, multiple, info } = this.props;\n        const { value, error } = this.state;\n        return (<div>\n        <Button onClick={this.openFilePicker} disabled={disabled} buttonStyle=\"secondary\" type=\"button\">\n          {children}\n        </Button>\n        <FileInput ref={this.setInputRef} type=\"file\" multiple={multiple} onChange={this.addFileEntries} value=\"\"/>\n        {value && value.length > 0 && (<StyledFileList>\n            {value.map(file => (this.props.preview ? this.renderPreview(file) : this.renderItem(file)))}\n          </StyledFileList>)}\n        {showInputInfo(error, info)}\n      </div>);\n    }\n    static inner = {\n        get StyledFileImagePreview() { return StyledFileImagePreview as typeof StyledFileImagePreview; },\n        get Remove() { return Remove as typeof Remove; },\n        get Icon() { return Icon as typeof Icon; },\n        get Spinner() { return Spinner as typeof Spinner; },\n        get StyledFileItem() { return StyledFileItem as typeof StyledFileItem; },\n        get Button() { return Button as typeof Button; },\n        get FileInput() { return FileInput as typeof FileInput; },\n        get StyledFileList() { return StyledFileList as typeof StyledFileList; }\n    };\n}\n/**\n * A custom field for handling file selection.\n */\nexport const FileSelect = withFormContext(FileSelectInt);\nFileSelect.displayName = 'FileSelect';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}