{"ast":null,"code":"export const FileUploadActions = {\n  startUpload: 'uploader/start_upload',\n  cancelUpload: 'uploader/cancel_upload',\n  showUploads: 'uploader/show_uploads',\n  clearUploads: 'uploader/clear_uploads',\n  deleteUploads: 'uploader/delete_uploads',\n  uploadProgress: 'uploader/upload_progress',\n  uploadSuccess: 'uploader/upload_success',\n  uploadFailure: 'uploader/upload_failure'\n};","map":{"version":3,"sources":["../../../../src/components/FileUploaderDetails/FileUploaderDetails.types.part.ts"],"names":[],"mappings":"AA2DA,OAAO,MAAM,iBAAiB,GAAG;AAC/B,EAAA,WAAW,EAAE,uBADkB;AAE/B,EAAA,YAAY,EAAE,wBAFiB;AAG/B,EAAA,WAAW,EAAE,uBAHkB;AAI/B,EAAA,YAAY,EAAE,wBAJiB;AAK/B,EAAA,aAAa,EAAE,yBALgB;AAM/B,EAAA,cAAc,EAAE,0BANe;AAO/B,EAAA,aAAa,EAAE,yBAPgB;AAQ/B,EAAA,aAAa,EAAE;AARgB,CAA1B","sourcesContent":["export interface FileBase {\n  /**\n   * Name of the file.\n   */\n  name: string;\n  /**\n   * Gives the file unique identifier.\n   */\n  fileId: string;\n  /**\n   * Yields the content-type of the file.\n   */\n  type: string;\n  /**\n   * Gives the uploader component unique identifier.\n   */\n  uploaderId: string;\n  /**\n   * Timestamp when user selected a file.\n   */\n  timestamp: Date;\n  /**\n   * Additional arbitrary data associated with the file.\n   */\n  data: any;\n}\n\nexport interface FileItem extends FileBase {\n  /**\n   * Selected file.\n   */\n  content: File;\n}\n\nexport interface FileProgress extends FileBase {\n  /**\n   * Progress value of uploading file.\n   */\n  progress: number;\n  /**\n   * Indicates file upload cancelation.\n   */\n  canceled: boolean;\n  /**\n   * Indicates file upload deletion.\n   */\n  deleted: boolean;\n  /**\n   * Error message in case of file upload failure.\n   */\n  error?: string;\n  /**\n   * Indicates file upload virus scanning.\n   */\n  scanning: boolean;\n}\n\nexport type ProgressStatus = 'progress' | 'scanning' | 'error' | 'success' | 'canceled';\n\nexport const FileUploadActions = {\n  startUpload: 'uploader/start_upload',\n  cancelUpload: 'uploader/cancel_upload',\n  showUploads: 'uploader/show_uploads',\n  clearUploads: 'uploader/clear_uploads',\n  deleteUploads: 'uploader/delete_uploads',\n  uploadProgress: 'uploader/upload_progress',\n  uploadSuccess: 'uploader/upload_success',\n  uploadFailure: 'uploader/upload_failure',\n};\n\nexport interface FileUploaderDetailsEvent<T> {\n  /**\n   * Files passed on emitted events.\n   */\n  files: Array<T>;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}