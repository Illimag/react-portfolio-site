{"ast":null,"code":"import { NotificationAction } from './types';\nimport { eventManagers } from '../../utils/eventManager';\nvar defaultOptions = {\n  type: 'none',\n  autoClose: undefined\n};\n\nfunction mergeOptions(options, type) {\n  return Object.assign({}, defaultOptions, options, {\n    type: type\n  });\n}\n\nfunction emitEvent(_ref) {\n  var content = _ref.content,\n      _ref$options = _ref.options,\n      options = _ref$options === void 0 ? {} : _ref$options;\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'none';\n  var eventManagerOption = options.events;\n  var eventManager = eventManagerOption || eventManagers[0];\n  eventManager.emit(NotificationAction.showNotification, {\n    content: content,\n    options: mergeOptions(options, type)\n  });\n}\n\nexport var notify = Object.assign(function (payload) {\n  return emitEvent(payload, payload.options && payload.options.type);\n}, {\n  success: function success(payload) {\n    return emitEvent(payload, 'success');\n  },\n  info: function info(payload) {\n    return emitEvent(payload, 'info');\n  },\n  warn: function warn(payload) {\n    return emitEvent(payload, 'warning');\n  },\n  warning: function warning(payload) {\n    return emitEvent(payload, 'warning');\n  },\n  error: function error(payload) {\n    return emitEvent(payload, 'error');\n  }\n});","map":{"version":3,"sources":["../../../../src/components/Notifications/notifier.ts"],"names":[],"mappings":"AAAA,SAAoE,kBAApE,QAA8F,SAA9F;AACA,SAAS,aAAT,QAA8B,0BAA9B;AAEA,IAAM,cAAc,GAAuB;AACzC,EAAA,IAAI,EAAE,MADmC;AAEzC,EAAA,SAAS,EAAE;AAF8B,CAA3C;;AAKA,SAAS,YAAT,CAAsB,OAAtB,EAAmD,IAAnD,EAAyE;AACvE,SAAO,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,cAAlB,EAAkC,OAAlC,EAA2C;AAAE,IAAA,IAAI,EAAJ;AAAF,GAA3C,CAAP;AACD;;AAED,SAAS,SAAT,OAAkG;AAAA,MAA7E,OAA6E,QAA7E,OAA6E;AAAA,0BAApE,OAAoE;AAAA,MAApE,OAAoE,6BAA1D,EAA0D;AAAA,MAA/B,IAA+B,uEAAN,MAAM;AAAA,MAChF,kBADgF,GACzD,OADyD,CACxF,MADwF;AAEhG,MAAM,YAAY,GAAG,kBAAkB,IAAI,aAAa,CAAC,CAAD,CAAxD;AACA,EAAA,YAAY,CAAC,IAAb,CAAkB,kBAAkB,CAAC,gBAArC,EAAuD;AACrD,IAAA,OAAO,EAAP,OADqD;AAErD,IAAA,OAAO,EAAE,YAAY,CAAC,OAAD,EAAU,IAAV;AAFgC,GAAvD;AAID;;AAED,OAAO,IAAM,MAAM,GAAG,MAAM,CAAC,MAAP,CACpB,UAAC,OAAD;AAAA,SAAkC,SAAS,CAAC,OAAD,EAAU,OAAO,CAAC,OAAR,IAAmB,OAAO,CAAC,OAAR,CAAgB,IAA7C,CAA3C;AAAA,CADoB,EAEpB;AACE,EAAA,OAAO,EAAE,iBAAC,OAAD;AAAA,WAAkC,SAAS,CAAC,OAAD,EAAU,SAAV,CAA3C;AAAA,GADX;AAEE,EAAA,IAAI,EAAE,cAAC,OAAD;AAAA,WAAkC,SAAS,CAAC,OAAD,EAAU,MAAV,CAA3C;AAAA,GAFR;AAGE,EAAA,IAAI,EAAE,cAAC,OAAD;AAAA,WAAkC,SAAS,CAAC,OAAD,EAAU,SAAV,CAA3C;AAAA,GAHR;AAIE,EAAA,OAAO,EAAE,iBAAC,OAAD;AAAA,WAAkC,SAAS,CAAC,OAAD,EAAU,SAAV,CAA3C;AAAA,GAJX;AAKE,EAAA,KAAK,EAAE,eAAC,OAAD;AAAA,WAAkC,SAAS,CAAC,OAAD,EAAU,OAAV,CAA3C;AAAA;AALT,CAFoB,CAAf","sourcesContent":["import { NotificationOption, NotificationType, NotificationOptions, NotificationAction } from './types';\nimport { eventManagers } from '../../utils/eventManager';\n\nconst defaultOptions: NotificationOption = {\n  type: 'none',\n  autoClose: undefined,\n};\n\nfunction mergeOptions(options: NotificationOption, type: NotificationType): NotificationOption {\n  return Object.assign({}, defaultOptions, options, { type });\n}\n\nfunction emitEvent({ content, options = {} }: NotificationOptions, type: NotificationType = 'none') {\n  const { events: eventManagerOption } = options;\n  const eventManager = eventManagerOption || eventManagers[0];\n  eventManager.emit(NotificationAction.showNotification, {\n    content,\n    options: mergeOptions(options, type),\n  });\n}\n\nexport const notify = Object.assign(\n  (payload: NotificationOptions) => emitEvent(payload, payload.options && payload.options.type),\n  {\n    success: (payload: NotificationOptions) => emitEvent(payload, 'success'),\n    info: (payload: NotificationOptions) => emitEvent(payload, 'info'),\n    warn: (payload: NotificationOptions) => emitEvent(payload, 'warning'),\n    warning: (payload: NotificationOptions) => emitEvent(payload, 'warning'),\n    error: (payload: NotificationOptions) => emitEvent(payload, 'error'),\n  },\n);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}