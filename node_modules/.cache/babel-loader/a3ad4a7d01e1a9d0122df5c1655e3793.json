{"ast":null,"code":"import { purpleRed } from '../colors';\nimport styled, { themed } from '../utils/styled';\nexport function getTextFieldBorderType(borderless, error, focused) {\n  return borderless ? 0\n  /* none */\n  : error ? 3\n  /* error */\n  : focused ? 2\n  /* focus */\n  : 1\n  /* normal */\n  ;\n}\nexport var StyledInputBox = styled('div')(themed(function (_ref) {\n  var border = _ref.border,\n      disabled = _ref.disabled,\n      focused = _ref.focused,\n      hasValue = _ref.hasValue,\n      _ref$theme = _ref.theme,\n      ui0 = _ref$theme.ui0,\n      ui2 = _ref$theme.ui2,\n      ui3 = _ref$theme.ui3,\n      ui5 = _ref$theme.ui5;\n  return \"\\n      box-sizing: border-box;\\n      box-shadow: none;\\n      margin: 0;\\n      display: flex;\\n      align-items: center;\\n      flex: 1 1 auto;\\n      background: \".concat(ui2, \";\\n      min-height: 54px;\\n      max-height: 112px;\\n      border-bottom: 1px solid \").concat(border === 3\n  /* error */\n  ? purpleRed : focused ? ui0 : hasValue ? ui5 : ui3, \";\\n      cursor: \").concat(disabled ? 'not-allowed' : 'auto', \";\\n      overflow-y: auto;\\n\\n      &:hover {\\n        border-bottom-color: \").concat(disabled ? ui3 : ui0, \";\\n      }\\n    \");\n}));","map":{"version":3,"sources":["../../../src/quarks/StyledInputBox.tsx"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,WAA1B;AAEA,OAAO,MAAP,IAAiB,MAAjB,QAA+B,iBAA/B;AAOA,OAAM,SAAU,sBAAV,CAAiC,UAAjC,EAAuD,KAAvD,EAAwE,OAAxE,EAAyF;AAC3F,SAAO,UAAU,GACZ;AAAA;AADY,IAEX,KAAK,GACF;AAAA;AADE,IAED,OAAO,GACJ;AAAA;AADI,IAEJ;AAAA;AANb;AAOH;AASD,OAAO,IAAM,cAAc,GAAG,MAAM,CAAC,KAAD,CAAN,CAAmC,MAAM,CAAC;AAAA,MAAG,MAAH,QAAG,MAAH;AAAA,MAAW,QAAX,QAAW,QAAX;AAAA,MAAqB,OAArB,QAAqB,OAArB;AAAA,MAA8B,QAA9B,QAA8B,QAA9B;AAAA,wBAAwC,KAAxC;AAAA,MAAiD,GAAjD,cAAiD,GAAjD;AAAA,MAAsD,GAAtD,cAAsD,GAAtD;AAAA,MAA2D,GAA3D,cAA2D,GAA3D;AAAA,MAAgE,GAAhE,cAAgE,GAAhE;AAAA,0LAOpD,GAPoD,kGAUvC,MAAM,KAAA;AAAA;AAAN,IAAuC,SAAvC,GAAmD,OAAO,GAAG,GAAH,GAAS,QAAQ,GAAG,GAAH,GAAS,GAV7C,8BAWxD,QAAQ,GAAG,aAAH,GAAmB,MAX6B,yFAezC,QAAQ,GAAG,GAAH,GAAS,GAfwB;AAAA,CAAD,CAAzC,CAAvB","sourcesContent":["import { purpleRed } from '../colors';\nimport { PreciseTheme } from '../common';\nimport styled, { themed } from '../utils/styled';\nexport const enum TextFieldBorderType {\n    none = 0,\n    normal = 1,\n    focus = 2,\n    error = 3\n}\nexport function getTextFieldBorderType(borderless?: boolean, error?: boolean, focused?: boolean) {\n    return borderless\n        ? TextFieldBorderType.none\n        : error\n            ? TextFieldBorderType.error\n            : focused\n                ? TextFieldBorderType.focus\n                : TextFieldBorderType.normal;\n}\nexport interface StyledInputBoxProps {\n    border: TextFieldBorderType;\n    disabled?: boolean;\n    onClear?: void;\n    focused?: boolean;\n    hasValue?: boolean;\n    theme?: PreciseTheme;\n}\nexport const StyledInputBox = styled('div')<StyledInputBoxProps>(themed(({ border, disabled, focused, hasValue, theme: { ui0, ui2, ui3, ui5 } }) => `\n      box-sizing: border-box;\n      box-shadow: none;\n      margin: 0;\n      display: flex;\n      align-items: center;\n      flex: 1 1 auto;\n      background: ${ui2};\n      min-height: 54px;\n      max-height: 112px;\n      border-bottom: 1px solid ${border === TextFieldBorderType.error ? purpleRed : focused ? ui0 : hasValue ? ui5 : ui3};\n      cursor: ${disabled ? 'not-allowed' : 'auto'};\n      overflow-y: auto;\n\n      &:hover {\n        border-bottom-color: ${disabled ? ui3 : ui0};\n      }\n    `));\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}