{"ast":null,"code":"import _slicedToArray from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\n/**\n * The functional component to handle tabs.\n * DEPRECATED: Please use `withTabControl` instead.\n * @deprecated\n */\n\nexport var TabControl = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(TabControl, _React$PureComponent);\n\n  var _super = _createSuper(TabControl);\n\n  function TabControl(props) {\n    var _this;\n\n    _classCallCheck(this, TabControl);\n\n    _this = _super.call(this, props);\n    _this.selects = [];\n\n    _this.changeIndex = function (target) {\n      var change = _this.props.onTabChange;\n\n      if (typeof change === 'function') {\n        change({\n          previousIndex: _this.state.selectedIndex,\n          selectedIndex: target\n        });\n      }\n\n      if (!_this.state.controlled) {\n        _this.setState({\n          selectedIndex: target\n        });\n      }\n    };\n\n    _this.state = {\n      selectedIndex: props.selectedIndex || props.defaultIndex || 0,\n      controlled: props.selectedIndex !== undefined\n    };\n    return _this;\n  }\n\n  _createClass(TabControl, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var selectedIndex = nextProps.selectedIndex;\n\n      if (this.state.controlled && typeof selectedIndex === 'number') {\n        this.setState({\n          selectedIndex: selectedIndex\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var selectedIndex = this.state.selectedIndex;\n      var _this$props = this.props,\n          children = _this$props.children,\n          render = _this$props.render;\n      var items = [];\n      var selects = this.selects;\n      React.Children.forEach(children, function (element, index) {\n        if (element && React.isValidElement(element)) {\n          var active = index === selectedIndex;\n\n          if (selects[index] === undefined) {\n            selects[index] = function () {\n              return _this2.changeIndex(index);\n            };\n          }\n\n          items.push({\n            onSelect: selects[index],\n            active: active,\n            element: element\n          });\n        }\n      });\n      return render(items);\n    }\n  }]);\n\n  return TabControl;\n}(React.PureComponent);\n\nfunction isTabPage(child) {\n  return !!child;\n}\n\nfunction useTabControl(_ref) {\n  var children = _ref.children,\n      selectedIndex = _ref.selectedIndex,\n      defaultIndex = _ref.defaultIndex,\n      onTabChange = _ref.onTabChange;\n\n  var _React$useState = React.useState(selectedIndex !== undefined),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      controlled = _React$useState2[0];\n\n  var _React$useState3 = React.useState(selectedIndex || defaultIndex || 0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      activeTabIndex = _React$useState4[0],\n      setActiveTabIndex = _React$useState4[1];\n\n  React.useEffect(function () {\n    if (controlled && typeof selectedIndex === 'number') {\n      setActiveTabIndex(selectedIndex);\n    }\n  }, [selectedIndex]);\n  var elements = React.useMemo(function () {\n    return (React.Children.map(children, function (child) {\n      return React.isValidElement(child) ? child : undefined;\n    }) || []).filter(isTabPage);\n  }, [children]);\n  var headers = React.useMemo(function () {\n    return elements.map(function (child) {\n      return child.props.header;\n    });\n  }, [elements]);\n  var onSelect = React.useCallback(function (selectedIndex) {\n    setActiveTabIndex(function (previousIndex) {\n      if (typeof onTabChange === 'function') {\n        onTabChange({\n          previousIndex: previousIndex,\n          selectedIndex: selectedIndex\n        });\n      }\n\n      return controlled ? previousIndex : selectedIndex;\n    });\n  }, [onTabChange, controlled]);\n  return {\n    elements: elements,\n    headers: headers,\n    activeTabIndex: activeTabIndex,\n    onSelect: onSelect,\n    isActive: function isActive(index) {\n      return activeTabIndex === index;\n    }\n  };\n}\n\nexport function withTabControl(Component) {\n  var TabControl = Object.assign(function (_a) {\n    var children = _a.children,\n        Element = _a.tabItemRenderer,\n        rest = __rest(_a, [\"children\", \"tabItemRenderer\"]);\n\n    var _useTabControl = useTabControl(Object.assign({\n      children: children\n    }, rest)),\n        elements = _useTabControl.elements,\n        headers = _useTabControl.headers,\n        activeTabIndex = _useTabControl.activeTabIndex,\n        isActive = _useTabControl.isActive,\n        onSelect = _useTabControl.onSelect;\n\n    return React.createElement(Component, Object.assign({}, rest, {\n      headers: headers,\n      activeIndex: activeTabIndex,\n      onSelect: onSelect\n    }), elements.map(function (child, i) {\n      return React.createElement(Element, {\n        key: \"item-\".concat(i),\n        active: isActive(i)\n      }, child);\n    }));\n  }, {\n    inner: {\n      get Component() {\n        return Component;\n      }\n\n    }\n  });\n  return TabControl;\n}","map":{"version":3,"sources":["../../../../src/components/TabControl/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { TabPageProps } from '../TabPage';\nimport { Omit } from '../../common';\nimport { TabItemProps } from '../ContentSwitch/ContentSwitch.part';\nexport interface TabControlItem {\n    /**\n     * The element to be shown.\n     */\n    element: React.ReactNode;\n    /**\n     * Gets if the item is currently active.\n     */\n    active: boolean;\n    /**\n     * Callback to use when the item should be active.\n     */\n    onSelect(): void;\n}\nexport interface TabChangeEvent {\n    /**\n     * The previously selected tab / index.\n     */\n    previousIndex: number;\n    /**\n     * The currently selected tab / index.\n     */\n    selectedIndex: number;\n}\nexport interface TabOptions {\n    /**\n     * The default index - only set for use in automatic mode.\n     */\n    defaultIndex?: number;\n    /**\n     * The currently selected index - used in the controlled mode.\n     */\n    selectedIndex?: number;\n    /**\n     * Notification callback if the selected tab index should change.\n     */\n    onTabChange?(e: TabChangeEvent): void;\n}\n/**\n * @deprecated\n */\nexport interface TabControlProps extends TabOptions {\n    /**\n     * The children, usually passed as a collection of TabPage elements.\n     */\n    render(items: Array<TabControlItem>): React.ReactNode;\n}\n/**\n * @deprecated\n */\nexport interface TabControlState {\n    /**\n     * The currently selected index.\n     */\n    selectedIndex: number;\n    /**\n     * Determines if the tab component is controlled from the outside or not.\n     */\n    controlled: boolean;\n}\n/**\n * The functional component to handle tabs.\n * DEPRECATED: Please use `withTabControl` instead.\n * @deprecated\n */\nexport class TabControl extends React.PureComponent<TabControlProps, TabControlState> {\n    private selects: Array<() => void> = [];\n    constructor(props: TabControlProps) {\n        super(props);\n        this.state = {\n            selectedIndex: props.selectedIndex || props.defaultIndex || 0,\n            controlled: props.selectedIndex !== undefined,\n        };\n    }\n    UNSAFE_componentWillReceiveProps(nextProps: TabControlProps) {\n        const selectedIndex = nextProps.selectedIndex;\n        if (this.state.controlled && typeof selectedIndex === 'number') {\n            this.setState({\n                selectedIndex,\n            });\n        }\n    }\n    private changeIndex = (target: number) => {\n        const change = this.props.onTabChange;\n        if (typeof change === 'function') {\n            change({\n                previousIndex: this.state.selectedIndex,\n                selectedIndex: target,\n            });\n        }\n        if (!this.state.controlled) {\n            this.setState({\n                selectedIndex: target,\n            });\n        }\n    };\n    render() {\n        const selectedIndex = this.state.selectedIndex;\n        const { children, render } = this.props;\n        const items: Array<TabControlItem> = [];\n        const selects = this.selects;\n        React.Children.forEach(children, (element: React.ReactElement<any>, index) => {\n            if (element && React.isValidElement(element)) {\n                const active = index === selectedIndex;\n                if (selects[index] === undefined) {\n                    selects[index] = () => this.changeIndex(index);\n                }\n                items.push({\n                    onSelect: selects[index],\n                    active,\n                    element,\n                });\n            }\n        });\n        return render(items);\n    }\n}\nfunction isTabPage(child: React.ReactElement<TabPageProps>): child is React.ReactElement<TabPageProps> {\n    return !!child;\n}\ninterface UseTabSwitcherParams {\n    children: React.ReactNode;\n    selectedIndex?: number;\n    defaultIndex?: number;\n    onTabChange?(e: TabChangeEvent): void;\n}\nfunction useTabControl({ children, selectedIndex, defaultIndex, onTabChange }: UseTabSwitcherParams) {\n    const [controlled] = React.useState(selectedIndex !== undefined);\n    const [activeTabIndex, setActiveTabIndex] = React.useState(selectedIndex || defaultIndex || 0);\n    React.useEffect(() => {\n        if (controlled && typeof selectedIndex === 'number') {\n            setActiveTabIndex(selectedIndex);\n        }\n    }, [selectedIndex]);\n    const elements = React.useMemo(() => (React.Children.map(children, child => (React.isValidElement(child) ? child : undefined)) || []).filter(isTabPage), [children]);\n    const headers = React.useMemo(() => elements.map(child => child.props.header), [elements]);\n    const onSelect = React.useCallback((selectedIndex: number) => {\n        setActiveTabIndex(previousIndex => {\n            if (typeof onTabChange === 'function') {\n                onTabChange({\n                    previousIndex,\n                    selectedIndex,\n                });\n            }\n            return controlled ? previousIndex : selectedIndex;\n        });\n    }, [onTabChange, controlled]);\n    return {\n        elements,\n        headers,\n        activeTabIndex,\n        onSelect,\n        isActive(index: number) {\n            return activeTabIndex === index;\n        },\n    };\n}\nexport interface TabControlHolderProps {\n    headers: Array<React.ReactChild>;\n    activeIndex?: number;\n    onSelect(index: number): void;\n}\nexport interface WithTabControlProps {\n    tabItemRenderer: React.ElementType<TabItemProps>;\n}\nexport function withTabControl<T extends TabControlHolderProps>(Component: React.ComponentType<T>) {\n    const TabControl = Object.assign(((({ children, tabItemRenderer: Element, ...rest }) => {\n        const { elements, headers, activeTabIndex, isActive, onSelect } = useTabControl({\n            children,\n            ...rest,\n        });\n        return (<Component {...rest as any} headers={headers} activeIndex={activeTabIndex} onSelect={onSelect}>\n        {elements.map((child, i) => (<Element key={`item-${i}`} active={isActive(i)}>\n            {child}\n          </Element>))}\n      </Component>);\n    }) as React.FC<TabOptions & WithTabControlProps & Omit<T, keyof TabControlHolderProps>>), { inner: {\n            get Component() { return Component as typeof Component; }\n        } });\n    return TabControl;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}