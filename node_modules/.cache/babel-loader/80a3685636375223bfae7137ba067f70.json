{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport * as React from 'react';\nimport onClickOutside from 'react-onclickoutside';\nimport { InteractiveList } from '../InteractiveList';\nimport { Flyout } from '../Flyout';\n\nconst CustomWrapper = _a => {\n  var {\n    open: _0,\n    border: _1,\n    direction: _2\n  } = _a,\n      props = __rest(_a, [\"open\", \"border\", \"direction\"]);\n\n  return React.createElement(\"div\", Object.assign({}, props));\n};\n\nCustomWrapper.displayName = 'CustomWrapper';\n\nfunction getItems(group) {\n  return group.map((item, index) => ({\n    content: item,\n    key: index.toString()\n  }));\n}\n\nclass OverflowMenuInt extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOutside = () => {\n      this.state.open && this.setState({\n        open: false\n      });\n    };\n\n    this.toggleGroup = e => {\n      const {\n        open\n      } = this.state;\n      this.setState({\n        open: !open\n      });\n      e.preventDefault();\n    };\n\n    this.closeList = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.state = {\n      open: false,\n      items: getItems(props.items)\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.setState({\n      items: getItems(nextProps.items)\n    });\n  }\n\n  render() {\n    const {\n      open,\n      items\n    } = this.state;\n    const {\n      button: toggleButton,\n      flyoutProps,\n      listProps: interactiveListProps\n    } = this.props;\n    return React.createElement(Flyout, Object.assign({\n      noGutter: true,\n      content: React.createElement(InteractiveList, Object.assign({\n        open: open,\n        autoFocus: true,\n        data: items,\n        onBlur: this.closeList,\n        onChange: this.closeList,\n        customWrapper: CustomWrapper\n      }, interactiveListProps))\n    }, flyoutProps, {\n      open: open\n    }), React.createElement(\"div\", {\n      onClick: this.toggleGroup\n    }, toggleButton || '...'));\n  }\n\n}\n\nOverflowMenuInt.inner = {\n  get Flyout() {\n    return Flyout;\n  }\n\n};\nexport const OverflowMenu = onClickOutside(OverflowMenuInt);","map":{"version":3,"sources":["../../../../src/components/OverflowMenu/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport onClickOutside, { AdditionalProps } from 'react-onclickoutside';\nimport { InteractiveListWrapperProps, InteractiveListItem, InteractiveList, InteractiveListProps, } from '../InteractiveList';\nimport { Flyout, FlyoutProps } from '../Flyout';\nexport interface OverflowMenuProps {\n    /**\n     * The items to display in the menu.\n     */\n    items: Array<React.ReactChild>;\n    /**\n     * The button to display for opening the menu.\n     */\n    button?: React.ReactNode;\n    /**\n     * The properties to pass on to the flyout.\n     */\n    flyoutProps?: Partial<FlyoutProps>;\n    /**\n     * The properties to pass on the interactive list.\n     */\n    listProps?: Partial<InteractiveListProps>;\n}\nexport interface OverflowMenuState {\n    open: boolean;\n    items: Array<InteractiveListItem>;\n}\nconst CustomWrapper: React.SFC<InteractiveListWrapperProps> = ({ open: _0, border: _1, direction: _2, ...props }) => (<div {...props}/>);\nCustomWrapper.displayName = 'CustomWrapper';\nfunction getItems(group: Array<React.ReactChild>): Array<InteractiveListItem> {\n    return group.map((item, index) => ({\n        content: item,\n        key: index.toString(),\n    }));\n}\nclass OverflowMenuInt extends React.Component<OverflowMenuProps, OverflowMenuState> {\n    constructor(props: OverflowMenuProps) {\n        super(props);\n        this.state = {\n            open: false,\n            items: getItems(props.items),\n        };\n    }\n    handleClickOutside = () => {\n        this.state.open &&\n            this.setState({\n                open: false,\n            });\n    };\n    UNSAFE_componentWillReceiveProps(nextProps: OverflowMenuProps) {\n        this.setState({\n            items: getItems(nextProps.items),\n        });\n    }\n    private toggleGroup = (e: React.MouseEvent) => {\n        const { open } = this.state;\n        this.setState({\n            open: !open,\n        });\n        e.preventDefault();\n    };\n    private closeList = () => {\n        this.setState({\n            open: false,\n        });\n    };\n    render() {\n        const { open, items } = this.state;\n        const { button: toggleButton, flyoutProps, listProps: interactiveListProps } = this.props;\n        return (<Flyout noGutter content={<InteractiveList open={open} autoFocus data={items} onBlur={this.closeList} onChange={this.closeList} customWrapper={CustomWrapper} {...interactiveListProps}/>} {...flyoutProps} open={open}>\n        <div onClick={this.toggleGroup}>{toggleButton || '...'}</div>\n      </Flyout>);\n    }\n    static inner = {\n        get Flyout() { return Flyout as typeof Flyout; }\n    };\n}\nexport const OverflowMenu: React.ComponentClass<AdditionalProps & OverflowMenuProps> = onClickOutside(OverflowMenuInt);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}