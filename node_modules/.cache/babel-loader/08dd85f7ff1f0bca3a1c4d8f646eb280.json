{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport * as React from 'react';\nimport styled, { themed, css } from '../../utils/styled';\nimport { distance } from '../../distance';\nconst ActiveStyle = css`\n  &:before {\n    position: absolute;\n    content: '';\n    width: 4px;\n    height: 100%;\n    background: ${themed(({\n  theme\n}) => theme.ui0)};\n    left: 0;\n  }\n`;\nconst StyledMenuListItem = styled('li')`\n  display: flex;\n  position: relative;\n  align-items: center;\n  color: ${themed(props => props.theme.text6)};\n  text-decoration: none;\n  height: ${({\n  condensed\n}) => condensed ? distance.xlarge : distance.xxlarge};\n  padding: 0 0 0 ${distance.large};\n  ${({\n  active\n}) => active ? ActiveStyle : ''};\n`;\nexport const MenuListItem = Object.assign(_a => {\n  var {\n    active = false,\n    condensed = false\n  } = _a,\n      props = __rest(_a, [\"active\", \"condensed\"]);\n\n  return React.createElement(StyledMenuListItem, Object.assign({}, props, {\n    condensed: condensed,\n    active: active\n  }));\n}, {\n  inner: {\n    get StyledMenuListItem() {\n      return StyledMenuListItem;\n    }\n\n  }\n});\nMenuListItem.displayName = 'MenuListItem';","map":{"version":3,"sources":["../../../../src/components/MenuListItem/index.tsx"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,IAAiB,MAAjB,EAAyB,GAAzB,QAAoC,oBAApC;AAEA,SAAS,QAAT,QAAyB,gBAAzB;AAgBA,MAAM,WAAW,GAAG,GAAI;;;;;;kBAMN,MAAM,CAAC,CAAC;AAAE,EAAA;AAAF,CAAD,KAAe,KAAK,CAAC,GAAtB,CAA0B;;;CANlD;AAUA,MAAM,kBAAkB,GAAG,MAAM,CAAC,IAAD,CAA0B;;;;WAIhD,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,KAAN,CAAY,KAAtB,CAA4B;;YAEjC,CAAC;AAAE,EAAA;AAAF,CAAD,KAAoB,SAAS,GAAG,QAAQ,CAAC,MAAZ,GAAqB,QAAQ,CAAC,OAAQ;mBAC5D,QAAQ,CAAC,KAAK;IAC7B,CAAC;AAAE,EAAA;AAAF,CAAD,KAAiB,MAAM,GAAG,WAAH,GAAiB,EAAG;CAR/C;AAUA,OAAO,MAAM,YAAY,GAAG,MAAM,CAAC,MAAP,CAAiB,EAAD,IAAoD;MAAnD;AAAE,IAAA,MAAM,GAAG,KAAX;AAAkB,IAAA,SAAS,GAAG;AAA9B,MAAmC,E;MAAE,KAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,QAAA,EAAA,WAAA,CAAA,C;;AAAe,SAAC,KAAA,CAAA,aAAA,CAAC,kBAAD,EAAmB,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,IAAA,SAAS,EAAE,SAAb;AAAwB,IAAA,MAAM,EAAE;AAAhC,GAAV,CAAnB,CAAD;AAAwE,CAA7I,EAAiL;AAAE,EAAA,KAAK,EAAE;AAC9M,QAAI,kBAAJ,GAAsB;AAAK,aAAO,kBAAP;AAAyD;;AAD0H;AAAT,CAAjL,CAArB;AAGP,YAAY,CAAC,WAAb,GAA2B,cAA3B","sourcesContent":["import * as React from 'react';\nimport styled, { themed, css } from '../../utils/styled';\nimport { StandardProps } from '../../common';\nimport { distance } from '../../distance';\nimport { cyan } from '../../colors';\nexport interface MenuListItemProps extends StandardProps {\n    /**\n     * Whether the button is active.\n     */\n    active?: boolean;\n    /**\n     * The content of the component.\n     */\n    children?: React.ReactNode;\n    /**\n     * Making a row more condensed.\n     */\n    condensed?: boolean;\n}\nconst ActiveStyle = css `\n  &:before {\n    position: absolute;\n    content: '';\n    width: 4px;\n    height: 100%;\n    background: ${themed(({ theme }) => theme.ui0)};\n    left: 0;\n  }\n`;\nconst StyledMenuListItem = styled('li')<MenuListItemProps> `\n  display: flex;\n  position: relative;\n  align-items: center;\n  color: ${themed(props => props.theme.text6)};\n  text-decoration: none;\n  height: ${({ condensed }) => (condensed ? distance.xlarge : distance.xxlarge)};\n  padding: 0 0 0 ${distance.large};\n  ${({ active }) => (active ? ActiveStyle : '')};\n`;\nexport const MenuListItem = Object.assign(((({ active = false, condensed = false, ...props }) => (<StyledMenuListItem {...props} condensed={condensed} active={active}/>)) as React.SFC<MenuListItemProps>), { inner: {\n        get StyledMenuListItem() { return StyledMenuListItem as typeof StyledMenuListItem; }\n    } });\nMenuListItem.displayName = 'MenuListItem';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}