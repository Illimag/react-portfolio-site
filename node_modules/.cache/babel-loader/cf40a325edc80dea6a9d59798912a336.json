{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport * as React from 'react';\nimport { TextField } from '../TextField';\nimport { tuna } from '../../colors';\nimport { Icon } from '../Icon';\nexport const DatePickerTextField = Object.assign(_a => {\n  var {\n    onChange\n  } = _a,\n      props = __rest(_a, [\"onChange\"]);\n\n  return React.createElement(TextField, Object.assign({}, props, {\n    onChange: ({\n      originalEvent\n    }) => originalEvent && onChange && onChange(originalEvent),\n    icon: React.createElement(Icon, {\n      name: \"DateRange\",\n      color: tuna,\n      size: \"22px\"\n    })\n  }));\n}, {\n  inner: {\n    get TextField() {\n      return TextField;\n    }\n\n  }\n});","map":{"version":3,"sources":["../../../../src/components/DateField/DateFieldTextField.part.tsx"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAyB,SAAzB,QAA0C,cAA1C;AACA,SAAS,IAAT,QAAqB,cAArB;AACA,SAAS,IAAT,QAAqB,SAArB;AAKA,OAAO,MAAM,mBAAmB,GAAG,MAAM,CAAC,MAAP,CAAiB,EAAD,IAA2B;MAA1B;AAAE,IAAA;AAAF,MAAU,E;MAAE,KAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,UAAA,CAAA,C;;AAAe,SAAC,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,IAAA,QAAQ,EAAE,CAAC;AAAE,MAAA;AAAF,KAAD,KAAuB,aAAa,IAAI,QAAjB,IAA6B,QAAQ,CAAC,aAAD,CAAxE;AAAyF,IAAA,IAAI,EAAE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,MAAA,IAAI,EAAC,WAAN;AAAkB,MAAA,KAAK,EAAE,IAAzB;AAA+B,MAAA,IAAI,EAAC;AAApC,KAAL;AAA/F,GAAV,CAAV,CAAD;AAAyK,CAArN,EAA+P;AAAE,EAAA,KAAK,EAAE;AACnS,QAAI,SAAJ,GAAa;AAAK,aAAO,SAAP;AAAuC;;AAD0O;AAAT,CAA/P,CAA5B","sourcesContent":["import * as React from 'react';\nimport { TextFieldProps, TextField } from '../TextField';\nimport { tuna } from '../../colors';\nimport { Icon } from '../Icon';\nimport { Omit } from '../../common';\nexport interface DatePickerTextFieldProps extends Omit<TextFieldProps, 'onChange'> {\n    onChange?: React.ChangeEventHandler<HTMLInputElement>;\n}\nexport const DatePickerTextField = Object.assign(((({ onChange, ...props }) => (<TextField {...props} onChange={({ originalEvent }) => originalEvent && onChange && onChange(originalEvent)} icon={<Icon name=\"DateRange\" color={tuna} size=\"22px\"/>}/>)) as React.FC<DatePickerTextFieldProps>), { inner: {\n        get TextField() { return TextField as typeof TextField; }\n    } });\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}