{"ast":null,"code":"import _defineProperty from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  \", \";\\n  \", \";\\n  width: 0;\\n  height: 0;\\n\\n  > div {\\n    display: \", \";\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  border-radius: \", \";\\n  background: \", \";\\n  transition: background \", \" \", \";\\n  height: \", \";\\n  width: \", \";\\n  position: absolute;\\n  margin: auto;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  padding: \", \";\\n  height: \", \";\\n  width: \", \";\\n  box-sizing: content-box;\\n\\n  &:after {\\n    content: '';\\n    display: block;\\n    border-radius: \", \";\\n    height: 100%;\\n    width: 100%;\\n    background: \", \";\\n    transition: background \", \" \", \";\\n  }\\n\\n  &:hover {\\n    cursor: pointer;\\n\\n    &:after {\\n      background: \", \";\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  outline: 0;\\n  height: 100%;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport styled, { themed } from '../../utils/styled';\nimport { ocean } from '../../colors';\nimport { IndicatorKnob } from '../IndicatorKnob';\nimport { InteractiveSurface } from '../InteractiveSurface';\nimport { withFormContext } from '../../hoc';\nimport { showInputInfo } from '../../utils/input';\nimport { distance } from '../../distance';\nimport { transparentize } from '../../utils';\nimport { Tooltip } from '../Tooltip';\n\nfunction percent(value) {\n  return typeof value === 'number' ? \"\".concat(value * 100, \"%\") : '50%';\n}\n\nvar transitionDuration = '0.3s';\nvar transitionEase = 'cubic-bezier(0, 0, 0.25, 1)';\nvar SliderContainer = styled.div(_templateObject());\nvar SliderBar = styled(InteractiveSurface)(_templateObject2(), function (props) {\n  return props.orientation === 'vertical' ? \"0 \".concat(distance.small) : \"\".concat(distance.small, \" 0\");\n}, function (props) {\n  return props.orientation === 'vertical' ? '100%' : distance.xsmall;\n}, function (props) {\n  return props.orientation === 'vertical' ? distance.xsmall : '100%';\n}, distance.small, themed(function (props) {\n  return props.disabled ? props.theme.ui3 : props.active ? transparentize(ocean, 0.25) : transparentize(props.theme.ui4, 0.25);\n}), transitionDuration, transitionEase, transparentize(ocean, 0.25));\nvar IndicatorBar = styled('div')(_templateObject3(), distance.small, themed(function (props) {\n  return props.disabled ? props.theme.ui4 : props.active ? ocean : transparentize(props.theme.ui5, 0.75);\n}), transitionDuration, transitionEase, function (props) {\n  return props.vertical ? '100%' : distance.xsmall;\n}, function (props) {\n  return props.vertical ? distance.xsmall : 'auto';\n});\nvar TooltipContainer = styled('div')(_templateObject4(), function (props) {\n  return props.vertical ? \"top: \".concat(props.value) : \"left: \".concat(props.value);\n}, function (props) {\n  return props.vertical ? \"left: \".concat(distance.large) : \"top: -\".concat(distance.large);\n}, function (props) {\n  return props.vertical ? \"block\" : \"inline-block\";\n});\n\nvar SliderInt = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(SliderInt, _React$PureComponent);\n\n  var _super = _createSuper(SliderInt);\n\n  function SliderInt(props) {\n    var _this;\n\n    _classCallCheck(this, SliderInt);\n\n    _this = _super.call(this, props);\n\n    _this.updateValue = function (e) {\n      var _this$props = _this.props,\n          _this$props$maximum = _this$props.maximum,\n          maximum = _this$props$maximum === void 0 ? 1 : _this$props$maximum,\n          _this$props$minimum = _this$props.minimum,\n          minimum = _this$props$minimum === void 0 ? 0 : _this$props$minimum;\n      var v = _this.state.vertical ? 1 - e.y : e.x;\n      var position = minimum + v * (maximum - minimum);\n      var value = _this.state.value;\n      var length = Array.isArray(value) ? value.length : 1;\n      var multi = length > 1;\n      var knob = _this.state.active || (multi ? _this.getClosestKnob(position) : 1);\n\n      _this.setValue(position, e.active ? knob : 0);\n    };\n\n    _this.control = function (e) {\n      var _this$props2 = _this.props,\n          _this$props2$minimum = _this$props2.minimum,\n          minimum = _this$props2$minimum === void 0 ? 0 : _this$props2$minimum,\n          _this$props2$maximum = _this$props2.maximum,\n          maximum = _this$props2$maximum === void 0 ? 1 : _this$props2$maximum,\n          onInput = _this$props2.onInput;\n      var _this$props$step = _this.props.step,\n          step = _this$props$step === void 0 ? Math.min(1, (maximum - minimum) / 10) : _this$props$step;\n      var _this$state = _this.state,\n          active = _this$state.active,\n          vertical = _this$state.vertical;\n      var knob = active || 1;\n\n      switch (e.keyCode) {\n        case 38\n        /* up */\n        :\n        case 40\n        /* down */\n        :\n          _this.controlKnob(vertical, 39 - e.keyCode, step);\n\n          break;\n\n        case 37\n        /* left */\n        :\n        case 39\n        /* right */\n        :\n          _this.controlKnob(!vertical, e.keyCode - 38, step);\n\n          break;\n\n        case 36\n        /* home */\n        :\n          _this.setValue(minimum, knob);\n\n          break;\n\n        case 35\n        /* end */\n        :\n          _this.setValue(maximum, knob);\n\n          break;\n\n        case 27\n        /* escape */\n        :\n          _this.setState({\n            active: 0\n          });\n\n        case 13\n        /* enter */\n        :\n        case 32\n        /* space */\n        :\n        default:\n          if (typeof onInput === 'function') {\n            onInput();\n          }\n\n          return;\n      }\n\n      e.preventDefault();\n    };\n\n    _this.handleMouseEnter = function () {\n      _this.setState({\n        hovered: true\n      });\n    };\n\n    _this.handleMouseLeave = function () {\n      _this.setState({\n        hovered: false\n      });\n    };\n\n    _this.updateTooltipValue = function (val) {\n      var _this$props3 = _this.props,\n          _this$props3$maximum = _this$props3.maximum,\n          maximum = _this$props3$maximum === void 0 ? 1 : _this$props3$maximum,\n          step = _this$props3.step;\n      var decimalPlaces = step && step < 1 ? _this.countDecimals(step) : 0;\n      return !step && maximum <= 1 ? \"\".concat(val.toFixed(1)) : \"\".concat(val.toFixed(decimalPlaces));\n    };\n\n    var value = props.value || props.defaultValue;\n    _this.state = {\n      value: Array.isArray(value) ? value : [value || 0],\n      vertical: props.orientation === 'vertical',\n      active: 0,\n      controlled: typeof props.value !== 'undefined',\n      hovered: false,\n      error: props.error\n    };\n    return _this;\n  }\n\n  _createClass(SliderInt, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var form = this.props.form;\n      var controlled = this.state.controlled;\n\n      if (!controlled && form) {\n        form.subscribe(this);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var form = this.props.form;\n      var controlled = this.state.controlled;\n\n      if (!controlled && form) {\n        form.unsubscribe(this);\n      }\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(_ref) {\n      var _ref$value = _ref.value,\n          value = _ref$value === void 0 ? this.state.value : _ref$value,\n          error = _ref.error,\n          orientation = _ref.orientation;\n\n      if (this.state.controlled) {\n        this.setState({\n          value: value\n        });\n      }\n\n      this.setState({\n        vertical: orientation === 'vertical',\n        error: error\n      });\n    }\n  }, {\n    key: \"getClosestKnob\",\n    value: function getClosestKnob(current) {\n      var values = this.state.value;\n\n      if (Array.isArray(values)) {\n        var dists = values.map(function (val) {\n          return Math.abs(val - current);\n        });\n        var length = dists.length;\n        var minIndex = 0;\n\n        for (var i = 0; i < length; i++) {\n          var curValue = dists[i];\n          var minValue = dists[minIndex];\n\n          if (curValue < minValue || curValue === minValue && current > values[i]) {\n            minIndex = i;\n          }\n        }\n\n        return minIndex + 1;\n      }\n\n      return 1;\n    }\n  }, {\n    key: \"selectValue\",\n    value: function selectValue(selected, knob) {\n      var _this$props$margin = this.props.margin,\n          margin = _this$props$margin === void 0 ? 0 : _this$props$margin;\n      var current = this.state.value;\n\n      if (Array.isArray(current)) {\n        var value = _toConsumableArray(current);\n\n        var upper = value[knob];\n        var lower = value[knob - 2];\n\n        if (lower + margin > selected) {\n          value[knob - 1] = lower + margin;\n        } else if (upper - margin < selected) {\n          value[knob - 1] = upper - margin;\n        } else {\n          value[knob - 1] = selected;\n        }\n\n        return value;\n      }\n\n      return selected;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(position, knob) {\n      var _this$props4 = this.props,\n          onChange = _this$props4.onChange,\n          onChangeDone = _this$props4.onChangeDone,\n          _this$props4$maximum = _this$props4.maximum,\n          maximum = _this$props4$maximum === void 0 ? 1 : _this$props4$maximum,\n          _this$props4$minimum = _this$props4.minimum,\n          minimum = _this$props4$minimum === void 0 ? 0 : _this$props4$minimum,\n          _this$props4$step = _this$props4.step,\n          step = _this$props4$step === void 0 ? 0 : _this$props4$step,\n          disabled = _this$props4.disabled,\n          form = _this$props4.form,\n          _this$props4$name = _this$props4.name,\n          name = _this$props4$name === void 0 ? '' : _this$props4$name;\n\n      if (!disabled) {\n        var current = this.state.value;\n        var length = Array.isArray(current) ? current.length : 1;\n        var multi = length > 1;\n        var previous = Array.isArray(current) ? current[knob - 1] : current;\n        var valid = Math.abs(position - previous) >= step && position >= minimum && position <= maximum;\n        var selected = position - (step && (position - previous) % step);\n\n        if (!this.state.controlled && valid) {\n          var value = this.selectValue(selected, knob);\n\n          if (form) {\n            form.change({\n              name: name,\n              value: value\n            });\n          } else {\n            this.setState({\n              value: value\n            });\n          }\n        }\n\n        var event = {\n          value: selected,\n          index: knob - 1,\n          type: multi ? 'multi' : 'single'\n        };\n\n        if (valid && typeof onChange === 'function') {\n          onChange(event);\n        }\n\n        if (knob !== this.state.active) {\n          this.setState({\n            active: knob\n          });\n\n          if (!knob && valid && typeof onChangeDone === 'function') {\n            onChangeDone(event);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"controlKnob\",\n    value: function controlKnob(change, dir, step) {\n      var _this$state2 = this.state,\n          active = _this$state2.active,\n          value = _this$state2.value;\n      var length = Array.isArray(value) ? value.length : 1;\n      var multi = length > 1;\n      var knob = active || 1;\n\n      if (change) {\n        this.setValue(value[knob - 1] + dir * step, knob);\n      } else if (multi) {\n        var newActive = knob + dir;\n\n        if (newActive <= length && newActive > 0) {\n          this.setState({\n            active: newActive\n          });\n        }\n      }\n    }\n  }, {\n    key: \"countDecimals\",\n    value: function countDecimals(val) {\n      if (Math.floor(val) === val) {\n        return 0;\n      }\n\n      return val.toString().split('.')[1].length || 0;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _a = this.props,\n          _0 = _a.children,\n          _1 = _a.value,\n          _2 = _a.defaultValue,\n          disabled = _a.disabled,\n          _3 = _a.onChange,\n          _4 = _a.onChangeDone,\n          _5 = _a.margin,\n          step = _a.step,\n          _a$minimum = _a.minimum,\n          minimum = _a$minimum === void 0 ? 0 : _a$minimum,\n          _a$maximum = _a.maximum,\n          maximum = _a$maximum === void 0 ? 1 : _a$maximum,\n          color = _a.color,\n          theme = _a.theme,\n          info = _a.info,\n          onBlur = _a.onBlur,\n          onFocus = _a.onFocus,\n          showTooltip = _a.showTooltip,\n          props = __rest(_a, [\"children\", \"value\", \"defaultValue\", \"disabled\", \"onChange\", \"onChangeDone\", \"margin\", \"step\", \"minimum\", \"maximum\", \"color\", \"theme\", \"info\", \"onBlur\", \"onFocus\", \"showTooltip\"]);\n\n      var _this$state3 = this.state,\n          value = _this$state3.value,\n          active = _this$state3.active,\n          vertical = _this$state3.vertical,\n          hovered = _this$state3.hovered,\n          error = _this$state3.error;\n      var values = Array.isArray(value) ? value : [value];\n      var ind = values.length === 1 ? 100 * (values[0] - minimum) / (maximum - minimum) : 0;\n      return React.createElement(SliderContainer, {\n        theme: theme,\n        tabIndex: 0,\n        onKeyDown: this.control,\n        onBlur: onBlur,\n        onFocus: onFocus,\n        onMouseEnter: this.handleMouseEnter,\n        onMouseLeave: this.handleMouseLeave\n      }, React.createElement(SliderBar, Object.assign({}, props, {\n        theme: theme,\n        onChange: this.updateValue,\n        active: active !== 0,\n        disabled: disabled\n      }), ind > 0 && React.createElement(IndicatorBar, {\n        style: _defineProperty({}, vertical ? 'height' : 'width', \"\".concat(ind, \"%\")),\n        vertical: vertical,\n        active: active !== 0 || hovered,\n        disabled: disabled\n      }), values.map(function (val, index) {\n        return React.createElement(\"div\", {\n          key: index\n        }, showTooltip && React.createElement(TooltipContainer, {\n          vertical: vertical,\n          value: percent(vertical ? 1.0 - (val - minimum) / (maximum - minimum) : (val - minimum) / (maximum - minimum))\n        }, React.createElement(Tooltip, {\n          content: _this2.updateTooltipValue(val),\n          position: vertical ? 'right' : 'top',\n          open: active === index + 1\n        })), React.createElement(IndicatorKnob, {\n          x: vertical ? 0.5 : (val - minimum) / (maximum - minimum),\n          y: vertical ? 1.0 - (val - minimum) / (maximum - minimum) : 0.5,\n          key: index,\n          color: color,\n          active: active === index + 1 || hovered,\n          theme: theme,\n          disabled: disabled\n        }));\n      })), showInputInfo(error, info));\n    }\n  }]);\n\n  return SliderInt;\n}(React.PureComponent);\n\nSliderInt.inner = {\n  get SliderContainer() {\n    return SliderContainer;\n  },\n\n  get SliderBar() {\n    return SliderBar;\n  },\n\n  get IndicatorBar() {\n    return IndicatorBar;\n  },\n\n  get TooltipContainer() {\n    return TooltipContainer;\n  },\n\n  get Tooltip() {\n    return Tooltip;\n  },\n\n  get IndicatorKnob() {\n    return IndicatorKnob;\n  }\n\n};\n/**\n * The slider component displays a data value picker in form of a sliding bar.\n */\n\nexport var Slider = withFormContext(SliderInt);\nSlider.displayName = 'Slider';","map":{"version":3,"sources":["../../../../src/components/Slider/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,IAAiB,MAAjB,QAA+B,oBAA/B;AACA,SAAS,KAAT,QAAsB,cAAtB;AAEA,SAAS,aAAT,QAA8B,kBAA9B;AACA,SAAS,kBAAT,QAA2F,uBAA3F;AACA,SAAS,eAAT,QAAkD,WAAlD;AACA,SAAS,aAAT,QAA8B,mBAA9B;AAEA,SAAS,QAAT,QAAyB,gBAAzB;AACA,SAAS,cAAT,QAA+B,aAA/B;AACA,SAAS,OAAT,QAAwB,YAAxB;;AAsFA,SAAS,OAAT,CAAiB,KAAjB,EAA+B;AAC3B,SAAO,OAAO,KAAP,KAAiB,QAAjB,aAA+B,KAAK,GAAG,GAAvC,SAAgD,KAAvD;AACH;;AACD,IAAM,kBAAkB,GAAG,MAA3B;AACA,IAAM,cAAc,GAAG,6BAAvB;AACA,IAAM,eAAe,GAAG,MAAM,CAAC,GAAV,mBAArB;AAKA,IAAM,SAAS,GAAG,MAAM,CAAC,kBAAD,CAAT,qBAEF,UAAA,KAAK;AAAA,SAAK,KAAK,CAAC,WAAN,KAAsB,UAAtB,eAAwC,QAAQ,CAAC,KAAjD,cAA8D,QAAQ,CAAC,KAAvE,OAAL;AAAA,CAFH,EAGH,UAAA,KAAK;AAAA,SAAK,KAAK,CAAC,WAAN,KAAsB,UAAtB,GAAmC,MAAnC,GAA4C,QAAQ,CAAC,MAA1D;AAAA,CAHF,EAIJ,UAAA,KAAK;AAAA,SAAK,KAAK,CAAC,WAAN,KAAsB,UAAtB,GAAmC,QAAQ,CAAC,MAA5C,GAAqD,MAA1D;AAAA,CAJD,EAUM,QAAQ,CAAC,KAVf,EAaG,MAAM,CAAC,UAAA,KAAK;AAAA,SAAI,KAAK,CAAC,QAAN,GAC5B,KAAK,CAAC,KAAN,CAAY,GADgB,GAE5B,KAAK,CAAC,MAAN,GACI,cAAc,CAAC,KAAD,EAAQ,IAAR,CADlB,GAEI,cAAc,CAAC,KAAK,CAAC,KAAN,CAAY,GAAb,EAAkB,IAAlB,CAJM;AAAA,CAAN,CAbT,EAkBc,kBAlBd,EAkBoC,cAlBpC,EAyBK,cAAc,CAAC,KAAD,EAAQ,IAAR,CAzBnB,CAAf;AA6BA,IAAM,YAAY,GAAG,MAAM,CAAC,KAAD,CAAT,qBACC,QAAQ,CAAC,KADV,EAEF,MAAM,CAAC,UAAA,KAAK;AAAA,SAAI,KAAK,CAAC,QAAN,GAAiB,KAAK,CAAC,KAAN,CAAY,GAA7B,GAAmC,KAAK,CAAC,MAAN,GAAe,KAAf,GAAuB,cAAc,CAAC,KAAK,CAAC,KAAN,CAAY,GAAb,EAAkB,IAAlB,CAA5E;AAAA,CAAN,CAFJ,EAGS,kBAHT,EAG+B,cAH/B,EAIN,UAAA,KAAK;AAAA,SAAK,KAAK,CAAC,QAAN,GAAiB,MAAjB,GAA0B,QAAQ,CAAC,MAAxC;AAAA,CAJC,EAKP,UAAA,KAAK;AAAA,SAAK,KAAK,CAAC,QAAN,GAAiB,QAAQ,CAAC,MAA1B,GAAmC,MAAxC;AAAA,CALE,CAAlB;AASA,IAAM,gBAAgB,GAAG,MAAM,CAAC,KAAD,CAAT,qBAElB,UAAA,KAAK;AAAA,SAAK,KAAK,CAAC,QAAN,kBAAyB,KAAK,CAAC,KAA/B,oBAAkD,KAAK,CAAC,KAAxD,CAAL;AAAA,CAFa,EAGlB,UAAA,KAAK;AAAA,SAAK,KAAK,CAAC,QAAN,mBAA0B,QAAQ,CAAC,KAAnC,oBAAsD,QAAQ,CAAC,KAA/D,CAAL;AAAA,CAHa,EAQP,UAAA,KAAK;AAAA,SAAK,KAAK,CAAC,QAAN,2BAAL;AAAA,CARE,CAAtB;;IAWM,S;;;;;AACF,qBAAY,KAAZ,EAA8B;AAAA;;AAAA;;AAC1B,8BAAM,KAAN;;AAgHI,UAAA,WAAA,GAAc,UAAC,CAAD,EAAqC;AAAA,wBAClB,MAAK,KADa;AAAA,4CAC/C,OAD+C;AAAA,UAC/C,OAD+C,oCACrC,CADqC;AAAA,4CAClC,OADkC;AAAA,UAClC,OADkC,oCACxB,CADwB;AAEvD,UAAM,CAAC,GAAG,MAAK,KAAL,CAAW,QAAX,GAAsB,IAAI,CAAC,CAAC,CAA5B,GAAgC,CAAC,CAAC,CAA5C;AACA,UAAM,QAAQ,GAAG,OAAO,GAAG,CAAC,IAAI,OAAO,GAAG,OAAd,CAA5B;AACA,UAAM,KAAK,GAAG,MAAK,KAAL,CAAW,KAAzB;AACA,UAAM,MAAM,GAAG,KAAK,CAAC,OAAN,CAAc,KAAd,IAAuB,KAAK,CAAC,MAA7B,GAAsC,CAArD;AACA,UAAM,KAAK,GAAG,MAAM,GAAG,CAAvB;AACA,UAAM,IAAI,GAAG,MAAK,KAAL,CAAW,MAAX,KAAsB,KAAK,GAAG,MAAK,cAAL,CAAoB,QAApB,CAAH,GAAmC,CAA9D,CAAb;;AACA,YAAK,QAAL,CAAc,QAAd,EAAwB,CAAC,CAAC,MAAF,GAAW,IAAX,GAAkB,CAA1C;AACH,KATO;;AA2BA,UAAA,OAAA,GAAU,UAAC,CAAD,EAA2C;AAAA,yBACX,MAAK,KADM;AAAA,8CACjD,OADiD;AAAA,UACjD,OADiD,qCACvC,CADuC;AAAA,8CACpC,OADoC;AAAA,UACpC,OADoC,qCAC1B,CAD0B;AAAA,UACvB,OADuB,gBACvB,OADuB;AAAA,6BAEA,MAAK,KAFL,CAEjD,IAFiD;AAAA,UAEjD,IAFiD,iCAE1C,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAC,OAAO,GAAG,OAAX,IAAsB,EAAlC,CAF0C;AAAA,wBAG5B,MAAK,KAHuB;AAAA,UAGjD,MAHiD,eAGjD,MAHiD;AAAA,UAGzC,QAHyC,eAGzC,QAHyC;AAIzD,UAAM,IAAI,GAAG,MAAM,IAAI,CAAvB;;AACA,cAAQ,CAAC,CAAC,OAAV;AACI,aAAA;AAAA;AAAA;AACA,aAAA;AAAA;AAAA;AACI,gBAAK,WAAL,CAAiB,QAAjB,EAA2B,KAAK,CAAC,CAAC,OAAlC,EAA2C,IAA3C;;AACA;;AACJ,aAAA;AAAA;AAAA;AACA,aAAA;AAAA;AAAA;AACI,gBAAK,WAAL,CAAiB,CAAC,QAAlB,EAA4B,CAAC,CAAC,OAAF,GAAY,EAAxC,EAA4C,IAA5C;;AACA;;AACJ,aAAA;AAAA;AAAA;AACI,gBAAK,QAAL,CAAc,OAAd,EAAuB,IAAvB;;AACA;;AACJ,aAAA;AAAA;AAAA;AACI,gBAAK,QAAL,CAAc,OAAd,EAAuB,IAAvB;;AACA;;AACJ,aAAA;AAAA;AAAA;AACI,gBAAK,QAAL,CAAc;AACV,YAAA,MAAM,EAAE;AADE,WAAd;;AAGJ,aAAA;AAAA;AAAA;AACA,aAAA;AAAA;AAAA;AACA;AACI,cAAI,OAAO,OAAP,KAAmB,UAAvB,EAAmC;AAC/B,YAAA,OAAO;AACV;;AACD;AAzBR;;AA2BA,MAAA,CAAC,CAAC,cAAF;AACH,KAjCO;;AAkCA,UAAA,gBAAA,GAAmB,YAAK;AAC5B,YAAK,QAAL,CAAc;AAAE,QAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAFO;;AAGA,UAAA,gBAAA,GAAmB,YAAK;AAC5B,YAAK,QAAL,CAAc;AAAE,QAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAFO;;AASA,UAAA,kBAAA,GAAqB,UAAC,GAAD,EAAgB;AAAA,yBACX,MAAK,KADM;AAAA,8CACjC,OADiC;AAAA,UACjC,OADiC,qCACvB,CADuB;AAAA,UACpB,IADoB,gBACpB,IADoB;AAEzC,UAAM,aAAa,GAAG,IAAI,IAAI,IAAI,GAAG,CAAf,GAAmB,MAAK,aAAL,CAAmB,IAAnB,CAAnB,GAA8C,CAApE;AACA,aAAO,CAAC,IAAD,IAAS,OAAO,IAAI,CAApB,aAA2B,GAAG,CAAC,OAAJ,CAAY,CAAZ,CAA3B,cAAiD,GAAG,CAAC,OAAJ,CAAY,aAAZ,CAAjD,CAAP;AACH,KAJO;;AAxLJ,QAAM,KAAK,GAAG,KAAK,CAAC,KAAN,IAAe,KAAK,CAAC,YAAnC;AACA,UAAK,KAAL,GAAa;AACT,MAAA,KAAK,EAAE,KAAK,CAAC,OAAN,CAAc,KAAd,IAAuB,KAAvB,GAA+B,CAAC,KAAK,IAAI,CAAV,CAD7B;AAET,MAAA,QAAQ,EAAE,KAAK,CAAC,WAAN,KAAsB,UAFvB;AAGT,MAAA,MAAM,EAAE,CAHC;AAIT,MAAA,UAAU,EAAE,OAAO,KAAK,CAAC,KAAb,KAAuB,WAJ1B;AAKT,MAAA,OAAO,EAAE,KALA;AAMT,MAAA,KAAK,EAAE,KAAK,CAAC;AANJ,KAAb;AAH0B;AAW7B;;;;wCACgB;AAAA,UACL,IADK,GACI,KAAK,KADT,CACL,IADK;AAAA,UAEL,UAFK,GAEU,KAAK,KAFf,CAEL,UAFK;;AAGb,UAAI,CAAC,UAAD,IAAe,IAAnB,EAAyB;AACrB,QAAA,IAAI,CAAC,SAAL,CAAe,IAAf;AACH;AACJ;;;2CACmB;AAAA,UACR,IADQ,GACC,KAAK,KADN,CACR,IADQ;AAAA,UAER,UAFQ,GAEO,KAAK,KAFZ,CAER,UAFQ;;AAGhB,UAAI,CAAC,UAAD,IAAe,IAAnB,EAAyB;AACrB,QAAA,IAAI,CAAC,WAAL,CAAiB,IAAjB;AACH;AACJ;;;2DAC6F;AAAA,4BAA3D,KAA2D;AAAA,UAA3D,KAA2D,2BAAnD,KAAK,KAAL,CAAW,KAAwC;AAAA,UAAjC,KAAiC,QAAjC,KAAiC;AAAA,UAA1B,WAA0B,QAA1B,WAA0B;;AAC1F,UAAI,KAAK,KAAL,CAAW,UAAf,EAA2B;AACvB,aAAK,QAAL,CAAc;AAAE,UAAA,KAAK,EAAL;AAAF,SAAd;AACH;;AACD,WAAK,QAAL,CAAc;AACV,QAAA,QAAQ,EAAE,WAAW,KAAK,UADhB;AAEV,QAAA,KAAK,EAAL;AAFU,OAAd;AAIH;;;mCACsB,O,EAAe;AAClC,UAAM,MAAM,GAAG,KAAK,KAAL,CAAW,KAA1B;;AACA,UAAI,KAAK,CAAC,OAAN,CAAc,MAAd,CAAJ,EAA2B;AACvB,YAAM,KAAK,GAAG,MAAM,CAAC,GAAP,CAAW,UAAA,GAAG;AAAA,iBAAI,IAAI,CAAC,GAAL,CAAS,GAAG,GAAG,OAAf,CAAJ;AAAA,SAAd,CAAd;AACA,YAAM,MAAM,GAAG,KAAK,CAAC,MAArB;AACA,YAAI,QAAQ,GAAG,CAAf;;AACA,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAApB,EAA4B,CAAC,EAA7B,EAAiC;AAC7B,cAAM,QAAQ,GAAG,KAAK,CAAC,CAAD,CAAtB;AACA,cAAM,QAAQ,GAAG,KAAK,CAAC,QAAD,CAAtB;;AACA,cAAI,QAAQ,GAAG,QAAX,IAAwB,QAAQ,KAAK,QAAb,IAAyB,OAAO,GAAG,MAAM,CAAC,CAAD,CAArE,EAA2E;AACvE,YAAA,QAAQ,GAAG,CAAX;AACH;AACJ;;AACD,eAAO,QAAQ,GAAG,CAAlB;AACH;;AACD,aAAO,CAAP;AACH;;;gCACmB,Q,EAAkB,I,EAAY;AAAA,+BACvB,KAAK,KADkB,CACtC,MADsC;AAAA,UACtC,MADsC,mCAC7B,CAD6B;AAE9C,UAAM,OAAO,GAAG,KAAK,KAAL,CAAW,KAA3B;;AACA,UAAI,KAAK,CAAC,OAAN,CAAc,OAAd,CAAJ,EAA4B;AACxB,YAAM,KAAK,sBAAO,OAAP,CAAX;;AACA,YAAM,KAAK,GAAG,KAAK,CAAC,IAAD,CAAnB;AACA,YAAM,KAAK,GAAG,KAAK,CAAC,IAAI,GAAG,CAAR,CAAnB;;AACA,YAAI,KAAK,GAAG,MAAR,GAAiB,QAArB,EAA+B;AAC3B,UAAA,KAAK,CAAC,IAAI,GAAG,CAAR,CAAL,GAAkB,KAAK,GAAG,MAA1B;AACH,SAFD,MAGK,IAAI,KAAK,GAAG,MAAR,GAAiB,QAArB,EAA+B;AAChC,UAAA,KAAK,CAAC,IAAI,GAAG,CAAR,CAAL,GAAkB,KAAK,GAAG,MAA1B;AACH,SAFI,MAGA;AACD,UAAA,KAAK,CAAC,IAAI,GAAG,CAAR,CAAL,GAAkB,QAAlB;AACH;;AACD,eAAO,KAAP;AACH;;AACD,aAAO,QAAP;AACH;;;6BACgB,Q,EAAkB,I,EAAY;AAAA,yBACuD,KAAK,KAD5D;AAAA,UACnC,QADmC,gBACnC,QADmC;AAAA,UACzB,YADyB,gBACzB,YADyB;AAAA,8CACX,OADW;AAAA,UACX,OADW,qCACD,CADC;AAAA,8CACE,OADF;AAAA,UACE,OADF,qCACY,CADZ;AAAA,2CACe,IADf;AAAA,UACe,IADf,kCACsB,CADtB;AAAA,UACyB,QADzB,gBACyB,QADzB;AAAA,UACmC,IADnC,gBACmC,IADnC;AAAA,2CACyC,IADzC;AAAA,UACyC,IADzC,kCACgD,EADhD;;AAE3C,UAAI,CAAC,QAAL,EAAe;AACX,YAAM,OAAO,GAAG,KAAK,KAAL,CAAW,KAA3B;AACA,YAAM,MAAM,GAAG,KAAK,CAAC,OAAN,CAAc,OAAd,IAAyB,OAAO,CAAC,MAAjC,GAA0C,CAAzD;AACA,YAAM,KAAK,GAAG,MAAM,GAAG,CAAvB;AACA,YAAM,QAAQ,GAAG,KAAK,CAAC,OAAN,CAAc,OAAd,IAAyB,OAAO,CAAC,IAAI,GAAG,CAAR,CAAhC,GAA6C,OAA9D;AACA,YAAM,KAAK,GAAG,IAAI,CAAC,GAAL,CAAS,QAAQ,GAAG,QAApB,KAAiC,IAAjC,IAAyC,QAAQ,IAAI,OAArD,IAAgE,QAAQ,IAAI,OAA1F;AACA,YAAM,QAAQ,GAAG,QAAQ,IAAI,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAZ,IAAwB,IAApC,CAAzB;;AACA,YAAI,CAAC,KAAK,KAAL,CAAW,UAAZ,IAA0B,KAA9B,EAAqC;AACjC,cAAM,KAAK,GAAG,KAAK,WAAL,CAAiB,QAAjB,EAA2B,IAA3B,CAAd;;AACA,cAAI,IAAJ,EAAU;AACN,YAAA,IAAI,CAAC,MAAL,CAAY;AACR,cAAA,IAAI,EAAJ,IADQ;AAER,cAAA,KAAK,EAAL;AAFQ,aAAZ;AAIH,WALD,MAMK;AACD,iBAAK,QAAL,CAAc;AACV,cAAA,KAAK,EAAL;AADU,aAAd;AAGH;AACJ;;AACD,YAAM,KAAK,GAAsB;AAC7B,UAAA,KAAK,EAAE,QADsB;AAE7B,UAAA,KAAK,EAAE,IAAI,GAAG,CAFe;AAG7B,UAAA,IAAI,EAAE,KAAK,GAAG,OAAH,GAAa;AAHK,SAAjC;;AAKA,YAAI,KAAK,IAAI,OAAO,QAAP,KAAoB,UAAjC,EAA6C;AACzC,UAAA,QAAQ,CAAC,KAAD,CAAR;AACH;;AACD,YAAI,IAAI,KAAK,KAAK,KAAL,CAAW,MAAxB,EAAgC;AAC5B,eAAK,QAAL,CAAc;AACV,YAAA,MAAM,EAAE;AADE,WAAd;;AAGA,cAAI,CAAC,IAAD,IAAS,KAAT,IAAkB,OAAO,YAAP,KAAwB,UAA9C,EAA0D;AACtD,YAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ;AACJ;AACJ;;;gCAWmB,M,EAAiB,G,EAAa,I,EAAY;AAAA,yBAChC,KAAK,KAD2B;AAAA,UAClD,MADkD,gBAClD,MADkD;AAAA,UAC1C,KAD0C,gBAC1C,KAD0C;AAE1D,UAAM,MAAM,GAAG,KAAK,CAAC,OAAN,CAAc,KAAd,IAAuB,KAAK,CAAC,MAA7B,GAAsC,CAArD;AACA,UAAM,KAAK,GAAG,MAAM,GAAG,CAAvB;AACA,UAAM,IAAI,GAAG,MAAM,IAAI,CAAvB;;AACA,UAAI,MAAJ,EAAY;AACR,aAAK,QAAL,CAAc,KAAK,CAAC,IAAI,GAAG,CAAR,CAAL,GAAkB,GAAG,GAAG,IAAtC,EAA4C,IAA5C;AACH,OAFD,MAGK,IAAI,KAAJ,EAAW;AACZ,YAAM,SAAS,GAAG,IAAI,GAAG,GAAzB;;AACA,YAAI,SAAS,IAAI,MAAb,IAAuB,SAAS,GAAG,CAAvC,EAA0C;AACtC,eAAK,QAAL,CAAc;AACV,YAAA,MAAM,EAAE;AADE,WAAd;AAGH;AACJ;AACJ;;;kCAyCqB,G,EAAW;AAC7B,UAAI,IAAI,CAAC,KAAL,CAAW,GAAX,MAAoB,GAAxB,EAA6B;AACzB,eAAO,CAAP;AACH;;AACD,aAAO,GAAG,CAAC,QAAJ,GAAe,KAAf,CAAqB,GAArB,EAA0B,CAA1B,EAA6B,MAA7B,IAAuC,CAA9C;AACH;;;6BAMK;AAAA;;AACI,UAAA,EAAA,GAAA,KAAA,KAAA;AAAA,UAAY,EAAZ,GAAmL,EAAnL,CAAE,QAAF;AAAA,UAAuB,EAAvB,GAAmL,EAAnL,CAAgB,KAAhB;AAAA,UAAyC,EAAzC,GAAmL,EAAnL,CAA2B,YAA3B;AAAA,UAA6C,QAA7C,GAAmL,EAAnL,CAA6C,QAA7C;AAAA,UAAiE,EAAjE,GAAmL,EAAnL,CAAuD,QAAvD;AAAA,UAAmF,EAAnF,GAAmL,EAAnL,CAAqE,YAArE;AAAA,UAA+F,EAA/F,GAAmL,EAAnL,CAAuF,MAAvF;AAAA,UAAmG,IAAnG,GAAmL,EAAnL,CAAmG,IAAnG;AAAA,uBAAmL,EAAnL,CAAyG,OAAzG;AAAA,UAAyG,OAAzG,2BAAmH,CAAnH;AAAA,uBAAmL,EAAnL,CAAsH,OAAtH;AAAA,UAAsH,OAAtH,2BAAgI,CAAhI;AAAA,UAAmI,KAAnI,GAAmL,EAAnL,CAAmI,KAAnI;AAAA,UAA0I,KAA1I,GAAmL,EAAnL,CAA0I,KAA1I;AAAA,UAAiJ,IAAjJ,GAAmL,EAAnL,CAAiJ,IAAjJ;AAAA,UAAuJ,MAAvJ,GAAmL,EAAnL,CAAuJ,MAAvJ;AAAA,UAA+J,OAA/J,GAAmL,EAAnL,CAA+J,OAA/J;AAAA,UAAwK,WAAxK,GAAmL,EAAnL,CAAwK,WAAxK;AAAA,UAAqL,KAArL,GAAqL,MAAA,CAAA,EAAA,EAAA,CAAA,UAAA,EAAA,OAAA,EAAA,cAAA,EAAA,UAAA,EAAA,UAAA,EAAA,cAAA,EAAA,QAAA,EAAA,MAAA,EAAA,SAAA,EAAA,SAAA,EAAA,OAAA,EAAA,OAAA,EAAA,MAAA,EAAA,QAAA,EAAA,SAAA,EAAA,aAAA,CAAA,CAArL;;AADJ,yBAEkD,KAAK,KAFvD;AAAA,UAEM,KAFN,gBAEM,KAFN;AAAA,UAEa,MAFb,gBAEa,MAFb;AAAA,UAEqB,QAFrB,gBAEqB,QAFrB;AAAA,UAE+B,OAF/B,gBAE+B,OAF/B;AAAA,UAEwC,KAFxC,gBAEwC,KAFxC;AAGF,UAAM,MAAM,GAAG,KAAK,CAAC,OAAN,CAAc,KAAd,IAAuB,KAAvB,GAA+B,CAAC,KAAD,CAA9C;AACA,UAAM,GAAG,GAAG,MAAM,CAAC,MAAP,KAAkB,CAAlB,GAAuB,OAAO,MAAM,CAAC,CAAD,CAAN,GAAY,OAAnB,CAAD,IAAiC,OAAO,GAAG,OAA3C,CAAtB,GAA4E,CAAxF;AACA,aAAQ,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB;AAAC,QAAA,KAAK,EAAE,KAAR;AAAe,QAAA,QAAQ,EAAE,CAAzB;AAA4B,QAAA,SAAS,EAAE,KAAK,OAA5C;AAAqD,QAAA,MAAM,EAAE,MAA7D;AAAqE,QAAA,OAAO,EAAE,OAA9E;AAAuF,QAAA,YAAY,EAAE,KAAK,gBAA1G;AAA4H,QAAA,YAAY,EAAE,KAAK;AAA/I,OAAhB,EACR,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,QAAA,KAAK,EAAE,KAAT;AAAgB,QAAA,QAAQ,EAAE,KAAK,WAA/B;AAA4C,QAAA,MAAM,EAAE,MAAM,KAAK,CAA/D;AAAkE,QAAA,QAAQ,EAAE;AAA5E,OAAV,CAAV,EACG,GAAG,GAAG,CAAN,IAAY,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa;AAAC,QAAA,KAAK,sBAAK,QAAQ,GAAG,QAAH,GAAc,OAA3B,YAAwC,GAAxC,OAAN;AAAwD,QAAA,QAAQ,EAAE,QAAlE;AAA4E,QAAA,MAAM,EAAE,MAAM,KAAK,CAAX,IAAgB,OAApG;AAA6G,QAAA,QAAQ,EAAE;AAAvH,OAAb,CADf,EAEG,MAAM,CAAC,GAAP,CAAW,UAAC,GAAD,EAAM,KAAN;AAAA,eAAiB,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,UAAA,GAAG,EAAE;AAAV,SAAA,EACxB,WAAW,IAAK,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAiB;AAAC,UAAA,QAAQ,EAAE,QAAX;AAAqB,UAAA,KAAK,EAAE,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG,GAAG,OAAP,KAAmB,OAAO,GAAG,OAA7B,CAAT,GAAiD,CAAC,GAAG,GAAG,OAAP,KAAmB,OAAO,GAAG,OAA7B,CAA1D;AAAnC,SAAjB,EACb,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ;AAAC,UAAA,OAAO,EAAE,MAAI,CAAC,kBAAL,CAAwB,GAAxB,CAAV;AAAwC,UAAA,QAAQ,EAAE,QAAQ,GAAG,OAAH,GAAa,KAAvE;AAA8E,UAAA,IAAI,EAAE,MAAM,KAAK,KAAK,GAAG;AAAvG,SAAR,CADa,CADQ,EAIzB,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc;AAAC,UAAA,CAAC,EAAE,QAAQ,GAAG,GAAH,GAAS,CAAC,GAAG,GAAG,OAAP,KAAmB,OAAO,GAAG,OAA7B,CAArB;AAA4D,UAAA,CAAC,EAAE,QAAQ,GAAG,MAAM,CAAC,GAAG,GAAG,OAAP,KAAmB,OAAO,GAAG,OAA7B,CAAT,GAAiD,GAAxH;AAA6H,UAAA,GAAG,EAAE,KAAlI;AAAyI,UAAA,KAAK,EAAE,KAAhJ;AAAuJ,UAAA,MAAM,EAAE,MAAM,KAAK,KAAK,GAAG,CAAnB,IAAwB,OAAvL;AAAgM,UAAA,KAAK,EAAE,KAAvM;AAA8M,UAAA,QAAQ,EAAE;AAAxN,SAAd,CAJyB,CAAjB;AAAA,OAAX,CAFH,CADQ,EAUP,aAAa,CAAC,KAAD,EAAQ,IAAR,CAVN,CAAR;AAYH;;;;EAjNmB,KAAK,CAAC,a;;AAkNnB,SAAA,CAAA,KAAA,GAAQ;AACX,MAAI,eAAJ,GAAmB;AAAK,WAAO,eAAP;AAAmD,GADhE;;AAEX,MAAI,SAAJ,GAAa;AAAK,WAAO,SAAP;AAAuC,GAF9C;;AAGX,MAAI,YAAJ,GAAgB;AAAK,WAAO,YAAP;AAA6C,GAHvD;;AAIX,MAAI,gBAAJ,GAAoB;AAAK,WAAO,gBAAP;AAAqD,GAJnE;;AAKX,MAAI,OAAJ,GAAW;AAAK,WAAO,OAAP;AAAmC,GALxC;;AAMX,MAAI,aAAJ,GAAiB;AAAK,WAAO,aAAP;AAA+C;;AAN1D,CAAR;AASX;;;;AAGA,OAAO,IAAM,MAAM,GAAG,eAAe,CAAC,SAAD,CAA9B;AACP,MAAM,CAAC,WAAP,GAAqB,QAArB","sourcesContent":["import * as React from 'react';\nimport styled, { themed } from '../../utils/styled';\nimport { ocean } from '../../colors';\nimport { InputProps, InputChangeEvent } from '../../common';\nimport { IndicatorKnob } from '../IndicatorKnob';\nimport { InteractiveSurface, InteractiveSurfaceChangeEvent, InteractiveSurfaceProps } from '../InteractiveSurface';\nimport { withFormContext, FormContextProps } from '../../hoc';\nimport { showInputInfo } from '../../utils/input';\nimport { KeyCodes } from '../../utils';\nimport { distance } from '../../distance';\nimport { transparentize } from '../../utils';\nimport { Tooltip } from '../Tooltip';\nexport interface SliderChangeEvent extends InputChangeEvent<number> {\n    /**\n     * Gets the type of the changed value.\n     */\n    type: 'single' | 'multi';\n    /**\n     * Gets the index of the knob.\n     */\n    index: number;\n}\nexport interface SliderProps extends InputProps<number | Array<number>> {\n    /**\n     * @ignore\n     */\n    children?: void;\n    /**\n     * Defines the color of the indicator.\n     */\n    color?: string;\n    /**\n     * Optionally sets the minimum value of the slider. By default is set to 0.\n     * @default 0\n     */\n    minimum?: number;\n    /**\n     * Optionally sets the maximum value of the slider. By default is set to 1.\n     * @default 1\n     */\n    maximum?: number;\n    /**\n     * Optionally sets the margin between the values.\n     */\n    margin?: number;\n    /**\n     * The stepping to use. By default is set to 0, i.e., no fixed stepping / continuous mode.\n     * @default 0\n     */\n    step?: number;\n    /**\n     * Sets the orienatation of the slider. By default is set to horizontal.\n     * @default horizontal\n     */\n    orientation?: 'horizontal' | 'vertical';\n    /**\n     * Sets the slider as disabled, i.e., not movable.\n     * @default false\n     */\n    disabled?: boolean;\n    /**\n     * Show status tooltip\n     * @default false\n     */\n    showTooltip?: boolean;\n    /**\n     * Emitted once the slider's value changed.\n     */\n    onChange?(e: SliderChangeEvent): void;\n    /**\n     * Emitted once the slider's value changing done and value is ready.\n     */\n    onChangeDone?(e: SliderChangeEvent): void;\n}\nexport interface SliderState {\n    value: number | Array<number>;\n    error?: React.ReactChild;\n    active: number;\n    controlled: boolean;\n    vertical: boolean;\n    hovered: boolean;\n}\ninterface SliderBarProps extends InteractiveSurfaceProps {\n    orientation?: 'vertical' | 'horizontal';\n    disabled?: boolean;\n    active?: boolean;\n    theme: any;\n}\ninterface IndicatorBarProps {\n    disabled?: boolean;\n    active?: boolean;\n    vertical: boolean;\n}\ninterface TooltipContainerProps {\n    value: string;\n    vertical: boolean;\n}\nfunction percent(value?: number) {\n    return typeof value === 'number' ? `${value * 100}%` : '50%';\n}\nconst transitionDuration = '0.3s';\nconst transitionEase = 'cubic-bezier(0, 0, 0.25, 1)';\nconst SliderContainer = styled.div `\n  position: relative;\n  outline: 0;\n  height: 100%;\n`;\nconst SliderBar = styled(InteractiveSurface)<SliderBarProps> `\n  position: relative;\n  padding: ${props => (props.orientation === 'vertical' ? `0 ${distance.small}` : `${distance.small} 0`)};\n  height: ${props => (props.orientation === 'vertical' ? '100%' : distance.xsmall)};\n  width: ${props => (props.orientation === 'vertical' ? distance.xsmall : '100%')};\n  box-sizing: content-box;\n\n  &:after {\n    content: '';\n    display: block;\n    border-radius: ${distance.small};\n    height: 100%;\n    width: 100%;\n    background: ${themed(props => props.disabled\n    ? props.theme.ui3\n    : props.active\n        ? transparentize(ocean, 0.25)\n        : transparentize(props.theme.ui4, 0.25))};\n    transition: background ${transitionDuration} ${transitionEase};\n  }\n\n  &:hover {\n    cursor: pointer;\n\n    &:after {\n      background: ${transparentize(ocean, 0.25)};\n    }\n  }\n`;\nconst IndicatorBar = styled('div')<IndicatorBarProps> `\n  border-radius: ${distance.small};\n  background: ${themed(props => props.disabled ? props.theme.ui4 : props.active ? ocean : transparentize(props.theme.ui5, 0.75))};\n  transition: background ${transitionDuration} ${transitionEase};\n  height: ${props => (props.vertical ? '100%' : distance.xsmall)};\n  width: ${props => (props.vertical ? distance.xsmall : 'auto')};\n  position: absolute;\n  margin: auto;\n`;\nconst TooltipContainer = styled('div')<TooltipContainerProps> `\n  position: absolute;\n  ${props => (props.vertical ? `top: ${props.value}` : `left: ${props.value}`)};\n  ${props => (props.vertical ? `left: ${distance.large}` : `top: -${distance.large}`)};\n  width: 0;\n  height: 0;\n\n  > div {\n    display: ${props => (props.vertical ? `block` : `inline-block`)};\n  }\n`;\nclass SliderInt extends React.PureComponent<SliderProps & FormContextProps, SliderState> {\n    constructor(props: SliderProps) {\n        super(props);\n        const value = props.value || props.defaultValue;\n        this.state = {\n            value: Array.isArray(value) ? value : [value || 0],\n            vertical: props.orientation === 'vertical',\n            active: 0,\n            controlled: typeof props.value !== 'undefined',\n            hovered: false,\n            error: props.error,\n        };\n    }\n    componentDidMount() {\n        const { form } = this.props;\n        const { controlled } = this.state;\n        if (!controlled && form) {\n            form.subscribe(this);\n        }\n    }\n    componentWillUnmount() {\n        const { form } = this.props;\n        const { controlled } = this.state;\n        if (!controlled && form) {\n            form.unsubscribe(this);\n        }\n    }\n    UNSAFE_componentWillReceiveProps({ value = this.state.value, error, orientation }: SliderProps) {\n        if (this.state.controlled) {\n            this.setState({ value });\n        }\n        this.setState({\n            vertical: orientation === 'vertical',\n            error,\n        });\n    }\n    private getClosestKnob(current: number) {\n        const values = this.state.value;\n        if (Array.isArray(values)) {\n            const dists = values.map(val => Math.abs(val - current));\n            const length = dists.length;\n            let minIndex = 0;\n            for (let i = 0; i < length; i++) {\n                const curValue = dists[i];\n                const minValue = dists[minIndex];\n                if (curValue < minValue || (curValue === minValue && current > values[i])) {\n                    minIndex = i;\n                }\n            }\n            return minIndex + 1;\n        }\n        return 1;\n    }\n    private selectValue(selected: number, knob: number) {\n        const { margin = 0 } = this.props;\n        const current = this.state.value;\n        if (Array.isArray(current)) {\n            const value = [...current];\n            const upper = value[knob];\n            const lower = value[knob - 2];\n            if (lower + margin > selected) {\n                value[knob - 1] = lower + margin;\n            }\n            else if (upper - margin < selected) {\n                value[knob - 1] = upper - margin;\n            }\n            else {\n                value[knob - 1] = selected;\n            }\n            return value;\n        }\n        return selected;\n    }\n    private setValue(position: number, knob: number) {\n        const { onChange, onChangeDone, maximum = 1, minimum = 0, step = 0, disabled, form, name = '' } = this.props;\n        if (!disabled) {\n            const current = this.state.value;\n            const length = Array.isArray(current) ? current.length : 1;\n            const multi = length > 1;\n            const previous = Array.isArray(current) ? current[knob - 1] : current;\n            const valid = Math.abs(position - previous) >= step && position >= minimum && position <= maximum;\n            const selected = position - (step && (position - previous) % step);\n            if (!this.state.controlled && valid) {\n                const value = this.selectValue(selected, knob);\n                if (form) {\n                    form.change({\n                        name,\n                        value,\n                    });\n                }\n                else {\n                    this.setState({\n                        value,\n                    });\n                }\n            }\n            const event: SliderChangeEvent = {\n                value: selected,\n                index: knob - 1,\n                type: multi ? 'multi' : 'single',\n            };\n            if (valid && typeof onChange === 'function') {\n                onChange(event);\n            }\n            if (knob !== this.state.active) {\n                this.setState({\n                    active: knob,\n                });\n                if (!knob && valid && typeof onChangeDone === 'function') {\n                    onChangeDone(event);\n                }\n            }\n        }\n    }\n    private updateValue = (e: InteractiveSurfaceChangeEvent) => {\n        const { maximum = 1, minimum = 0 } = this.props;\n        const v = this.state.vertical ? 1 - e.y : e.x;\n        const position = minimum + v * (maximum - minimum);\n        const value = this.state.value;\n        const length = Array.isArray(value) ? value.length : 1;\n        const multi = length > 1;\n        const knob = this.state.active || (multi ? this.getClosestKnob(position) : 1);\n        this.setValue(position, e.active ? knob : 0);\n    };\n    private controlKnob(change: boolean, dir: number, step: number) {\n        const { active, value } = this.state;\n        const length = Array.isArray(value) ? value.length : 1;\n        const multi = length > 1;\n        const knob = active || 1;\n        if (change) {\n            this.setValue(value[knob - 1] + dir * step, knob);\n        }\n        else if (multi) {\n            const newActive = knob + dir;\n            if (newActive <= length && newActive > 0) {\n                this.setState({\n                    active: newActive,\n                });\n            }\n        }\n    }\n    private control = (e: React.KeyboardEvent<HTMLDivElement>) => {\n        const { minimum = 0, maximum = 1, onInput } = this.props;\n        const { step = Math.min(1, (maximum - minimum) / 10) } = this.props;\n        const { active, vertical } = this.state;\n        const knob = active || 1;\n        switch (e.keyCode) {\n            case KeyCodes.up:\n            case KeyCodes.down:\n                this.controlKnob(vertical, 39 - e.keyCode, step);\n                break;\n            case KeyCodes.left:\n            case KeyCodes.right:\n                this.controlKnob(!vertical, e.keyCode - 38, step);\n                break;\n            case KeyCodes.home:\n                this.setValue(minimum, knob);\n                break;\n            case KeyCodes.end:\n                this.setValue(maximum, knob);\n                break;\n            case KeyCodes.escape:\n                this.setState({\n                    active: 0,\n                });\n            case KeyCodes.enter:\n            case KeyCodes.space:\n            default:\n                if (typeof onInput === 'function') {\n                    onInput();\n                }\n                return;\n        }\n        e.preventDefault();\n    };\n    private handleMouseEnter = () => {\n        this.setState({ hovered: true });\n    };\n    private handleMouseLeave = () => {\n        this.setState({ hovered: false });\n    };\n    private countDecimals(val: number) {\n        if (Math.floor(val) === val) {\n            return 0;\n        }\n        return val.toString().split('.')[1].length || 0;\n    }\n    private updateTooltipValue = (val: number) => {\n        const { maximum = 1, step } = this.props;\n        const decimalPlaces = step && step < 1 ? this.countDecimals(step) : 0;\n        return !step && maximum <= 1 ? `${val.toFixed(1)}` : `${val.toFixed(decimalPlaces)}`;\n    };\n    render() {\n        const { children: _0, value: _1, defaultValue: _2, disabled, onChange: _3, onChangeDone: _4, margin: _5, step, minimum = 0, maximum = 1, color, theme, info, onBlur, onFocus, showTooltip, ...props } = this.props;\n        const { value, active, vertical, hovered, error } = this.state;\n        const values = Array.isArray(value) ? value : [value];\n        const ind = values.length === 1 ? (100 * (values[0] - minimum)) / (maximum - minimum) : 0;\n        return (<SliderContainer theme={theme} tabIndex={0} onKeyDown={this.control} onBlur={onBlur} onFocus={onFocus} onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave}>\n        <SliderBar {...props} theme={theme} onChange={this.updateValue} active={active !== 0} disabled={disabled}>\n          {ind > 0 && (<IndicatorBar style={{ [vertical ? 'height' : 'width']: `${ind}%` }} vertical={vertical} active={active !== 0 || hovered} disabled={disabled}/>)}\n          {values.map((val, index) => (<div key={index}>\n              {showTooltip && (<TooltipContainer vertical={vertical} value={percent(vertical ? 1.0 - (val - minimum) / (maximum - minimum) : (val - minimum) / (maximum - minimum))}>\n                  <Tooltip content={this.updateTooltipValue(val)} position={vertical ? 'right' : 'top'} open={active === index + 1}/>\n                </TooltipContainer>)}\n              <IndicatorKnob x={vertical ? 0.5 : (val - minimum) / (maximum - minimum)} y={vertical ? 1.0 - (val - minimum) / (maximum - minimum) : 0.5} key={index} color={color} active={active === index + 1 || hovered} theme={theme} disabled={disabled}/>\n            </div>))}\n        </SliderBar>\n        {showInputInfo(error, info)}\n      </SliderContainer>);\n    }\n    static inner = {\n        get SliderContainer() { return SliderContainer as typeof SliderContainer; },\n        get SliderBar() { return SliderBar as typeof SliderBar; },\n        get IndicatorBar() { return IndicatorBar as typeof IndicatorBar; },\n        get TooltipContainer() { return TooltipContainer as typeof TooltipContainer; },\n        get Tooltip() { return Tooltip as typeof Tooltip; },\n        get IndicatorKnob() { return IndicatorKnob as typeof IndicatorKnob; }\n    };\n}\n/**\n * The slider component displays a data value picker in form of a sliding bar.\n */\nexport const Slider = withFormContext(SliderInt);\nSlider.displayName = 'Slider';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}