{"ast":null,"code":"import _toConsumableArray from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  display: block;\\n  font-size: \", \";\\n  height: 18px;\\n  width: 18px;\\n  transition: transform \", \" \", \";\\n  transform: \", \";\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  /*\\n    AccordionTable is a Table abstraction.\\n    Table has default paddings for it's cells.\\n    Expanded AccordionTable row is a container and should not have any paddings.\\n  */\\n  padding: 0 !important;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n\\n  padding-left: 0.5em !important;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  transition: all \", \" \", \";\\n  max-height: \", \";\\n  opacity: \", \";\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n      border: \", \";\\n      \", \"\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  th,\\n  td {\\n    padding-right: \", \";\\n    padding-left: \", \";\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport styled, { themed, css } from '../../utils/styled';\nimport { remCalc } from '../../utils/remCalc';\nimport { Table } from '../Table';\nimport { defaultCellRenderer } from '../Table/TableShared.part';\nimport { Icon } from '../Icon';\nimport { AccordionTableRow } from '../AccordionTableRow';\nimport { normalizeIndex, toggleIndex, hasIndex } from './helpers/indexHelper';\nimport { distance } from '../../distance';\nimport { getFontStyle } from '../../textStyles';\nvar animationDuration = '0.3s';\nvar animationFunction = 'cubic-bezier(0, 0, 0.25, 1)';\nvar StyledTable = styled(Table)(_templateObject(), distance.medium, distance.medium);\nvar StyledTableRowCollapse = styled.tr(themed(function (_ref) {\n  var theme = _ref.theme,\n      active = _ref.active;\n  return css(_templateObject2(), active ? \"1px solid \".concat(theme.ui5) : 'none', !active ? 'display: none;' : '');\n}));\nvar StyledCollapseAnimator = styled('div')(_templateObject3(), animationDuration, animationFunction, function (_ref2) {\n  var active = _ref2.active;\n  return active ? '10000px' : '0';\n}, function (_ref3) {\n  var active = _ref3.active;\n  return active ? '1' : '0';\n});\nvar GroupTableCell = styled.td(_templateObject4(), getFontStyle({\n  weight: 'bold'\n}));\nvar StyledDetailsContainer = styled.td(_templateObject5());\nvar StyledIconInt = Object.assign(function (_a) {\n  var _0 = _a.isRotated,\n      props = __rest(_a, [\"isRotated\"]);\n\n  return React.createElement(Icon, Object.assign({}, props));\n}, {\n  inner: {\n    get Icon() {\n      return Icon;\n    }\n\n  }\n});\nvar StyledIcon = styled(StyledIconInt)(_templateObject6(), remCalc('18px'), animationDuration, animationFunction, function (_ref4) {\n  var isRotated = _ref4.isRotated;\n  return \"rotate(\".concat(isRotated ? 90 : 0, \"deg)\");\n});\n\nfunction defaultGroupRenderer(e) {\n  return React.createElement(React.Fragment, null, e.group ? e.group.toString() : e.group, \" (\", e.items.length, \")\");\n}\n\nexport var AccordionTableBasic = /*#__PURE__*/function (_React$Component) {\n  _inherits(AccordionTableBasic, _React$Component);\n\n  var _super = _createSuper(AccordionTableBasic);\n\n  function AccordionTableBasic(props) {\n    var _this;\n\n    _classCallCheck(this, AccordionTableBasic);\n\n    _this = _super.call(this, props);\n\n    _this.getGroupByValue = function (rowData) {\n      var _this$props = _this.props,\n          groupBy = _this$props.groupBy,\n          noValueGroupLabel = _this$props.noValueGroupLabel;\n\n      if (groupBy) {\n        var rowValue = rowData[groupBy];\n\n        if (rowValue || rowValue === 0) {\n          if (Array.isArray(rowValue) && rowValue.length === 0) {\n            return noValueGroupLabel;\n          } else {\n            return rowValue;\n          }\n        } else {\n          return noValueGroupLabel;\n        }\n      }\n\n      return undefined;\n    };\n\n    _this.rowRenderer = function (_ref5) {\n      var cells = _ref5.cells,\n          index = _ref5.index,\n          data = _ref5.data,\n          key = _ref5.key,\n          state = _ref5.state;\n      var _this$props2 = _this.props,\n          detailsRenderer = _this$props2.detailsRenderer,\n          rowRenderer = _this$props2.rowRenderer,\n          theme = _this$props2.theme,\n          arrowToggle = _this$props2.arrowToggle;\n      var _this$state = _this.state,\n          selectedIndex = _this$state.selectedIndex,\n          expandedGroups = _this$state.expandedGroups;\n      var _state$groupedRows = state.groupedRows,\n          groupedRows = _state$groupedRows === void 0 ? [] : _state$groupedRows;\n      var active = hasIndex(selectedIndex, index);\n      var count = React.Children.count(cells);\n\n      var col = _this.getGroupByValue(data);\n\n      var open = !(col || col === 0) || AccordionTableBasic.arrayIncludes(col, expandedGroups);\n      var renderData = {\n        cells: cells,\n        index: index,\n        data: data,\n        active: active,\n        key: key,\n        state: state\n      };\n      var isNewGroup = (col || col === 0) && !AccordionTableBasic.arrayIncludes(col, groupedRows);\n\n      if (isNewGroup) {\n        state.groupedRows = [].concat(_toConsumableArray(groupedRows), [col]);\n      }\n\n      return React.createElement(React.Fragment, {\n        key: key\n      }, isNewGroup && _this.groupRenderer(col, count, open), open && React.createElement(React.Fragment, null, rowRenderer && rowRenderer(renderData) || React.createElement(AccordionTableRow, {\n        active: active,\n        clickable: !arrowToggle,\n        onClick: function onClick() {\n          return _this.handleClick(index, data);\n        },\n        theme: theme\n      }, cells), React.createElement(StyledTableRowCollapse, {\n        active: active\n      }, React.createElement(StyledDetailsContainer, {\n        colSpan: count\n      }, React.createElement(StyledCollapseAnimator, {\n        active: active\n      }, active && detailsRenderer && detailsRenderer({\n        index: index,\n        data: data\n      }))))));\n    };\n\n    _this.cellRenderer = function (e) {\n      var row = e.row,\n          data = e.data;\n\n      if (e.column === 0) {\n        return React.createElement(StyledIcon, {\n          isRotated: hasIndex(_this.state.selectedIndex, row),\n          name: \"KeyboardArrowRight\",\n          onClick: function onClick() {\n            return data && _this.handleClick(row, data);\n          }\n        });\n      }\n\n      var cellRenderer = _this.props.cellRenderer;\n      return typeof cellRenderer === 'function' ? cellRenderer(e) : defaultCellRenderer(e);\n    };\n\n    var controlledDetails = props.selectedIndex !== undefined;\n    var controlledGroups = Array.isArray(props.expandedGroups);\n    _this.state = {\n      selectedIndex: normalizeIndex(props.selectedIndex),\n      controlledIndex: controlledDetails,\n      controlledGroups: controlledGroups,\n      expandedGroups: controlledGroups ? props.expandedGroups || [] : []\n    };\n    return _this;\n  }\n\n  _createClass(AccordionTableBasic, [{\n    key: \"getGroupItems\",\n    value: function getGroupItems(data, groupBy, group) {\n      var noValueGroupLabel = this.props.noValueGroupLabel;\n\n      if (groupBy) {\n        if (group === noValueGroupLabel) {\n          return data.filter(function (m) {\n            var value = m[groupBy]; // the number '0' shouldn't be in the no-value-group.\n\n            if (typeof value === 'number' && value === 0) {\n              return false;\n            } else {\n              // empty arrays should be in the no-value-group\n              return !value || Array.isArray(value) && value.length === 0;\n            }\n          });\n        } else {\n          return data.filter(function (m) {\n            var value = m[groupBy];\n\n            if (value === group) {\n              return true;\n            } else {\n              // special handling for arrays is needed because '===' doesn't work for arrays\n              if (Array.isArray(value) && Array.isArray(group)) {\n                return value.toString() === group.toString();\n              } else {\n                return false;\n              }\n            }\n          });\n        }\n      }\n\n      return [];\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(target, data) {\n      var _this$props3 = this.props,\n          onChange = _this$props3.onChange,\n          multiple = _this$props3.multiple;\n      var _this$state2 = this.state,\n          controlledIndex = _this$state2.controlledIndex,\n          selectedIndex = _this$state2.selectedIndex;\n      var nextIndexes = toggleIndex(selectedIndex, target, multiple);\n\n      if (typeof onChange === 'function') {\n        onChange({\n          selectedIndex: multiple ? nextIndexes : nextIndexes[0] !== undefined ? nextIndexes[0] : -1,\n          previousIndex: multiple ? selectedIndex : selectedIndex[0] !== undefined ? selectedIndex[0] : -1,\n          data: data\n        });\n      }\n\n      if (!controlledIndex) {\n        this.setState({\n          selectedIndex: nextIndexes\n        });\n      }\n    }\n  }, {\n    key: \"toggleGroup\",\n    value: function toggleGroup(group) {\n      var _this$props4 = this.props,\n          data = _this$props4.data,\n          onToggleGroup = _this$props4.onToggleGroup,\n          groupBy = _this$props4.groupBy;\n      var _this$state3 = this.state,\n          expandedGroups = _this$state3.expandedGroups,\n          controlledGroups = _this$state3.controlledGroups;\n\n      if (typeof onToggleGroup === 'function') {\n        onToggleGroup({\n          group: group,\n          type: 'expand',\n          items: this.getGroupItems(data, groupBy, group)\n        });\n      }\n\n      if (!controlledGroups) {\n        if (expandedGroups.indexOf(group) !== -1) {\n          this.setState({\n            expandedGroups: expandedGroups.filter(function (m) {\n              return m !== group;\n            })\n          });\n        } else {\n          this.setState({\n            expandedGroups: [].concat(_toConsumableArray(expandedGroups), [group])\n          });\n        }\n      }\n    }\n  }, {\n    key: \"groupRenderer\",\n    value: function groupRenderer(group, count, expanded) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          theme = _this$props5.theme,\n          _this$props5$groupRen = _this$props5.groupRenderer,\n          groupRenderer = _this$props5$groupRen === void 0 ? defaultGroupRenderer : _this$props5$groupRen,\n          data = _this$props5.data,\n          groupBy = _this$props5.groupBy;\n      var items = this.getGroupItems(data, groupBy, group);\n      return React.createElement(React.Fragment, null, React.createElement(AccordionTableRow, {\n        clickable: true,\n        onClick: function onClick() {\n          return _this2.toggleGroup(group);\n        },\n        theme: theme\n      }, React.createElement(GroupTableCell, null, React.createElement(StyledIcon, {\n        isRotated: expanded,\n        name: \"KeyboardArrowRight\"\n      })), React.createElement(GroupTableCell, {\n        colSpan: count - 1\n      }, groupRenderer({\n        expanded: expanded,\n        group: group,\n        items: items\n      }))), React.createElement(StyledTableRowCollapse, null));\n    }\n    /**\n     * helper method to check if an element is included in an array.\n     * This method has special handling for arrays of arrays. In this case normal strict equality checking (===)\n     * wouldn't work.\n     */\n\n  }, {\n    key: \"getColumns\",\n    value: function getColumns() {\n      var _this$props6 = this.props,\n          data = _this$props6.data,\n          columns = _this$props6.columns,\n          indexed = _this$props6.indexed;\n\n      if (columns || data && data.length) {\n        var cols = {\n          '': {\n            header: '',\n            width: remCalc('50px'),\n            sortable: false\n          }\n        };\n\n        if (indexed) {\n          cols['#'] = {\n            header: '#',\n            sortable: false\n          };\n        }\n\n        var keys = Object.keys(columns || data[0]);\n        return keys.reduce(function (acc, key) {\n          acc[key] = columns ? columns[key] : key;\n          return acc;\n        }, cols);\n      }\n\n      return {};\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          _0 = _a.detailsRenderer,\n          _1 = _a.columns,\n          _2 = _a.indexed,\n          _3 = _a.groupRenderer,\n          _4 = _a.expandedGroups,\n          _5 = _a.onToggleGroup,\n          _6 = _a.openLabel,\n          _7 = _a.closeLabel,\n          _8 = _a.multiple,\n          props = __rest(_a, [\"detailsRenderer\", \"columns\", \"indexed\", \"groupRenderer\", \"expandedGroups\", \"onToggleGroup\", \"openLabel\", \"closeLabel\", \"multiple\"]);\n\n      return React.createElement(StyledTable, Object.assign({}, props, {\n        mode: \"table\",\n        columns: this.getColumns(),\n        rowRenderer: this.rowRenderer,\n        cellRenderer: this.cellRenderer\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var selectedIndex = props.selectedIndex,\n          expandedGroups = props.expandedGroups;\n      var newIndex = state.controlledIndex && selectedIndex !== undefined;\n      var newGroups = state.controlledGroups && expandedGroups !== undefined;\n\n      if (newIndex || newGroups) {\n        return Object.assign({}, state, {\n          selectedIndex: newIndex ? normalizeIndex(selectedIndex) : state.selectedIndex,\n          expandedGroups: newGroups ? expandedGroups : state.expandedGroups\n        });\n      }\n\n      return state;\n    }\n  }, {\n    key: \"arrayIncludes\",\n    value: function arrayIncludes(element, arr) {\n      return (Array.isArray(element) ? JSON.stringify(arr).indexOf(JSON.stringify(element)) : arr.indexOf(element)) !== -1;\n    }\n  }]);\n\n  return AccordionTableBasic;\n}(React.Component);\nAccordionTableBasic.defaultProps = {\n  multiple: false,\n  noValueGroupLabel: '—'\n};\nAccordionTableBasic.inner = {\n  get AccordionTableRow() {\n    return AccordionTableRow;\n  },\n\n  get GroupTableCell() {\n    return GroupTableCell;\n  },\n\n  get StyledIcon() {\n    return StyledIcon;\n  },\n\n  get StyledTableRowCollapse() {\n    return StyledTableRowCollapse;\n  },\n\n  get StyledDetailsContainer() {\n    return StyledDetailsContainer;\n  },\n\n  get StyledCollapseAnimator() {\n    return StyledCollapseAnimator;\n  },\n\n  get StyledTable() {\n    return StyledTable;\n  }\n\n};","map":{"version":3,"sources":["../../../../src/components/AccordionTable/AccordionTableBasic.part.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled, { themed, css } from '../../utils/styled';\nimport { remCalc } from '../../utils/remCalc';\nimport { Table, TableRowEvent } from '../Table';\nimport { defaultCellRenderer } from '../Table/TableShared.part';\nimport { Icon, IconProps } from '../Icon';\nimport { AccordionTableRow } from '../AccordionTableRow';\nimport { AccordionTableProps, AccordionGroupRenderEvent } from './AccordionTable.types.part';\nimport { normalizeIndex, toggleIndex, hasIndex } from './helpers/indexHelper';\nimport { distance } from '../../distance';\nimport { TableCellRenderEvent } from '../Table/Table.types.part';\nimport { getFontStyle } from '../../textStyles';\nexport interface AccordionTableBasicState {\n    selectedIndex: Array<number>;\n    expandedGroups: Array<any>;\n    controlledIndex: boolean;\n    controlledGroups: boolean;\n}\ninterface AccordionTableItemProps {\n    active?: boolean;\n}\ninterface StyledArrowProps extends IconProps {\n    isRotated: boolean;\n}\nconst animationDuration = '0.3s';\nconst animationFunction = 'cubic-bezier(0, 0, 0.25, 1)';\nconst StyledTable = styled(Table) `\n  th,\n  td {\n    padding-right: ${distance.medium};\n    padding-left: ${distance.medium};\n  }\n`;\nconst StyledTableRowCollapse = styled.tr<AccordionTableItemProps>(themed(({ theme, active }) => css `\n      border: ${active ? `1px solid ${theme.ui5}` : 'none'};\n      ${!active ? 'display: none;' : ''}\n    `));\nconst StyledCollapseAnimator = styled('div')<AccordionTableItemProps> `\n  transition: all ${animationDuration} ${animationFunction};\n  max-height: ${({ active }) => (active ? '10000px' : '0')};\n  opacity: ${({ active }) => (active ? '1' : '0')};\n`;\nconst GroupTableCell = styled.td `\n  ${getFontStyle({ weight: 'bold' })}\n\n  padding-left: 0.5em !important;\n`;\nconst StyledDetailsContainer = styled.td `\n  /*\n    AccordionTable is a Table abstraction.\n    Table has default paddings for it's cells.\n    Expanded AccordionTable row is a container and should not have any paddings.\n  */\n  padding: 0 !important;\n`;\nconst StyledIconInt = Object.assign(((({ isRotated: _0, ...props }) => <Icon {...props}/>) as React.SFC<StyledArrowProps>), { inner: {\n        get Icon() { return Icon as typeof Icon; }\n    } });\nconst StyledIcon = styled(StyledIconInt)<StyledArrowProps> `\n  display: block;\n  font-size: ${remCalc('18px')};\n  height: 18px;\n  width: 18px;\n  transition: transform ${animationDuration} ${animationFunction};\n  transform: ${({ isRotated }) => `rotate(${isRotated ? 90 : 0}deg)`};\n`;\nfunction defaultGroupRenderer<T>(e: AccordionGroupRenderEvent<T>): React.ReactChild {\n    return (<>\n      {e.group ? e.group.toString() : e.group} ({e.items.length})\n    </>);\n}\nexport class AccordionTableBasic<T> extends React.Component<AccordionTableProps<T>, AccordionTableBasicState> {\n    static defaultProps = {\n        multiple: false,\n        noValueGroupLabel: '—',\n    };\n    constructor(props: AccordionTableProps<T>) {\n        super(props);\n        const controlledDetails = props.selectedIndex !== undefined;\n        const controlledGroups = Array.isArray(props.expandedGroups);\n        this.state = {\n            selectedIndex: normalizeIndex(props.selectedIndex),\n            controlledIndex: controlledDetails,\n            controlledGroups: controlledGroups,\n            expandedGroups: controlledGroups ? props.expandedGroups || [] : [],\n        };\n    }\n    static getDerivedStateFromProps(props: AccordionTableProps<any>, state: AccordionTableBasicState) {\n        const { selectedIndex, expandedGroups } = props;\n        const newIndex = state.controlledIndex && selectedIndex !== undefined;\n        const newGroups = state.controlledGroups && expandedGroups !== undefined;\n        if (newIndex || newGroups) {\n            return {\n                ...state,\n                selectedIndex: newIndex ? normalizeIndex(selectedIndex) : state.selectedIndex,\n                expandedGroups: newGroups ? expandedGroups : state.expandedGroups,\n            };\n        }\n        return state;\n    }\n    private getGroupItems<T>(data: Array<T>, groupBy?: keyof T, group?: any) {\n        const { noValueGroupLabel } = this.props;\n        if (groupBy) {\n            if (group === noValueGroupLabel) {\n                return data.filter(m => {\n                    const value = m[groupBy];\n                    // the number '0' shouldn't be in the no-value-group.\n                    if (typeof value === 'number' && value === 0) {\n                        return false;\n                    }\n                    else {\n                        // empty arrays should be in the no-value-group\n                        return !value || (Array.isArray(value) && value.length === 0);\n                    }\n                });\n            }\n            else {\n                return data.filter(m => {\n                    const value = m[groupBy];\n                    if (value === group) {\n                        return true;\n                    }\n                    else {\n                        // special handling for arrays is needed because '===' doesn't work for arrays\n                        if (Array.isArray(value) && Array.isArray(group)) {\n                            return value.toString() === group.toString();\n                        }\n                        else {\n                            return false;\n                        }\n                    }\n                });\n            }\n        }\n        return [];\n    }\n    private handleClick(target: number, data: T) {\n        const { onChange, multiple } = this.props;\n        const { controlledIndex, selectedIndex } = this.state;\n        const nextIndexes = toggleIndex(selectedIndex, target, multiple);\n        if (typeof onChange === 'function') {\n            onChange({\n                selectedIndex: multiple ? nextIndexes : nextIndexes[0] !== undefined ? nextIndexes[0] : -1,\n                previousIndex: multiple ? selectedIndex : selectedIndex[0] !== undefined ? selectedIndex[0] : -1,\n                data,\n            });\n        }\n        if (!controlledIndex) {\n            this.setState({\n                selectedIndex: nextIndexes,\n            });\n        }\n    }\n    private toggleGroup(group: any) {\n        const { data, onToggleGroup, groupBy } = this.props;\n        const { expandedGroups, controlledGroups } = this.state;\n        if (typeof onToggleGroup === 'function') {\n            onToggleGroup({\n                group,\n                type: 'expand',\n                items: this.getGroupItems(data, groupBy, group),\n            });\n        }\n        if (!controlledGroups) {\n            if (expandedGroups.indexOf(group) !== -1) {\n                this.setState({\n                    expandedGroups: expandedGroups.filter(m => m !== group),\n                });\n            }\n            else {\n                this.setState({\n                    expandedGroups: [...expandedGroups, group],\n                });\n            }\n        }\n    }\n    private groupRenderer(group: any, count: number, expanded: boolean) {\n        const { theme, groupRenderer = defaultGroupRenderer, data, groupBy } = this.props;\n        const items = this.getGroupItems(data, groupBy, group);\n        return (<>\n        <AccordionTableRow clickable onClick={() => this.toggleGroup(group)} theme={theme}>\n          <GroupTableCell>\n            <StyledIcon isRotated={expanded} name=\"KeyboardArrowRight\"/>\n          </GroupTableCell>\n          <GroupTableCell colSpan={count - 1}>{groupRenderer({ expanded, group, items })}</GroupTableCell>\n        </AccordionTableRow>\n        <StyledTableRowCollapse />\n      </>);\n    }\n    private getGroupByValue = (rowData: any) => {\n        const { groupBy, noValueGroupLabel } = this.props;\n        if (groupBy) {\n            const rowValue = rowData[groupBy];\n            if (rowValue || rowValue === 0) {\n                if (Array.isArray(rowValue) && rowValue.length === 0) {\n                    return noValueGroupLabel;\n                }\n                else {\n                    return rowValue;\n                }\n            }\n            else {\n                return noValueGroupLabel;\n            }\n        }\n        return undefined;\n    };\n    /**\n     * helper method to check if an element is included in an array.\n     * This method has special handling for arrays of arrays. In this case normal strict equality checking (===)\n     * wouldn't work.\n     */\n    private static arrayIncludes<E>(element: E, arr: Array<E>): boolean {\n        return ((Array.isArray(element) ? JSON.stringify(arr).indexOf(JSON.stringify(element)) : arr.indexOf(element)) !== -1);\n    }\n    private rowRenderer = ({ cells, index, data, key, state }: TableRowEvent<T>) => {\n        const { detailsRenderer, rowRenderer, theme, arrowToggle } = this.props;\n        const { selectedIndex, expandedGroups } = this.state;\n        const { groupedRows = [] } = state;\n        const active = hasIndex(selectedIndex, index);\n        const count = React.Children.count(cells);\n        const col = this.getGroupByValue(data);\n        const open = !(col || col === 0) || AccordionTableBasic.arrayIncludes(col, expandedGroups);\n        const renderData = { cells, index, data, active, key, state };\n        const isNewGroup = (col || col === 0) && !AccordionTableBasic.arrayIncludes(col, groupedRows);\n        if (isNewGroup) {\n            state.groupedRows = [...groupedRows, col];\n        }\n        return (<React.Fragment key={key}>\n        {isNewGroup && this.groupRenderer(col, count, open)}\n        {open && (<>\n            {(rowRenderer && rowRenderer(renderData)) || (<AccordionTableRow active={active} clickable={!arrowToggle} onClick={() => this.handleClick(index, data)} theme={theme}>\n                {cells}\n              </AccordionTableRow>)}\n            <StyledTableRowCollapse active={active}>\n              <StyledDetailsContainer colSpan={count}>\n                <StyledCollapseAnimator active={active}>\n                  {active && detailsRenderer && detailsRenderer({ index, data })}\n                </StyledCollapseAnimator>\n              </StyledDetailsContainer>\n            </StyledTableRowCollapse>\n          </>)}\n      </React.Fragment>);\n    };\n    private cellRenderer = (e: TableCellRenderEvent<T>) => {\n        const { row, data } = e;\n        if (e.column === 0) {\n            return (<StyledIcon isRotated={hasIndex(this.state.selectedIndex, row)} name=\"KeyboardArrowRight\" onClick={() => data && this.handleClick(row, data)}/>);\n        }\n        const { cellRenderer } = this.props;\n        return typeof cellRenderer === 'function' ? cellRenderer(e) : defaultCellRenderer(e);\n    };\n    private getColumns() {\n        const { data, columns, indexed } = this.props;\n        if (columns || (data && data.length)) {\n            const cols = {\n                '': {\n                    header: '',\n                    width: remCalc('50px'),\n                    sortable: false,\n                },\n            };\n            if (indexed) {\n                cols['#'] = {\n                    header: '#',\n                    sortable: false,\n                };\n            }\n            const keys = Object.keys(columns || data[0]);\n            return keys.reduce((acc, key) => {\n                acc[key] = columns ? columns[key] : key;\n                return acc;\n            }, cols);\n        }\n        return {};\n    }\n    render() {\n        const { detailsRenderer: _0, columns: _1, indexed: _2, groupRenderer: _3, expandedGroups: _4, onToggleGroup: _5, openLabel: _6, closeLabel: _7, multiple: _8, ...props } = this.props;\n        return (<StyledTable {...props} mode=\"table\" columns={this.getColumns()} rowRenderer={this.rowRenderer} cellRenderer={this.cellRenderer}/>);\n    }\n    static inner = {\n        get AccordionTableRow() { return AccordionTableRow as typeof AccordionTableRow; },\n        get GroupTableCell() { return GroupTableCell as typeof GroupTableCell; },\n        get StyledIcon() { return StyledIcon as typeof StyledIcon; },\n        get StyledTableRowCollapse() { return StyledTableRowCollapse as typeof StyledTableRowCollapse; },\n        get StyledDetailsContainer() { return StyledDetailsContainer as typeof StyledDetailsContainer; },\n        get StyledCollapseAnimator() { return StyledCollapseAnimator as typeof StyledCollapseAnimator; },\n        get StyledTable() { return StyledTable as typeof StyledTable; }\n    };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}