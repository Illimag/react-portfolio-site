{"ast":null,"code":"import styled from '../../utils/styled';\nexport const SidebarContainer = styled.div(({\n  open,\n  position = 'right',\n  size = '275px'\n}) => {\n  return `\n    transition: all 0.3s cubic-bezier(0, 0, 0.25, 1);\n    user-select: none;\n    position: fixed;\n    background-color: white;\n    z-index: 100001;\n    ${!open ? `\n        visibility: hidden;\n        opacity: 0;\n        overflow: initial;\n        ` : `\n        visibility: visible;\n        opacity: 1;\n        overflow: auto;\n        `}\n    ${getSizeStyles(position, size)}\n    ${getPositionStyles(position, open, size)}\n  `;\n});\n\nfunction getSizeStyles(position, size) {\n  if (position === 'top' || position === 'bottom') {\n    return `\n      height: ${size}; \n      width: 100%;\n    `;\n  } else {\n    return `\n      width: ${size}; \n      height: 100%;\n    `;\n  }\n}\n\nfunction getPositionStyles(position, open, size) {\n  const opposite = {\n    top: 'bottom',\n    bottom: 'top',\n    left: 'right',\n    right: 'left'\n  };\n  const positionValue = {\n    top: '0',\n    bottom: '0',\n    left: '0',\n    right: '0'\n  };\n  positionValue[opposite[position]] = 'auto';\n\n  if (!open) {\n    const match = size.match(/^(\\d+)(.+?)$/);\n\n    if (match) {\n      positionValue[position] = `-${parseInt(match[1], undefined) / 2}${match[2]}`;\n    } else {\n      positionValue[position] = `-50%`;\n    }\n  }\n\n  return Object.keys(positionValue).map(positionName => `${positionName}: ${positionValue[positionName]}`).join(';') + ';';\n}","map":{"version":3,"sources":["../../../../src/components/Sidebar/SidebarContainer.part.tsx"],"names":[],"mappings":"AACA,OAAO,MAAP,MAAmB,oBAAnB;AAOA,OAAO,MAAM,gBAAgB,GAAG,MAAM,CAAC,GAAP,CAA6B,CAAC;AAAE,EAAA,IAAF;AAAQ,EAAA,QAAQ,GAAG,OAAnB;AAA4C,EAAA,IAAI,GAAG;AAAnD,CAAD,KAAiE;AAC1H,SAAO;;;;;;MAML,CAAC,IAAD,GACI;;;;SADJ,GAMI;;;;SAID;MACH,aAAa,CAAC,QAAD,EAAW,IAAX,CAAgB;MAC7B,iBAAiB,CAAC,QAAD,EAAW,IAAX,EAAiB,IAAjB,CAAsB;GAlBzC;AAoBH,CArB+B,CAAzB;;AAsBP,SAAS,aAAT,CAAuB,QAAvB,EAA+C,IAA/C,EAA2D;AACvD,MAAI,QAAQ,KAAK,KAAb,IAAsB,QAAQ,KAAK,QAAvC,EAAiD;AAC7C,WAAO;gBACC,IAAI;;KADZ;AAIH,GALD,MAMK;AACD,WAAO;eACA,IAAI;;KADX;AAIH;AACJ;;AACD,SAAS,iBAAT,CAA2B,QAA3B,EAAmD,IAAnD,EAAkE,IAAlE,EAA8E;AAC1E,QAAM,QAAQ,GAAG;AACb,IAAA,GAAG,EAAE,QADQ;AAEb,IAAA,MAAM,EAAE,KAFK;AAGb,IAAA,IAAI,EAAE,OAHO;AAIb,IAAA,KAAK,EAAE;AAJM,GAAjB;AAMA,QAAM,aAAa,GAAG;AAClB,IAAA,GAAG,EAAE,GADa;AAElB,IAAA,MAAM,EAAE,GAFU;AAGlB,IAAA,IAAI,EAAE,GAHY;AAIlB,IAAA,KAAK,EAAE;AAJW,GAAtB;AAMA,EAAA,aAAa,CAAC,QAAQ,CAAC,QAAD,CAAT,CAAb,GAAoC,MAApC;;AACA,MAAI,CAAC,IAAL,EAAW;AACP,UAAM,KAAK,GAAG,IAAI,CAAC,KAAL,CAAW,cAAX,CAAd;;AACA,QAAI,KAAJ,EAAW;AACP,MAAA,aAAa,CAAC,QAAD,CAAb,GAA0B,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAD,CAAN,EAAW,SAAX,CAAR,GAAgC,CAAC,GAAG,KAAK,CAAC,CAAD,CAAG,EAA1E;AACH,KAFD,MAGK;AACD,MAAA,aAAa,CAAC,QAAD,CAAb,GAA0B,MAA1B;AACH;AACJ;;AACD,SAAQ,MAAM,CAAC,IAAP,CAAY,aAAZ,EACH,GADG,CACC,YAAY,IAAI,GAAG,YAAY,KAAK,aAAa,CAAC,YAAD,CAAc,EADhE,EAEH,IAFG,CAEE,GAFF,IAES,GAFjB;AAGH","sourcesContent":["import * as React from 'react';\nimport styled from '../../utils/styled';\nimport { PositionType } from './SidebarPopup.types.part';\nexport interface SidebarContainer {\n    open: boolean;\n    position?: PositionType;\n    size?: string;\n}\nexport const SidebarContainer = styled.div<SidebarContainer>(({ open, position = 'right' as PositionType, size = '275px' }) => {\n    return `\n    transition: all 0.3s cubic-bezier(0, 0, 0.25, 1);\n    user-select: none;\n    position: fixed;\n    background-color: white;\n    z-index: 100001;\n    ${!open\n        ? `\n        visibility: hidden;\n        opacity: 0;\n        overflow: initial;\n        `\n        : `\n        visibility: visible;\n        opacity: 1;\n        overflow: auto;\n        `}\n    ${getSizeStyles(position, size)}\n    ${getPositionStyles(position, open, size)}\n  `;\n});\nfunction getSizeStyles(position: PositionType, size: string) {\n    if (position === 'top' || position === 'bottom') {\n        return `\n      height: ${size}; \n      width: 100%;\n    `;\n    }\n    else {\n        return `\n      width: ${size}; \n      height: 100%;\n    `;\n    }\n}\nfunction getPositionStyles(position: PositionType, open: boolean, size: string) {\n    const opposite = {\n        top: 'bottom',\n        bottom: 'top',\n        left: 'right',\n        right: 'left',\n    };\n    const positionValue = {\n        top: '0',\n        bottom: '0',\n        left: '0',\n        right: '0',\n    };\n    positionValue[opposite[position]] = 'auto';\n    if (!open) {\n        const match = size.match(/^(\\d+)(.+?)$/);\n        if (match) {\n            positionValue[position] = `-${parseInt(match[1], undefined) / 2}${match[2]}`;\n        }\n        else {\n            positionValue[position] = `-50%`;\n        }\n    }\n    return (Object.keys(positionValue)\n        .map(positionName => `${positionName}: ${positionValue[positionName]}`)\n        .join(';') + ';');\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}