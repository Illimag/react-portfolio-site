{"ast":null,"code":"import _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  padding-left: \", \";\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: \", \";\\n  display: flex;\\n  align-items: center;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: \", \";\\n  display: flex;\\n  align-items: center;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: \", \";\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: flex-start;\\n  min-height: 54px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  border-radius: 0;\\n  height: \", \";\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      width: 100%;\\n      max-width: 600px;\\n      margin: 0 auto;\\n      box-shadow: 0 2px 6px 0 rgba(75, 78, 82, 0.2);\\n      border: solid 1px \", \";\\n      background-color: \", \";\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport styled, { themed, css } from '../../utils/styled';\nimport { Icon } from '../Icon';\nimport { iconNames } from './helpers';\nimport { ActionIconContainer } from './ActionIconContainer.part';\nimport { ActionLink } from '../ActionLink';\nimport { ProgressBar } from '../ProgressBar';\nimport { StatusIcon } from './StatusIcon.part';\nimport { distance } from '../../distance';\nimport { getPropLabel } from '../../utils/labels';\nvar ProgressBarWrapper = styled.div(themed(function (_ref) {\n  var theme = _ref.theme;\n  return css(_templateObject(), theme.ui4, theme.text4);\n}));\nvar StyledProgressBar = styled(ProgressBar)(_templateObject2(), distance.xsmall);\nvar BarInfo = styled.div(_templateObject3());\nvar StatusBarGroup = styled.div(_templateObject4(), distance.small);\nvar StyledStatusBar = styled.div(_templateObject5(), distance.small);\nvar ActionGroup = styled.div(_templateObject6(), distance.medium);\nvar StatusLabel = styled.span(_templateObject7(), distance.medium);\n\nfunction StatusBar(_a) {\n  var status = _a.status,\n      count = _a.count,\n      iconName = _a.iconName,\n      title = _a.title,\n      props = __rest(_a, [\"status\", \"count\", \"iconName\", \"title\"]);\n\n  return React.createElement(StyledStatusBar, null, React.createElement(StatusIcon, {\n    name: iconName,\n    type: status\n  }), \"\".concat(count, \" \").concat(count > 1 ? getPropLabel(props, 'itemPluralLabel') : getPropLabel(props, 'itemSingularLabel')), React.createElement(StatusLabel, null, title));\n}\n\nexport var UploaderProgressBar = Object.assign(function (_a) {\n  var total = _a.total,\n      onClose = _a.onClose,\n      onShow = _a.onShow,\n      progressValue = _a.progressValue,\n      inProgress = _a.inProgress,\n      scanning = _a.scanning,\n      errors = _a.errors,\n      props = __rest(_a, [\"total\", \"onClose\", \"onShow\", \"progressValue\", \"inProgress\", \"scanning\", \"errors\"]);\n\n  var completed = progressValue >= 100;\n  return React.createElement(ProgressBarWrapper, null, React.createElement(BarInfo, null, React.createElement(StatusBarGroup, null, !completed || scanning ? inProgress > 0 && React.createElement(StatusBar, Object.assign({}, props, {\n    count: total,\n    iconName: iconNames.progress,\n    title: completed && scanning ? getPropLabel(props, 'uploadScanningLabel') : getPropLabel(props, 'uploadProgressLabel'),\n    status: completed && scanning ? 'scanning' : 'progress'\n  })) : React.createElement(React.Fragment, null, inProgress > 0 && React.createElement(StatusBar, Object.assign({}, props, {\n    count: inProgress,\n    iconName: iconNames.success,\n    title: getPropLabel(props, 'uploadSuccessLabel'),\n    status: \"success\"\n  })), errors > 0 && React.createElement(StatusBar, Object.assign({}, props, {\n    count: errors,\n    iconName: iconNames.error,\n    title: getPropLabel(props, 'uploadErrorLabel'),\n    status: \"error\"\n  })))), React.createElement(ActionGroup, null, React.createElement(ActionLink, {\n    onClick: onShow\n  }, getPropLabel(props, 'viewDetailsLabel')), completed && !scanning && React.createElement(ActionIconContainer, {\n    onClick: onClose\n  }, React.createElement(Icon, {\n    name: \"Close\"\n  })))), !completed && React.createElement(StyledProgressBar, {\n    value: progressValue,\n    animate: true\n  }));\n}, {\n  inner: {\n    get ProgressBarWrapper() {\n      return ProgressBarWrapper;\n    },\n\n    get BarInfo() {\n      return BarInfo;\n    },\n\n    get StatusBarGroup() {\n      return StatusBarGroup;\n    },\n\n    get StatusBar() {\n      return StatusBar;\n    },\n\n    get ActionGroup() {\n      return ActionGroup;\n    },\n\n    get ActionLink() {\n      return ActionLink;\n    },\n\n    get ActionIconContainer() {\n      return ActionIconContainer;\n    },\n\n    get Icon() {\n      return Icon;\n    },\n\n    get StyledProgressBar() {\n      return StyledProgressBar;\n    }\n\n  }\n});\nUploaderProgressBar.displayName = 'UploaderProgressBar';","map":{"version":3,"sources":["../../../../src/components/FileUploaderDetails/UploaderProgressBar.part.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled, { themed, css } from '../../utils/styled';\nimport { Icon, IconName } from '../Icon';\nimport { ProgressStatus } from './FileUploaderDetails.types.part';\nimport { iconNames } from './helpers';\nimport { ActionIconContainer } from './ActionIconContainer.part';\nimport { ActionLink } from '../ActionLink';\nimport { ProgressBar } from '../ProgressBar';\nimport { StatusIcon } from './StatusIcon.part';\nimport { distance } from '../../distance';\nimport { getPropLabel, UploaderProgressBarLabels, ComponentLabel } from '../../utils/labels';\nconst ProgressBarWrapper = styled.div(themed(({ theme }) => css `\n      width: 100%;\n      max-width: 600px;\n      margin: 0 auto;\n      box-shadow: 0 2px 6px 0 rgba(75, 78, 82, 0.2);\n      border: solid 1px ${theme.ui4};\n      background-color: ${theme.text4};\n    `));\nconst StyledProgressBar = styled(ProgressBar) `\n  border-radius: 0;\n  height: ${distance.xsmall};\n`;\nconst BarInfo = styled.div `\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  min-height: 54px;\n`;\nconst StatusBarGroup = styled.div `\n  padding: ${distance.small};\n`;\nconst StyledStatusBar = styled.div `\n  padding: ${distance.small};\n  display: flex;\n  align-items: center;\n`;\nconst ActionGroup = styled.div `\n  padding: ${distance.medium};\n  display: flex;\n  align-items: center;\n`;\nexport interface StatusBarProps {\n    status: ProgressStatus;\n    iconName: IconName;\n    count: number;\n    title: string;\n    itemPluralLabel?: ComponentLabel;\n    itemSingularLabel?: ComponentLabel;\n}\nconst StatusLabel = styled.span `\n  padding-left: ${distance.medium};\n`;\nfunction StatusBar({ status, count, iconName, title, ...props }: StatusBarProps) {\n    return (<StyledStatusBar>\n      <StatusIcon name={iconName} type={status}/>\n      {`${count} ${count > 1 ? getPropLabel(props, 'itemPluralLabel') : getPropLabel(props, 'itemSingularLabel')}`}\n      <StatusLabel>{title}</StatusLabel>\n    </StyledStatusBar>);\n}\nexport interface UploaderProgressBarProps extends UploaderProgressBarLabels {\n    /**\n     * The total progress from 0 to 100.\n     */\n    progressValue: number;\n    /**\n     * Determines if scanning is currently in progress.\n     */\n    scanning: boolean;\n    /**\n     * Event emitted when the status should be closed fully.\n     */\n    onClose(): void;\n    /**\n     * Event emitted when details should be shown.\n     */\n    onShow(): void;\n    /**\n     * Total number of files that are being uploaded.\n     */\n    total: number;\n    /**\n     * Number of files that are currently in progress.\n     */\n    inProgress: number;\n    /**\n     * Number of files that have failed.\n     */\n    errors: number;\n}\nexport const UploaderProgressBar = Object.assign(((({ total, onClose, onShow, progressValue, inProgress, scanning, errors, ...props }) => {\n    const completed = progressValue >= 100;\n    return (<ProgressBarWrapper>\n      <BarInfo>\n        <StatusBarGroup>\n          {!completed || scanning ? (inProgress > 0 && (<StatusBar {...props} count={total} iconName={iconNames.progress} title={completed && scanning\n        ? getPropLabel(props, 'uploadScanningLabel')\n        : getPropLabel(props, 'uploadProgressLabel')} status={completed && scanning ? 'scanning' : 'progress'}/>)) : (<>\n              {inProgress > 0 && (<StatusBar {...props} count={inProgress} iconName={iconNames.success} title={getPropLabel(props, 'uploadSuccessLabel')} status=\"success\"/>)}\n              {errors > 0 && (<StatusBar {...props} count={errors} iconName={iconNames.error} title={getPropLabel(props, 'uploadErrorLabel')} status=\"error\"/>)}\n            </>)}\n        </StatusBarGroup>\n        <ActionGroup>\n          <ActionLink onClick={onShow}>{getPropLabel(props, 'viewDetailsLabel')}</ActionLink>\n          {completed && !scanning && (<ActionIconContainer onClick={onClose}>\n              <Icon name=\"Close\"/>\n            </ActionIconContainer>)}\n        </ActionGroup>\n      </BarInfo>\n      {!completed && <StyledProgressBar value={progressValue} animate/>}\n    </ProgressBarWrapper>);\n}) as React.SFC<UploaderProgressBarProps>), { inner: {\n        get ProgressBarWrapper() { return ProgressBarWrapper as typeof ProgressBarWrapper; },\n        get BarInfo() { return BarInfo as typeof BarInfo; },\n        get StatusBarGroup() { return StatusBarGroup as typeof StatusBarGroup; },\n        get StatusBar() { return StatusBar as typeof StatusBar; },\n        get ActionGroup() { return ActionGroup as typeof ActionGroup; },\n        get ActionLink() { return ActionLink as typeof ActionLink; },\n        get ActionIconContainer() { return ActionIconContainer as typeof ActionIconContainer; },\n        get Icon() { return Icon as typeof Icon; },\n        get StyledProgressBar() { return StyledProgressBar as typeof StyledProgressBar; }\n    } });\nUploaderProgressBar.displayName = 'UploaderProgressBar';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}