{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport styled, { themed } from '../../utils/styled';\nvar StyledAccordionTableRow = styled.tr(themed(function (_ref) {\n  var active = _ref.active,\n      clickable = _ref.clickable,\n      _ref$theme = _ref.theme,\n      ui1 = _ref$theme.ui1,\n      ui2 = _ref$theme.ui2,\n      ui3 = _ref$theme.ui3,\n      ui4 = _ref$theme.ui4,\n      ui5 = _ref$theme.ui5,\n      text1 = _ref$theme.text1;\n  return \"\\n    background: \".concat(active ? ui2 : ui1, \";\\n    border: \").concat(active ? \"1px solid \".concat(ui5) : 'none', \";\\n    cursor: \").concat(clickable ? 'pointer' : 'default', \";\\n    border-bottom: 1px solid \").concat(ui4, \";\\n    color: \").concat(text1, \";\\n\\n    &:hover {\\n      background: \").concat(ui3, \";\\n    }\\n\\n    &:nth-last-child(2) {\\n      \").concat(active ? '' : 'border-bottom: none', \";\\n    }\\n\\n    > td {\\n      border-top: \").concat(active ? \"1px solid \".concat(ui5) : 'none', \";\\n    }\\n  \");\n}));\nexport var AccordionTableRow = Object.assign(function (_a) {\n  var _a$active = _a.active,\n      active = _a$active === void 0 ? false : _a$active,\n      _a$clickable = _a.clickable,\n      clickable = _a$clickable === void 0 ? true : _a$clickable,\n      children = _a.children,\n      onClick = _a.onClick,\n      props = __rest(_a, [\"active\", \"clickable\", \"children\", \"onClick\"]);\n\n  var handleClick = typeof onClick === 'function' && clickable ? onClick : undefined;\n  return React.createElement(StyledAccordionTableRow, Object.assign({\n    onClick: handleClick,\n    active: active,\n    clickable: clickable\n  }, props), children);\n}, {\n  inner: {\n    get StyledAccordionTableRow() {\n      return StyledAccordionTableRow;\n    }\n\n  }\n});","map":{"version":3,"sources":["../../../../src/components/AccordionTableRow/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,OAAO,MAAP,IAAiB,MAAjB,QAA+B,oBAA/B;AAgBA,IAAM,uBAAuB,GAAG,MAAM,CAAC,EAAP,CAAkC,MAAM,CAAC;AAAA,MAAG,MAAH,QAAG,MAAH;AAAA,MAAW,SAAX,QAAW,SAAX;AAAA,wBAAsB,KAAtB;AAAA,MAA+B,GAA/B,cAA+B,GAA/B;AAAA,MAAoC,GAApC,cAAoC,GAApC;AAAA,MAAyC,GAAzC,cAAyC,GAAzC;AAAA,MAA8C,GAA9C,cAA8C,GAA9C;AAAA,MAAmD,GAAnD,cAAmD,GAAnD;AAAA,MAAwD,KAAxD,cAAwD,KAAxD;AAAA,qCACvD,MAAM,GAAG,GAAH,GAAS,GADwC,4BAE3D,MAAM,uBAAgB,GAAhB,IAAwB,MAF6B,4BAG3D,SAAS,GAAG,SAAH,GAAe,SAHmC,6CAI1C,GAJ0C,2BAK5D,KAL4D,mDAQrD,GARqD,0DAYjE,MAAM,GAAG,EAAH,GAAQ,qBAZmD,uDAgBrD,MAAM,uBAAgB,GAAhB,IAAwB,MAhBuB;AAAA,CAAD,CAAxC,CAAhC;AAmBA,OAAO,IAAM,iBAAiB,GAAG,MAAM,CAAC,MAAP,CAAgB,UAAC,EAAD,EAAsE;AAAA,kBAAhB,EAAgB,CAAnE,MAAmE;AAAA,MAAnE,MAAmE,0BAA1D,KAA0D;AAAA,qBAAhB,EAAgB,CAAnD,SAAmD;AAAA,MAAnD,SAAmD,6BAAvC,IAAuC;AAAA,MAAjC,QAAiC,GAAhB,EAAgB,CAAjC,QAAiC;AAAA,MAAvB,OAAuB,GAAhB,EAAgB,CAAvB,OAAuB;AAAA,MAAd,KAAc,GAAd,MAAA,CAAA,EAAA,EAAA,CAAA,QAAA,EAAA,WAAA,EAAA,UAAA,EAAA,SAAA,CAAA,CAAc;;AACnH,MAAM,WAAW,GAAG,OAAO,OAAP,KAAmB,UAAnB,IAAiC,SAAjC,GAA6C,OAA7C,GAAuD,SAA3E;AACA,SAAQ,KAAA,CAAA,aAAA,CAAC,uBAAD,EAAwB,MAAA,CAAA,MAAA,CAAA;AAAC,IAAA,OAAO,EAAE,WAAV;AAAuB,IAAA,MAAM,EAAE,MAA/B;AAAuC,IAAA,SAAS,EAAE;AAAlD,GAAA,EAAiE,KAAjE,CAAxB,EACL,QADK,CAAR;AAGH,CALgC,EAKS;AAAE,EAAA,KAAK,EAAE;AAC3C,QAAI,uBAAJ,GAA2B;AAAK,aAAO,uBAAP;AAAmE;;AADxD;AAAT,CALT,CAA1B","sourcesContent":["import * as React from 'react';\nimport { StandardProps } from '../../common';\nimport styled, { themed } from '../../utils/styled';\nexport interface AccordionTableRowProps extends StandardProps {\n    /**\n     * Displays `AccordionRow` in the active state.\n     */\n    active?: boolean;\n    /**\n     * Triggers `click` event only if `true`.\n     * By default set to `true`.\n     */\n    clickable?: boolean;\n    /**\n     * The event which will be fired when row is clicked.\n     */\n    onClick?(e: React.MouseEvent): void;\n}\nconst StyledAccordionTableRow = styled.tr<AccordionTableRowProps>(themed(({ active, clickable, theme: { ui1, ui2, ui3, ui4, ui5, text1 } }) => `\n    background: ${active ? ui2 : ui1};\n    border: ${active ? `1px solid ${ui5}` : 'none'};\n    cursor: ${clickable ? 'pointer' : 'default'};\n    border-bottom: 1px solid ${ui4};\n    color: ${text1};\n\n    &:hover {\n      background: ${ui3};\n    }\n\n    &:nth-last-child(2) {\n      ${active ? '' : 'border-bottom: none'};\n    }\n\n    > td {\n      border-top: ${active ? `1px solid ${ui5}` : 'none'};\n    }\n  `));\nexport const AccordionTableRow = Object.assign(((({ active = false, clickable = true, children, onClick, ...props }) => {\n    const handleClick = typeof onClick === 'function' && clickable ? onClick : undefined;\n    return (<StyledAccordionTableRow onClick={handleClick} active={active} clickable={clickable} {...props}>\n      {children}\n    </StyledAccordionTableRow>);\n}) as React.SFC<AccordionTableRowProps>), { inner: {\n        get StyledAccordionTableRow() { return StyledAccordionTableRow as typeof StyledAccordionTableRow; }\n    } });\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}