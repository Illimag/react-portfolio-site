{"ast":null,"code":"import _classCallCheck from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  margin-left: auto;\\n  align-items: center;\\n  height: 40px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport styled from '../../utils/styled';\nimport { setLabels, getPropLabel } from '../../utils/labels';\nimport { ItemControls } from './ItemControlsView.part';\nimport { PageControls } from './PageControls.part';\nsetLabels({\n  itemsPerPageLabel: 'Items per page:'\n});\n\nfunction defaultItemsInfo(start, end, total) {\n  return \"\".concat(start, \" - \").concat(end, \" of \").concat(total);\n}\n\nfunction defaultPagesInfo(start, end) {\n  return \"\".concat(start, \" of \").concat(end, \" pages\");\n}\n\nfunction getPages(itemsPerPage, total) {\n  var l = Math.ceil(total / itemsPerPage);\n  var pages = [];\n\n  for (var i = 1; i <= l; i++) {\n    pages.push(i.toString());\n  }\n\n  return pages;\n}\n\nvar ControlsContainer = styled.div(_templateObject());\nexport var PaginationBar = /*#__PURE__*/function (_React$Component) {\n  _inherits(PaginationBar, _React$Component);\n\n  var _super = _createSuper(PaginationBar);\n\n  function PaginationBar() {\n    var _this;\n\n    _classCallCheck(this, PaginationBar);\n\n    _this = _super.apply(this, arguments);\n\n    _this.sizeChanged = function (e) {\n      var _this$props = _this.props,\n          onSizeChanged = _this$props.onSizeChanged,\n          availableSizes = _this$props.availableSizes;\n\n      if (Array.isArray(availableSizes) && typeof onSizeChanged === 'function') {\n        onSizeChanged({\n          size: availableSizes[e.index]\n        });\n      }\n    };\n\n    _this.changeToPrevious = function () {\n      var selectedPage = _this.props.selectedPage;\n\n      _this.changeTo(selectedPage - 1);\n    };\n\n    _this.changeToNext = function () {\n      var selectedPage = _this.props.selectedPage;\n\n      _this.changeTo(selectedPage + 1);\n    };\n\n    _this.changeToSelect = function (_ref) {\n      var index = _ref.index;\n\n      _this.changeTo(index);\n    };\n\n    return _this;\n  }\n\n  _createClass(PaginationBar, [{\n    key: \"changeTo\",\n    value: function changeTo(page) {\n      var onPageChanged = this.props.onPageChanged;\n\n      if (page < 0) {\n        page = 0;\n      }\n\n      if (typeof onPageChanged === 'function') {\n        onPageChanged({\n          page: page\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          availableSizes = _a.availableSizes,\n          size = _a.size,\n          selectedPage = _a.selectedPage,\n          _a$pagesInfo = _a.pagesInfo,\n          pagesInfo = _a$pagesInfo === void 0 ? defaultPagesInfo : _a$pagesInfo,\n          _a$itemsInfo = _a.itemsInfo,\n          itemsInfo = _a$itemsInfo === void 0 ? defaultItemsInfo : _a$itemsInfo,\n          items = _a.items,\n          onSizeChanged = _a.onSizeChanged,\n          onPageChanged = _a.onPageChanged,\n          props = __rest(_a, [\"availableSizes\", \"size\", \"selectedPage\", \"pagesInfo\", \"itemsInfo\", \"items\", \"onSizeChanged\", \"onPageChanged\"]);\n\n      var pages = getPages(size, items);\n      var currentItem = selectedPage * size;\n      var nextItem = currentItem + size;\n      return React.createElement(ControlsContainer, null, Array.isArray(availableSizes) && availableSizes.length > 0 && React.createElement(ItemControls, {\n        label: getPropLabel(props, 'itemsPerPageLabel'),\n        data: availableSizes.map(function (size) {\n          return size.toString();\n        }),\n        value: \"\".concat(size),\n        onChange: this.sizeChanged\n      }, itemsInfo(currentItem, Math.min(nextItem, items), items)), React.createElement(PageControls, {\n        current: selectedPage,\n        total: pages.length,\n        changeToPrevious: this.changeToPrevious,\n        changeToNext: this.changeToNext,\n        changeToSelect: this.changeToSelect,\n        pages: pages\n      }, pagesInfo(selectedPage + 1, Math.max(pages.length, 1))));\n    }\n  }]);\n\n  return PaginationBar;\n}(React.Component);\nPaginationBar.inner = {\n  get ControlsContainer() {\n    return ControlsContainer;\n  },\n\n  get ItemControls() {\n    return ItemControls;\n  },\n\n  get PageControls() {\n    return PageControls;\n  }\n\n};","map":{"version":3,"sources":["../../../../src/components/PaginationBar/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from '../../utils/styled';\nimport { setLabels, getPropLabel, PaginationBarLabels } from '../../utils/labels';\nimport { ItemControls } from './ItemControlsView.part';\nimport { PageControls } from './PageControls.part';\nimport { SelectButtonChangeEvent } from '../SelectButton';\nsetLabels({\n    itemsPerPageLabel: 'Items per page:',\n});\nfunction defaultItemsInfo(start: number, end: number, total: number) {\n    return `${start} - ${end} of ${total}`;\n}\nfunction defaultPagesInfo(start: number, end: number) {\n    return `${start} of ${end} pages`;\n}\nfunction getPages(itemsPerPage: number, total: number) {\n    const l = Math.ceil(total / itemsPerPage);\n    const pages: Array<string> = [];\n    for (let i = 1; i <= l; i++) {\n        pages.push(i.toString());\n    }\n    return pages;\n}\nconst ControlsContainer = styled.div `\n  display: flex;\n  justify-content: space-between;\n  margin-left: auto;\n  align-items: center;\n  height: 40px;\n`;\nexport interface PaginationBarSizeChangedEvent {\n    size: number;\n}\nexport interface PaginationBarPageChangedEvent {\n    page: number;\n}\nexport interface PaginationBarProps extends PaginationBarLabels {\n    /**\n     * The available maximum numbers of entries per page to choose from, if any.\n     */\n    availableSizes?: Array<number>;\n    /**\n     * The currently active page.\n     */\n    selectedPage: number;\n    /**\n     * The maximum number of entries per page.\n     */\n    size: number;\n    /**\n     * The total number of entries.\n     */\n    items: number;\n    /**\n     * Pages info label generator.\n     * @default '{start} of {end} pages'\n     */\n    pagesInfo?(start: number, end: number): React.ReactChild;\n    /**\n     * Items info label generator.\n     * @default '{start} - {end} of {total}'\n     */\n    itemsInfo?(start: number, end: number, total: number): React.ReactChild;\n    /**\n     * Event fired when the size per page has been changed.\n     */\n    onSizeChanged?(e: PaginationBarSizeChangedEvent): void;\n    /**\n     * Event fired when the selected page has been changed.\n     */\n    onPageChanged?(e: PaginationBarPageChangedEvent): void;\n}\nexport class PaginationBar extends React.Component<PaginationBarProps> {\n    private sizeChanged = (e: SelectButtonChangeEvent) => {\n        const { onSizeChanged, availableSizes } = this.props;\n        if (Array.isArray(availableSizes) && typeof onSizeChanged === 'function') {\n            onSizeChanged({\n                size: availableSizes[e.index],\n            });\n        }\n    };\n    private changeToPrevious = () => {\n        const { selectedPage } = this.props;\n        this.changeTo(selectedPage - 1);\n    };\n    private changeToNext = () => {\n        const { selectedPage } = this.props;\n        this.changeTo(selectedPage + 1);\n    };\n    private changeToSelect = ({ index }: SelectButtonChangeEvent) => {\n        this.changeTo(index);\n    };\n    private changeTo(page: number) {\n        const { onPageChanged } = this.props;\n        if (page < 0) {\n            page = 0;\n        }\n        if (typeof onPageChanged === 'function') {\n            onPageChanged({\n                page,\n            });\n        }\n    }\n    render() {\n        const { availableSizes, size, selectedPage, pagesInfo = defaultPagesInfo, itemsInfo = defaultItemsInfo, items, onSizeChanged, onPageChanged, ...props } = this.props;\n        const pages = getPages(size, items);\n        const currentItem = selectedPage * size;\n        const nextItem = currentItem + size;\n        return (<ControlsContainer>\n        {Array.isArray(availableSizes) && availableSizes.length > 0 && (<ItemControls label={getPropLabel(props, 'itemsPerPageLabel')} data={availableSizes.map(size => size.toString())} value={`${size}`} onChange={this.sizeChanged}>\n            {itemsInfo(currentItem, Math.min(nextItem, items), items)}\n          </ItemControls>)}\n        <PageControls current={selectedPage} total={pages.length} changeToPrevious={this.changeToPrevious} changeToNext={this.changeToNext} changeToSelect={this.changeToSelect} pages={pages}>\n          {pagesInfo(selectedPage + 1, Math.max(pages.length, 1))}\n        </PageControls>\n      </ControlsContainer>);\n    }\n    static inner = {\n        get ControlsContainer() { return ControlsContainer as typeof ControlsContainer; },\n        get ItemControls() { return ItemControls as typeof ItemControls; },\n        get PageControls() { return PageControls as typeof PageControls; }\n    };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}