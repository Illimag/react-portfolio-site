{"ast":null,"code":"import * as React from 'react';\nimport styled, { css } from '../../utils/styled';\nimport { distance } from '../../distance';\nconst StyledContainer = styled('div')(({\n  top,\n  left,\n  bottom,\n  right,\n  gutter\n}) => css`\n    ${top ? `padding-top: ${distance[top]};` : ''}\n    ${left ? `padding-left: ${distance[left]};` : ''}\n    ${bottom ? `padding-bottom: ${distance[bottom]};` : ''}\n    ${right ? `padding-right: ${distance[right]};` : ''}\n    ${gutter ? `padding: ${distance[gutter]};` : ''}\n  `);\nexport const PaddedContainer = Object.assign(props => {\n  return React.createElement(StyledContainer, Object.assign({}, props));\n}, {\n  inner: {\n    get StyledContainer() {\n      return StyledContainer;\n    }\n\n  }\n});","map":{"version":3,"sources":["../../../../src/components/PaddedContainer/index.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,IAAiB,GAAjB,QAA4B,oBAA5B;AACA,SAAS,QAAT,QAAyB,gBAAzB;AA4BA,MAAM,eAAe,GAAG,MAAM,CAAC,KAAD,CAAN,CAAoC,CAAC;AAAE,EAAA,GAAF;AAAO,EAAA,IAAP;AAAa,EAAA,MAAb;AAAqB,EAAA,KAArB;AAA4B,EAAA;AAA5B,CAAD,KAA0C,GAAI;MACpG,GAAG,GAAG,gBAAgB,QAAQ,CAAC,GAAD,CAAK,GAAhC,GAAsC,EAAE;MAC3C,IAAI,GAAG,iBAAiB,QAAQ,CAAC,IAAD,CAAM,GAAlC,GAAwC,EAAE;MAC9C,MAAM,GAAG,mBAAmB,QAAQ,CAAC,MAAD,CAAQ,GAAtC,GAA4C,EAAE;MACpD,KAAK,GAAG,kBAAkB,QAAQ,CAAC,KAAD,CAAO,GAApC,GAA0C,EAAE;MACjD,MAAM,GAAG,YAAY,QAAQ,CAAC,MAAD,CAAQ,GAA/B,GAAqC,EAAE;GAL3B,CAAxB;AAOA,OAAO,MAAM,eAAe,GAAG,MAAM,CAAC,MAAP,CAAgB,KAAK,IAAG;AACnD,SAAO,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,CAAhB,CAAP;AACH,CAF8B,EAEQ;AAAE,EAAA,KAAK,EAAE;AACxC,QAAI,eAAJ,GAAmB;AAAK,aAAO,eAAP;AAAmD;;AADnC;AAAT,CAFR,CAAxB","sourcesContent":["import * as React from 'react';\nimport styled, { css } from '../../utils/styled';\nimport { distance } from '../../distance';\nexport interface PaddedContainerProps {\n    /**\n     * Padding on top. Valid values: xxsmall, xsmall, small, medium, large, xlarge, xxlarge, xxxlarge.\n     */\n    top?: keyof typeof distance;\n    /**\n     * Padding on left. Valid values: xxsmall, xsmall, small, medium, large, xlarge, xxlarge, xxxlarge.\n     */\n    left?: keyof typeof distance;\n    /**\n     * Padding on bottom. Valid values: xxsmall, xsmall, small, medium, large, xlarge, xxlarge, xxxlarge.\n     */\n    bottom?: keyof typeof distance;\n    /**\n     * Padding on right. Valid values: xxsmall, xsmall, small, medium, large, xlarge, xxlarge, xxxlarge.\n     */\n    right?: keyof typeof distance;\n    /**\n     * Padding around the content. Valid values: xxsmall, xsmall, small, medium, large, xlarge, xxlarge, xxxlarge.\n     */\n    gutter?: keyof typeof distance;\n    /**\n     * Allows to change the container element.\n     * @default 'div'\n     */\n    as?: keyof JSX.IntrinsicElements;\n}\nconst StyledContainer = styled('div')<PaddedContainerProps>(({ top, left, bottom, right, gutter }) => css `\n    ${top ? `padding-top: ${distance[top]};` : ''}\n    ${left ? `padding-left: ${distance[left]};` : ''}\n    ${bottom ? `padding-bottom: ${distance[bottom]};` : ''}\n    ${right ? `padding-right: ${distance[right]};` : ''}\n    ${gutter ? `padding: ${distance[gutter]};` : ''}\n  `);\nexport const PaddedContainer = Object.assign(((props => {\n    return <StyledContainer {...props}/>;\n}) as React.FC<PaddedContainerProps>), { inner: {\n        get StyledContainer() { return StyledContainer as typeof StyledContainer; }\n    } });\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}