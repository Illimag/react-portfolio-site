{"ast":null,"code":"import { TableInt } from './TableInt.part';\nimport { withResponsiveMode } from '../../hoc/withResponsiveMode';\nimport { breakpoints } from '../../themes';\n/**\n * The table component shows a set of data in a tabular view. The data must be an array of JS objects,\n * where the shape of the objects has no constraints other than it must be same for each element of the\n * array.\n */\n\nexport const Table = withResponsiveMode(width => !width || width > breakpoints.medium ? 'table' : 'card')(TableInt);","map":{"version":3,"sources":["../../../../src/components/Table/index.tsx"],"names":[],"mappings":"AACA,SAAS,QAAT,QAAyB,iBAAzB;AAEA,SAAS,kBAAT,QAAmC,8BAAnC;AACA,SAAS,WAAT,QAA4B,cAA5B;AAOA;;;;;;AAKA,OAAO,MAAM,KAAK,GAAc,kBAAkB,CAAY,KAAK,IAAI,CAAC,KAAD,IAAU,KAAK,GAAG,WAAW,CAAC,MAA9B,GAAuC,OAAvC,GAAiD,MAAtE,CAAlB,CAAgG,QAAhG,CAAzB","sourcesContent":["import * as React from 'react';\nimport { TableInt } from './TableInt.part';\nimport { TableProps, TableMode } from './Table.types.part';\nimport { withResponsiveMode } from '../../hoc/withResponsiveMode';\nimport { breakpoints } from '../../themes';\nexport { TableMode, TableCellEvent, TableSortEvent, TableRowEvent, TableBodyRenderEvent, TableCardRendererEvent, TableProps, } from './Table.types.part';\nexport interface TableType extends React.SFC<TableProps<any>> {\n    <T = {}>(props: TableProps<T> & {\n        children?: React.ReactNode;\n    }, context?: any): JSX.Element;\n}\n/**\n * The table component shows a set of data in a tabular view. The data must be an array of JS objects,\n * where the shape of the objects has no constraints other than it must be same for each element of the\n * array.\n */\nexport const Table: TableType = withResponsiveMode<TableMode>(width => !width || width > breakpoints.medium ? 'table' : 'card')(TableInt) as any;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}