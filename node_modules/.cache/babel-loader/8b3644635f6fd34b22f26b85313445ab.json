{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport * as React from 'react';\nimport styled, { themed } from '../../utils/styled';\nimport { ListItemNumber } from './StepIndicatorShared.part';\nimport { distance } from '../../distance';\nimport { getFontStyle } from '../../textStyles';\nconst StyledProgressHost = styled.ol`\n  width: 100%;\n  display: table;\n  table-layout: fixed;\n  padding: 0;\n  margin: 0;\n  height: 4em;\n  box-sizing: border-box;\n  padding-left: ${distance.medium};\n`;\nconst HorizontalNumber = styled(ListItemNumber)`\n  top: ${distance.small};\n  left: -12px;\n`;\nconst StyledProgressStep = styled.li`\n  display: table-cell;\n  text-align: center;\n  vertical-align: top;\n  position: relative;\n  color: ${themed(({\n  theme\n}) => theme.text1)};\n\n  &:before {\n    content: '';\n    display: block;\n    border-radius: 50%;\n    margin: 1em auto;\n    width: ${distance.small};\n    height: ${distance.small};\n    position: relative;\n    left: -50%;\n    z-index: 1;\n    background-color: ${themed(({\n  theme\n}) => theme.text1)};\n  }\n\n  &:not(:first-child):after {\n    content: '';\n    position: absolute;\n    top: 19px;\n    left: -100%;\n    width: 100%;\n    height: 2px;\n    background-color: ${themed(({\n  theme\n}) => theme.text1)};\n  }\n\n  &.step-active {\n    ${getFontStyle({\n  weight: 'medium'\n})}\n    \n    color: ${themed(({\n  theme\n}) => theme.text1)};\n\n    ~ li {\n      color: ${themed(({\n  theme\n}) => theme.text2)};\n\n      &:before {\n        background-color: ${themed(({\n  theme\n}) => theme.text2)};\n      }\n\n      &:after {\n        background-color: ${themed(({\n  theme\n}) => theme.text2)};\n      }\n    }\n\n    &:before {\n      background-color: ${themed(({\n  theme\n}) => theme.ui1)};\n      border: 0.5em solid ${themed(({\n  theme\n}) => theme.text1)};\n      margin: 0.5em auto;\n    }\n  }\n`;\nconst StyledProgressText = styled.div`\n  display: inline-block;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  position: absolute;\n  left: 0;\n  top: 2.5em;\n`;\n\nfunction createStep(header, i, active, numbered, theme) {\n  return React.createElement(StyledProgressStep, {\n    theme: theme,\n    key: i,\n    className: active ? 'step-active' : ''\n  }, numbered && React.createElement(HorizontalNumber, {\n    theme: theme\n  }, i + 1), React.createElement(StyledProgressText, {\n    theme: theme\n  }, header));\n}\n\nfunction getHeaders(steps, current, numbered, theme) {\n  const items = steps.map((step, i) => createStep(step, i, i === current, numbered, theme));\n  return {\n    items,\n    content: undefined\n  };\n}\n\nfunction getContent(children, current, numbered, theme) {\n  const items = [];\n  let content = undefined;\n  React.Children.forEach(children, (element, i) => {\n    if (element && React.isValidElement(element)) {\n      const {\n        header,\n        children\n      } = element.props;\n      const active = i === current;\n      items.push(createStep(header, i, active, numbered, theme));\n\n      if (active) {\n        content = children;\n      }\n    }\n  });\n  return {\n    items,\n    content\n  };\n}\n\nexport const StepIndicatorHorizontal = Object.assign(_a => {\n  var {\n    theme,\n    steps,\n    current = 0,\n    numbered,\n    children\n  } = _a,\n      props = __rest(_a, [\"theme\", \"steps\", \"current\", \"numbered\", \"children\"]);\n\n  const {\n    items,\n    content\n  } = steps !== undefined ? getHeaders(steps, current, numbered, theme) : getContent(children, current, numbered, theme);\n  return React.createElement(\"div\", Object.assign({}, props), React.createElement(StyledProgressHost, {\n    theme: theme\n  }, items), content);\n}, {\n  inner: {\n    get StyledProgressHost() {\n      return StyledProgressHost;\n    }\n\n  }\n});","map":{"version":3,"sources":["../../../../src/components/StepIndicator/StepIndicatorHorizontal.part.tsx"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,IAAiB,MAAjB,QAA+B,oBAA/B;AAEA,SAAS,cAAT,QAA+B,4BAA/B;AAEA,SAAS,QAAT,QAAyB,gBAAzB;AACA,SAAS,YAAT,QAA6B,kBAA7B;AACA,MAAM,kBAAkB,GAAG,MAAM,CAAC,EAAG;;;;;;;;kBAQnB,QAAQ,CAAC,MAAM;CARjC;AAUA,MAAM,gBAAgB,GAAG,MAAM,CAAC,cAAD,CAAiB;SACvC,QAAQ,CAAC,KAAK;;CADvB;AAIA,MAAM,kBAAkB,GAAG,MAAM,CAAC,EAAG;;;;;WAK1B,MAAM,CAAC,CAAC;AAAE,EAAA;AAAF,CAAD,KAAe,KAAK,CAAC,KAAtB,CAA4B;;;;;;;aAOhC,QAAQ,CAAC,KAAK;cACb,QAAQ,CAAC,KAAK;;;;wBAIJ,MAAM,CAAC,CAAC;AAAE,EAAA;AAAF,CAAD,KAAe,KAAK,CAAC,KAAtB,CAA4B;;;;;;;;;;wBAUlC,MAAM,CAAC,CAAC;AAAE,EAAA;AAAF,CAAD,KAAe,KAAK,CAAC,KAAtB,CAA4B;;;;MAIpD,YAAY,CAAC;AAAE,EAAA,MAAM,EAAE;AAAV,CAAD,CAAsB;;aAE3B,MAAM,CAAC,CAAC;AAAE,EAAA;AAAF,CAAD,KAAe,KAAK,CAAC,KAAtB,CAA4B;;;eAGhC,MAAM,CAAC,CAAC;AAAE,EAAA;AAAF,CAAD,KAAe,KAAK,CAAC,KAAtB,CAA4B;;;4BAGrB,MAAM,CAAC,CAAC;AAAE,EAAA;AAAF,CAAD,KAAe,KAAK,CAAC,KAAtB,CAA4B;;;;4BAIlC,MAAM,CAAC,CAAC;AAAE,EAAA;AAAF,CAAD,KAAe,KAAK,CAAC,KAAtB,CAA4B;;;;;0BAKpC,MAAM,CAAC,CAAC;AAAE,EAAA;AAAF,CAAD,KAAe,KAAK,CAAC,GAAtB,CAA0B;4BAC9B,MAAM,CAAC,CAAC;AAAE,EAAA;AAAF,CAAD,KAAe,KAAK,CAAC,KAAtB,CAA4B;;;;CAjD9D;AAsDA,MAAM,kBAAkB,GAAG,MAAM,CAAC,GAAI;;;;;;;;CAAtC;;AASA,SAAS,UAAT,CAAoB,MAApB,EAA6C,CAA7C,EAAwD,MAAxD,EAAyE,QAAzE,EAA6F,KAA7F,EAAiH;AAC7G,SAAQ,KAAA,CAAA,aAAA,CAAC,kBAAD,EAAmB;AAAC,IAAA,KAAK,EAAE,KAAR;AAAe,IAAA,GAAG,EAAE,CAApB;AAAuB,IAAA,SAAS,EAAE,MAAM,GAAG,aAAH,GAAmB;AAA3D,GAAnB,EACL,QAAQ,IAAI,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAiB;AAAC,IAAA,KAAK,EAAE;AAAR,GAAjB,EAAiC,CAAC,GAAG,CAArC,CADP,EAEN,KAAA,CAAA,aAAA,CAAC,kBAAD,EAAmB;AAAC,IAAA,KAAK,EAAE;AAAR,GAAnB,EAAmC,MAAnC,CAFM,CAAR;AAIH;;AACD,SAAS,UAAT,CAAoB,KAApB,EAAmD,OAAnD,EAAoE,QAApE,EAAwF,KAAxF,EAA4G;AACxG,QAAM,KAAK,GAAG,KAAK,CAAC,GAAN,CAAU,CAAC,IAAD,EAAO,CAAP,KAAa,UAAU,CAAC,IAAD,EAAO,CAAP,EAAU,CAAC,KAAK,OAAhB,EAAyB,QAAzB,EAAmC,KAAnC,CAAjC,CAAd;AACA,SAAO;AACH,IAAA,KADG;AAEH,IAAA,OAAO,EAAE;AAFN,GAAP;AAIH;;AACD,SAAS,UAAT,CAAoB,QAApB,EAA+C,OAA/C,EAAgE,QAAhE,EAAoF,KAApF,EAAwG;AACpG,QAAM,KAAK,GAA4B,EAAvC;AACA,MAAI,OAAO,GAAoB,SAA/B;AACA,EAAA,KAAK,CAAC,QAAN,CAAe,OAAf,CAAuB,QAAvB,EAAiC,CAAC,OAAD,EAAsD,CAAtD,KAA2D;AACxF,QAAI,OAAO,IAAI,KAAK,CAAC,cAAN,CAAqB,OAArB,CAAf,EAA8C;AAC1C,YAAM;AAAE,QAAA,MAAF;AAAU,QAAA;AAAV,UAAuB,OAAO,CAAC,KAArC;AACA,YAAM,MAAM,GAAG,CAAC,KAAK,OAArB;AACA,MAAA,KAAK,CAAC,IAAN,CAAW,UAAU,CAAC,MAAD,EAAS,CAAT,EAAY,MAAZ,EAAoB,QAApB,EAA8B,KAA9B,CAArB;;AACA,UAAI,MAAJ,EAAY;AACR,QAAA,OAAO,GAAG,QAAV;AACH;AACJ;AACJ,GATD;AAUA,SAAO;AACH,IAAA,KADG;AAEH,IAAA;AAFG,GAAP;AAIH;;AACD,OAAO,MAAM,uBAAuB,GAAG,MAAM,CAAC,MAAP,CAAiB,EAAD,IAAgE;MAA/D;AAAE,IAAA,KAAF;AAAS,IAAA,KAAT;AAAgB,IAAA,OAAO,GAAG,CAA1B;AAA6B,IAAA,QAA7B;AAAuC,IAAA;AAAvC,MAA+C,E;MAAE,KAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,SAAA,EAAA,UAAA,EAAA,UAAA,CAAA,C;;AACrG,QAAM;AAAE,IAAA,KAAF;AAAS,IAAA;AAAT,MAAqB,KAAK,KAAK,SAAV,GAAsB,UAAU,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,KAA3B,CAAhC,GAAoE,UAAU,CAAC,QAAD,EAAW,OAAX,EAAoB,QAApB,EAA8B,KAA9B,CAAzG;AACA,SAAQ,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAS,KAAT,CAAA,EACN,KAAA,CAAA,aAAA,CAAC,kBAAD,EAAmB;AAAC,IAAA,KAAK,EAAE;AAAR,GAAnB,EAAmC,KAAnC,CADM,EAEL,OAFK,CAAR;AAIH,CANsC,EAMD;AAAE,EAAA,KAAK,EAAE;AACvC,QAAI,kBAAJ,GAAsB;AAAK,aAAO,kBAAP;AAAyD;;AAD7C;AAAT,CANC,CAAhC","sourcesContent":["import * as React from 'react';\nimport styled, { themed } from '../../utils/styled';\nimport { StepIndicatorProps, StepIndicatorStepProps } from './StepIndicator.types.part';\nimport { ListItemNumber } from './StepIndicatorShared.part';\nimport { PreciseTheme } from '../../common';\nimport { distance } from '../../distance';\nimport { getFontStyle } from '../../textStyles';\nconst StyledProgressHost = styled.ol `\n  width: 100%;\n  display: table;\n  table-layout: fixed;\n  padding: 0;\n  margin: 0;\n  height: 4em;\n  box-sizing: border-box;\n  padding-left: ${distance.medium};\n`;\nconst HorizontalNumber = styled(ListItemNumber) `\n  top: ${distance.small};\n  left: -12px;\n`;\nconst StyledProgressStep = styled.li `\n  display: table-cell;\n  text-align: center;\n  vertical-align: top;\n  position: relative;\n  color: ${themed(({ theme }) => theme.text1)};\n\n  &:before {\n    content: '';\n    display: block;\n    border-radius: 50%;\n    margin: 1em auto;\n    width: ${distance.small};\n    height: ${distance.small};\n    position: relative;\n    left: -50%;\n    z-index: 1;\n    background-color: ${themed(({ theme }) => theme.text1)};\n  }\n\n  &:not(:first-child):after {\n    content: '';\n    position: absolute;\n    top: 19px;\n    left: -100%;\n    width: 100%;\n    height: 2px;\n    background-color: ${themed(({ theme }) => theme.text1)};\n  }\n\n  &.step-active {\n    ${getFontStyle({ weight: 'medium' })}\n    \n    color: ${themed(({ theme }) => theme.text1)};\n\n    ~ li {\n      color: ${themed(({ theme }) => theme.text2)};\n\n      &:before {\n        background-color: ${themed(({ theme }) => theme.text2)};\n      }\n\n      &:after {\n        background-color: ${themed(({ theme }) => theme.text2)};\n      }\n    }\n\n    &:before {\n      background-color: ${themed(({ theme }) => theme.ui1)};\n      border: 0.5em solid ${themed(({ theme }) => theme.text1)};\n      margin: 0.5em auto;\n    }\n  }\n`;\nconst StyledProgressText = styled.div `\n  display: inline-block;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  position: absolute;\n  left: 0;\n  top: 2.5em;\n`;\nfunction createStep(header: React.ReactNode, i: number, active: boolean, numbered?: boolean, theme?: PreciseTheme) {\n    return (<StyledProgressStep theme={theme} key={i} className={active ? 'step-active' : ''}>\n      {numbered && <HorizontalNumber theme={theme}>{i + 1}</HorizontalNumber>}\n      <StyledProgressText theme={theme}>{header}</StyledProgressText>\n    </StyledProgressStep>);\n}\nfunction getHeaders(steps: Array<React.ReactNode>, current: number, numbered?: boolean, theme?: PreciseTheme) {\n    const items = steps.map((step, i) => createStep(step, i, i === current, numbered, theme));\n    return {\n        items,\n        content: undefined,\n    };\n}\nfunction getContent(children: React.ReactNode, current: number, numbered?: boolean, theme?: PreciseTheme) {\n    const items: Array<React.ReactChild> = [];\n    let content: React.ReactNode = undefined;\n    React.Children.forEach(children, (element: React.ReactElement<StepIndicatorStepProps>, i) => {\n        if (element && React.isValidElement(element)) {\n            const { header, children } = element.props;\n            const active = i === current;\n            items.push(createStep(header, i, active, numbered, theme));\n            if (active) {\n                content = children;\n            }\n        }\n    });\n    return {\n        items,\n        content,\n    };\n}\nexport const StepIndicatorHorizontal = Object.assign(((({ theme, steps, current = 0, numbered, children, ...props }) => {\n    const { items, content } = steps !== undefined ? getHeaders(steps, current, numbered, theme) : getContent(children, current, numbered, theme);\n    return (<div {...props}>\n      <StyledProgressHost theme={theme}>{items}</StyledProgressHost>\n      {content}\n    </div>);\n}) as React.SFC<StepIndicatorProps>), { inner: {\n        get StyledProgressHost() { return StyledProgressHost as typeof StyledProgressHost; }\n    } });\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}