{"ast":null,"code":"import _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: \", \";\\n  height: \", \";\\n  position: absolute;\\n  border: \", \";\\n  border-radius: 50%;\\n  background: \", \";\\n  transform: translate(-50%, -50%);\\n  cursor: \", \";\\n  box-sizing: border-box;\\n  transition: background \", \" \", \",\\n    border \", \" \", \"\\n      \", \";\\n\\n  &:hover {\\n    border: \", \";\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport styled, { themed } from '../../utils/styled';\nimport { distance } from '../../distance';\nimport { ocean, midnight } from '../../colors';\nvar transitionDuration = '0.3s';\nvar transitionDurationBorder = '0.2s';\nvar transitionEase = 'cubic-bezier(0, 0, 0.25, 1)';\nvar Indicator = styled('div')(_templateObject(), distance.large, distance.large, themed(function (props) {\n  return props.disabled || !props.focus ? 'none' : \"\".concat(distance.xsmall, \" solid \").concat(props.active ? midnight : props.theme.text1);\n}), themed(function (props) {\n  return props.disabled ? props.theme.ui3 : props.active ? props.theme.ui0 : props.theme.text2;\n}), function (props) {\n  return props.disabled ? 'not-allowed' : 'pointer';\n}, transitionDuration, transitionEase, transitionDurationBorder, transitionEase, function (props) {\n  return props.animate ? \", left \".concat(transitionDuration, \" \").concat(transitionEase) : '';\n}, themed(function (props) {\n  return props.disabled ? 'none' : \"\".concat(distance.xsmall, \" solid \").concat(props.active ? ocean : props.theme.ui5);\n}));\n\nfunction percent(value) {\n  return typeof value === 'number' ? \"\".concat(value * 100, \"%\") : '50%';\n}\n/**\n * The indicator knob is a button like component that is placed in a container to indicate a position.\n */\n\n\nexport var IndicatorKnob = Object.assign(function (_a) {\n  var x = _a.x,\n      y = _a.y,\n      color = _a.color,\n      style = _a.style,\n      props = __rest(_a, [\"x\", \"y\", \"color\", \"style\"]);\n\n  return React.createElement(Indicator, Object.assign({\n    style: Object.assign({}, style, {\n      left: percent(x),\n      top: percent(y),\n      backgroundColor: color\n    })\n  }, props));\n}, {\n  inner: {\n    get Indicator() {\n      return Indicator;\n    }\n\n  }\n});\nIndicatorKnob.displayName = 'IndicatorKnob';","map":{"version":3,"sources":["../../../../src/components/IndicatorKnob/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,IAAiB,MAAjB,QAA+B,oBAA/B;AAEA,SAAS,QAAT,QAAyB,gBAAzB;AACA,SAAS,KAAT,EAAgB,QAAhB,QAAgC,cAAhC;AAOA,IAAM,kBAAkB,GAAG,MAA3B;AACA,IAAM,wBAAwB,GAAG,MAAjC;AACA,IAAM,cAAc,GAAG,6BAAvB;AACA,IAAM,SAAS,GAAG,MAAM,CAAC,KAAD,CAAT,oBACJ,QAAQ,CAAC,KADL,EAEH,QAAQ,CAAC,KAFN,EAIH,MAAM,CAAC,UAAA,KAAK;AAAA,SAAI,KAAK,CAAC,QAAN,IAAkB,CAAC,KAAK,CAAC,KAAzB,GAAiC,MAAjC,aAA6C,QAAQ,CAAC,MAAtD,oBAAsE,KAAK,CAAC,MAAN,GAAe,QAAf,GAA0B,KAAK,CAAC,KAAN,CAAY,KAA5G,CAAJ;AAAA,CAAN,CAJH,EAMC,MAAM,CAAC,UAAA,KAAK;AAAA,SAAI,KAAK,CAAC,QAAN,GAAiB,KAAK,CAAC,KAAN,CAAY,GAA7B,GAAmC,KAAK,CAAC,MAAN,GAAe,KAAK,CAAC,KAAN,CAAY,GAA3B,GAAiC,KAAK,CAAC,KAAN,CAAY,KAApF;AAAA,CAAN,CANP,EAQH,UAAA,KAAK;AAAA,SAAK,KAAK,CAAC,QAAN,GAAiB,aAAjB,GAAiC,SAAtC;AAAA,CARF,EAUY,kBAVZ,EAUkC,cAVlC,EAWF,wBAXE,EAW0B,cAX1B,EAYP,UAAA,KAAK;AAAA,SAAK,KAAK,CAAC,OAAN,oBAA0B,kBAA1B,cAAgD,cAAhD,IAAmE,EAAxE;AAAA,CAZE,EAeD,MAAM,CAAC,UAAA,KAAK;AAAA,SAAI,KAAK,CAAC,QAAN,GAAiB,MAAjB,aAA6B,QAAQ,CAAC,MAAtC,oBAAsD,KAAK,CAAC,MAAN,GAAe,KAAf,GAAuB,KAAK,CAAC,KAAN,CAAY,GAAzF,CAAJ;AAAA,CAAN,CAfL,CAAf;;AAkBA,SAAS,OAAT,CAAiB,KAAjB,EAA+B;AAC3B,SAAO,OAAO,KAAP,KAAiB,QAAjB,aAA+B,KAAK,GAAG,GAAvC,SAAgD,KAAvD;AACH;AAyCD;;;;;AAGA,OAAO,IAAM,aAAa,GAAG,MAAM,CAAC,MAAP,CAAgB,UAAC,EAAD,EAAqC;AAAA,MAAlC,CAAkC,GAAhB,EAAgB,CAAlC,CAAkC;AAAA,MAA/B,CAA+B,GAAhB,EAAgB,CAA/B,CAA+B;AAAA,MAA5B,KAA4B,GAAhB,EAAgB,CAA5B,KAA4B;AAAA,MAArB,KAAqB,GAAhB,EAAgB,CAArB,KAAqB;AAAA,MAAd,KAAc,GAAd,MAAA,CAAA,EAAA,EAAA,CAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,OAAA,CAAA,CAAc;;AAAC,SAAC,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU,MAAA,CAAA,MAAA,CAAA;AAAC,IAAA,KAAK,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAC7F,KAD6F,EACxF;AACR,MAAA,IAAI,EAAE,OAAO,CAAC,CAAD,CADL;AAER,MAAA,GAAG,EAAE,OAAO,CAAC,CAAD,CAFJ;AAGR,MAAA,eAAe,EAAE;AAHT,KADwF;AAAN,GAAA,EAKvF,KALuF,CAAV,CAAD;AAKnE,CALa,EAKwB;AAAE,EAAA,KAAK,EAAE;AACtD,QAAI,SAAJ,GAAa;AAAK,aAAO,SAAP;AAAuC;;AADH;AAAT,CALxB,CAAtB;AAQP,aAAa,CAAC,WAAd,GAA4B,eAA5B","sourcesContent":["import * as React from 'react';\nimport styled, { themed } from '../../utils/styled';\nimport { StandardProps } from '../../common';\nimport { distance } from '../../distance';\nimport { ocean, midnight } from '../../colors';\ninterface IndicatorProps {\n    active?: boolean;\n    disabled?: boolean;\n    animate?: boolean;\n    focus?: boolean;\n}\nconst transitionDuration = '0.3s';\nconst transitionDurationBorder = '0.2s';\nconst transitionEase = 'cubic-bezier(0, 0, 0.25, 1)';\nconst Indicator = styled('div')<IndicatorProps> `\n  width: ${distance.large};\n  height: ${distance.large};\n  position: absolute;\n  border: ${themed(props => props.disabled || !props.focus ? 'none' : `${distance.xsmall} solid ${props.active ? midnight : props.theme.text1}`)};\n  border-radius: 50%;\n  background: ${themed(props => props.disabled ? props.theme.ui3 : props.active ? props.theme.ui0 : props.theme.text2)};\n  transform: translate(-50%, -50%);\n  cursor: ${props => (props.disabled ? 'not-allowed' : 'pointer')};\n  box-sizing: border-box;\n  transition: background ${transitionDuration} ${transitionEase},\n    border ${transitionDurationBorder} ${transitionEase}\n      ${props => (props.animate ? `, left ${transitionDuration} ${transitionEase}` : '')};\n\n  &:hover {\n    border: ${themed(props => props.disabled ? 'none' : `${distance.xsmall} solid ${props.active ? ocean : props.theme.ui5}`)};\n  }\n`;\nfunction percent(value?: number) {\n    return typeof value === 'number' ? `${value * 100}%` : '50%';\n}\nexport interface IndicatorKnobProps extends StandardProps {\n    /**\n     * @ignore\n     */\n    children?: void;\n    /**\n     * Indicates the x position of the knob in the 0 to 1 range. By default 0.5.\n     * @default 0.5\n     */\n    x?: number;\n    /**\n     * Indicates the y position of the knob in the 0 to 1 range. By default 0.5.\n     * @default 0.5\n     */\n    y?: number;\n    /**\n     * Sets the background color of the knob.\n     */\n    color?: string;\n    /**\n     * Sets the indicator as active.\n     * @default false\n     */\n    active?: boolean;\n    /**\n     * Sets the indicator as focused.\n     * @default false\n     */\n    focus?: boolean;\n    /**\n     * Sets the indicator as disabled, i.e., not movable.\n     * @default false\n     */\n    disabled?: boolean;\n    /**\n     * Animate the position of the indicator\n     * @default false\n     */\n    animate?: boolean;\n}\n/**\n * The indicator knob is a button like component that is placed in a container to indicate a position.\n */\nexport const IndicatorKnob = Object.assign(((({ x, y, color, style, ...props }) => (<Indicator style={{\n    ...style,\n    left: percent(x),\n    top: percent(y),\n    backgroundColor: color,\n}} {...props}/>)) as React.SFC<IndicatorKnobProps>), { inner: {\n        get Indicator() { return Indicator as typeof Indicator; }\n    } });\nIndicatorKnob.displayName = 'IndicatorKnob';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}