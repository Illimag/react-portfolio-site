{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { breakpoints } from '../../themes';\nimport { withResponsiveMode } from '../../hoc';\nimport { TabContent, TabHeader, TabHeaders } from '../TabPanel/TabPanel.part';\nimport { DropdownContainer, SlideDownTabs } from '../DropdownPanel/DropdownPanel.part';\nvar TabInt = Object.assign(function (_a) {\n  var theme = _a.theme,\n      mode = _a.mode,\n      innerRef = _a.innerRef,\n      _a$activeIndex = _a.activeIndex,\n      activeIndex = _a$activeIndex === void 0 ? 0 : _a$activeIndex,\n      onSelect = _a.onSelect,\n      _a$headers = _a.headers,\n      headers = _a$headers === void 0 ? [] : _a$headers,\n      children = _a.children,\n      props = __rest(_a, [\"theme\", \"mode\", \"innerRef\", \"activeIndex\", \"onSelect\", \"headers\", \"children\"]);\n\n  var TabHeaderHolder = false;\n\n  if (mode === 'tab') {\n    TabHeaderHolder = React.createElement(TabHeaders, Object.assign({\n      theme: theme\n    }, props), headers.map(function (text, index) {\n      return React.createElement(TabHeader, {\n        theme: theme,\n        key: \"head-\".concat(index),\n        active: index === activeIndex,\n        onClick: function onClick() {\n          return onSelect(index);\n        }\n      }, text);\n    }));\n  } else if (mode === 'dropdown') {\n    TabHeaderHolder = React.createElement(DropdownContainer, Object.assign({\n      theme: theme\n    }, props), React.createElement(SlideDownTabs, {\n      data: headers.map(function (content, index) {\n        return {\n          key: \"\".concat(index),\n          content: content,\n          type: 'item'\n        };\n      }),\n      selectedIndex: activeIndex,\n      onChange: onSelect\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    ref: innerRef\n  }, TabHeaderHolder, React.createElement(TabContent, {\n    theme: theme\n  }, children));\n}, {\n  inner: {\n    get TabHeaders() {\n      return TabHeaders;\n    },\n\n    get TabHeader() {\n      return TabHeader;\n    },\n\n    get DropdownContainer() {\n      return DropdownContainer;\n    },\n\n    get SlideDownTabs() {\n      return SlideDownTabs;\n    },\n\n    get TabContent() {\n      return TabContent;\n    }\n\n  }\n});\nexport var ResponsiveTabs = withResponsiveMode(function (width) {\n  return !width || width > breakpoints.medium ? 'tab' : 'dropdown';\n})(TabInt);","map":{"version":3,"sources":["../../../../src/components/Tabs/Tabs.part.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StandardProps } from '../../common';\nimport { breakpoints } from '../../themes';\nimport { TabControlHolderProps } from '../TabControl';\nimport { ModeProviderProps, withResponsiveMode } from '../../hoc';\nimport { TabContent, TabHeader, TabHeaders } from '../TabPanel/TabPanel.part';\nimport { DropdownContainer, SlideDownTabs, TabHeaderItem } from '../DropdownPanel/DropdownPanel.part';\nexport type TabsMode = 'tab' | 'dropdown';\nexport interface TabIntProps extends StandardProps, ModeProviderProps<TabsMode>, TabControlHolderProps {\n}\nconst TabInt = Object.assign(((({ theme, mode, innerRef, activeIndex = 0, onSelect, headers = [], children, ...props }) => {\n    let TabHeaderHolder: React.ReactNode = false;\n    if (mode === 'tab') {\n        TabHeaderHolder = (<TabHeaders theme={theme} {...props}>\n        {headers.map((text, index) => (<TabHeader theme={theme} key={`head-${index}`} active={index === activeIndex} onClick={() => onSelect(index)}>\n            {text}\n          </TabHeader>))}\n      </TabHeaders>);\n    }\n    else if (mode === 'dropdown') {\n        TabHeaderHolder = (<DropdownContainer theme={theme} {...props}>\n        <SlideDownTabs data={headers.map((content, index) => ({\n            key: `${index}`,\n            content,\n            type: 'item',\n        } as TabHeaderItem))} selectedIndex={activeIndex} onChange={onSelect}/>\n      </DropdownContainer>);\n    }\n    return (<div ref={innerRef}>\n      {TabHeaderHolder}\n      <TabContent theme={theme}>{children}</TabContent>\n    </div>);\n}) as React.FC<React.PropsWithChildren<TabIntProps>>), { inner: {\n        get TabHeaders() { return TabHeaders as typeof TabHeaders; },\n        get TabHeader() { return TabHeader as typeof TabHeader; },\n        get DropdownContainer() { return DropdownContainer as typeof DropdownContainer; },\n        get SlideDownTabs() { return SlideDownTabs as typeof SlideDownTabs; },\n        get TabContent() { return TabContent as typeof TabContent; }\n    } });\nexport interface ResponsiveTabsType extends React.FC<TabIntProps> {\n    (props: TabIntProps & {\n        children?: React.ReactNode;\n    }, context?: any): JSX.Element;\n}\nexport const ResponsiveTabs: ResponsiveTabsType = withResponsiveMode<'tab' | 'dropdown'>(width => !width || width > breakpoints.medium ? 'tab' : 'dropdown')(TabInt) as any;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}