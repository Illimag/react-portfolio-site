{"ast":null,"code":"import _slicedToArray from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    animation: \", \" \", \"ms;\\n    animation-fill-mode: forwards;\\n  \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  from {\\n    opacity: 1;\\n  }\\n  to {\\n    opacity: 0;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  from {\\n    opacity: 0;\\n  }\\n  to {\\n    opacity: 1;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled, { keyframes, css } from '../../utils/styled';\nimport { Blocker } from '../Blocker';\nimport * as React from 'react';\n\nvar InAnimation = function InAnimation() {\n  return keyframes(_templateObject());\n};\n\nvar OutAnimation = function OutAnimation() {\n  return keyframes(_templateObject2());\n};\n\nvar animationDuration = 500;\nexport var StyledSidebarBlocker = styled(Blocker)(function (_ref) {\n  var closing = _ref.closing;\n  return css(_templateObject3(), closing ? OutAnimation() : InAnimation(), animationDuration);\n});\nexport var SidebarBlocker = Object.assign(function (props) {\n  var _React$useState = React.useState(!props.open),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      closed = _React$useState2[0],\n      setClosed = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (props.open) {\n      setClosed(false);\n      return;\n    } else {\n      var timeout = setTimeout(function () {\n        return setClosed(true);\n      }, animationDuration);\n      return function () {\n        return clearTimeout(timeout);\n      };\n    }\n  }, [props.open]); //tslint:disable-next-line\n\n  return !closed ? React.createElement(StyledSidebarBlocker, Object.assign({}, props, {\n    closing: !props.open\n  })) : null;\n}, {\n  inner: {\n    get StyledSidebarBlocker() {\n      return StyledSidebarBlocker;\n    }\n\n  }\n});","map":{"version":3,"sources":["../../../../src/components/Sidebar/SidebarBlocker.part.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,MAAP,IAAiB,SAAjB,EAA4B,GAA5B,QAAuC,oBAAvC;AACA,SAAS,OAAT,QAAsC,YAAtC;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;;AAIA,IAAM,WAAW,GAAG,SAAd,WAAc;AAAA,SAAM,SAAN;AAAA,CAApB;;AAQA,IAAM,YAAY,GAAG,SAAf,YAAe;AAAA,SAAM,SAAN;AAAA,CAArB;;AAQA,IAAM,iBAAiB,GAAG,GAA1B;AACA,OAAO,IAAM,oBAAoB,GAAG,MAAM,CAAC,OAAD,CAAN,CAEjC;AAAA,MAAG,OAAH,QAAG,OAAH;AAAA,SAAiB,GAAjB,qBACc,OAAO,GAAG,YAAY,EAAf,GAAoB,WAAW,EADpD,EAC0D,iBAD1D;AAAA,CAFiC,CAA7B;AAMP,OAAO,IAAM,cAAc,GAAG,MAAM,CAAC,MAAP,CAAgB,UAAA,KAAK,EAAG;AAAA,wBACtB,KAAK,CAAC,QAAN,CAAe,CAAC,KAAK,CAAC,IAAtB,CADsB;AAAA;AAAA,MAC3C,MAD2C;AAAA,MACnC,SADmC;;AAElD,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAK;AACjB,QAAI,KAAK,CAAC,IAAV,EAAgB;AACZ,MAAA,SAAS,CAAC,KAAD,CAAT;AACA;AACH,KAHD,MAIK;AACD,UAAM,OAAO,GAAG,UAAU,CAAC;AAAA,eAAM,SAAS,CAAC,IAAD,CAAf;AAAA,OAAD,EAAwB,iBAAxB,CAA1B;AACA,aAAO;AAAA,eAAM,YAAY,CAAC,OAAD,CAAlB;AAAA,OAAP;AACH;AACJ,GATD,EASG,CAAC,KAAK,CAAC,IAAP,CATH,EAFkD,CAYlD;;AACA,SAAO,CAAC,MAAD,GAAU,KAAA,CAAA,aAAA,CAAC,oBAAD,EAAqB,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,IAAA,OAAO,EAAE,CAAC,KAAK,CAAC;AAAlB,GAAV,CAArB,CAAV,GAAqE,IAA5E;AACH,CAd6B,EAcQ;AAAE,EAAA,KAAK,EAAE;AACvC,QAAI,oBAAJ,GAAwB;AAAK,aAAO,oBAAP;AAA6D;;AADnD;AAAT,CAdR,CAAvB","sourcesContent":["import styled, { keyframes, css } from '../../utils/styled';\nimport { Blocker, BlockerProps } from '../Blocker';\nimport * as React from 'react';\nexport interface SidebarBlockerProps extends BlockerProps {\n    open: boolean;\n}\nconst InAnimation = () => keyframes `\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\nconst OutAnimation = () => keyframes `\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n`;\nconst animationDuration = 500;\nexport const StyledSidebarBlocker = styled(Blocker)<{\n    closing: boolean;\n}>(({ closing }) => css `\n    animation: ${closing ? OutAnimation() : InAnimation()} ${animationDuration}ms;\n    animation-fill-mode: forwards;\n  `);\nexport const SidebarBlocker = Object.assign(((props => {\n    const [closed, setClosed] = React.useState(!props.open);\n    React.useEffect(() => {\n        if (props.open) {\n            setClosed(false);\n            return;\n        }\n        else {\n            const timeout = setTimeout(() => setClosed(true), animationDuration);\n            return () => clearTimeout(timeout);\n        }\n    }, [props.open]);\n    //tslint:disable-next-line\n    return !closed ? <StyledSidebarBlocker {...props} closing={!props.open}/> : null;\n}) as React.FC<SidebarBlockerProps>), { inner: {\n        get StyledSidebarBlocker() { return StyledSidebarBlocker as typeof StyledSidebarBlocker; }\n    } });\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}