{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport * as React from 'react';\nimport styled from '../../utils/styled';\nimport { TextField } from '../TextField';\nimport { IconLink } from '../IconLink';\nconst StyledTextField = styled(TextField)`\n  font-family: ${props => props.reveal ? 'inherit' : 'sans-serif'};\n`;\n/**\n * A password field for custom user input.\n */\n\nexport class PasswordField extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showPassword = e => {\n      this.setState({\n        reveal: true\n      });\n      e.preventDefault();\n    };\n\n    this.hidePassword = e => {\n      this.setState({\n        reveal: false\n      });\n      e.preventDefault();\n    };\n\n    this.state = {\n      reveal: false\n    };\n  }\n\n  renderDefaultSuffix(reveal, theme) {\n    const iconName = reveal ? 'VisibilityOff' : 'Visibility';\n    return React.createElement(IconLink, {\n      icon: iconName,\n      onClick: reveal ? this.hidePassword : this.showPassword,\n      theme: theme\n    });\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      theme,\n      suffix\n    } = _a,\n          rest = __rest(_a, [\"theme\", \"suffix\"]);\n\n    const {\n      reveal\n    } = this.state;\n    const props = Object.assign({\n      suffix: suffix === undefined ? this.renderDefaultSuffix(reveal, theme) : suffix,\n      type: reveal ? 'text' : 'password',\n      theme,\n      reveal\n    }, rest);\n    return React.createElement(StyledTextField, Object.assign({}, props));\n  }\n\n}\nPasswordField.inner = {\n  get IconLink() {\n    return IconLink;\n  },\n\n  get StyledTextField() {\n    return StyledTextField;\n  }\n\n};","map":{"version":3,"sources":["../../../../src/components/PasswordField/index.tsx"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,oBAAnB;AACA,SAAS,SAAT,QAA0C,cAA1C;AAEA,SAAS,QAAT,QAAyB,aAAzB;AAIA,MAAM,eAAe,GAAG,MAAM,CAAC,SAAD,CAAkC;iBAC/C,KAAK,IAAK,KAAK,CAAC,MAAN,GAAe,SAAf,GAA2B,YAAa;CADnE;AAYA;;;;AAGA,OAAM,MAAO,aAAP,SAA6B,KAAK,CAAC,SAAnC,CAAoF;AACtF,EAAA,WAAA,CAAY,KAAZ,EAAqC;AACjC,UAAM,KAAN;;AAKI,SAAA,YAAA,GAAgB,CAAD,IAA2C;AAC9D,WAAK,QAAL,CAAc;AACV,QAAA,MAAM,EAAE;AADE,OAAd;AAGA,MAAA,CAAC,CAAC,cAAF;AACH,KALO;;AAMA,SAAA,YAAA,GAAgB,CAAD,IAA2C;AAC9D,WAAK,QAAL,CAAc;AACV,QAAA,MAAM,EAAE;AADE,OAAd;AAGA,MAAA,CAAC,CAAC,cAAF;AACH,KALO;;AAVJ,SAAK,KAAL,GAAa;AACT,MAAA,MAAM,EAAE;AADC,KAAb;AAGH;;AAaO,EAAA,mBAAmB,CAAC,MAAD,EAAkB,KAAlB,EAAsC;AAC7D,UAAM,QAAQ,GAAG,MAAM,GAAG,eAAH,GAAqB,YAA5C;AACA,WAAO,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AAAC,MAAA,IAAI,EAAE,QAAP;AAAiB,MAAA,OAAO,EAAE,MAAM,GAAG,KAAK,YAAR,GAAuB,KAAK,YAA5D;AAA0E,MAAA,KAAK,EAAE;AAAjF,KAAT,CAAP;AACH;;AACD,EAAA,MAAM,GAAA;AACF,UAAM,EAAA,GAAA,KAAA,KAAN;AAAA,UAAM;AAAE,MAAA,KAAF;AAAS,MAAA;AAAT,QAAe,EAArB;AAAA,UAAuB,IAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,CAAA,CAAvB;;AACA,UAAM;AAAE,MAAA;AAAF,QAAa,KAAK,KAAxB;AACA,UAAM,KAAK,GAAA,MAAA,CAAA,MAAA,CAAA;AACP,MAAA,MAAM,EAAE,MAAM,KAAK,SAAX,GAAuB,KAAK,mBAAL,CAAyB,MAAzB,EAAiC,KAAjC,CAAvB,GAAiE,MADlE;AAEP,MAAA,IAAI,EAAE,MAAM,GAAG,MAAH,GAAY,UAFjB;AAGP,MAAA,KAHO;AAIP,MAAA;AAJO,KAAA,EAKJ,IALI,CAAX;AAOA,WAAO,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,CAAhB,CAAP;AACH;;AAlCqF;AAmC/E,aAAA,CAAA,KAAA,GAAQ;AACX,MAAI,QAAJ,GAAY;AAAK,WAAO,QAAP;AAAqC,GAD3C;;AAEX,MAAI,eAAJ,GAAmB;AAAK,WAAO,eAAP;AAAmD;;AAFhE,CAAR","sourcesContent":["import * as React from 'react';\nimport styled from '../../utils/styled';\nimport { TextField, TextFieldProps } from '../TextField';\nimport { PreciseTheme, TextInputProps } from '../../common';\nimport { IconLink } from '../IconLink';\ninterface StyledTextFieldProps extends TextFieldProps {\n    reveal: boolean;\n}\nconst StyledTextField = styled(TextField)<StyledTextFieldProps> `\n  font-family: ${props => (props.reveal ? 'inherit' : 'sans-serif')};\n`;\nexport interface PasswordFieldProps extends TextInputProps {\n    /**\n     * @ignore\n     */\n    children?: void;\n}\nexport interface PasswordFieldState {\n    reveal: boolean;\n}\n/**\n * A password field for custom user input.\n */\nexport class PasswordField extends React.Component<PasswordFieldProps, PasswordFieldState> {\n    constructor(props: PasswordFieldProps) {\n        super(props);\n        this.state = {\n            reveal: false,\n        };\n    }\n    private showPassword = (e: React.MouseEvent<HTMLAnchorElement>) => {\n        this.setState({\n            reveal: true,\n        });\n        e.preventDefault();\n    };\n    private hidePassword = (e: React.MouseEvent<HTMLAnchorElement>) => {\n        this.setState({\n            reveal: false,\n        });\n        e.preventDefault();\n    };\n    private renderDefaultSuffix(reveal: boolean, theme?: PreciseTheme) {\n        const iconName = reveal ? 'VisibilityOff' : 'Visibility';\n        return <IconLink icon={iconName} onClick={reveal ? this.hidePassword : this.showPassword} theme={theme}/>;\n    }\n    render() {\n        const { theme, suffix, ...rest } = this.props;\n        const { reveal } = this.state;\n        const props = {\n            suffix: suffix === undefined ? this.renderDefaultSuffix(reveal, theme) : suffix,\n            type: reveal ? 'text' : 'password',\n            theme,\n            reveal,\n            ...rest,\n        };\n        return <StyledTextField {...props}/>;\n    }\n    static inner = {\n        get IconLink() { return IconLink as typeof IconLink; },\n        get StyledTextField() { return StyledTextField as typeof StyledTextField; }\n    };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}