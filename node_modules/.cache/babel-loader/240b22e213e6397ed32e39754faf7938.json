{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport * as React from 'react';\nimport styled, { themed } from '../../utils/styled';\nimport { distance } from '../../distance';\nconst StyledBodyText = styled.p`\n  text-align: ${props => props.align};\n  font-family: ${themed(props => props.theme.fontFamily)};\n  margin-bottom: ${distance.medium};\n  font-size: inherit;\n  line-height: 1.6;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\nconst defaultAlign = 'left';\n/**\n * Represents the body text component for placing normal text.\n */\n\nexport const BodyText = Object.assign(_a => {\n  var {\n    align = defaultAlign\n  } = _a,\n      props = __rest(_a, [\"align\"]);\n\n  return React.createElement(StyledBodyText, Object.assign({\n    align: align\n  }, props));\n}, {\n  inner: {\n    get StyledBodyText() {\n      return StyledBodyText;\n    }\n\n  }\n});\nBodyText.displayName = 'BodyText';","map":{"version":3,"sources":["../../../../src/components/BodyText/index.tsx"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,IAAiB,MAAjB,QAA+B,oBAA/B;AAEA,SAAS,QAAT,QAAyB,gBAAzB;AAaA,MAAM,cAAc,GAAG,MAAM,CAAC,CAE3B;gBACa,KAAK,IAAI,KAAK,CAAC,KAAK;iBACnB,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,KAAN,CAAY,UAAtB,CAAiC;mBACrC,QAAQ,CAAC,MAAM;;;;;;CALlC;AAYA,MAAM,YAAY,GAAc,MAAhC;AACA;;;;AAGA,OAAO,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAP,CAAiB,EAAD,IAAuC;MAAtC;AAAE,IAAA,KAAK,GAAG;AAAV,MAAsB,E;MAAE,KAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,OAAA,CAAA,C;;AAAe,SAAC,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,MAAA,CAAA,MAAA,CAAA;AAAC,IAAA,KAAK,EAAE;AAAR,GAAA,EAAmB,KAAnB,CAAf,CAAD;AAA4C,CAApG,EAAoI;AAAE,EAAA,KAAK,EAAE;AAC7J,QAAI,cAAJ,GAAkB;AAAK,aAAO,cAAP;AAAiD;;AADqF;AAAT,CAApI,CAAjB;AAGP,QAAQ,CAAC,WAAT,GAAuB,UAAvB","sourcesContent":["import * as React from 'react';\nimport styled, { themed } from '../../utils/styled';\nimport { StandardProps } from '../../common';\nimport { distance } from '../../distance';\nexport type TextAlign = 'left' | 'right' | 'center' | 'justify';\nexport interface BodyTextProps extends StandardProps {\n    /**\n     * Determines the alignment. By default left aligned.\n     * @default left\n     */\n    align?: TextAlign;\n    /**\n     * The content representing the body text.\n     */\n    children?: React.ReactNode;\n}\nconst StyledBodyText = styled.p<{\n    align: TextAlign;\n}> `\n  text-align: ${props => props.align};\n  font-family: ${themed(props => props.theme.fontFamily)};\n  margin-bottom: ${distance.medium};\n  font-size: inherit;\n  line-height: 1.6;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\nconst defaultAlign: TextAlign = 'left';\n/**\n * Represents the body text component for placing normal text.\n */\nexport const BodyText = Object.assign(((({ align = defaultAlign, ...props }) => (<StyledBodyText align={align} {...props}/>)) as React.SFC<BodyTextProps>), { inner: {\n        get StyledBodyText() { return StyledBodyText as typeof StyledBodyText; }\n    } });\nBodyText.displayName = 'BodyText';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}