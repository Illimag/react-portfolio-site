{"ast":null,"code":"import _classCallCheck from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n      list-style: none;\\n      width: 100%;\\n      box-sizing: border-box;\\n      box-shadow: none;\\n      margin: 0;\\n      padding: 0;\\n      background: \", \";\\n      border: 1px solid \", \";\\n      \", \";\\n      max-height: 50vh;\\n      position: absolute;\\n      top: \", \";\\n      transform: translateY(\", \"%);\\n      overflow-y: auto;\\n      z-index: 100;\\n    \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  position: static;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  width: 100%;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport styled, { themed, css } from '../../utils/styled';\nimport { TextField } from '../TextField';\nimport { withFormContext } from '../../hoc/withFormContext';\nimport { InteractiveList, InteractiveListDirection } from '../InteractiveList';\nvar AutocompleteWrapper = styled.div(_templateObject());\nvar StyledInteractiveList = styled(InteractiveList)(_templateObject2());\nvar StyledAutosuggestWrapper = styled.ul(themed(function (_ref) {\n  var direction = _ref.direction,\n      _ref$theme = _ref.theme,\n      ui1 = _ref$theme.ui1,\n      ui4 = _ref$theme.ui4;\n  return css(_templateObject3(), ui1, ui4, direction === InteractiveListDirection.normal ? 'border-top-color: transparent' : 'border-bottom-color: transparent', direction === InteractiveListDirection.normal ? '100%' : '0px', direction === InteractiveListDirection.normal ? 0 : -100);\n}));\n\nfunction defaultSuggestionRenderer(suggestion) {\n  var value = String(suggestion);\n  return {\n    content: value,\n    key: value\n  };\n}\n\nfunction defaultInputRenderer(props) {\n  return React.createElement(TextField, Object.assign({}, props));\n}\n\nvar NotOpenComponent = React.createElement(React.Fragment, null);\nvar AutosuggestWrapper = Object.assign(function (_a) {\n  var _0 = _a.border,\n      open = _a.open,\n      props = __rest(_a, [\"border\", \"open\"]);\n\n  return open ? React.createElement(StyledAutosuggestWrapper, Object.assign({}, props)) : NotOpenComponent;\n}, {\n  inner: {\n    get StyledAutosuggestWrapper() {\n      return StyledAutosuggestWrapper;\n    }\n\n  }\n});\nAutosuggestWrapper.displayName = 'AutosuggestWrapper';\n\nvar AutocompleteInt = /*#__PURE__*/function (_React$Component) {\n  _inherits(AutocompleteInt, _React$Component);\n\n  var _super = _createSuper(AutocompleteInt);\n\n  function AutocompleteInt(props) {\n    var _this;\n\n    _classCallCheck(this, AutocompleteInt);\n\n    _this = _super.call(this, props);\n\n    _this.handleKeyDown = function (e) {\n      var keyCode = e.keyCode;\n\n      switch (keyCode) {\n        case 40\n        /* down */\n        :\n        case 38\n        /* up */\n        :\n          e.preventDefault();\n          var open = _this.state.open;\n          open && _this.setState(function () {\n            return {\n              listFocus: true,\n              focus: false\n            };\n          });\n          break;\n      }\n    };\n\n    _this.handleListChange = function (e) {\n      var _this$props$suggestio = _this.props.suggestions,\n          suggestions = _this$props$suggestio === void 0 ? [] : _this$props$suggestio;\n      var index = e.value[0];\n      var suggestion = suggestions[index];\n\n      _this.handle(suggestion);\n    };\n\n    _this.show = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.hide = function () {\n      _this.setState(function () {\n        return {\n          open: false\n        };\n      }, _this.props.onBlur);\n    };\n\n    _this.handleFocus = function () {\n      var onFocus = _this.props.onFocus;\n      cancelAnimationFrame(_this.delayedBlur);\n\n      _this.show();\n\n      _this.setState(function () {\n        return {\n          focus: true,\n          listFocus: false\n        };\n      });\n\n      typeof onFocus === 'function' && onFocus();\n    };\n\n    _this.handleBlur = function () {\n      cancelAnimationFrame(_this.delayedBlur);\n      _this.delayedBlur = requestAnimationFrame(function () {\n        _this.setState(function () {\n          return {\n            focus: false,\n            listFocus: false\n          };\n        }, _this.hide);\n      });\n    };\n\n    _this.changed = function (e) {\n      _this.updateValue(e.value);\n    };\n\n    _this.setNode = function (node) {\n      _this._element = node;\n      var inputRef = _this.props.inputRef;\n      typeof inputRef === 'function' && inputRef(node);\n    };\n\n    _this.state = {\n      controlled: props.value !== undefined,\n      value: props.value || props.defaultValue || '',\n      open: false,\n      listFocus: false,\n      focus: false,\n      error: props.error\n    };\n    return _this;\n  }\n\n  _createClass(AutocompleteInt, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(_ref2) {\n      var _ref2$value = _ref2.value,\n          value = _ref2$value === void 0 ? '' : _ref2$value,\n          error = _ref2.error;\n\n      if (this.state.controlled) {\n        this.setState({\n          value: value\n        });\n      }\n\n      this.setState({\n        error: error\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var form = this.props.form;\n      var controlled = this.state.controlled;\n\n      if (!controlled && form) {\n        form.subscribe(this);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var form = this.props.form;\n      var controlled = this.state.controlled;\n\n      if (!controlled && form) {\n        form.unsubscribe(this);\n      }\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      var suggestionSelected = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var _this$props = this.props,\n          onChange = _this$props.onChange,\n          _this$props$name = _this$props.name,\n          name = _this$props$name === void 0 ? '' : _this$props$name,\n          form = _this$props.form;\n\n      if (!this.state.controlled) {\n        form ? form.change({\n          name: name,\n          value: value\n        }) : this.setState({\n          value: value\n        });\n      }\n\n      suggestionSelected ? this.hide() : this.show();\n      typeof onChange === 'function' && onChange({\n        value: value\n      });\n    }\n  }, {\n    key: \"handle\",\n    value: function handle(suggestion) {\n      var _this$props2 = this.props,\n          getSuggestionValue = _this$props2.getSuggestionValue,\n          onSuggestionSelected = _this$props2.onSuggestionSelected;\n\n      if (typeof getSuggestionValue === 'function') {\n        var value = getSuggestionValue(suggestion);\n        this.updateValue(value, true);\n      } else if (typeof suggestion === 'string') {\n        this.updateValue(suggestion, true);\n      }\n\n      typeof onSuggestionSelected === 'function' && onSuggestionSelected({\n        value: suggestion\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          _a$suggestions = _a.suggestions,\n          suggestions = _a$suggestions === void 0 ? [] : _a$suggestions,\n          noSuggestionsMessage = _a.noSuggestionsMessage,\n          _a$renderSuggestion = _a.renderSuggestion,\n          renderSuggestion = _a$renderSuggestion === void 0 ? defaultSuggestionRenderer : _a$renderSuggestion,\n          _a$inputRenderer = _a.inputRenderer,\n          inputRenderer = _a$inputRenderer === void 0 ? defaultInputRenderer : _a$inputRenderer,\n          _1 = _a.getSuggestionValue,\n          _2 = _a.onChange,\n          _3 = _a.children,\n          _4 = _a.onBlur,\n          _5 = _a.onFocus,\n          _6 = _a.defaultValue,\n          _7 = _a.inputRef,\n          _8 = _a.onSuggestionSelected,\n          info = _a.info,\n          props = __rest(_a, [\"suggestions\", \"noSuggestionsMessage\", \"renderSuggestion\", \"inputRenderer\", \"getSuggestionValue\", \"onChange\", \"children\", \"onBlur\", \"onFocus\", \"defaultValue\", \"inputRef\", \"onSuggestionSelected\", \"info\"]);\n\n      var _this$state = this.state,\n          open = _this$state.open,\n          listFocus = _this$state.listFocus,\n          value = _this$state.value,\n          error = _this$state.error;\n      var isListOpen = open && (!!suggestions.length || !!noSuggestionsMessage);\n      return React.createElement(AutocompleteWrapper, {\n        onKeyDown: this.handleKeyDown,\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur\n      }, inputRenderer(Object.assign({}, props, {\n        clearable: true,\n        info: isListOpen ? undefined : info,\n        onChange: this.changed,\n        inputRef: this.setNode,\n        value: value,\n        error: error\n      })), React.createElement(StyledInteractiveList, {\n        data: suggestions.length ? suggestions.map(renderSuggestion) : [{\n          key: 'default',\n          content: noSuggestionsMessage\n        }],\n        disabled: suggestions.length === 0,\n        customWrapper: AutosuggestWrapper,\n        focus: listFocus,\n        onChange: this.handleListChange,\n        autoPosition: true,\n        open: isListOpen\n      }), isListOpen && info && React.createElement(\"div\", null, info));\n    }\n  }]);\n\n  return AutocompleteInt;\n}(React.Component);\n\nAutocompleteInt.inner = {\n  get AutocompleteWrapper() {\n    return AutocompleteWrapper;\n  },\n\n  get StyledInteractiveList() {\n    return StyledInteractiveList;\n  }\n\n};\n/**\n * Extends a TextField with autocompletion capabilities.\n */\n\nexport var Autocomplete = withFormContext(AutocompleteInt);\nAutocomplete.displayName = 'Autocomplete';","map":{"version":3,"sources":["../../../../src/components/Autocomplete/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled, { themed, css } from '../../utils/styled';\nimport { TextField, TextFieldProps, TextFieldChangeEvent } from '../TextField';\nimport { FormContextProps, withFormContext } from '../../hoc/withFormContext';\nimport { InteractiveList, InteractiveListWrapperProps, InteractiveListDirection, InteractiveListChangeEvent, } from '../InteractiveList';\nimport { KeyCodes } from '../../utils/keyCodes';\nimport { InputChangeEvent, Omit } from '../../common';\nexport interface AutosuggestItem {\n    key: string;\n    content?: React.ReactChild;\n}\nexport interface AutosuggestSelectEvent<T> {\n    value: T;\n}\nexport interface AutocompleteInputProps {\n    onChange(e: InputChangeEvent<string>): void;\n    clearable: boolean;\n    inputRef?(instance: HTMLElement | null): void;\n    value: string;\n    error: any;\n    [index: string]: any;\n}\nexport interface AutocompleteProps<T> extends TextFieldProps {\n    /**\n     * The optional message to show in case tehre are no suggestions to display.\n     */\n    noSuggestionsMessage?: React.ReactChild;\n    /**\n     * The current value of the text field, leading to a controlled text field.\n     */\n    suggestions?: Array<T>;\n    /**\n     * How to render each suggestion in the InteractiveList\n     */\n    renderSuggestion?(data: T): AutosuggestItem;\n    /**\n     * Event emitted every time suggestion is selected via mouse or keyboard.\n     */\n    onSuggestionSelected?(e: AutosuggestSelectEvent<T>): void;\n    /**\n     * Gets the suggestion value.\n     */\n    getSuggestionValue?(item: T): string;\n    /**\n     * The renderer of input field.\n     */\n    inputRenderer?(props: AutocompleteInputProps): JSX.Element;\n    /**\n     * Always `true` on Autocomplete components.\n     * @ignore\n     */\n    clearable?: boolean;\n    /**\n     * @ignore\n     */\n    inputRef?(instance: HTMLElement | null): void;\n}\nexport type SupportedAutocompleteProps<T> = Omit<AutocompleteProps<T>, 'clearable'>;\nexport interface AutocompleteState {\n    controlled: boolean;\n    listFocus: boolean;\n    focus: boolean;\n    open: boolean;\n    value: string;\n    error?: React.ReactChild;\n}\nconst AutocompleteWrapper = styled.div `\n  position: relative;\n  width: 100%;\n`;\nconst StyledInteractiveList = styled(InteractiveList) `\n  position: static;\n`;\ninterface StyledAutosuggestWrapperProps {\n    direction: InteractiveListDirection;\n}\nconst StyledAutosuggestWrapper = styled.ul<StyledAutosuggestWrapperProps>(themed(({ direction, theme: { ui1, ui4 } }) => css `\n      list-style: none;\n      width: 100%;\n      box-sizing: border-box;\n      box-shadow: none;\n      margin: 0;\n      padding: 0;\n      background: ${ui1};\n      border: 1px solid ${ui4};\n      ${direction === InteractiveListDirection.normal\n    ? 'border-top-color: transparent'\n    : 'border-bottom-color: transparent'};\n      max-height: 50vh;\n      position: absolute;\n      top: ${direction === InteractiveListDirection.normal ? '100%' : '0px'};\n      transform: translateY(${direction === InteractiveListDirection.normal ? 0 : -100}%);\n      overflow-y: auto;\n      z-index: 100;\n    `));\nfunction defaultSuggestionRenderer<T>(suggestion: T): AutosuggestItem {\n    const value = String(suggestion);\n    return {\n        content: value,\n        key: value,\n    };\n}\nfunction defaultInputRenderer(props: AutocompleteInputProps): JSX.Element {\n    return <TextField {...props}/>;\n}\nconst NotOpenComponent = <></>;\nconst AutosuggestWrapper = Object.assign(((({ border: _0, open, ...props }) => open ? <StyledAutosuggestWrapper {...props}/> : NotOpenComponent) as React.FC<InteractiveListWrapperProps>), { inner: {\n        get StyledAutosuggestWrapper() { return StyledAutosuggestWrapper as typeof StyledAutosuggestWrapper; }\n    } });\nAutosuggestWrapper.displayName = 'AutosuggestWrapper';\nclass AutocompleteInt<T> extends React.Component<SupportedAutocompleteProps<T> & FormContextProps, AutocompleteState> {\n    private delayedBlur: number;\n    private _element: HTMLElement | null;\n    constructor(props: AutocompleteProps<T>) {\n        super(props);\n        this.state = {\n            controlled: props.value !== undefined,\n            value: props.value || props.defaultValue || '',\n            open: false,\n            listFocus: false,\n            focus: false,\n            error: props.error,\n        };\n    }\n    UNSAFE_componentWillReceiveProps({ value = '', error }: AutocompleteProps<T>) {\n        if (this.state.controlled) {\n            this.setState({ value });\n        }\n        this.setState({ error });\n    }\n    componentDidMount() {\n        const { form } = this.props;\n        const { controlled } = this.state;\n        if (!controlled && form) {\n            form.subscribe(this);\n        }\n    }\n    componentWillUnmount() {\n        const { form } = this.props;\n        const { controlled } = this.state;\n        if (!controlled && form) {\n            form.unsubscribe(this);\n        }\n    }\n    private updateValue(value: string, suggestionSelected: boolean = false) {\n        const { onChange, name = '', form } = this.props;\n        if (!this.state.controlled) {\n            form ? form.change({ name, value }) : this.setState({ value });\n        }\n        suggestionSelected ? this.hide() : this.show();\n        typeof onChange === 'function' && onChange({ value });\n    }\n    private handleKeyDown = (e: React.KeyboardEvent<HTMLElement>) => {\n        const { keyCode } = e;\n        switch (keyCode) {\n            case KeyCodes.down:\n            case KeyCodes.up:\n                e.preventDefault();\n                const { open } = this.state;\n                open &&\n                    this.setState(() => ({\n                        listFocus: true,\n                        focus: false,\n                    }));\n                break;\n        }\n    };\n    private handleListChange = (e: InteractiveListChangeEvent) => {\n        const { suggestions = [] } = this.props;\n        const index = e.value[0];\n        const suggestion = suggestions[index];\n        this.handle(suggestion);\n    };\n    private handle(suggestion: T) {\n        const { getSuggestionValue, onSuggestionSelected } = this.props;\n        if (typeof getSuggestionValue === 'function') {\n            const value = getSuggestionValue(suggestion);\n            this.updateValue(value, true);\n        }\n        else if (typeof suggestion === 'string') {\n            this.updateValue(suggestion, true);\n        }\n        typeof onSuggestionSelected === 'function' && onSuggestionSelected({ value: suggestion });\n    }\n    private show = () => {\n        this.setState({ open: true });\n    };\n    private hide = () => {\n        this.setState(() => ({ open: false }), this.props.onBlur);\n    };\n    private handleFocus = () => {\n        const { onFocus } = this.props;\n        cancelAnimationFrame(this.delayedBlur);\n        this.show();\n        this.setState(() => ({ focus: true, listFocus: false }));\n        typeof onFocus === 'function' && onFocus();\n    };\n    private handleBlur = () => {\n        cancelAnimationFrame(this.delayedBlur);\n        this.delayedBlur = requestAnimationFrame(() => {\n            this.setState(() => ({\n                focus: false,\n                listFocus: false,\n            }), this.hide);\n        });\n    };\n    private changed = (e: TextFieldChangeEvent) => {\n        this.updateValue(e.value);\n    };\n    private setNode = (node: HTMLElement | null) => {\n        this._element = node;\n        const { inputRef } = this.props;\n        typeof inputRef === 'function' && inputRef(node);\n    };\n    render() {\n        const { suggestions = [], noSuggestionsMessage, renderSuggestion = defaultSuggestionRenderer, inputRenderer = defaultInputRenderer, getSuggestionValue: _1, onChange: _2, children: _3, onBlur: _4, onFocus: _5, defaultValue: _6, inputRef: _7, onSuggestionSelected: _8, info, ...props } = this.props;\n        const { open, listFocus, value, error } = this.state;\n        const isListOpen = open && (!!suggestions.length || !!noSuggestionsMessage);\n        return (<AutocompleteWrapper onKeyDown={this.handleKeyDown} onFocus={this.handleFocus} onBlur={this.handleBlur}>\n        {inputRenderer({\n            ...props,\n            clearable: true,\n            info: isListOpen ? undefined : info,\n            onChange: this.changed,\n            inputRef: this.setNode,\n            value,\n            error,\n        })}\n        <StyledInteractiveList data={suggestions.length ? suggestions.map(renderSuggestion) : [{ key: 'default', content: noSuggestionsMessage }]} disabled={suggestions.length === 0} customWrapper={AutosuggestWrapper} focus={listFocus} onChange={this.handleListChange} autoPosition open={isListOpen}/>\n        {isListOpen && info && <div>{info}</div>}\n      </AutocompleteWrapper>);\n    }\n    static inner = {\n        get AutocompleteWrapper() { return AutocompleteWrapper as typeof AutocompleteWrapper; },\n        get StyledInteractiveList() { return StyledInteractiveList as typeof StyledInteractiveList; }\n    };\n}\n/**\n * Extends a TextField with autocompletion capabilities.\n */\nexport const Autocomplete = withFormContext(AutocompleteInt);\nAutocomplete.displayName = 'Autocomplete';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}