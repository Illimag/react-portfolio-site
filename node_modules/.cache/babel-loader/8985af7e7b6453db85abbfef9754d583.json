{"ast":null,"code":"var _assertThisInitialized = require(\"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _getPrototypeOf = require(\"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _toConsumableArray = require(\"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _slicedToArray = require(\"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _regeneratorRuntime = require(\"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _createSuper = require(\"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _inherits = require(\"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _classCallCheck = require(\"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\n/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"pdfjs-dist/build/pdf\", [], factory);else if (typeof exports === 'object') exports[\"pdfjs-dist/build/pdf\"] = factory();else root[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();\n})(this, function () {\n  return (\n    /******/\n    function () {\n      // webpackBootstrap\n\n      /******/\n      \"use strict\";\n      /******/\n\n      var __webpack_modules__ = [,\n      /* 0 */\n\n      /* 1 */\n\n      /***/\n      function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.addLinkAttributes = addLinkAttributes;\n        exports.deprecated = deprecated;\n        exports.getFilenameFromUrl = getFilenameFromUrl;\n        exports.getPdfFilenameFromUrl = getPdfFilenameFromUrl;\n        exports.isDataScheme = isDataScheme;\n        exports.isFetchSupported = isFetchSupported;\n        exports.isPdfFile = isPdfFile;\n        exports.isValidFetchUrl = isValidFetchUrl;\n        exports.loadScript = loadScript;\n        exports.StatTimer = exports.RenderingCancelledException = exports.PDFDateString = exports.PageViewport = exports.LinkTarget = exports.DOMSVGFactory = exports.DOMCMapReaderFactory = exports.DOMCanvasFactory = exports.DEFAULT_LINK_REL = exports.BaseCMapReaderFactory = exports.BaseCanvasFactory = void 0;\n\n        var _util = __w_pdfjs_require__(2);\n\n        var DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\n        exports.DEFAULT_LINK_REL = DEFAULT_LINK_REL;\n        var SVG_NS = \"http://www.w3.org/2000/svg\";\n\n        var BaseCanvasFactory = /*#__PURE__*/function () {\n          function BaseCanvasFactory() {\n            _classCallCheck(this, BaseCanvasFactory);\n\n            if (this.constructor === BaseCanvasFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseCanvasFactory.\");\n            }\n          }\n\n          _createClass(BaseCanvasFactory, [{\n            key: \"create\",\n            value: function create(width, height) {\n              (0, _util.unreachable)(\"Abstract method `create` called.\");\n            }\n          }, {\n            key: \"reset\",\n            value: function reset(canvasAndContext, width, height) {\n              if (!canvasAndContext.canvas) {\n                throw new Error(\"Canvas is not specified\");\n              }\n\n              if (width <= 0 || height <= 0) {\n                throw new Error(\"Invalid canvas size\");\n              }\n\n              canvasAndContext.canvas.width = width;\n              canvasAndContext.canvas.height = height;\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy(canvasAndContext) {\n              if (!canvasAndContext.canvas) {\n                throw new Error(\"Canvas is not specified\");\n              }\n\n              canvasAndContext.canvas.width = 0;\n              canvasAndContext.canvas.height = 0;\n              canvasAndContext.canvas = null;\n              canvasAndContext.context = null;\n            }\n          }]);\n\n          return BaseCanvasFactory;\n        }();\n\n        exports.BaseCanvasFactory = BaseCanvasFactory;\n\n        var DOMCanvasFactory = /*#__PURE__*/function (_BaseCanvasFactory) {\n          _inherits(DOMCanvasFactory, _BaseCanvasFactory);\n\n          var _super = _createSuper(DOMCanvasFactory);\n\n          function DOMCanvasFactory() {\n            var _this;\n\n            var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n                _ref$ownerDocument = _ref.ownerDocument,\n                ownerDocument = _ref$ownerDocument === void 0 ? globalThis.document : _ref$ownerDocument;\n\n            _classCallCheck(this, DOMCanvasFactory);\n\n            _this = _super.call(this);\n            _this._document = ownerDocument;\n            return _this;\n          }\n\n          _createClass(DOMCanvasFactory, [{\n            key: \"create\",\n            value: function create(width, height) {\n              if (width <= 0 || height <= 0) {\n                throw new Error(\"Invalid canvas size\");\n              }\n\n              var canvas = this._document.createElement(\"canvas\");\n\n              var context = canvas.getContext(\"2d\");\n              canvas.width = width;\n              canvas.height = height;\n              return {\n                canvas: canvas,\n                context: context\n              };\n            }\n          }]);\n\n          return DOMCanvasFactory;\n        }(BaseCanvasFactory);\n\n        exports.DOMCanvasFactory = DOMCanvasFactory;\n\n        var BaseCMapReaderFactory = /*#__PURE__*/function () {\n          function BaseCMapReaderFactory(_ref2) {\n            var _ref2$baseUrl = _ref2.baseUrl,\n                baseUrl = _ref2$baseUrl === void 0 ? null : _ref2$baseUrl,\n                _ref2$isCompressed = _ref2.isCompressed,\n                isCompressed = _ref2$isCompressed === void 0 ? false : _ref2$isCompressed;\n\n            _classCallCheck(this, BaseCMapReaderFactory);\n\n            if (this.constructor === BaseCMapReaderFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseCMapReaderFactory.\");\n            }\n\n            this.baseUrl = baseUrl;\n            this.isCompressed = isCompressed;\n          }\n\n          _createClass(BaseCMapReaderFactory, [{\n            key: \"fetch\",\n            value: function () {\n              var _fetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref3) {\n                var _this2 = this;\n\n                var name, url, compressionType;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        name = _ref3.name;\n\n                        if (this.baseUrl) {\n                          _context.next = 3;\n                          break;\n                        }\n\n                        throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n\n                      case 3:\n                        if (name) {\n                          _context.next = 5;\n                          break;\n                        }\n\n                        throw new Error(\"CMap name must be specified.\");\n\n                      case 5:\n                        url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n                        compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n                        return _context.abrupt(\"return\", this._fetchData(url, compressionType).catch(function (reason) {\n                          throw new Error(\"Unable to load \".concat(_this2.isCompressed ? \"binary \" : \"\", \"CMap at: \").concat(url));\n                        }));\n\n                      case 8:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, this);\n              }));\n\n              function fetch(_x) {\n                return _fetch.apply(this, arguments);\n              }\n\n              return fetch;\n            }()\n          }, {\n            key: \"_fetchData\",\n            value: function _fetchData(url, compressionType) {\n              (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n            }\n          }]);\n\n          return BaseCMapReaderFactory;\n        }();\n\n        exports.BaseCMapReaderFactory = BaseCMapReaderFactory;\n\n        var DOMCMapReaderFactory = /*#__PURE__*/function (_BaseCMapReaderFactor) {\n          _inherits(DOMCMapReaderFactory, _BaseCMapReaderFactor);\n\n          var _super2 = _createSuper(DOMCMapReaderFactory);\n\n          function DOMCMapReaderFactory() {\n            _classCallCheck(this, DOMCMapReaderFactory);\n\n            return _super2.apply(this, arguments);\n          }\n\n          _createClass(DOMCMapReaderFactory, [{\n            key: \"_fetchData\",\n            value: function _fetchData(url, compressionType) {\n              var _this3 = this;\n\n              if (isFetchSupported() && isValidFetchUrl(url, document.baseURI)) {\n                return fetch(url).then( /*#__PURE__*/function () {\n                  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(response) {\n                    var cMapData;\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            if (response.ok) {\n                              _context2.next = 2;\n                              break;\n                            }\n\n                            throw new Error(response.statusText);\n\n                          case 2:\n                            if (!_this3.isCompressed) {\n                              _context2.next = 10;\n                              break;\n                            }\n\n                            _context2.t0 = Uint8Array;\n                            _context2.next = 6;\n                            return response.arrayBuffer();\n\n                          case 6:\n                            _context2.t1 = _context2.sent;\n                            cMapData = new _context2.t0(_context2.t1);\n                            _context2.next = 15;\n                            break;\n\n                          case 10:\n                            _context2.t2 = (0, _util.stringToBytes);\n                            _context2.next = 13;\n                            return response.text();\n\n                          case 13:\n                            _context2.t3 = _context2.sent;\n                            cMapData = (0, _context2.t2)(_context2.t3);\n\n                          case 15:\n                            return _context2.abrupt(\"return\", {\n                              cMapData: cMapData,\n                              compressionType: compressionType\n                            });\n\n                          case 16:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x2) {\n                    return _ref4.apply(this, arguments);\n                  };\n                }());\n              }\n\n              return new Promise(function (resolve, reject) {\n                var request = new XMLHttpRequest();\n                request.open(\"GET\", url, true);\n\n                if (_this3.isCompressed) {\n                  request.responseType = \"arraybuffer\";\n                }\n\n                request.onreadystatechange = function () {\n                  if (request.readyState !== XMLHttpRequest.DONE) {\n                    return;\n                  }\n\n                  if (request.status === 200 || request.status === 0) {\n                    var cMapData;\n\n                    if (_this3.isCompressed && request.response) {\n                      cMapData = new Uint8Array(request.response);\n                    } else if (!_this3.isCompressed && request.responseText) {\n                      cMapData = (0, _util.stringToBytes)(request.responseText);\n                    }\n\n                    if (cMapData) {\n                      resolve({\n                        cMapData: cMapData,\n                        compressionType: compressionType\n                      });\n                      return;\n                    }\n                  }\n\n                  reject(new Error(request.statusText));\n                };\n\n                request.send(null);\n              });\n            }\n          }]);\n\n          return DOMCMapReaderFactory;\n        }(BaseCMapReaderFactory);\n\n        exports.DOMCMapReaderFactory = DOMCMapReaderFactory;\n\n        var DOMSVGFactory = /*#__PURE__*/function () {\n          function DOMSVGFactory() {\n            _classCallCheck(this, DOMSVGFactory);\n          }\n\n          _createClass(DOMSVGFactory, [{\n            key: \"create\",\n            value: function create(width, height) {\n              (0, _util.assert)(width > 0 && height > 0, \"Invalid SVG dimensions\");\n              var svg = document.createElementNS(SVG_NS, \"svg:svg\");\n              svg.setAttribute(\"version\", \"1.1\");\n              svg.setAttribute(\"width\", width + \"px\");\n              svg.setAttribute(\"height\", height + \"px\");\n              svg.setAttribute(\"preserveAspectRatio\", \"none\");\n              svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n              return svg;\n            }\n          }, {\n            key: \"createElement\",\n            value: function createElement(type) {\n              (0, _util.assert)(typeof type === \"string\", \"Invalid SVG element type\");\n              return document.createElementNS(SVG_NS, type);\n            }\n          }]);\n\n          return DOMSVGFactory;\n        }();\n\n        exports.DOMSVGFactory = DOMSVGFactory;\n\n        var PageViewport = /*#__PURE__*/function () {\n          function PageViewport(_ref5) {\n            var viewBox = _ref5.viewBox,\n                scale = _ref5.scale,\n                rotation = _ref5.rotation,\n                _ref5$offsetX = _ref5.offsetX,\n                offsetX = _ref5$offsetX === void 0 ? 0 : _ref5$offsetX,\n                _ref5$offsetY = _ref5.offsetY,\n                offsetY = _ref5$offsetY === void 0 ? 0 : _ref5$offsetY,\n                _ref5$dontFlip = _ref5.dontFlip,\n                dontFlip = _ref5$dontFlip === void 0 ? false : _ref5$dontFlip;\n\n            _classCallCheck(this, PageViewport);\n\n            this.viewBox = viewBox;\n            this.scale = scale;\n            this.rotation = rotation;\n            this.offsetX = offsetX;\n            this.offsetY = offsetY;\n            var centerX = (viewBox[2] + viewBox[0]) / 2;\n            var centerY = (viewBox[3] + viewBox[1]) / 2;\n            var rotateA, rotateB, rotateC, rotateD;\n            rotation %= 360;\n\n            if (rotation < 0) {\n              rotation += 360;\n            }\n\n            switch (rotation) {\n              case 180:\n                rotateA = -1;\n                rotateB = 0;\n                rotateC = 0;\n                rotateD = 1;\n                break;\n\n              case 90:\n                rotateA = 0;\n                rotateB = 1;\n                rotateC = 1;\n                rotateD = 0;\n                break;\n\n              case 270:\n                rotateA = 0;\n                rotateB = -1;\n                rotateC = -1;\n                rotateD = 0;\n                break;\n\n              case 0:\n                rotateA = 1;\n                rotateB = 0;\n                rotateC = 0;\n                rotateD = -1;\n                break;\n\n              default:\n                throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\");\n            }\n\n            if (dontFlip) {\n              rotateC = -rotateC;\n              rotateD = -rotateD;\n            }\n\n            var offsetCanvasX, offsetCanvasY;\n            var width, height;\n\n            if (rotateA === 0) {\n              offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n              offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n              width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n              height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n            } else {\n              offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n              offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n              width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n              height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n            }\n\n            this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n            this.width = width;\n            this.height = height;\n          }\n\n          _createClass(PageViewport, [{\n            key: \"clone\",\n            value: function clone() {\n              var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n                  _ref6$scale = _ref6.scale,\n                  scale = _ref6$scale === void 0 ? this.scale : _ref6$scale,\n                  _ref6$rotation = _ref6.rotation,\n                  rotation = _ref6$rotation === void 0 ? this.rotation : _ref6$rotation,\n                  _ref6$offsetX = _ref6.offsetX,\n                  offsetX = _ref6$offsetX === void 0 ? this.offsetX : _ref6$offsetX,\n                  _ref6$offsetY = _ref6.offsetY,\n                  offsetY = _ref6$offsetY === void 0 ? this.offsetY : _ref6$offsetY,\n                  _ref6$dontFlip = _ref6.dontFlip,\n                  dontFlip = _ref6$dontFlip === void 0 ? false : _ref6$dontFlip;\n\n              return new PageViewport({\n                viewBox: this.viewBox.slice(),\n                scale: scale,\n                rotation: rotation,\n                offsetX: offsetX,\n                offsetY: offsetY,\n                dontFlip: dontFlip\n              });\n            }\n          }, {\n            key: \"convertToViewportPoint\",\n            value: function convertToViewportPoint(x, y) {\n              return _util.Util.applyTransform([x, y], this.transform);\n            }\n          }, {\n            key: \"convertToViewportRectangle\",\n            value: function convertToViewportRectangle(rect) {\n              var topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform);\n\n              var bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform);\n\n              return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n            }\n          }, {\n            key: \"convertToPdfPoint\",\n            value: function convertToPdfPoint(x, y) {\n              return _util.Util.applyInverseTransform([x, y], this.transform);\n            }\n          }]);\n\n          return PageViewport;\n        }();\n\n        exports.PageViewport = PageViewport;\n\n        var RenderingCancelledException = /*#__PURE__*/function (_util$BaseException) {\n          _inherits(RenderingCancelledException, _util$BaseException);\n\n          var _super3 = _createSuper(RenderingCancelledException);\n\n          function RenderingCancelledException(msg, type) {\n            var _this4;\n\n            _classCallCheck(this, RenderingCancelledException);\n\n            _this4 = _super3.call(this, msg);\n            _this4.type = type;\n            return _this4;\n          }\n\n          return RenderingCancelledException;\n        }(_util.BaseException);\n\n        exports.RenderingCancelledException = RenderingCancelledException;\n        var LinkTarget = {\n          NONE: 0,\n          SELF: 1,\n          BLANK: 2,\n          PARENT: 3,\n          TOP: 4\n        };\n        exports.LinkTarget = LinkTarget;\n\n        function addLinkAttributes(link) {\n          var _ref7 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n              url = _ref7.url,\n              target = _ref7.target,\n              rel = _ref7.rel,\n              _ref7$enabled = _ref7.enabled,\n              enabled = _ref7$enabled === void 0 ? true : _ref7$enabled;\n\n          (0, _util.assert)(url && typeof url === \"string\", 'addLinkAttributes: A valid \"url\" parameter must provided.');\n          var urlNullRemoved = (0, _util.removeNullCharacters)(url);\n\n          if (enabled) {\n            link.href = link.title = urlNullRemoved;\n          } else {\n            link.href = \"\";\n            link.title = \"Disabled: \".concat(urlNullRemoved);\n\n            link.onclick = function () {\n              return false;\n            };\n          }\n\n          var targetStr = \"\";\n\n          switch (target) {\n            case LinkTarget.NONE:\n              break;\n\n            case LinkTarget.SELF:\n              targetStr = \"_self\";\n              break;\n\n            case LinkTarget.BLANK:\n              targetStr = \"_blank\";\n              break;\n\n            case LinkTarget.PARENT:\n              targetStr = \"_parent\";\n              break;\n\n            case LinkTarget.TOP:\n              targetStr = \"_top\";\n              break;\n          }\n\n          link.target = targetStr;\n          link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n        }\n\n        function isDataScheme(url) {\n          var ii = url.length;\n          var i = 0;\n\n          while (i < ii && url[i].trim() === \"\") {\n            i++;\n          }\n\n          return url.substring(i, i + 5).toLowerCase() === \"data:\";\n        }\n\n        function isPdfFile(filename) {\n          return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n        }\n\n        function getFilenameFromUrl(url) {\n          var anchor = url.indexOf(\"#\");\n          var query = url.indexOf(\"?\");\n          var end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length);\n          return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n        }\n\n        function getPdfFilenameFromUrl(url) {\n          var defaultFilename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"document.pdf\";\n\n          if (typeof url !== \"string\") {\n            return defaultFilename;\n          }\n\n          if (isDataScheme(url)) {\n            (0, _util.warn)('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n            return defaultFilename;\n          }\n\n          var reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n          var reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n          var splitURI = reURI.exec(url);\n          var suggestedFilename = reFilename.exec(splitURI[1]) || reFilename.exec(splitURI[2]) || reFilename.exec(splitURI[3]);\n\n          if (suggestedFilename) {\n            suggestedFilename = suggestedFilename[0];\n\n            if (suggestedFilename.includes(\"%\")) {\n              try {\n                suggestedFilename = reFilename.exec(decodeURIComponent(suggestedFilename))[0];\n              } catch (ex) {}\n            }\n          }\n\n          return suggestedFilename || defaultFilename;\n        }\n\n        var StatTimer = /*#__PURE__*/function () {\n          function StatTimer() {\n            _classCallCheck(this, StatTimer);\n\n            this.started = Object.create(null);\n            this.times = [];\n          }\n\n          _createClass(StatTimer, [{\n            key: \"time\",\n            value: function time(name) {\n              if (name in this.started) {\n                (0, _util.warn)(\"Timer is already running for \".concat(name));\n              }\n\n              this.started[name] = Date.now();\n            }\n          }, {\n            key: \"timeEnd\",\n            value: function timeEnd(name) {\n              if (!(name in this.started)) {\n                (0, _util.warn)(\"Timer has not been started for \".concat(name));\n              }\n\n              this.times.push({\n                name: name,\n                start: this.started[name],\n                end: Date.now()\n              });\n              delete this.started[name];\n            }\n          }, {\n            key: \"toString\",\n            value: function toString() {\n              var outBuf = [];\n              var longest = 0;\n\n              var _iterator = _createForOfIteratorHelper(this.times),\n                  _step;\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  var time = _step.value;\n                  var name = time.name;\n\n                  if (name.length > longest) {\n                    longest = name.length;\n                  }\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n              var _iterator2 = _createForOfIteratorHelper(this.times),\n                  _step2;\n\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var _time = _step2.value;\n                  var duration = _time.end - _time.start;\n                  outBuf.push(\"\".concat(_time.name.padEnd(longest), \" \").concat(duration, \"ms\\n\"));\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n\n              return outBuf.join(\"\");\n            }\n          }]);\n\n          return StatTimer;\n        }();\n\n        exports.StatTimer = StatTimer;\n\n        function isFetchSupported() {\n          return typeof fetch !== \"undefined\" && typeof Response !== \"undefined\" && \"body\" in Response.prototype && typeof ReadableStream !== \"undefined\";\n        }\n\n        function isValidFetchUrl(url, baseUrl) {\n          try {\n            var _ref8 = baseUrl ? new URL(url, baseUrl) : new URL(url),\n                protocol = _ref8.protocol;\n\n            return protocol === \"http:\" || protocol === \"https:\";\n          } catch (ex) {\n            return false;\n          }\n        }\n\n        function loadScript(src) {\n          var removeScriptElement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          return new Promise(function (resolve, reject) {\n            var script = document.createElement(\"script\");\n            script.src = src;\n\n            script.onload = function (evt) {\n              if (removeScriptElement) {\n                script.remove();\n              }\n\n              resolve(evt);\n            };\n\n            script.onerror = function () {\n              reject(new Error(\"Cannot load script at: \".concat(script.src)));\n            };\n\n            (document.head || document.documentElement).appendChild(script);\n          });\n        }\n\n        function deprecated(details) {\n          console.log(\"Deprecated API usage: \" + details);\n        }\n\n        var pdfDateStringRegex;\n\n        var PDFDateString = /*#__PURE__*/function () {\n          function PDFDateString() {\n            _classCallCheck(this, PDFDateString);\n          }\n\n          _createClass(PDFDateString, null, [{\n            key: \"toDateObject\",\n            value: function toDateObject(input) {\n              if (!input || !(0, _util.isString)(input)) {\n                return null;\n              }\n\n              if (!pdfDateStringRegex) {\n                pdfDateStringRegex = new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n              }\n\n              var matches = pdfDateStringRegex.exec(input);\n\n              if (!matches) {\n                return null;\n              }\n\n              var year = parseInt(matches[1], 10);\n              var month = parseInt(matches[2], 10);\n              month = month >= 1 && month <= 12 ? month - 1 : 0;\n              var day = parseInt(matches[3], 10);\n              day = day >= 1 && day <= 31 ? day : 1;\n              var hour = parseInt(matches[4], 10);\n              hour = hour >= 0 && hour <= 23 ? hour : 0;\n              var minute = parseInt(matches[5], 10);\n              minute = minute >= 0 && minute <= 59 ? minute : 0;\n              var second = parseInt(matches[6], 10);\n              second = second >= 0 && second <= 59 ? second : 0;\n              var universalTimeRelation = matches[7] || \"Z\";\n              var offsetHour = parseInt(matches[8], 10);\n              offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n              var offsetMinute = parseInt(matches[9], 10) || 0;\n              offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n              if (universalTimeRelation === \"-\") {\n                hour += offsetHour;\n                minute += offsetMinute;\n              } else if (universalTimeRelation === \"+\") {\n                hour -= offsetHour;\n                minute -= offsetMinute;\n              }\n\n              return new Date(Date.UTC(year, month, day, hour, minute, second));\n            }\n          }]);\n\n          return PDFDateString;\n        }();\n\n        exports.PDFDateString = PDFDateString;\n        /***/\n      },\n      /* 2 */\n\n      /***/\n      function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.arrayByteLength = arrayByteLength;\n        exports.arraysToBytes = arraysToBytes;\n        exports.assert = assert;\n        exports.bytesToString = bytesToString;\n        exports.createObjectURL = createObjectURL;\n        exports.createPromiseCapability = createPromiseCapability;\n        exports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n        exports.escapeString = escapeString;\n        exports.getModificationDate = getModificationDate;\n        exports.getVerbosityLevel = getVerbosityLevel;\n        exports.info = info;\n        exports.isArrayBuffer = isArrayBuffer;\n        exports.isArrayEqual = isArrayEqual;\n        exports.isAscii = isAscii;\n        exports.isBool = isBool;\n        exports.isNum = isNum;\n        exports.isSameOrigin = isSameOrigin;\n        exports.isString = isString;\n        exports.objectFromMap = objectFromMap;\n        exports.objectSize = objectSize;\n        exports.removeNullCharacters = removeNullCharacters;\n        exports.setVerbosityLevel = setVerbosityLevel;\n        exports.shadow = shadow;\n        exports.string32 = string32;\n        exports.stringToBytes = stringToBytes;\n        exports.stringToPDFString = stringToPDFString;\n        exports.stringToUTF16BEString = stringToUTF16BEString;\n        exports.stringToUTF8String = stringToUTF8String;\n        exports.unreachable = unreachable;\n        exports.utf8StringToString = utf8StringToString;\n        exports.warn = warn;\n        exports.VerbosityLevel = exports.Util = exports.UNSUPPORTED_FEATURES = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.PageActionEventType = exports.OPS = exports.MissingPDFException = exports.IsLittleEndianCached = exports.IsEvalSupportedCached = exports.InvalidPDFException = exports.ImageKind = exports.IDENTITY_MATRIX = exports.FormatError = exports.FontType = exports.FONT_IDENTITY_MATRIX = exports.DocumentActionEventType = exports.CMapCompressionType = exports.BaseException = exports.AnnotationType = exports.AnnotationStateModelType = exports.AnnotationReviewState = exports.AnnotationReplyType = exports.AnnotationMarkedState = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.AnnotationActionEventType = exports.AbortException = void 0;\n\n        __w_pdfjs_require__(3);\n\n        var IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n        exports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n        var FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n        exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n        var PermissionFlag = {\n          PRINT: 0x04,\n          MODIFY_CONTENTS: 0x08,\n          COPY: 0x10,\n          MODIFY_ANNOTATIONS: 0x20,\n          FILL_INTERACTIVE_FORMS: 0x100,\n          COPY_FOR_ACCESSIBILITY: 0x200,\n          ASSEMBLE: 0x400,\n          PRINT_HIGH_QUALITY: 0x800\n        };\n        exports.PermissionFlag = PermissionFlag;\n        var TextRenderingMode = {\n          FILL: 0,\n          STROKE: 1,\n          FILL_STROKE: 2,\n          INVISIBLE: 3,\n          FILL_ADD_TO_PATH: 4,\n          STROKE_ADD_TO_PATH: 5,\n          FILL_STROKE_ADD_TO_PATH: 6,\n          ADD_TO_PATH: 7,\n          FILL_STROKE_MASK: 3,\n          ADD_TO_PATH_FLAG: 4\n        };\n        exports.TextRenderingMode = TextRenderingMode;\n        var ImageKind = {\n          GRAYSCALE_1BPP: 1,\n          RGB_24BPP: 2,\n          RGBA_32BPP: 3\n        };\n        exports.ImageKind = ImageKind;\n        var AnnotationType = {\n          TEXT: 1,\n          LINK: 2,\n          FREETEXT: 3,\n          LINE: 4,\n          SQUARE: 5,\n          CIRCLE: 6,\n          POLYGON: 7,\n          POLYLINE: 8,\n          HIGHLIGHT: 9,\n          UNDERLINE: 10,\n          SQUIGGLY: 11,\n          STRIKEOUT: 12,\n          STAMP: 13,\n          CARET: 14,\n          INK: 15,\n          POPUP: 16,\n          FILEATTACHMENT: 17,\n          SOUND: 18,\n          MOVIE: 19,\n          WIDGET: 20,\n          SCREEN: 21,\n          PRINTERMARK: 22,\n          TRAPNET: 23,\n          WATERMARK: 24,\n          THREED: 25,\n          REDACT: 26\n        };\n        exports.AnnotationType = AnnotationType;\n        var AnnotationStateModelType = {\n          MARKED: \"Marked\",\n          REVIEW: \"Review\"\n        };\n        exports.AnnotationStateModelType = AnnotationStateModelType;\n        var AnnotationMarkedState = {\n          MARKED: \"Marked\",\n          UNMARKED: \"Unmarked\"\n        };\n        exports.AnnotationMarkedState = AnnotationMarkedState;\n        var AnnotationReviewState = {\n          ACCEPTED: \"Accepted\",\n          REJECTED: \"Rejected\",\n          CANCELLED: \"Cancelled\",\n          COMPLETED: \"Completed\",\n          NONE: \"None\"\n        };\n        exports.AnnotationReviewState = AnnotationReviewState;\n        var AnnotationReplyType = {\n          GROUP: \"Group\",\n          REPLY: \"R\"\n        };\n        exports.AnnotationReplyType = AnnotationReplyType;\n        var AnnotationFlag = {\n          INVISIBLE: 0x01,\n          HIDDEN: 0x02,\n          PRINT: 0x04,\n          NOZOOM: 0x08,\n          NOROTATE: 0x10,\n          NOVIEW: 0x20,\n          READONLY: 0x40,\n          LOCKED: 0x80,\n          TOGGLENOVIEW: 0x100,\n          LOCKEDCONTENTS: 0x200\n        };\n        exports.AnnotationFlag = AnnotationFlag;\n        var AnnotationFieldFlag = {\n          READONLY: 0x0000001,\n          REQUIRED: 0x0000002,\n          NOEXPORT: 0x0000004,\n          MULTILINE: 0x0001000,\n          PASSWORD: 0x0002000,\n          NOTOGGLETOOFF: 0x0004000,\n          RADIO: 0x0008000,\n          PUSHBUTTON: 0x0010000,\n          COMBO: 0x0020000,\n          EDIT: 0x0040000,\n          SORT: 0x0080000,\n          FILESELECT: 0x0100000,\n          MULTISELECT: 0x0200000,\n          DONOTSPELLCHECK: 0x0400000,\n          DONOTSCROLL: 0x0800000,\n          COMB: 0x1000000,\n          RICHTEXT: 0x2000000,\n          RADIOSINUNISON: 0x2000000,\n          COMMITONSELCHANGE: 0x4000000\n        };\n        exports.AnnotationFieldFlag = AnnotationFieldFlag;\n        var AnnotationBorderStyleType = {\n          SOLID: 1,\n          DASHED: 2,\n          BEVELED: 3,\n          INSET: 4,\n          UNDERLINE: 5\n        };\n        exports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n        var AnnotationActionEventType = {\n          E: \"Mouse Enter\",\n          X: \"Mouse Exit\",\n          D: \"Mouse Down\",\n          U: \"Mouse Up\",\n          Fo: \"Focus\",\n          Bl: \"Blur\",\n          PO: \"PageOpen\",\n          PC: \"PageClose\",\n          PV: \"PageVisible\",\n          PI: \"PageInvisible\",\n          K: \"Keystroke\",\n          F: \"Format\",\n          V: \"Validate\",\n          C: \"Calculate\"\n        };\n        exports.AnnotationActionEventType = AnnotationActionEventType;\n        var DocumentActionEventType = {\n          WC: \"WillClose\",\n          WS: \"WillSave\",\n          DS: \"DidSave\",\n          WP: \"WillPrint\",\n          DP: \"DidPrint\"\n        };\n        exports.DocumentActionEventType = DocumentActionEventType;\n        var PageActionEventType = {\n          O: \"PageOpen\",\n          C: \"PageClose\"\n        };\n        exports.PageActionEventType = PageActionEventType;\n        var StreamType = {\n          UNKNOWN: \"UNKNOWN\",\n          FLATE: \"FLATE\",\n          LZW: \"LZW\",\n          DCT: \"DCT\",\n          JPX: \"JPX\",\n          JBIG: \"JBIG\",\n          A85: \"A85\",\n          AHX: \"AHX\",\n          CCF: \"CCF\",\n          RLX: \"RLX\"\n        };\n        exports.StreamType = StreamType;\n        var FontType = {\n          UNKNOWN: \"UNKNOWN\",\n          TYPE1: \"TYPE1\",\n          TYPE1C: \"TYPE1C\",\n          CIDFONTTYPE0: \"CIDFONTTYPE0\",\n          CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n          TRUETYPE: \"TRUETYPE\",\n          CIDFONTTYPE2: \"CIDFONTTYPE2\",\n          TYPE3: \"TYPE3\",\n          OPENTYPE: \"OPENTYPE\",\n          TYPE0: \"TYPE0\",\n          MMTYPE1: \"MMTYPE1\"\n        };\n        exports.FontType = FontType;\n        var VerbosityLevel = {\n          ERRORS: 0,\n          WARNINGS: 1,\n          INFOS: 5\n        };\n        exports.VerbosityLevel = VerbosityLevel;\n        var CMapCompressionType = {\n          NONE: 0,\n          BINARY: 1,\n          STREAM: 2\n        };\n        exports.CMapCompressionType = CMapCompressionType;\n        var OPS = {\n          dependency: 1,\n          setLineWidth: 2,\n          setLineCap: 3,\n          setLineJoin: 4,\n          setMiterLimit: 5,\n          setDash: 6,\n          setRenderingIntent: 7,\n          setFlatness: 8,\n          setGState: 9,\n          save: 10,\n          restore: 11,\n          transform: 12,\n          moveTo: 13,\n          lineTo: 14,\n          curveTo: 15,\n          curveTo2: 16,\n          curveTo3: 17,\n          closePath: 18,\n          rectangle: 19,\n          stroke: 20,\n          closeStroke: 21,\n          fill: 22,\n          eoFill: 23,\n          fillStroke: 24,\n          eoFillStroke: 25,\n          closeFillStroke: 26,\n          closeEOFillStroke: 27,\n          endPath: 28,\n          clip: 29,\n          eoClip: 30,\n          beginText: 31,\n          endText: 32,\n          setCharSpacing: 33,\n          setWordSpacing: 34,\n          setHScale: 35,\n          setLeading: 36,\n          setFont: 37,\n          setTextRenderingMode: 38,\n          setTextRise: 39,\n          moveText: 40,\n          setLeadingMoveText: 41,\n          setTextMatrix: 42,\n          nextLine: 43,\n          showText: 44,\n          showSpacedText: 45,\n          nextLineShowText: 46,\n          nextLineSetSpacingShowText: 47,\n          setCharWidth: 48,\n          setCharWidthAndBounds: 49,\n          setStrokeColorSpace: 50,\n          setFillColorSpace: 51,\n          setStrokeColor: 52,\n          setStrokeColorN: 53,\n          setFillColor: 54,\n          setFillColorN: 55,\n          setStrokeGray: 56,\n          setFillGray: 57,\n          setStrokeRGBColor: 58,\n          setFillRGBColor: 59,\n          setStrokeCMYKColor: 60,\n          setFillCMYKColor: 61,\n          shadingFill: 62,\n          beginInlineImage: 63,\n          beginImageData: 64,\n          endInlineImage: 65,\n          paintXObject: 66,\n          markPoint: 67,\n          markPointProps: 68,\n          beginMarkedContent: 69,\n          beginMarkedContentProps: 70,\n          endMarkedContent: 71,\n          beginCompat: 72,\n          endCompat: 73,\n          paintFormXObjectBegin: 74,\n          paintFormXObjectEnd: 75,\n          beginGroup: 76,\n          endGroup: 77,\n          beginAnnotations: 78,\n          endAnnotations: 79,\n          beginAnnotation: 80,\n          endAnnotation: 81,\n          paintJpegXObject: 82,\n          paintImageMaskXObject: 83,\n          paintImageMaskXObjectGroup: 84,\n          paintImageXObject: 85,\n          paintInlineImageXObject: 86,\n          paintInlineImageXObjectGroup: 87,\n          paintImageXObjectRepeat: 88,\n          paintImageMaskXObjectRepeat: 89,\n          paintSolidColorImageMask: 90,\n          constructPath: 91\n        };\n        exports.OPS = OPS;\n        var UNSUPPORTED_FEATURES = {\n          unknown: \"unknown\",\n          forms: \"forms\",\n          javaScript: \"javaScript\",\n          signatures: \"signatures\",\n          smask: \"smask\",\n          shadingPattern: \"shadingPattern\",\n          font: \"font\",\n          errorTilingPattern: \"errorTilingPattern\",\n          errorExtGState: \"errorExtGState\",\n          errorXObject: \"errorXObject\",\n          errorFontLoadType3: \"errorFontLoadType3\",\n          errorFontState: \"errorFontState\",\n          errorFontMissing: \"errorFontMissing\",\n          errorFontTranslate: \"errorFontTranslate\",\n          errorColorSpace: \"errorColorSpace\",\n          errorOperatorList: \"errorOperatorList\",\n          errorFontToUnicode: \"errorFontToUnicode\",\n          errorFontLoadNative: \"errorFontLoadNative\",\n          errorFontBuildPath: \"errorFontBuildPath\",\n          errorFontGetPath: \"errorFontGetPath\",\n          errorMarkedContent: \"errorMarkedContent\"\n        };\n        exports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\n        var PasswordResponses = {\n          NEED_PASSWORD: 1,\n          INCORRECT_PASSWORD: 2\n        };\n        exports.PasswordResponses = PasswordResponses;\n        var verbosity = VerbosityLevel.WARNINGS;\n\n        function setVerbosityLevel(level) {\n          if (Number.isInteger(level)) {\n            verbosity = level;\n          }\n        }\n\n        function getVerbosityLevel() {\n          return verbosity;\n        }\n\n        function info(msg) {\n          if (verbosity >= VerbosityLevel.INFOS) {\n            console.log(\"Info: \".concat(msg));\n          }\n        }\n\n        function warn(msg) {\n          if (verbosity >= VerbosityLevel.WARNINGS) {\n            console.log(\"Warning: \".concat(msg));\n          }\n        }\n\n        function unreachable(msg) {\n          throw new Error(msg);\n        }\n\n        function assert(cond, msg) {\n          if (!cond) {\n            unreachable(msg);\n          }\n        }\n\n        function isSameOrigin(baseUrl, otherUrl) {\n          var base;\n\n          try {\n            base = new URL(baseUrl);\n\n            if (!base.origin || base.origin === \"null\") {\n              return false;\n            }\n          } catch (e) {\n            return false;\n          }\n\n          var other = new URL(otherUrl, base);\n          return base.origin === other.origin;\n        }\n\n        function _isValidProtocol(url) {\n          if (!url) {\n            return false;\n          }\n\n          switch (url.protocol) {\n            case \"http:\":\n            case \"https:\":\n            case \"ftp:\":\n            case \"mailto:\":\n            case \"tel:\":\n              return true;\n\n            default:\n              return false;\n          }\n        }\n\n        function createValidAbsoluteUrl(url, baseUrl) {\n          if (!url) {\n            return null;\n          }\n\n          try {\n            var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n\n            if (_isValidProtocol(absoluteUrl)) {\n              return absoluteUrl;\n            }\n          } catch (ex) {}\n\n          return null;\n        }\n\n        function shadow(obj, prop, value) {\n          Object.defineProperty(obj, prop, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: false\n          });\n          return value;\n        }\n\n        var BaseException = function BaseExceptionClosure() {\n          function BaseException(message) {\n            if (this.constructor === BaseException) {\n              unreachable(\"Cannot initialize BaseException.\");\n            }\n\n            this.message = message;\n            this.name = this.constructor.name;\n          }\n\n          BaseException.prototype = new Error();\n          BaseException.constructor = BaseException;\n          return BaseException;\n        }();\n\n        exports.BaseException = BaseException;\n\n        var PasswordException = /*#__PURE__*/function (_BaseException) {\n          _inherits(PasswordException, _BaseException);\n\n          var _super4 = _createSuper(PasswordException);\n\n          function PasswordException(msg, code) {\n            var _this5;\n\n            _classCallCheck(this, PasswordException);\n\n            _this5 = _super4.call(this, msg);\n            _this5.code = code;\n            return _this5;\n          }\n\n          return PasswordException;\n        }(BaseException);\n\n        exports.PasswordException = PasswordException;\n\n        var UnknownErrorException = /*#__PURE__*/function (_BaseException2) {\n          _inherits(UnknownErrorException, _BaseException2);\n\n          var _super5 = _createSuper(UnknownErrorException);\n\n          function UnknownErrorException(msg, details) {\n            var _this6;\n\n            _classCallCheck(this, UnknownErrorException);\n\n            _this6 = _super5.call(this, msg);\n            _this6.details = details;\n            return _this6;\n          }\n\n          return UnknownErrorException;\n        }(BaseException);\n\n        exports.UnknownErrorException = UnknownErrorException;\n\n        var InvalidPDFException = /*#__PURE__*/function (_BaseException3) {\n          _inherits(InvalidPDFException, _BaseException3);\n\n          var _super6 = _createSuper(InvalidPDFException);\n\n          function InvalidPDFException() {\n            _classCallCheck(this, InvalidPDFException);\n\n            return _super6.apply(this, arguments);\n          }\n\n          return InvalidPDFException;\n        }(BaseException);\n\n        exports.InvalidPDFException = InvalidPDFException;\n\n        var MissingPDFException = /*#__PURE__*/function (_BaseException4) {\n          _inherits(MissingPDFException, _BaseException4);\n\n          var _super7 = _createSuper(MissingPDFException);\n\n          function MissingPDFException() {\n            _classCallCheck(this, MissingPDFException);\n\n            return _super7.apply(this, arguments);\n          }\n\n          return MissingPDFException;\n        }(BaseException);\n\n        exports.MissingPDFException = MissingPDFException;\n\n        var UnexpectedResponseException = /*#__PURE__*/function (_BaseException5) {\n          _inherits(UnexpectedResponseException, _BaseException5);\n\n          var _super8 = _createSuper(UnexpectedResponseException);\n\n          function UnexpectedResponseException(msg, status) {\n            var _this7;\n\n            _classCallCheck(this, UnexpectedResponseException);\n\n            _this7 = _super8.call(this, msg);\n            _this7.status = status;\n            return _this7;\n          }\n\n          return UnexpectedResponseException;\n        }(BaseException);\n\n        exports.UnexpectedResponseException = UnexpectedResponseException;\n\n        var FormatError = /*#__PURE__*/function (_BaseException6) {\n          _inherits(FormatError, _BaseException6);\n\n          var _super9 = _createSuper(FormatError);\n\n          function FormatError() {\n            _classCallCheck(this, FormatError);\n\n            return _super9.apply(this, arguments);\n          }\n\n          return FormatError;\n        }(BaseException);\n\n        exports.FormatError = FormatError;\n\n        var AbortException = /*#__PURE__*/function (_BaseException7) {\n          _inherits(AbortException, _BaseException7);\n\n          var _super10 = _createSuper(AbortException);\n\n          function AbortException() {\n            _classCallCheck(this, AbortException);\n\n            return _super10.apply(this, arguments);\n          }\n\n          return AbortException;\n        }(BaseException);\n\n        exports.AbortException = AbortException;\n        var NullCharactersRegExp = /\\x00/g;\n\n        function removeNullCharacters(str) {\n          if (typeof str !== \"string\") {\n            warn(\"The argument for removeNullCharacters must be a string.\");\n            return str;\n          }\n\n          return str.replace(NullCharactersRegExp, \"\");\n        }\n\n        function bytesToString(bytes) {\n          assert(bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined, \"Invalid argument for bytesToString\");\n          var length = bytes.length;\n          var MAX_ARGUMENT_COUNT = 8192;\n\n          if (length < MAX_ARGUMENT_COUNT) {\n            return String.fromCharCode.apply(null, bytes);\n          }\n\n          var strBuf = [];\n\n          for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n            var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n            var chunk = bytes.subarray(i, chunkEnd);\n            strBuf.push(String.fromCharCode.apply(null, chunk));\n          }\n\n          return strBuf.join(\"\");\n        }\n\n        function stringToBytes(str) {\n          assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n          var length = str.length;\n          var bytes = new Uint8Array(length);\n\n          for (var i = 0; i < length; ++i) {\n            bytes[i] = str.charCodeAt(i) & 0xff;\n          }\n\n          return bytes;\n        }\n\n        function arrayByteLength(arr) {\n          if (arr.length !== undefined) {\n            return arr.length;\n          }\n\n          assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n          return arr.byteLength;\n        }\n\n        function arraysToBytes(arr) {\n          var length = arr.length;\n\n          if (length === 1 && arr[0] instanceof Uint8Array) {\n            return arr[0];\n          }\n\n          var resultLength = 0;\n\n          for (var i = 0; i < length; i++) {\n            resultLength += arrayByteLength(arr[i]);\n          }\n\n          var pos = 0;\n          var data = new Uint8Array(resultLength);\n\n          for (var _i = 0; _i < length; _i++) {\n            var item = arr[_i];\n\n            if (!(item instanceof Uint8Array)) {\n              if (typeof item === \"string\") {\n                item = stringToBytes(item);\n              } else {\n                item = new Uint8Array(item);\n              }\n            }\n\n            var itemLength = item.byteLength;\n            data.set(item, pos);\n            pos += itemLength;\n          }\n\n          return data;\n        }\n\n        function string32(value) {\n          return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n        }\n\n        function objectSize(obj) {\n          return Object.keys(obj).length;\n        }\n\n        function objectFromMap(map) {\n          var obj = Object.create(null);\n\n          var _iterator3 = _createForOfIteratorHelper(map),\n              _step3;\n\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var _step3$value = _slicedToArray(_step3.value, 2),\n                  key = _step3$value[0],\n                  value = _step3$value[1];\n\n              obj[key] = value;\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n\n          return obj;\n        }\n\n        function isLittleEndian() {\n          var buffer8 = new Uint8Array(4);\n          buffer8[0] = 1;\n          var view32 = new Uint32Array(buffer8.buffer, 0, 1);\n          return view32[0] === 1;\n        }\n\n        var IsLittleEndianCached = {\n          get value() {\n            return shadow(this, \"value\", isLittleEndian());\n          }\n\n        };\n        exports.IsLittleEndianCached = IsLittleEndianCached;\n\n        function isEvalSupported() {\n          try {\n            new Function(\"\");\n            return true;\n          } catch (e) {\n            return false;\n          }\n        }\n\n        var IsEvalSupportedCached = {\n          get value() {\n            return shadow(this, \"value\", isEvalSupported());\n          }\n\n        };\n        exports.IsEvalSupportedCached = IsEvalSupportedCached;\n\n        var hexNumbers = _toConsumableArray(Array(256).keys()).map(function (n) {\n          return n.toString(16).padStart(2, \"0\");\n        });\n\n        var Util = /*#__PURE__*/function () {\n          function Util() {\n            _classCallCheck(this, Util);\n          }\n\n          _createClass(Util, null, [{\n            key: \"makeHexColor\",\n            value: function makeHexColor(r, g, b) {\n              return \"#\".concat(hexNumbers[r]).concat(hexNumbers[g]).concat(hexNumbers[b]);\n            }\n          }, {\n            key: \"transform\",\n            value: function transform(m1, m2) {\n              return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n            }\n          }, {\n            key: \"applyTransform\",\n            value: function applyTransform(p, m) {\n              var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n              var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n              return [xt, yt];\n            }\n          }, {\n            key: \"applyInverseTransform\",\n            value: function applyInverseTransform(p, m) {\n              var d = m[0] * m[3] - m[1] * m[2];\n              var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n              var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n              return [xt, yt];\n            }\n          }, {\n            key: \"getAxialAlignedBoundingBox\",\n            value: function getAxialAlignedBoundingBox(r, m) {\n              var p1 = Util.applyTransform(r, m);\n              var p2 = Util.applyTransform(r.slice(2, 4), m);\n              var p3 = Util.applyTransform([r[0], r[3]], m);\n              var p4 = Util.applyTransform([r[2], r[1]], m);\n              return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n            }\n          }, {\n            key: \"inverseTransform\",\n            value: function inverseTransform(m) {\n              var d = m[0] * m[3] - m[1] * m[2];\n              return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n            }\n          }, {\n            key: \"apply3dTransform\",\n            value: function apply3dTransform(m, v) {\n              return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n            }\n          }, {\n            key: \"singularValueDecompose2dScale\",\n            value: function singularValueDecompose2dScale(m) {\n              var transpose = [m[0], m[2], m[1], m[3]];\n              var a = m[0] * transpose[0] + m[1] * transpose[2];\n              var b = m[0] * transpose[1] + m[1] * transpose[3];\n              var c = m[2] * transpose[0] + m[3] * transpose[2];\n              var d = m[2] * transpose[1] + m[3] * transpose[3];\n              var first = (a + d) / 2;\n              var second = Math.sqrt(Math.pow(a + d, 2) - 4 * (a * d - c * b)) / 2;\n              var sx = first + second || 1;\n              var sy = first - second || 1;\n              return [Math.sqrt(sx), Math.sqrt(sy)];\n            }\n          }, {\n            key: \"normalizeRect\",\n            value: function normalizeRect(rect) {\n              var r = rect.slice(0);\n\n              if (rect[0] > rect[2]) {\n                r[0] = rect[2];\n                r[2] = rect[0];\n              }\n\n              if (rect[1] > rect[3]) {\n                r[1] = rect[3];\n                r[3] = rect[1];\n              }\n\n              return r;\n            }\n          }, {\n            key: \"intersect\",\n            value: function intersect(rect1, rect2) {\n              function compare(a, b) {\n                return a - b;\n              }\n\n              var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n              var orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n              var result = [];\n              rect1 = Util.normalizeRect(rect1);\n              rect2 = Util.normalizeRect(rect2);\n\n              if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n                result[0] = orderedX[1];\n                result[2] = orderedX[2];\n              } else {\n                return null;\n              }\n\n              if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n                result[1] = orderedY[1];\n                result[3] = orderedY[2];\n              } else {\n                return null;\n              }\n\n              return result;\n            }\n          }]);\n\n          return Util;\n        }();\n\n        exports.Util = Util;\n        var PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8, 0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018, 0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d, 0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac];\n\n        function stringToPDFString(str) {\n          var length = str.length,\n              strBuf = [];\n\n          if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n            for (var i = 2; i < length; i += 2) {\n              strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n            }\n          } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n            for (var _i2 = 2; _i2 < length; _i2 += 2) {\n              strBuf.push(String.fromCharCode(str.charCodeAt(_i2 + 1) << 8 | str.charCodeAt(_i2)));\n            }\n          } else {\n            for (var _i3 = 0; _i3 < length; ++_i3) {\n              var code = PDFStringTranslateTable[str.charCodeAt(_i3)];\n              strBuf.push(code ? String.fromCharCode(code) : str.charAt(_i3));\n            }\n          }\n\n          return strBuf.join(\"\");\n        }\n\n        function escapeString(str) {\n          return str.replace(/([()\\\\\\n\\r])/g, function (match) {\n            if (match === \"\\n\") {\n              return \"\\\\n\";\n            } else if (match === \"\\r\") {\n              return \"\\\\r\";\n            }\n\n            return \"\\\\\".concat(match);\n          });\n        }\n\n        function isAscii(str) {\n          return /^[\\x00-\\x7F]*$/.test(str);\n        }\n\n        function stringToUTF16BEString(str) {\n          var buf = [\"\\xFE\\xFF\"];\n\n          for (var i = 0, ii = str.length; i < ii; i++) {\n            var char = str.charCodeAt(i);\n            buf.push(String.fromCharCode(char >> 8 & 0xff), String.fromCharCode(char & 0xff));\n          }\n\n          return buf.join(\"\");\n        }\n\n        function stringToUTF8String(str) {\n          return decodeURIComponent(escape(str));\n        }\n\n        function utf8StringToString(str) {\n          return unescape(encodeURIComponent(str));\n        }\n\n        function isBool(v) {\n          return typeof v === \"boolean\";\n        }\n\n        function isNum(v) {\n          return typeof v === \"number\";\n        }\n\n        function isString(v) {\n          return typeof v === \"string\";\n        }\n\n        function isArrayBuffer(v) {\n          return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n        }\n\n        function isArrayEqual(arr1, arr2) {\n          if (arr1.length !== arr2.length) {\n            return false;\n          }\n\n          for (var i = 0, ii = arr1.length; i < ii; i++) {\n            if (arr1[i] !== arr2[i]) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n        function getModificationDate() {\n          var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n          var buffer = [date.getUTCFullYear().toString(), (date.getUTCMonth() + 1).toString().padStart(2, \"0\"), date.getUTCDate().toString().padStart(2, \"0\"), date.getUTCHours().toString().padStart(2, \"0\"), date.getUTCMinutes().toString().padStart(2, \"0\"), date.getUTCSeconds().toString().padStart(2, \"0\")];\n          return buffer.join(\"\");\n        }\n\n        function createPromiseCapability() {\n          var capability = Object.create(null);\n          var isSettled = false;\n          Object.defineProperty(capability, \"settled\", {\n            get: function get() {\n              return isSettled;\n            }\n          });\n          capability.promise = new Promise(function (resolve, reject) {\n            capability.resolve = function (data) {\n              isSettled = true;\n              resolve(data);\n            };\n\n            capability.reject = function (reason) {\n              isSettled = true;\n              reject(reason);\n            };\n          });\n          return capability;\n        }\n\n        function createObjectURL(data) {\n          var contentType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n          var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n          if (URL.createObjectURL && !forceDataSchema) {\n            return URL.createObjectURL(new Blob([data], {\n              type: contentType\n            }));\n          }\n\n          var digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n          var buffer = \"data:\".concat(contentType, \";base64,\");\n\n          for (var i = 0, ii = data.length; i < ii; i += 3) {\n            var b1 = data[i] & 0xff;\n            var b2 = data[i + 1] & 0xff;\n            var b3 = data[i + 2] & 0xff;\n            var d1 = b1 >> 2,\n                d2 = (b1 & 3) << 4 | b2 >> 4;\n            var d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n            var d4 = i + 2 < ii ? b3 & 0x3f : 64;\n            buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n          }\n\n          return buffer;\n        }\n        /***/\n\n      },\n      /* 3 */\n\n      /***/\n      function (__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) {\n        var _is_node = __w_pdfjs_require__(4);\n\n        ;\n        /***/\n      },\n      /* 4 */\n\n      /***/\n      function (__unused_webpack_module, exports) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.isNodeJS = void 0;\n        var isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions.nw && !(process.versions.electron && process.type && process.type !== \"browser\");\n        exports.isNodeJS = isNodeJS;\n        /***/\n      },\n      /* 5 */\n\n      /***/\n      function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.getDocument = getDocument;\n        exports.setPDFNetworkStreamFactory = setPDFNetworkStreamFactory;\n        exports.version = exports.PDFWorker = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFDataRangeTransport = exports.LoopbackPort = exports.DefaultCMapReaderFactory = exports.DefaultCanvasFactory = exports.build = void 0;\n\n        var _util = __w_pdfjs_require__(2);\n\n        var _display_utils = __w_pdfjs_require__(1);\n\n        var _font_loader = __w_pdfjs_require__(6);\n\n        var _node_utils = __w_pdfjs_require__(7);\n\n        var _annotation_storage = __w_pdfjs_require__(8);\n\n        var _api_compatibility = __w_pdfjs_require__(9);\n\n        var _canvas = __w_pdfjs_require__(10);\n\n        var _worker_options = __w_pdfjs_require__(12);\n\n        var _is_node = __w_pdfjs_require__(4);\n\n        var _message_handler = __w_pdfjs_require__(13);\n\n        var _metadata = __w_pdfjs_require__(14);\n\n        var _optional_content_config = __w_pdfjs_require__(15);\n\n        var _transport_stream = __w_pdfjs_require__(16);\n\n        var DEFAULT_RANGE_CHUNK_SIZE = 65536;\n        var RENDERING_CANCELLED_TIMEOUT = 100;\n        var DefaultCanvasFactory = _is_node.isNodeJS ? _node_utils.NodeCanvasFactory : _display_utils.DOMCanvasFactory;\n        exports.DefaultCanvasFactory = DefaultCanvasFactory;\n        var DefaultCMapReaderFactory = _is_node.isNodeJS ? _node_utils.NodeCMapReaderFactory : _display_utils.DOMCMapReaderFactory;\n        exports.DefaultCMapReaderFactory = DefaultCMapReaderFactory;\n        var createPDFNetworkStream;\n\n        function setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n          createPDFNetworkStream = pdfNetworkStreamFactory;\n        }\n\n        function getDocument(src) {\n          var task = new PDFDocumentLoadingTask();\n          var source;\n\n          if (typeof src === \"string\" || src instanceof URL) {\n            source = {\n              url: src\n            };\n          } else if ((0, _util.isArrayBuffer)(src)) {\n            source = {\n              data: src\n            };\n          } else if (src instanceof PDFDataRangeTransport) {\n            source = {\n              range: src\n            };\n          } else {\n            if (typeof src !== \"object\") {\n              throw new Error(\"Invalid parameter in getDocument, \" + \"need either string, URL, Uint8Array, or parameter object.\");\n            }\n\n            if (!src.url && !src.data && !src.range) {\n              throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n            }\n\n            source = src;\n          }\n\n          var params = Object.create(null);\n          var rangeTransport = null,\n              worker = null;\n\n          for (var key in source) {\n            var value = source[key];\n\n            switch (key) {\n              case \"url\":\n                if (typeof window !== \"undefined\") {\n                  try {\n                    params[key] = new URL(value, window.location).href;\n                    continue;\n                  } catch (ex) {\n                    (0, _util.warn)(\"Cannot create valid URL: \\\"\".concat(ex, \"\\\".\"));\n                  }\n                } else if (typeof value === \"string\" || value instanceof URL) {\n                  params[key] = value.toString();\n                  continue;\n                }\n\n                throw new Error(\"Invalid PDF url data: \" + \"either string or URL-object is expected in the url property.\");\n\n              case \"range\":\n                rangeTransport = value;\n                continue;\n\n              case \"worker\":\n                worker = value;\n                continue;\n\n              case \"data\":\n                if (_is_node.isNodeJS && typeof Buffer !== \"undefined\" && value instanceof Buffer) {\n                  params[key] = new Uint8Array(value);\n                } else if (value instanceof Uint8Array) {\n                  break;\n                } else if (typeof value === \"string\") {\n                  params[key] = (0, _util.stringToBytes)(value);\n                } else if (typeof value === \"object\" && value !== null && !isNaN(value.length)) {\n                  params[key] = new Uint8Array(value);\n                } else if ((0, _util.isArrayBuffer)(value)) {\n                  params[key] = new Uint8Array(value);\n                } else {\n                  throw new Error(\"Invalid PDF binary data: either typed array, \" + \"string, or array-like object is expected in the data property.\");\n                }\n\n                continue;\n            }\n\n            params[key] = value;\n          }\n\n          params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n          params.CMapReaderFactory = params.CMapReaderFactory || DefaultCMapReaderFactory;\n          params.ignoreErrors = params.stopAtErrors !== true;\n          params.fontExtraProperties = params.fontExtraProperties === true;\n          params.pdfBug = params.pdfBug === true;\n          params.enableXfa = params.enableXfa === true;\n\n          if (typeof params.docBaseUrl !== \"string\" || (0, _display_utils.isDataScheme)(params.docBaseUrl)) {\n            params.docBaseUrl = null;\n          }\n\n          if (!Number.isInteger(params.maxImageSize)) {\n            params.maxImageSize = -1;\n          }\n\n          if (typeof params.isEvalSupported !== \"boolean\") {\n            params.isEvalSupported = true;\n          }\n\n          if (typeof params.disableFontFace !== \"boolean\") {\n            params.disableFontFace = _api_compatibility.apiCompatibilityParams.disableFontFace || false;\n          }\n\n          if (typeof params.ownerDocument === \"undefined\") {\n            params.ownerDocument = globalThis.document;\n          }\n\n          if (typeof params.disableRange !== \"boolean\") {\n            params.disableRange = false;\n          }\n\n          if (typeof params.disableStream !== \"boolean\") {\n            params.disableStream = false;\n          }\n\n          if (typeof params.disableAutoFetch !== \"boolean\") {\n            params.disableAutoFetch = false;\n          }\n\n          (0, _util.setVerbosityLevel)(params.verbosity);\n\n          if (!worker) {\n            var workerParams = {\n              verbosity: params.verbosity,\n              port: _worker_options.GlobalWorkerOptions.workerPort\n            };\n            worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n            task._worker = worker;\n          }\n\n          var docId = task.docId;\n          worker.promise.then(function () {\n            if (task.destroyed) {\n              throw new Error(\"Loading aborted\");\n            }\n\n            var workerIdPromise = _fetchDocument(worker, params, rangeTransport, docId);\n\n            var networkStreamPromise = new Promise(function (resolve) {\n              var networkStream;\n\n              if (rangeTransport) {\n                networkStream = new _transport_stream.PDFDataTransportStream({\n                  length: params.length,\n                  initialData: params.initialData,\n                  progressiveDone: params.progressiveDone,\n                  contentDispositionFilename: params.contentDispositionFilename,\n                  disableRange: params.disableRange,\n                  disableStream: params.disableStream\n                }, rangeTransport);\n              } else if (!params.data) {\n                networkStream = createPDFNetworkStream({\n                  url: params.url,\n                  length: params.length,\n                  httpHeaders: params.httpHeaders,\n                  withCredentials: params.withCredentials,\n                  rangeChunkSize: params.rangeChunkSize,\n                  disableRange: params.disableRange,\n                  disableStream: params.disableStream\n                });\n              }\n\n              resolve(networkStream);\n            });\n            return Promise.all([workerIdPromise, networkStreamPromise]).then(function (_ref9) {\n              var _ref10 = _slicedToArray(_ref9, 2),\n                  workerId = _ref10[0],\n                  networkStream = _ref10[1];\n\n              if (task.destroyed) {\n                throw new Error(\"Loading aborted\");\n              }\n\n              var messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n              messageHandler.postMessageTransfers = worker.postMessageTransfers;\n              var transport = new WorkerTransport(messageHandler, task, networkStream, params);\n              task._transport = transport;\n              messageHandler.send(\"Ready\", null);\n            });\n          }).catch(task._capability.reject);\n          return task;\n        }\n\n        function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n          if (worker.destroyed) {\n            return Promise.reject(new Error(\"Worker was destroyed\"));\n          }\n\n          if (pdfDataRangeTransport) {\n            source.length = pdfDataRangeTransport.length;\n            source.initialData = pdfDataRangeTransport.initialData;\n            source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n            source.contentDispositionFilename = pdfDataRangeTransport.contentDispositionFilename;\n          }\n\n          return worker.messageHandler.sendWithPromise(\"GetDocRequest\", {\n            docId: docId,\n            apiVersion: '2.9.359',\n            source: {\n              data: source.data,\n              url: source.url,\n              password: source.password,\n              disableAutoFetch: source.disableAutoFetch,\n              rangeChunkSize: source.rangeChunkSize,\n              length: source.length\n            },\n            maxImageSize: source.maxImageSize,\n            disableFontFace: source.disableFontFace,\n            postMessageTransfers: worker.postMessageTransfers,\n            docBaseUrl: source.docBaseUrl,\n            ignoreErrors: source.ignoreErrors,\n            isEvalSupported: source.isEvalSupported,\n            fontExtraProperties: source.fontExtraProperties,\n            enableXfa: source.enableXfa\n          }).then(function (workerId) {\n            if (worker.destroyed) {\n              throw new Error(\"Worker was destroyed\");\n            }\n\n            return workerId;\n          });\n        }\n\n        var PDFDocumentLoadingTask = function PDFDocumentLoadingTaskClosure() {\n          var nextDocumentId = 0;\n\n          var PDFDocumentLoadingTask = /*#__PURE__*/function () {\n            function PDFDocumentLoadingTask() {\n              _classCallCheck(this, PDFDocumentLoadingTask);\n\n              this._capability = (0, _util.createPromiseCapability)();\n              this._transport = null;\n              this._worker = null;\n              this.docId = \"d\" + nextDocumentId++;\n              this.destroyed = false;\n              this.onPassword = null;\n              this.onProgress = null;\n              this.onUnsupportedFeature = null;\n            }\n\n            _createClass(PDFDocumentLoadingTask, [{\n              key: \"destroy\",\n              value: function destroy() {\n                var _this8 = this;\n\n                this.destroyed = true;\n                var transportDestroyed = !this._transport ? Promise.resolve() : this._transport.destroy();\n                return transportDestroyed.then(function () {\n                  _this8._transport = null;\n\n                  if (_this8._worker) {\n                    _this8._worker.destroy();\n\n                    _this8._worker = null;\n                  }\n                });\n              }\n            }, {\n              key: \"promise\",\n              get: function get() {\n                return this._capability.promise;\n              }\n            }]);\n\n            return PDFDocumentLoadingTask;\n          }();\n\n          return PDFDocumentLoadingTask;\n        }();\n\n        var PDFDataRangeTransport = /*#__PURE__*/function () {\n          function PDFDataRangeTransport(length, initialData) {\n            var progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            var contentDispositionFilename = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n            _classCallCheck(this, PDFDataRangeTransport);\n\n            this.length = length;\n            this.initialData = initialData;\n            this.progressiveDone = progressiveDone;\n            this.contentDispositionFilename = contentDispositionFilename;\n            this._rangeListeners = [];\n            this._progressListeners = [];\n            this._progressiveReadListeners = [];\n            this._progressiveDoneListeners = [];\n            this._readyCapability = (0, _util.createPromiseCapability)();\n          }\n\n          _createClass(PDFDataRangeTransport, [{\n            key: \"addRangeListener\",\n            value: function addRangeListener(listener) {\n              this._rangeListeners.push(listener);\n            }\n          }, {\n            key: \"addProgressListener\",\n            value: function addProgressListener(listener) {\n              this._progressListeners.push(listener);\n            }\n          }, {\n            key: \"addProgressiveReadListener\",\n            value: function addProgressiveReadListener(listener) {\n              this._progressiveReadListeners.push(listener);\n            }\n          }, {\n            key: \"addProgressiveDoneListener\",\n            value: function addProgressiveDoneListener(listener) {\n              this._progressiveDoneListeners.push(listener);\n            }\n          }, {\n            key: \"onDataRange\",\n            value: function onDataRange(begin, chunk) {\n              var _iterator4 = _createForOfIteratorHelper(this._rangeListeners),\n                  _step4;\n\n              try {\n                for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                  var listener = _step4.value;\n                  listener(begin, chunk);\n                }\n              } catch (err) {\n                _iterator4.e(err);\n              } finally {\n                _iterator4.f();\n              }\n            }\n          }, {\n            key: \"onDataProgress\",\n            value: function onDataProgress(loaded, total) {\n              var _this9 = this;\n\n              this._readyCapability.promise.then(function () {\n                var _iterator5 = _createForOfIteratorHelper(_this9._progressListeners),\n                    _step5;\n\n                try {\n                  for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                    var listener = _step5.value;\n                    listener(loaded, total);\n                  }\n                } catch (err) {\n                  _iterator5.e(err);\n                } finally {\n                  _iterator5.f();\n                }\n              });\n            }\n          }, {\n            key: \"onDataProgressiveRead\",\n            value: function onDataProgressiveRead(chunk) {\n              var _this10 = this;\n\n              this._readyCapability.promise.then(function () {\n                var _iterator6 = _createForOfIteratorHelper(_this10._progressiveReadListeners),\n                    _step6;\n\n                try {\n                  for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                    var listener = _step6.value;\n                    listener(chunk);\n                  }\n                } catch (err) {\n                  _iterator6.e(err);\n                } finally {\n                  _iterator6.f();\n                }\n              });\n            }\n          }, {\n            key: \"onDataProgressiveDone\",\n            value: function onDataProgressiveDone() {\n              var _this11 = this;\n\n              this._readyCapability.promise.then(function () {\n                var _iterator7 = _createForOfIteratorHelper(_this11._progressiveDoneListeners),\n                    _step7;\n\n                try {\n                  for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                    var listener = _step7.value;\n                    listener();\n                  }\n                } catch (err) {\n                  _iterator7.e(err);\n                } finally {\n                  _iterator7.f();\n                }\n              });\n            }\n          }, {\n            key: \"transportReady\",\n            value: function transportReady() {\n              this._readyCapability.resolve();\n            }\n          }, {\n            key: \"requestDataRange\",\n            value: function requestDataRange(begin, end) {\n              (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n            }\n          }, {\n            key: \"abort\",\n            value: function abort() {}\n          }]);\n\n          return PDFDataRangeTransport;\n        }();\n\n        exports.PDFDataRangeTransport = PDFDataRangeTransport;\n\n        var PDFDocumentProxy = /*#__PURE__*/function () {\n          function PDFDocumentProxy(pdfInfo, transport) {\n            _classCallCheck(this, PDFDocumentProxy);\n\n            this._pdfInfo = pdfInfo;\n            this._transport = transport;\n          }\n\n          _createClass(PDFDocumentProxy, [{\n            key: \"getPage\",\n            value: function getPage(pageNumber) {\n              return this._transport.getPage(pageNumber);\n            }\n          }, {\n            key: \"getPageIndex\",\n            value: function getPageIndex(ref) {\n              return this._transport.getPageIndex(ref);\n            }\n          }, {\n            key: \"getDestinations\",\n            value: function getDestinations() {\n              return this._transport.getDestinations();\n            }\n          }, {\n            key: \"getDestination\",\n            value: function getDestination(id) {\n              return this._transport.getDestination(id);\n            }\n          }, {\n            key: \"getPageLabels\",\n            value: function getPageLabels() {\n              return this._transport.getPageLabels();\n            }\n          }, {\n            key: \"getPageLayout\",\n            value: function getPageLayout() {\n              return this._transport.getPageLayout();\n            }\n          }, {\n            key: \"getPageMode\",\n            value: function getPageMode() {\n              return this._transport.getPageMode();\n            }\n          }, {\n            key: \"getViewerPreferences\",\n            value: function getViewerPreferences() {\n              return this._transport.getViewerPreferences();\n            }\n          }, {\n            key: \"getOpenAction\",\n            value: function getOpenAction() {\n              return this._transport.getOpenAction();\n            }\n          }, {\n            key: \"getAttachments\",\n            value: function getAttachments() {\n              return this._transport.getAttachments();\n            }\n          }, {\n            key: \"getJavaScript\",\n            value: function getJavaScript() {\n              return this._transport.getJavaScript();\n            }\n          }, {\n            key: \"getJSActions\",\n            value: function getJSActions() {\n              return this._transport.getDocJSActions();\n            }\n          }, {\n            key: \"getOutline\",\n            value: function getOutline() {\n              return this._transport.getOutline();\n            }\n          }, {\n            key: \"getOptionalContentConfig\",\n            value: function getOptionalContentConfig() {\n              return this._transport.getOptionalContentConfig();\n            }\n          }, {\n            key: \"getPermissions\",\n            value: function getPermissions() {\n              return this._transport.getPermissions();\n            }\n          }, {\n            key: \"getMetadata\",\n            value: function getMetadata() {\n              return this._transport.getMetadata();\n            }\n          }, {\n            key: \"getMarkInfo\",\n            value: function getMarkInfo() {\n              return this._transport.getMarkInfo();\n            }\n          }, {\n            key: \"getData\",\n            value: function getData() {\n              return this._transport.getData();\n            }\n          }, {\n            key: \"getDownloadInfo\",\n            value: function getDownloadInfo() {\n              return this._transport.downloadInfoCapability.promise;\n            }\n          }, {\n            key: \"getStats\",\n            value: function getStats() {\n              return this._transport.getStats();\n            }\n          }, {\n            key: \"cleanup\",\n            value: function cleanup() {\n              var keepLoadedFonts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n              return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              return this.loadingTask.destroy();\n            }\n          }, {\n            key: \"saveDocument\",\n            value: function saveDocument() {\n              if (arguments.length > 0) {\n                (0, _display_utils.deprecated)(\"saveDocument no longer accepts any options.\");\n              }\n\n              if (this._transport.annotationStorage.size <= 0) {\n                (0, _display_utils.deprecated)(\"saveDocument called while `annotationStorage` is empty, \" + \"please use the getData-method instead.\");\n              }\n\n              return this._transport.saveDocument();\n            }\n          }, {\n            key: \"getFieldObjects\",\n            value: function getFieldObjects() {\n              return this._transport.getFieldObjects();\n            }\n          }, {\n            key: \"hasJSActions\",\n            value: function hasJSActions() {\n              return this._transport.hasJSActions();\n            }\n          }, {\n            key: \"getCalculationOrderIds\",\n            value: function getCalculationOrderIds() {\n              return this._transport.getCalculationOrderIds();\n            }\n          }, {\n            key: \"annotationStorage\",\n            get: function get() {\n              return this._transport.annotationStorage;\n            }\n          }, {\n            key: \"numPages\",\n            get: function get() {\n              return this._pdfInfo.numPages;\n            }\n          }, {\n            key: \"fingerprint\",\n            get: function get() {\n              return this._pdfInfo.fingerprint;\n            }\n          }, {\n            key: \"isPureXfa\",\n            get: function get() {\n              return this._pdfInfo.isPureXfa;\n            }\n          }, {\n            key: \"loadingParams\",\n            get: function get() {\n              return this._transport.loadingParams;\n            }\n          }, {\n            key: \"loadingTask\",\n            get: function get() {\n              return this._transport.loadingTask;\n            }\n          }]);\n\n          return PDFDocumentProxy;\n        }();\n\n        exports.PDFDocumentProxy = PDFDocumentProxy;\n\n        var PDFPageProxy = /*#__PURE__*/function () {\n          function PDFPageProxy(pageIndex, pageInfo, transport, ownerDocument) {\n            var pdfBug = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n            _classCallCheck(this, PDFPageProxy);\n\n            this._pageIndex = pageIndex;\n            this._pageInfo = pageInfo;\n            this._ownerDocument = ownerDocument;\n            this._transport = transport;\n            this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n            this._pdfBug = pdfBug;\n            this.commonObjs = transport.commonObjs;\n            this.objs = new PDFObjects();\n            this.cleanupAfterRender = false;\n            this.pendingCleanup = false;\n            this._intentStates = new Map();\n            this.destroyed = false;\n          }\n\n          _createClass(PDFPageProxy, [{\n            key: \"getViewport\",\n            value: function getViewport() {\n              var _ref11 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n                  scale = _ref11.scale,\n                  _ref11$rotation = _ref11.rotation,\n                  rotation = _ref11$rotation === void 0 ? this.rotate : _ref11$rotation,\n                  _ref11$offsetX = _ref11.offsetX,\n                  offsetX = _ref11$offsetX === void 0 ? 0 : _ref11$offsetX,\n                  _ref11$offsetY = _ref11.offsetY,\n                  offsetY = _ref11$offsetY === void 0 ? 0 : _ref11$offsetY,\n                  _ref11$dontFlip = _ref11.dontFlip,\n                  dontFlip = _ref11$dontFlip === void 0 ? false : _ref11$dontFlip;\n\n              return new _display_utils.PageViewport({\n                viewBox: this.view,\n                scale: scale,\n                rotation: rotation,\n                offsetX: offsetX,\n                offsetY: offsetY,\n                dontFlip: dontFlip\n              });\n            }\n          }, {\n            key: \"getAnnotations\",\n            value: function getAnnotations() {\n              var _ref12 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n                  _ref12$intent = _ref12.intent,\n                  intent = _ref12$intent === void 0 ? null : _ref12$intent;\n\n              if (!this._annotationsPromise || this._annotationsIntent !== intent) {\n                this._annotationsPromise = this._transport.getAnnotations(this._pageIndex, intent);\n                this._annotationsIntent = intent;\n              }\n\n              return this._annotationsPromise;\n            }\n          }, {\n            key: \"getJSActions\",\n            value: function getJSActions() {\n              return this._jsActionsPromise || (this._jsActionsPromise = this._transport.getPageJSActions(this._pageIndex));\n            }\n          }, {\n            key: \"getXfa\",\n            value: function getXfa() {\n              return this._xfaPromise || (this._xfaPromise = this._transport.getPageXfa(this._pageIndex));\n            }\n          }, {\n            key: \"render\",\n            value: function render(_ref13) {\n              var _arguments$,\n                  _this12 = this;\n\n              var canvasContext = _ref13.canvasContext,\n                  viewport = _ref13.viewport,\n                  _ref13$intent = _ref13.intent,\n                  intent = _ref13$intent === void 0 ? \"display\" : _ref13$intent,\n                  _ref13$renderInteract = _ref13.renderInteractiveForms,\n                  renderInteractiveForms = _ref13$renderInteract === void 0 ? false : _ref13$renderInteract,\n                  _ref13$transform = _ref13.transform,\n                  transform = _ref13$transform === void 0 ? null : _ref13$transform,\n                  _ref13$imageLayer = _ref13.imageLayer,\n                  imageLayer = _ref13$imageLayer === void 0 ? null : _ref13$imageLayer,\n                  _ref13$canvasFactory = _ref13.canvasFactory,\n                  canvasFactory = _ref13$canvasFactory === void 0 ? null : _ref13$canvasFactory,\n                  _ref13$background = _ref13.background,\n                  background = _ref13$background === void 0 ? null : _ref13$background,\n                  _ref13$includeAnnotat = _ref13.includeAnnotationStorage,\n                  includeAnnotationStorage = _ref13$includeAnnotat === void 0 ? false : _ref13$includeAnnotat,\n                  _ref13$optionalConten = _ref13.optionalContentConfigPromise,\n                  optionalContentConfigPromise = _ref13$optionalConten === void 0 ? null : _ref13$optionalConten;\n\n              var _intentState;\n\n              if (((_arguments$ = arguments[0]) === null || _arguments$ === void 0 ? void 0 : _arguments$.annotationStorage) !== undefined) {\n                (0, _display_utils.deprecated)(\"render no longer accepts an `annotationStorage` option, \" + \"please use the `includeAnnotationStorage`-boolean instead.\");\n                includeAnnotationStorage || (includeAnnotationStorage = !!arguments[0].annotationStorage);\n              }\n\n              if (this._stats) {\n                this._stats.time(\"Overall\");\n              }\n\n              var renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n              this.pendingCleanup = false;\n\n              if (!optionalContentConfigPromise) {\n                optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n              }\n\n              var intentState = this._intentStates.get(renderingIntent);\n\n              if (!intentState) {\n                intentState = Object.create(null);\n\n                this._intentStates.set(renderingIntent, intentState);\n              }\n\n              if (intentState.streamReaderCancelTimeout) {\n                clearTimeout(intentState.streamReaderCancelTimeout);\n                intentState.streamReaderCancelTimeout = null;\n              }\n\n              var canvasFactoryInstance = canvasFactory || new DefaultCanvasFactory({\n                ownerDocument: this._ownerDocument\n              });\n              var annotationStorage = includeAnnotationStorage ? this._transport.annotationStorage.serializable : null;\n\n              if (!intentState.displayReadyCapability) {\n                intentState.displayReadyCapability = (0, _util.createPromiseCapability)();\n                intentState.operatorList = {\n                  fnArray: [],\n                  argsArray: [],\n                  lastChunk: false\n                };\n\n                if (this._stats) {\n                  this._stats.time(\"Page Request\");\n                }\n\n                this._pumpOperatorList({\n                  pageIndex: this._pageIndex,\n                  intent: renderingIntent,\n                  renderInteractiveForms: renderInteractiveForms === true,\n                  annotationStorage: annotationStorage\n                });\n              }\n\n              var complete = function complete(error) {\n                intentState.renderTasks.delete(internalRenderTask);\n\n                if (_this12.cleanupAfterRender || renderingIntent === \"print\") {\n                  _this12.pendingCleanup = true;\n                }\n\n                _this12._tryCleanup();\n\n                if (error) {\n                  internalRenderTask.capability.reject(error);\n\n                  _this12._abortOperatorList({\n                    intentState: intentState,\n                    reason: error\n                  });\n                } else {\n                  internalRenderTask.capability.resolve();\n                }\n\n                if (_this12._stats) {\n                  _this12._stats.timeEnd(\"Rendering\");\n\n                  _this12._stats.timeEnd(\"Overall\");\n                }\n              };\n\n              var internalRenderTask = new InternalRenderTask({\n                callback: complete,\n                params: {\n                  canvasContext: canvasContext,\n                  viewport: viewport,\n                  transform: transform,\n                  imageLayer: imageLayer,\n                  background: background\n                },\n                objs: this.objs,\n                commonObjs: this.commonObjs,\n                operatorList: intentState.operatorList,\n                pageIndex: this._pageIndex,\n                canvasFactory: canvasFactoryInstance,\n                useRequestAnimationFrame: renderingIntent !== \"print\",\n                pdfBug: this._pdfBug\n              });\n              ((_intentState = intentState).renderTasks || (_intentState.renderTasks = new Set())).add(internalRenderTask);\n              var renderTask = internalRenderTask.task;\n              Promise.all([intentState.displayReadyCapability.promise, optionalContentConfigPromise]).then(function (_ref14) {\n                var _ref15 = _slicedToArray(_ref14, 2),\n                    transparency = _ref15[0],\n                    optionalContentConfig = _ref15[1];\n\n                if (_this12.pendingCleanup) {\n                  complete();\n                  return;\n                }\n\n                if (_this12._stats) {\n                  _this12._stats.time(\"Rendering\");\n                }\n\n                internalRenderTask.initializeGraphics({\n                  transparency: transparency,\n                  optionalContentConfig: optionalContentConfig\n                });\n                internalRenderTask.operatorListChanged();\n              }).catch(complete);\n              return renderTask;\n            }\n          }, {\n            key: \"getOperatorList\",\n            value: function getOperatorList() {\n              function operatorListChanged() {\n                if (intentState.operatorList.lastChunk) {\n                  intentState.opListReadCapability.resolve(intentState.operatorList);\n                  intentState.renderTasks.delete(opListTask);\n                }\n              }\n\n              var renderingIntent = \"oplist\";\n\n              var intentState = this._intentStates.get(renderingIntent);\n\n              if (!intentState) {\n                intentState = Object.create(null);\n\n                this._intentStates.set(renderingIntent, intentState);\n              }\n\n              var opListTask;\n\n              if (!intentState.opListReadCapability) {\n                var _intentState2;\n\n                opListTask = Object.create(null);\n                opListTask.operatorListChanged = operatorListChanged;\n                intentState.opListReadCapability = (0, _util.createPromiseCapability)();\n                ((_intentState2 = intentState).renderTasks || (_intentState2.renderTasks = new Set())).add(opListTask);\n                intentState.operatorList = {\n                  fnArray: [],\n                  argsArray: [],\n                  lastChunk: false\n                };\n\n                if (this._stats) {\n                  this._stats.time(\"Page Request\");\n                }\n\n                this._pumpOperatorList({\n                  pageIndex: this._pageIndex,\n                  intent: renderingIntent\n                });\n              }\n\n              return intentState.opListReadCapability.promise;\n            }\n          }, {\n            key: \"streamTextContent\",\n            value: function streamTextContent() {\n              var _ref16 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n                  _ref16$normalizeWhite = _ref16.normalizeWhitespace,\n                  normalizeWhitespace = _ref16$normalizeWhite === void 0 ? false : _ref16$normalizeWhite,\n                  _ref16$disableCombine = _ref16.disableCombineTextItems,\n                  disableCombineTextItems = _ref16$disableCombine === void 0 ? false : _ref16$disableCombine,\n                  _ref16$includeMarkedC = _ref16.includeMarkedContent,\n                  includeMarkedContent = _ref16$includeMarkedC === void 0 ? false : _ref16$includeMarkedC;\n\n              var TEXT_CONTENT_CHUNK_SIZE = 100;\n              return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n                pageIndex: this._pageIndex,\n                normalizeWhitespace: normalizeWhitespace === true,\n                combineTextItems: disableCombineTextItems !== true,\n                includeMarkedContent: includeMarkedContent === true\n              }, {\n                highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n                size: function size(textContent) {\n                  return textContent.items.length;\n                }\n              });\n            }\n          }, {\n            key: \"getTextContent\",\n            value: function getTextContent() {\n              var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n              var readableStream = this.streamTextContent(params);\n              return new Promise(function (resolve, reject) {\n                function pump() {\n                  reader.read().then(function (_ref17) {\n                    var _textContent$items;\n\n                    var value = _ref17.value,\n                        done = _ref17.done;\n\n                    if (done) {\n                      resolve(textContent);\n                      return;\n                    }\n\n                    Object.assign(textContent.styles, value.styles);\n\n                    (_textContent$items = textContent.items).push.apply(_textContent$items, _toConsumableArray(value.items));\n\n                    pump();\n                  }, reject);\n                }\n\n                var reader = readableStream.getReader();\n                var textContent = {\n                  items: [],\n                  styles: Object.create(null)\n                };\n                pump();\n              });\n            }\n          }, {\n            key: \"getStructTree\",\n            value: function getStructTree() {\n              return this._structTreePromise || (this._structTreePromise = this._transport.getStructTree(this._pageIndex));\n            }\n          }, {\n            key: \"_destroy\",\n            value: function _destroy() {\n              this.destroyed = true;\n              this._transport.pageCache[this._pageIndex] = null;\n              var waitOn = [];\n\n              var _iterator8 = _createForOfIteratorHelper(this._intentStates),\n                  _step8;\n\n              try {\n                for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                  var _step8$value = _slicedToArray(_step8.value, 2),\n                      intent = _step8$value[0],\n                      intentState = _step8$value[1];\n\n                  this._abortOperatorList({\n                    intentState: intentState,\n                    reason: new Error(\"Page was destroyed.\"),\n                    force: true\n                  });\n\n                  if (intent === \"oplist\") {\n                    continue;\n                  }\n\n                  var _iterator9 = _createForOfIteratorHelper(intentState.renderTasks),\n                      _step9;\n\n                  try {\n                    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                      var internalRenderTask = _step9.value;\n                      waitOn.push(internalRenderTask.completed);\n                      internalRenderTask.cancel();\n                    }\n                  } catch (err) {\n                    _iterator9.e(err);\n                  } finally {\n                    _iterator9.f();\n                  }\n                }\n              } catch (err) {\n                _iterator8.e(err);\n              } finally {\n                _iterator8.f();\n              }\n\n              this.objs.clear();\n              this._annotationsPromise = null;\n              this._jsActionsPromise = null;\n              this._xfaPromise = null;\n              this._structTreePromise = null;\n              this.pendingCleanup = false;\n              return Promise.all(waitOn);\n            }\n          }, {\n            key: \"cleanup\",\n            value: function cleanup() {\n              var resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n              this.pendingCleanup = true;\n              return this._tryCleanup(resetStats);\n            }\n          }, {\n            key: \"_tryCleanup\",\n            value: function _tryCleanup() {\n              var resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n              if (!this.pendingCleanup) {\n                return false;\n              }\n\n              var _iterator10 = _createForOfIteratorHelper(this._intentStates.values()),\n                  _step10;\n\n              try {\n                for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n                  var _step10$value = _step10.value,\n                      renderTasks = _step10$value.renderTasks,\n                      operatorList = _step10$value.operatorList;\n\n                  if (renderTasks.size > 0 || !operatorList.lastChunk) {\n                    return false;\n                  }\n                }\n              } catch (err) {\n                _iterator10.e(err);\n              } finally {\n                _iterator10.f();\n              }\n\n              this._intentStates.clear();\n\n              this.objs.clear();\n              this._annotationsPromise = null;\n              this._jsActionsPromise = null;\n              this._xfaPromise = null;\n              this._structTreePromise = null;\n\n              if (resetStats && this._stats) {\n                this._stats = new _display_utils.StatTimer();\n              }\n\n              this.pendingCleanup = false;\n              return true;\n            }\n          }, {\n            key: \"_startRenderPage\",\n            value: function _startRenderPage(transparency, intent) {\n              var intentState = this._intentStates.get(intent);\n\n              if (!intentState) {\n                return;\n              }\n\n              if (this._stats) {\n                this._stats.timeEnd(\"Page Request\");\n              }\n\n              if (intentState.displayReadyCapability) {\n                intentState.displayReadyCapability.resolve(transparency);\n              }\n            }\n          }, {\n            key: \"_renderPageChunk\",\n            value: function _renderPageChunk(operatorListChunk, intentState) {\n              for (var i = 0, ii = operatorListChunk.length; i < ii; i++) {\n                intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n                intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n              }\n\n              intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n              var _iterator11 = _createForOfIteratorHelper(intentState.renderTasks),\n                  _step11;\n\n              try {\n                for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n                  var internalRenderTask = _step11.value;\n                  internalRenderTask.operatorListChanged();\n                }\n              } catch (err) {\n                _iterator11.e(err);\n              } finally {\n                _iterator11.f();\n              }\n\n              if (operatorListChunk.lastChunk) {\n                this._tryCleanup();\n              }\n            }\n          }, {\n            key: \"_pumpOperatorList\",\n            value: function _pumpOperatorList(args) {\n              var _this13 = this;\n\n              (0, _util.assert)(args.intent, 'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.');\n\n              var readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", args);\n\n              var reader = readableStream.getReader();\n\n              var intentState = this._intentStates.get(args.intent);\n\n              intentState.streamReader = reader;\n\n              var pump = function pump() {\n                reader.read().then(function (_ref18) {\n                  var value = _ref18.value,\n                      done = _ref18.done;\n\n                  if (done) {\n                    intentState.streamReader = null;\n                    return;\n                  }\n\n                  if (_this13._transport.destroyed) {\n                    return;\n                  }\n\n                  _this13._renderPageChunk(value, intentState);\n\n                  pump();\n                }, function (reason) {\n                  intentState.streamReader = null;\n\n                  if (_this13._transport.destroyed) {\n                    return;\n                  }\n\n                  if (intentState.operatorList) {\n                    intentState.operatorList.lastChunk = true;\n\n                    var _iterator12 = _createForOfIteratorHelper(intentState.renderTasks),\n                        _step12;\n\n                    try {\n                      for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n                        var internalRenderTask = _step12.value;\n                        internalRenderTask.operatorListChanged();\n                      }\n                    } catch (err) {\n                      _iterator12.e(err);\n                    } finally {\n                      _iterator12.f();\n                    }\n\n                    _this13._tryCleanup();\n                  }\n\n                  if (intentState.displayReadyCapability) {\n                    intentState.displayReadyCapability.reject(reason);\n                  } else if (intentState.opListReadCapability) {\n                    intentState.opListReadCapability.reject(reason);\n                  } else {\n                    throw reason;\n                  }\n                });\n              };\n\n              pump();\n            }\n          }, {\n            key: \"_abortOperatorList\",\n            value: function _abortOperatorList(_ref19) {\n              var _this14 = this;\n\n              var intentState = _ref19.intentState,\n                  reason = _ref19.reason,\n                  _ref19$force = _ref19.force,\n                  force = _ref19$force === void 0 ? false : _ref19$force;\n              (0, _util.assert)(reason instanceof Error || typeof reason === \"object\" && reason !== null, 'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.');\n\n              if (!intentState.streamReader) {\n                return;\n              }\n\n              if (!force) {\n                if (intentState.renderTasks.size > 0) {\n                  return;\n                }\n\n                if (reason instanceof _display_utils.RenderingCancelledException) {\n                  intentState.streamReaderCancelTimeout = setTimeout(function () {\n                    _this14._abortOperatorList({\n                      intentState: intentState,\n                      reason: reason,\n                      force: true\n                    });\n\n                    intentState.streamReaderCancelTimeout = null;\n                  }, RENDERING_CANCELLED_TIMEOUT);\n                  return;\n                }\n              }\n\n              intentState.streamReader.cancel(new _util.AbortException(reason === null || reason === void 0 ? void 0 : reason.message));\n              intentState.streamReader = null;\n\n              if (this._transport.destroyed) {\n                return;\n              }\n\n              var _iterator13 = _createForOfIteratorHelper(this._intentStates),\n                  _step13;\n\n              try {\n                for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n                  var _step13$value = _slicedToArray(_step13.value, 2),\n                      intent = _step13$value[0],\n                      curIntentState = _step13$value[1];\n\n                  if (curIntentState === intentState) {\n                    this._intentStates.delete(intent);\n\n                    break;\n                  }\n                }\n              } catch (err) {\n                _iterator13.e(err);\n              } finally {\n                _iterator13.f();\n              }\n\n              this.cleanup();\n            }\n          }, {\n            key: \"pageNumber\",\n            get: function get() {\n              return this._pageIndex + 1;\n            }\n          }, {\n            key: \"rotate\",\n            get: function get() {\n              return this._pageInfo.rotate;\n            }\n          }, {\n            key: \"ref\",\n            get: function get() {\n              return this._pageInfo.ref;\n            }\n          }, {\n            key: \"userUnit\",\n            get: function get() {\n              return this._pageInfo.userUnit;\n            }\n          }, {\n            key: \"view\",\n            get: function get() {\n              return this._pageInfo.view;\n            }\n          }, {\n            key: \"stats\",\n            get: function get() {\n              return this._stats;\n            }\n          }]);\n\n          return PDFPageProxy;\n        }();\n\n        exports.PDFPageProxy = PDFPageProxy;\n\n        var LoopbackPort = /*#__PURE__*/function () {\n          function LoopbackPort() {\n            _classCallCheck(this, LoopbackPort);\n\n            this._listeners = [];\n            this._deferred = Promise.resolve(undefined);\n          }\n\n          _createClass(LoopbackPort, [{\n            key: \"postMessage\",\n            value: function postMessage(obj, transfers) {\n              var _this15 = this;\n\n              function cloneValue(value) {\n                if (typeof value !== \"object\" || value === null) {\n                  return value;\n                }\n\n                if (cloned.has(value)) {\n                  return cloned.get(value);\n                }\n\n                var buffer, result;\n\n                if ((buffer = value.buffer) && (0, _util.isArrayBuffer)(buffer)) {\n                  if (transfers === null || transfers === void 0 ? void 0 : transfers.includes(buffer)) {\n                    result = new value.constructor(buffer, value.byteOffset, value.byteLength);\n                  } else {\n                    result = new value.constructor(value);\n                  }\n\n                  cloned.set(value, result);\n                  return result;\n                }\n\n                if (value instanceof Map) {\n                  result = new Map();\n                  cloned.set(value, result);\n\n                  var _iterator14 = _createForOfIteratorHelper(value),\n                      _step14;\n\n                  try {\n                    for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n                      var _step14$value = _slicedToArray(_step14.value, 2),\n                          key = _step14$value[0],\n                          val = _step14$value[1];\n\n                      result.set(key, cloneValue(val));\n                    }\n                  } catch (err) {\n                    _iterator14.e(err);\n                  } finally {\n                    _iterator14.f();\n                  }\n\n                  return result;\n                }\n\n                if (value instanceof Set) {\n                  result = new Set();\n                  cloned.set(value, result);\n\n                  var _iterator15 = _createForOfIteratorHelper(value),\n                      _step15;\n\n                  try {\n                    for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n                      var _val = _step15.value;\n                      result.add(cloneValue(_val));\n                    }\n                  } catch (err) {\n                    _iterator15.e(err);\n                  } finally {\n                    _iterator15.f();\n                  }\n\n                  return result;\n                }\n\n                if (value instanceof URL) {\n                  throw new Error(\"LoopbackPort.postMessage - cannot clone: \".concat(value));\n                }\n\n                result = Array.isArray(value) ? [] : Object.create(null);\n                cloned.set(value, result);\n\n                for (var i in value) {\n                  var desc = void 0,\n                      p = value;\n\n                  while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n                    p = Object.getPrototypeOf(p);\n                  }\n\n                  if (typeof desc.value === \"undefined\") {\n                    continue;\n                  }\n\n                  if (typeof desc.value === \"function\") {\n                    var _value$hasOwnProperty;\n\n                    if ((_value$hasOwnProperty = value.hasOwnProperty) === null || _value$hasOwnProperty === void 0 ? void 0 : _value$hasOwnProperty.call(value, i)) {\n                      throw new Error(\"LoopbackPort.postMessage - cannot clone: \".concat(value[i]));\n                    }\n\n                    continue;\n                  }\n\n                  result[i] = cloneValue(desc.value);\n                }\n\n                return result;\n              }\n\n              var cloned = new WeakMap();\n              var event = {\n                data: cloneValue(obj)\n              };\n\n              this._deferred.then(function () {\n                var _iterator16 = _createForOfIteratorHelper(_this15._listeners),\n                    _step16;\n\n                try {\n                  for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n                    var listener = _step16.value;\n                    listener.call(_this15, event);\n                  }\n                } catch (err) {\n                  _iterator16.e(err);\n                } finally {\n                  _iterator16.f();\n                }\n              });\n            }\n          }, {\n            key: \"addEventListener\",\n            value: function addEventListener(name, listener) {\n              this._listeners.push(listener);\n            }\n          }, {\n            key: \"removeEventListener\",\n            value: function removeEventListener(name, listener) {\n              var i = this._listeners.indexOf(listener);\n\n              this._listeners.splice(i, 1);\n            }\n          }, {\n            key: \"terminate\",\n            value: function terminate() {\n              this._listeners.length = 0;\n            }\n          }]);\n\n          return LoopbackPort;\n        }();\n\n        exports.LoopbackPort = LoopbackPort;\n\n        var PDFWorker = function PDFWorkerClosure() {\n          var pdfWorkerPorts = new WeakMap();\n          var isWorkerDisabled = false;\n          var fallbackWorkerSrc;\n          var nextFakeWorkerId = 0;\n          var fakeWorkerCapability;\n\n          if (_is_node.isNodeJS && typeof require === \"function\") {\n            isWorkerDisabled = true;\n            fallbackWorkerSrc = \"./pdf.worker.js\";\n          } else if (typeof document === \"object\" && \"currentScript\" in document) {\n            var _document$currentScri;\n\n            var pdfjsFilePath = (_document$currentScri = document.currentScript) === null || _document$currentScri === void 0 ? void 0 : _document$currentScri.src;\n\n            if (pdfjsFilePath) {\n              fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n            }\n          }\n\n          function _getWorkerSrc() {\n            if (_worker_options.GlobalWorkerOptions.workerSrc) {\n              return _worker_options.GlobalWorkerOptions.workerSrc;\n            }\n\n            if (typeof fallbackWorkerSrc !== \"undefined\") {\n              if (!_is_node.isNodeJS) {\n                (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n              }\n\n              return fallbackWorkerSrc;\n            }\n\n            throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n          }\n\n          function getMainThreadWorkerMessageHandler() {\n            var mainWorkerMessageHandler;\n\n            try {\n              var _globalThis$pdfjsWork;\n\n              mainWorkerMessageHandler = (_globalThis$pdfjsWork = globalThis.pdfjsWorker) === null || _globalThis$pdfjsWork === void 0 ? void 0 : _globalThis$pdfjsWork.WorkerMessageHandler;\n            } catch (ex) {}\n\n            return mainWorkerMessageHandler || null;\n          }\n\n          function setupFakeWorkerGlobal() {\n            if (fakeWorkerCapability) {\n              return fakeWorkerCapability.promise;\n            }\n\n            fakeWorkerCapability = (0, _util.createPromiseCapability)();\n\n            var loader = /*#__PURE__*/function () {\n              var _ref20 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                var mainWorkerMessageHandler, worker;\n                return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n                        if (!mainWorkerMessageHandler) {\n                          _context3.next = 3;\n                          break;\n                        }\n\n                        return _context3.abrupt(\"return\", mainWorkerMessageHandler);\n\n                      case 3:\n                        if (!(_is_node.isNodeJS && typeof require === \"function\")) {\n                          _context3.next = 6;\n                          break;\n                        }\n\n                        worker = eval(\"require\")(_getWorkerSrc());\n                        return _context3.abrupt(\"return\", worker.WorkerMessageHandler);\n\n                      case 6:\n                        _context3.next = 8;\n                        return (0, _display_utils.loadScript)(_getWorkerSrc());\n\n                      case 8:\n                        return _context3.abrupt(\"return\", window.pdfjsWorker.WorkerMessageHandler);\n\n                      case 9:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function loader() {\n                return _ref20.apply(this, arguments);\n              };\n            }();\n\n            loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n            return fakeWorkerCapability.promise;\n          }\n\n          function createCDNWrapper(url) {\n            var wrapper = \"importScripts('\" + url + \"');\";\n            return URL.createObjectURL(new Blob([wrapper]));\n          }\n\n          var PDFWorker = /*#__PURE__*/function () {\n            function PDFWorker() {\n              var _ref21 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n                  _ref21$name = _ref21.name,\n                  name = _ref21$name === void 0 ? null : _ref21$name,\n                  _ref21$port = _ref21.port,\n                  port = _ref21$port === void 0 ? null : _ref21$port,\n                  _ref21$verbosity = _ref21.verbosity,\n                  verbosity = _ref21$verbosity === void 0 ? (0, _util.getVerbosityLevel)() : _ref21$verbosity;\n\n              _classCallCheck(this, PDFWorker);\n\n              if (port && pdfWorkerPorts.has(port)) {\n                throw new Error(\"Cannot use more than one PDFWorker per port\");\n              }\n\n              this.name = name;\n              this.destroyed = false;\n              this.postMessageTransfers = true;\n              this.verbosity = verbosity;\n              this._readyCapability = (0, _util.createPromiseCapability)();\n              this._port = null;\n              this._webWorker = null;\n              this._messageHandler = null;\n\n              if (port) {\n                pdfWorkerPorts.set(port, this);\n\n                this._initializeFromPort(port);\n\n                return;\n              }\n\n              this._initialize();\n            }\n\n            _createClass(PDFWorker, [{\n              key: \"_initializeFromPort\",\n              value: function _initializeFromPort(port) {\n                this._port = port;\n                this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n\n                this._messageHandler.on(\"ready\", function () {});\n\n                this._readyCapability.resolve();\n              }\n            }, {\n              key: \"_initialize\",\n              value: function _initialize() {\n                var _this16 = this;\n\n                if (typeof Worker !== \"undefined\" && !isWorkerDisabled && !getMainThreadWorkerMessageHandler()) {\n                  var workerSrc = _getWorkerSrc();\n\n                  try {\n                    if (!(0, _util.isSameOrigin)(window.location.href, workerSrc)) {\n                      workerSrc = createCDNWrapper(new URL(workerSrc, window.location).href);\n                    }\n\n                    var worker = new Worker(workerSrc);\n                    var messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n\n                    var terminateEarly = function terminateEarly() {\n                      worker.removeEventListener(\"error\", onWorkerError);\n                      messageHandler.destroy();\n                      worker.terminate();\n\n                      if (_this16.destroyed) {\n                        _this16._readyCapability.reject(new Error(\"Worker was destroyed\"));\n                      } else {\n                        _this16._setupFakeWorker();\n                      }\n                    };\n\n                    var onWorkerError = function onWorkerError() {\n                      if (!_this16._webWorker) {\n                        terminateEarly();\n                      }\n                    };\n\n                    worker.addEventListener(\"error\", onWorkerError);\n                    messageHandler.on(\"test\", function (data) {\n                      worker.removeEventListener(\"error\", onWorkerError);\n\n                      if (_this16.destroyed) {\n                        terminateEarly();\n                        return;\n                      }\n\n                      if (data) {\n                        _this16._messageHandler = messageHandler;\n                        _this16._port = worker;\n                        _this16._webWorker = worker;\n\n                        if (!data.supportTransfers) {\n                          _this16.postMessageTransfers = false;\n                        }\n\n                        _this16._readyCapability.resolve();\n\n                        messageHandler.send(\"configure\", {\n                          verbosity: _this16.verbosity\n                        });\n                      } else {\n                        _this16._setupFakeWorker();\n\n                        messageHandler.destroy();\n                        worker.terminate();\n                      }\n                    });\n                    messageHandler.on(\"ready\", function (data) {\n                      worker.removeEventListener(\"error\", onWorkerError);\n\n                      if (_this16.destroyed) {\n                        terminateEarly();\n                        return;\n                      }\n\n                      try {\n                        sendTest();\n                      } catch (e) {\n                        _this16._setupFakeWorker();\n                      }\n                    });\n\n                    var sendTest = function sendTest() {\n                      var testObj = new Uint8Array([_this16.postMessageTransfers ? 255 : 0]);\n\n                      try {\n                        messageHandler.send(\"test\", testObj, [testObj.buffer]);\n                      } catch (ex) {\n                        (0, _util.warn)(\"Cannot use postMessage transfers.\");\n                        testObj[0] = 0;\n                        messageHandler.send(\"test\", testObj);\n                      }\n                    };\n\n                    sendTest();\n                    return;\n                  } catch (e) {\n                    (0, _util.info)(\"The worker has been disabled.\");\n                  }\n                }\n\n                this._setupFakeWorker();\n              }\n            }, {\n              key: \"_setupFakeWorker\",\n              value: function _setupFakeWorker() {\n                var _this17 = this;\n\n                if (!isWorkerDisabled) {\n                  (0, _util.warn)(\"Setting up fake worker.\");\n                  isWorkerDisabled = true;\n                }\n\n                setupFakeWorkerGlobal().then(function (WorkerMessageHandler) {\n                  if (_this17.destroyed) {\n                    _this17._readyCapability.reject(new Error(\"Worker was destroyed\"));\n\n                    return;\n                  }\n\n                  var port = new LoopbackPort();\n                  _this17._port = port;\n                  var id = \"fake\" + nextFakeWorkerId++;\n                  var workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n                  WorkerMessageHandler.setup(workerHandler, port);\n                  var messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n                  _this17._messageHandler = messageHandler;\n\n                  _this17._readyCapability.resolve();\n\n                  messageHandler.send(\"configure\", {\n                    verbosity: _this17.verbosity\n                  });\n                }).catch(function (reason) {\n                  _this17._readyCapability.reject(new Error(\"Setting up fake worker failed: \\\"\".concat(reason.message, \"\\\".\")));\n                });\n              }\n            }, {\n              key: \"destroy\",\n              value: function destroy() {\n                this.destroyed = true;\n\n                if (this._webWorker) {\n                  this._webWorker.terminate();\n\n                  this._webWorker = null;\n                }\n\n                pdfWorkerPorts.delete(this._port);\n                this._port = null;\n\n                if (this._messageHandler) {\n                  this._messageHandler.destroy();\n\n                  this._messageHandler = null;\n                }\n              }\n            }, {\n              key: \"promise\",\n              get: function get() {\n                return this._readyCapability.promise;\n              }\n            }, {\n              key: \"port\",\n              get: function get() {\n                return this._port;\n              }\n            }, {\n              key: \"messageHandler\",\n              get: function get() {\n                return this._messageHandler;\n              }\n            }], [{\n              key: \"fromPort\",\n              value: function fromPort(params) {\n                if (!params || !params.port) {\n                  throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n                }\n\n                if (pdfWorkerPorts.has(params.port)) {\n                  return pdfWorkerPorts.get(params.port);\n                }\n\n                return new PDFWorker(params);\n              }\n            }, {\n              key: \"getWorkerSrc\",\n              value: function getWorkerSrc() {\n                return _getWorkerSrc();\n              }\n            }]);\n\n            return PDFWorker;\n          }();\n\n          return PDFWorker;\n        }();\n\n        exports.PDFWorker = PDFWorker;\n\n        var WorkerTransport = /*#__PURE__*/function () {\n          function WorkerTransport(messageHandler, loadingTask, networkStream, params) {\n            _classCallCheck(this, WorkerTransport);\n\n            this.messageHandler = messageHandler;\n            this.loadingTask = loadingTask;\n            this.commonObjs = new PDFObjects();\n            this.fontLoader = new _font_loader.FontLoader({\n              docId: loadingTask.docId,\n              onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n              ownerDocument: params.ownerDocument\n            });\n            this._params = params;\n            this.CMapReaderFactory = new params.CMapReaderFactory({\n              baseUrl: params.cMapUrl,\n              isCompressed: params.cMapPacked\n            });\n            this.destroyed = false;\n            this.destroyCapability = null;\n            this._passwordCapability = null;\n            this._networkStream = networkStream;\n            this._fullReader = null;\n            this._lastProgress = null;\n            this.pageCache = [];\n            this.pagePromises = [];\n            this.downloadInfoCapability = (0, _util.createPromiseCapability)();\n            this.setupMessageHandler();\n          }\n\n          _createClass(WorkerTransport, [{\n            key: \"destroy\",\n            value: function destroy() {\n              var _this18 = this;\n\n              if (this.destroyCapability) {\n                return this.destroyCapability.promise;\n              }\n\n              this.destroyed = true;\n              this.destroyCapability = (0, _util.createPromiseCapability)();\n\n              if (this._passwordCapability) {\n                this._passwordCapability.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n              }\n\n              var waitOn = [];\n\n              var _iterator17 = _createForOfIteratorHelper(this.pageCache),\n                  _step17;\n\n              try {\n                for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n                  var page = _step17.value;\n\n                  if (page) {\n                    waitOn.push(page._destroy());\n                  }\n                }\n              } catch (err) {\n                _iterator17.e(err);\n              } finally {\n                _iterator17.f();\n              }\n\n              this.pageCache.length = 0;\n              this.pagePromises.length = 0;\n\n              if (this.hasOwnProperty(\"annotationStorage\")) {\n                this.annotationStorage.resetModified();\n              }\n\n              var terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n              waitOn.push(terminated);\n              Promise.all(waitOn).then(function () {\n                _this18.commonObjs.clear();\n\n                _this18.fontLoader.clear();\n\n                _this18._hasJSActionsPromise = null;\n\n                if (_this18._networkStream) {\n                  _this18._networkStream.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n                }\n\n                if (_this18.messageHandler) {\n                  _this18.messageHandler.destroy();\n\n                  _this18.messageHandler = null;\n                }\n\n                _this18.destroyCapability.resolve();\n              }, this.destroyCapability.reject);\n              return this.destroyCapability.promise;\n            }\n          }, {\n            key: \"setupMessageHandler\",\n            value: function setupMessageHandler() {\n              var _this19 = this;\n\n              var messageHandler = this.messageHandler,\n                  loadingTask = this.loadingTask;\n              messageHandler.on(\"GetReader\", function (data, sink) {\n                (0, _util.assert)(_this19._networkStream, \"GetReader - no `IPDFStream` instance available.\");\n                _this19._fullReader = _this19._networkStream.getFullReader();\n\n                _this19._fullReader.onProgress = function (evt) {\n                  _this19._lastProgress = {\n                    loaded: evt.loaded,\n                    total: evt.total\n                  };\n                };\n\n                sink.onPull = function () {\n                  _this19._fullReader.read().then(function (_ref22) {\n                    var value = _ref22.value,\n                        done = _ref22.done;\n\n                    if (done) {\n                      sink.close();\n                      return;\n                    }\n\n                    (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetReader - expected an ArrayBuffer.\");\n                    sink.enqueue(new Uint8Array(value), 1, [value]);\n                  }).catch(function (reason) {\n                    sink.error(reason);\n                  });\n                };\n\n                sink.onCancel = function (reason) {\n                  _this19._fullReader.cancel(reason);\n\n                  sink.ready.catch(function (readyReason) {\n                    if (_this19.destroyed) {\n                      return;\n                    }\n\n                    throw readyReason;\n                  });\n                };\n              });\n              messageHandler.on(\"ReaderHeadersReady\", function (data) {\n                var headersCapability = (0, _util.createPromiseCapability)();\n                var fullReader = _this19._fullReader;\n                fullReader.headersReady.then(function () {\n                  if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n                    if (_this19._lastProgress && loadingTask.onProgress) {\n                      loadingTask.onProgress(_this19._lastProgress);\n                    }\n\n                    fullReader.onProgress = function (evt) {\n                      if (loadingTask.onProgress) {\n                        loadingTask.onProgress({\n                          loaded: evt.loaded,\n                          total: evt.total\n                        });\n                      }\n                    };\n                  }\n\n                  headersCapability.resolve({\n                    isStreamingSupported: fullReader.isStreamingSupported,\n                    isRangeSupported: fullReader.isRangeSupported,\n                    contentLength: fullReader.contentLength\n                  });\n                }, headersCapability.reject);\n                return headersCapability.promise;\n              });\n              messageHandler.on(\"GetRangeReader\", function (data, sink) {\n                (0, _util.assert)(_this19._networkStream, \"GetRangeReader - no `IPDFStream` instance available.\");\n\n                var rangeReader = _this19._networkStream.getRangeReader(data.begin, data.end);\n\n                if (!rangeReader) {\n                  sink.close();\n                  return;\n                }\n\n                sink.onPull = function () {\n                  rangeReader.read().then(function (_ref23) {\n                    var value = _ref23.value,\n                        done = _ref23.done;\n\n                    if (done) {\n                      sink.close();\n                      return;\n                    }\n\n                    (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetRangeReader - expected an ArrayBuffer.\");\n                    sink.enqueue(new Uint8Array(value), 1, [value]);\n                  }).catch(function (reason) {\n                    sink.error(reason);\n                  });\n                };\n\n                sink.onCancel = function (reason) {\n                  rangeReader.cancel(reason);\n                  sink.ready.catch(function (readyReason) {\n                    if (_this19.destroyed) {\n                      return;\n                    }\n\n                    throw readyReason;\n                  });\n                };\n              });\n              messageHandler.on(\"GetDoc\", function (_ref24) {\n                var pdfInfo = _ref24.pdfInfo;\n                _this19._numPages = pdfInfo.numPages;\n\n                loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, _this19));\n              });\n              messageHandler.on(\"DocException\", function (ex) {\n                var reason;\n\n                switch (ex.name) {\n                  case \"PasswordException\":\n                    reason = new _util.PasswordException(ex.message, ex.code);\n                    break;\n\n                  case \"InvalidPDFException\":\n                    reason = new _util.InvalidPDFException(ex.message);\n                    break;\n\n                  case \"MissingPDFException\":\n                    reason = new _util.MissingPDFException(ex.message);\n                    break;\n\n                  case \"UnexpectedResponseException\":\n                    reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n                    break;\n\n                  case \"UnknownErrorException\":\n                    reason = new _util.UnknownErrorException(ex.message, ex.details);\n                    break;\n                }\n\n                if (!(reason instanceof Error)) {\n                  var msg = \"DocException - expected a valid Error.\";\n                  (0, _util.warn)(msg);\n                }\n\n                loadingTask._capability.reject(reason);\n              });\n              messageHandler.on(\"PasswordRequest\", function (exception) {\n                _this19._passwordCapability = (0, _util.createPromiseCapability)();\n\n                if (loadingTask.onPassword) {\n                  var updatePassword = function updatePassword(password) {\n                    _this19._passwordCapability.resolve({\n                      password: password\n                    });\n                  };\n\n                  try {\n                    loadingTask.onPassword(updatePassword, exception.code);\n                  } catch (ex) {\n                    _this19._passwordCapability.reject(ex);\n                  }\n                } else {\n                  _this19._passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n                }\n\n                return _this19._passwordCapability.promise;\n              });\n              messageHandler.on(\"DataLoaded\", function (data) {\n                if (loadingTask.onProgress) {\n                  loadingTask.onProgress({\n                    loaded: data.length,\n                    total: data.length\n                  });\n                }\n\n                _this19.downloadInfoCapability.resolve(data);\n              });\n              messageHandler.on(\"StartRenderPage\", function (data) {\n                if (_this19.destroyed) {\n                  return;\n                }\n\n                var page = _this19.pageCache[data.pageIndex];\n\n                page._startRenderPage(data.transparency, data.intent);\n              });\n              messageHandler.on(\"commonobj\", function (data) {\n                var _globalThis$FontInspe;\n\n                if (_this19.destroyed) {\n                  return;\n                }\n\n                var _data = _slicedToArray(data, 3),\n                    id = _data[0],\n                    type = _data[1],\n                    exportedData = _data[2];\n\n                if (_this19.commonObjs.has(id)) {\n                  return;\n                }\n\n                switch (type) {\n                  case \"Font\":\n                    var params = _this19._params;\n\n                    if (\"error\" in exportedData) {\n                      var exportedError = exportedData.error;\n                      (0, _util.warn)(\"Error during font loading: \".concat(exportedError));\n\n                      _this19.commonObjs.resolve(id, exportedError);\n\n                      break;\n                    }\n\n                    var fontRegistry = null;\n\n                    if (params.pdfBug && ((_globalThis$FontInspe = globalThis.FontInspector) === null || _globalThis$FontInspe === void 0 ? void 0 : _globalThis$FontInspe.enabled)) {\n                      fontRegistry = {\n                        registerFont: function registerFont(font, url) {\n                          globalThis.FontInspector.fontAdded(font, url);\n                        }\n                      };\n                    }\n\n                    var font = new _font_loader.FontFaceObject(exportedData, {\n                      isEvalSupported: params.isEvalSupported,\n                      disableFontFace: params.disableFontFace,\n                      ignoreErrors: params.ignoreErrors,\n                      onUnsupportedFeature: _this19._onUnsupportedFeature.bind(_this19),\n                      fontRegistry: fontRegistry\n                    });\n\n                    _this19.fontLoader.bind(font).catch(function (reason) {\n                      return messageHandler.sendWithPromise(\"FontFallback\", {\n                        id: id\n                      });\n                    }).finally(function () {\n                      if (!params.fontExtraProperties && font.data) {\n                        font.data = null;\n                      }\n\n                      _this19.commonObjs.resolve(id, font);\n                    });\n\n                    break;\n\n                  case \"FontPath\":\n                  case \"Image\":\n                    _this19.commonObjs.resolve(id, exportedData);\n\n                    break;\n\n                  default:\n                    throw new Error(\"Got unknown common object type \".concat(type));\n                }\n              });\n              messageHandler.on(\"obj\", function (data) {\n                var _imageData$data;\n\n                if (_this19.destroyed) {\n                  return undefined;\n                }\n\n                var _data2 = _slicedToArray(data, 4),\n                    id = _data2[0],\n                    pageIndex = _data2[1],\n                    type = _data2[2],\n                    imageData = _data2[3];\n\n                var pageProxy = _this19.pageCache[pageIndex];\n\n                if (pageProxy.objs.has(id)) {\n                  return undefined;\n                }\n\n                switch (type) {\n                  case \"Image\":\n                    pageProxy.objs.resolve(id, imageData);\n                    var MAX_IMAGE_SIZE_TO_STORE = 8000000;\n\n                    if ((imageData === null || imageData === void 0 ? void 0 : (_imageData$data = imageData.data) === null || _imageData$data === void 0 ? void 0 : _imageData$data.length) > MAX_IMAGE_SIZE_TO_STORE) {\n                      pageProxy.cleanupAfterRender = true;\n                    }\n\n                    break;\n\n                  default:\n                    throw new Error(\"Got unknown object type \".concat(type));\n                }\n\n                return undefined;\n              });\n              messageHandler.on(\"DocProgress\", function (data) {\n                if (_this19.destroyed) {\n                  return;\n                }\n\n                if (loadingTask.onProgress) {\n                  loadingTask.onProgress({\n                    loaded: data.loaded,\n                    total: data.total\n                  });\n                }\n              });\n              messageHandler.on(\"UnsupportedFeature\", this._onUnsupportedFeature.bind(this));\n              messageHandler.on(\"FetchBuiltInCMap\", function (data, sink) {\n                if (_this19.destroyed) {\n                  sink.error(new Error(\"Worker was destroyed\"));\n                  return;\n                }\n\n                var fetched = false;\n\n                sink.onPull = function () {\n                  if (fetched) {\n                    sink.close();\n                    return;\n                  }\n\n                  fetched = true;\n\n                  _this19.CMapReaderFactory.fetch(data).then(function (builtInCMap) {\n                    sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n                  }).catch(function (reason) {\n                    sink.error(reason);\n                  });\n                };\n              });\n            }\n          }, {\n            key: \"_onUnsupportedFeature\",\n            value: function _onUnsupportedFeature(_ref25) {\n              var featureId = _ref25.featureId;\n\n              if (this.destroyed) {\n                return;\n              }\n\n              if (this.loadingTask.onUnsupportedFeature) {\n                this.loadingTask.onUnsupportedFeature(featureId);\n              }\n            }\n          }, {\n            key: \"getData\",\n            value: function getData() {\n              return this.messageHandler.sendWithPromise(\"GetData\", null);\n            }\n          }, {\n            key: \"getPage\",\n            value: function getPage(pageNumber) {\n              var _this20 = this;\n\n              if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n                return Promise.reject(new Error(\"Invalid page request\"));\n              }\n\n              var pageIndex = pageNumber - 1;\n\n              if (pageIndex in this.pagePromises) {\n                return this.pagePromises[pageIndex];\n              }\n\n              var promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n                pageIndex: pageIndex\n              }).then(function (pageInfo) {\n                if (_this20.destroyed) {\n                  throw new Error(\"Transport destroyed\");\n                }\n\n                var page = new PDFPageProxy(pageIndex, pageInfo, _this20, _this20._params.ownerDocument, _this20._params.pdfBug);\n                _this20.pageCache[pageIndex] = page;\n                return page;\n              });\n              this.pagePromises[pageIndex] = promise;\n              return promise;\n            }\n          }, {\n            key: \"getPageIndex\",\n            value: function getPageIndex(ref) {\n              return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n                ref: ref\n              }).catch(function (reason) {\n                return Promise.reject(new Error(reason));\n              });\n            }\n          }, {\n            key: \"getAnnotations\",\n            value: function getAnnotations(pageIndex, intent) {\n              return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n                pageIndex: pageIndex,\n                intent: intent\n              });\n            }\n          }, {\n            key: \"saveDocument\",\n            value: function saveDocument() {\n              var _this$_fullReader$fil,\n                  _this$_fullReader,\n                  _this21 = this;\n\n              return this.messageHandler.sendWithPromise(\"SaveDocument\", {\n                numPages: this._numPages,\n                annotationStorage: this.annotationStorage.serializable,\n                filename: (_this$_fullReader$fil = (_this$_fullReader = this._fullReader) === null || _this$_fullReader === void 0 ? void 0 : _this$_fullReader.filename) !== null && _this$_fullReader$fil !== void 0 ? _this$_fullReader$fil : null\n              }).finally(function () {\n                _this21.annotationStorage.resetModified();\n              });\n            }\n          }, {\n            key: \"getFieldObjects\",\n            value: function getFieldObjects() {\n              return this.messageHandler.sendWithPromise(\"GetFieldObjects\", null);\n            }\n          }, {\n            key: \"hasJSActions\",\n            value: function hasJSActions() {\n              return this._hasJSActionsPromise || (this._hasJSActionsPromise = this.messageHandler.sendWithPromise(\"HasJSActions\", null));\n            }\n          }, {\n            key: \"getCalculationOrderIds\",\n            value: function getCalculationOrderIds() {\n              return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n            }\n          }, {\n            key: \"getDestinations\",\n            value: function getDestinations() {\n              return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n            }\n          }, {\n            key: \"getDestination\",\n            value: function getDestination(id) {\n              if (typeof id !== \"string\") {\n                return Promise.reject(new Error(\"Invalid destination request.\"));\n              }\n\n              return this.messageHandler.sendWithPromise(\"GetDestination\", {\n                id: id\n              });\n            }\n          }, {\n            key: \"getPageLabels\",\n            value: function getPageLabels() {\n              return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n            }\n          }, {\n            key: \"getPageLayout\",\n            value: function getPageLayout() {\n              return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n            }\n          }, {\n            key: \"getPageMode\",\n            value: function getPageMode() {\n              return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n            }\n          }, {\n            key: \"getViewerPreferences\",\n            value: function getViewerPreferences() {\n              return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n            }\n          }, {\n            key: \"getOpenAction\",\n            value: function getOpenAction() {\n              return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n            }\n          }, {\n            key: \"getAttachments\",\n            value: function getAttachments() {\n              return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n            }\n          }, {\n            key: \"getJavaScript\",\n            value: function getJavaScript() {\n              return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n            }\n          }, {\n            key: \"getDocJSActions\",\n            value: function getDocJSActions() {\n              return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n            }\n          }, {\n            key: \"getPageJSActions\",\n            value: function getPageJSActions(pageIndex) {\n              return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n                pageIndex: pageIndex\n              });\n            }\n          }, {\n            key: \"getPageXfa\",\n            value: function getPageXfa(pageIndex) {\n              return this.messageHandler.sendWithPromise(\"GetPageXfa\", {\n                pageIndex: pageIndex\n              });\n            }\n          }, {\n            key: \"getStructTree\",\n            value: function getStructTree(pageIndex) {\n              return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n                pageIndex: pageIndex\n              });\n            }\n          }, {\n            key: \"getOutline\",\n            value: function getOutline() {\n              return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n            }\n          }, {\n            key: \"getOptionalContentConfig\",\n            value: function getOptionalContentConfig() {\n              return this.messageHandler.sendWithPromise(\"GetOptionalContentConfig\", null).then(function (results) {\n                return new _optional_content_config.OptionalContentConfig(results);\n              });\n            }\n          }, {\n            key: \"getPermissions\",\n            value: function getPermissions() {\n              return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n            }\n          }, {\n            key: \"getMetadata\",\n            value: function getMetadata() {\n              var _this22 = this;\n\n              return this.messageHandler.sendWithPromise(\"GetMetadata\", null).then(function (results) {\n                var _this22$_fullReader$f, _this22$_fullReader, _this22$_fullReader$c, _this22$_fullReader2;\n\n                return {\n                  info: results[0],\n                  metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n                  contentDispositionFilename: (_this22$_fullReader$f = (_this22$_fullReader = _this22._fullReader) === null || _this22$_fullReader === void 0 ? void 0 : _this22$_fullReader.filename) !== null && _this22$_fullReader$f !== void 0 ? _this22$_fullReader$f : null,\n                  contentLength: (_this22$_fullReader$c = (_this22$_fullReader2 = _this22._fullReader) === null || _this22$_fullReader2 === void 0 ? void 0 : _this22$_fullReader2.contentLength) !== null && _this22$_fullReader$c !== void 0 ? _this22$_fullReader$c : null\n                };\n              });\n            }\n          }, {\n            key: \"getMarkInfo\",\n            value: function getMarkInfo() {\n              return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n            }\n          }, {\n            key: \"getStats\",\n            value: function getStats() {\n              return this.messageHandler.sendWithPromise(\"GetStats\", null);\n            }\n          }, {\n            key: \"startCleanup\",\n            value: function () {\n              var _startCleanup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n                var keepLoadedFonts,\n                    i,\n                    ii,\n                    page,\n                    cleanupSuccessful,\n                    _args4 = arguments;\n                return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        keepLoadedFonts = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : false;\n                        _context4.next = 3;\n                        return this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n                      case 3:\n                        if (!this.destroyed) {\n                          _context4.next = 5;\n                          break;\n                        }\n\n                        return _context4.abrupt(\"return\");\n\n                      case 5:\n                        i = 0, ii = this.pageCache.length;\n\n                      case 6:\n                        if (!(i < ii)) {\n                          _context4.next = 16;\n                          break;\n                        }\n\n                        page = this.pageCache[i];\n\n                        if (page) {\n                          _context4.next = 10;\n                          break;\n                        }\n\n                        return _context4.abrupt(\"continue\", 13);\n\n                      case 10:\n                        cleanupSuccessful = page.cleanup();\n\n                        if (cleanupSuccessful) {\n                          _context4.next = 13;\n                          break;\n                        }\n\n                        throw new Error(\"startCleanup: Page \".concat(i + 1, \" is currently rendering.\"));\n\n                      case 13:\n                        i++;\n                        _context4.next = 6;\n                        break;\n\n                      case 16:\n                        this.commonObjs.clear();\n\n                        if (!keepLoadedFonts) {\n                          this.fontLoader.clear();\n                        }\n\n                        this._hasJSActionsPromise = null;\n\n                      case 19:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4, this);\n              }));\n\n              function startCleanup() {\n                return _startCleanup.apply(this, arguments);\n              }\n\n              return startCleanup;\n            }()\n          }, {\n            key: \"annotationStorage\",\n            get: function get() {\n              return (0, _util.shadow)(this, \"annotationStorage\", new _annotation_storage.AnnotationStorage());\n            }\n          }, {\n            key: \"loadingParams\",\n            get: function get() {\n              var params = this._params;\n              return (0, _util.shadow)(this, \"loadingParams\", {\n                disableAutoFetch: params.disableAutoFetch,\n                disableFontFace: params.disableFontFace\n              });\n            }\n          }]);\n\n          return WorkerTransport;\n        }();\n\n        var PDFObjects = /*#__PURE__*/function () {\n          function PDFObjects() {\n            _classCallCheck(this, PDFObjects);\n\n            this._objs = Object.create(null);\n          }\n\n          _createClass(PDFObjects, [{\n            key: \"_ensureObj\",\n            value: function _ensureObj(objId) {\n              if (this._objs[objId]) {\n                return this._objs[objId];\n              }\n\n              return this._objs[objId] = {\n                capability: (0, _util.createPromiseCapability)(),\n                data: null,\n                resolved: false\n              };\n            }\n          }, {\n            key: \"get\",\n            value: function get(objId) {\n              var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n              if (callback) {\n                this._ensureObj(objId).capability.promise.then(callback);\n\n                return null;\n              }\n\n              var obj = this._objs[objId];\n\n              if (!obj || !obj.resolved) {\n                throw new Error(\"Requesting object that isn't resolved yet \".concat(objId, \".\"));\n              }\n\n              return obj.data;\n            }\n          }, {\n            key: \"has\",\n            value: function has(objId) {\n              var obj = this._objs[objId];\n              return (obj === null || obj === void 0 ? void 0 : obj.resolved) || false;\n            }\n          }, {\n            key: \"resolve\",\n            value: function resolve(objId, data) {\n              var obj = this._ensureObj(objId);\n\n              obj.resolved = true;\n              obj.data = data;\n              obj.capability.resolve(data);\n            }\n          }, {\n            key: \"clear\",\n            value: function clear() {\n              this._objs = Object.create(null);\n            }\n          }]);\n\n          return PDFObjects;\n        }();\n\n        var RenderTask = /*#__PURE__*/function () {\n          function RenderTask(internalRenderTask) {\n            _classCallCheck(this, RenderTask);\n\n            this._internalRenderTask = internalRenderTask;\n            this.onContinue = null;\n          }\n\n          _createClass(RenderTask, [{\n            key: \"cancel\",\n            value: function cancel() {\n              this._internalRenderTask.cancel();\n            }\n          }, {\n            key: \"promise\",\n            get: function get() {\n              return this._internalRenderTask.capability.promise;\n            }\n          }]);\n\n          return RenderTask;\n        }();\n\n        var InternalRenderTask = function InternalRenderTaskClosure() {\n          var canvasInRendering = new WeakSet();\n\n          var InternalRenderTask = /*#__PURE__*/function () {\n            function InternalRenderTask(_ref26) {\n              var callback = _ref26.callback,\n                  params = _ref26.params,\n                  objs = _ref26.objs,\n                  commonObjs = _ref26.commonObjs,\n                  operatorList = _ref26.operatorList,\n                  pageIndex = _ref26.pageIndex,\n                  canvasFactory = _ref26.canvasFactory,\n                  _ref26$useRequestAnim = _ref26.useRequestAnimationFrame,\n                  useRequestAnimationFrame = _ref26$useRequestAnim === void 0 ? false : _ref26$useRequestAnim,\n                  _ref26$pdfBug = _ref26.pdfBug,\n                  pdfBug = _ref26$pdfBug === void 0 ? false : _ref26$pdfBug;\n\n              _classCallCheck(this, InternalRenderTask);\n\n              this.callback = callback;\n              this.params = params;\n              this.objs = objs;\n              this.commonObjs = commonObjs;\n              this.operatorListIdx = null;\n              this.operatorList = operatorList;\n              this._pageIndex = pageIndex;\n              this.canvasFactory = canvasFactory;\n              this._pdfBug = pdfBug;\n              this.running = false;\n              this.graphicsReadyCallback = null;\n              this.graphicsReady = false;\n              this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n              this.cancelled = false;\n              this.capability = (0, _util.createPromiseCapability)();\n              this.task = new RenderTask(this);\n              this._cancelBound = this.cancel.bind(this);\n              this._continueBound = this._continue.bind(this);\n              this._scheduleNextBound = this._scheduleNext.bind(this);\n              this._nextBound = this._next.bind(this);\n              this._canvas = params.canvasContext.canvas;\n            }\n\n            _createClass(InternalRenderTask, [{\n              key: \"initializeGraphics\",\n              value: function initializeGraphics(_ref27) {\n                var _globalThis$StepperMa;\n\n                var _ref27$transparency = _ref27.transparency,\n                    transparency = _ref27$transparency === void 0 ? false : _ref27$transparency,\n                    optionalContentConfig = _ref27.optionalContentConfig;\n\n                if (this.cancelled) {\n                  return;\n                }\n\n                if (this._canvas) {\n                  if (canvasInRendering.has(this._canvas)) {\n                    throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n                  }\n\n                  canvasInRendering.add(this._canvas);\n                }\n\n                if (this._pdfBug && ((_globalThis$StepperMa = globalThis.StepperManager) === null || _globalThis$StepperMa === void 0 ? void 0 : _globalThis$StepperMa.enabled)) {\n                  this.stepper = globalThis.StepperManager.create(this._pageIndex);\n                  this.stepper.init(this.operatorList);\n                  this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n                }\n\n                var _this$params = this.params,\n                    canvasContext = _this$params.canvasContext,\n                    viewport = _this$params.viewport,\n                    transform = _this$params.transform,\n                    imageLayer = _this$params.imageLayer,\n                    background = _this$params.background;\n                this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, imageLayer, optionalContentConfig);\n                this.gfx.beginDrawing({\n                  transform: transform,\n                  viewport: viewport,\n                  transparency: transparency,\n                  background: background\n                });\n                this.operatorListIdx = 0;\n                this.graphicsReady = true;\n\n                if (this.graphicsReadyCallback) {\n                  this.graphicsReadyCallback();\n                }\n              }\n            }, {\n              key: \"cancel\",\n              value: function cancel() {\n                var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n                this.running = false;\n                this.cancelled = true;\n\n                if (this.gfx) {\n                  this.gfx.endDrawing();\n                }\n\n                if (this._canvas) {\n                  canvasInRendering.delete(this._canvas);\n                }\n\n                this.callback(error || new _display_utils.RenderingCancelledException(\"Rendering cancelled, page \".concat(this._pageIndex + 1), \"canvas\"));\n              }\n            }, {\n              key: \"operatorListChanged\",\n              value: function operatorListChanged() {\n                if (!this.graphicsReady) {\n                  if (!this.graphicsReadyCallback) {\n                    this.graphicsReadyCallback = this._continueBound;\n                  }\n\n                  return;\n                }\n\n                if (this.stepper) {\n                  this.stepper.updateOperatorList(this.operatorList);\n                }\n\n                if (this.running) {\n                  return;\n                }\n\n                this._continue();\n              }\n            }, {\n              key: \"_continue\",\n              value: function _continue() {\n                this.running = true;\n\n                if (this.cancelled) {\n                  return;\n                }\n\n                if (this.task.onContinue) {\n                  this.task.onContinue(this._scheduleNextBound);\n                } else {\n                  this._scheduleNext();\n                }\n              }\n            }, {\n              key: \"_scheduleNext\",\n              value: function _scheduleNext() {\n                var _this23 = this;\n\n                if (this._useRequestAnimationFrame) {\n                  window.requestAnimationFrame(function () {\n                    _this23._nextBound().catch(_this23._cancelBound);\n                  });\n                } else {\n                  Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n                }\n              }\n            }, {\n              key: \"_next\",\n              value: function () {\n                var _next2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n                  return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          if (!this.cancelled) {\n                            _context5.next = 2;\n                            break;\n                          }\n\n                          return _context5.abrupt(\"return\");\n\n                        case 2:\n                          this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n\n                          if (this.operatorListIdx === this.operatorList.argsArray.length) {\n                            this.running = false;\n\n                            if (this.operatorList.lastChunk) {\n                              this.gfx.endDrawing();\n\n                              if (this._canvas) {\n                                canvasInRendering.delete(this._canvas);\n                              }\n\n                              this.callback();\n                            }\n                          }\n\n                        case 4:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, _callee5, this);\n                }));\n\n                function _next() {\n                  return _next2.apply(this, arguments);\n                }\n\n                return _next;\n              }()\n            }, {\n              key: \"completed\",\n              get: function get() {\n                return this.capability.promise.catch(function () {});\n              }\n            }]);\n\n            return InternalRenderTask;\n          }();\n\n          return InternalRenderTask;\n        }();\n\n        var version = '2.9.359';\n        exports.version = version;\n        var build = 'e667c8cbc';\n        exports.build = build;\n        /***/\n      },\n      /* 6 */\n\n      /***/\n      function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.FontLoader = exports.FontFaceObject = void 0;\n\n        var _util = __w_pdfjs_require__(2);\n\n        var BaseFontLoader = /*#__PURE__*/function () {\n          function BaseFontLoader(_ref28) {\n            var docId = _ref28.docId,\n                onUnsupportedFeature = _ref28.onUnsupportedFeature,\n                _ref28$ownerDocument = _ref28.ownerDocument,\n                ownerDocument = _ref28$ownerDocument === void 0 ? globalThis.document : _ref28$ownerDocument;\n\n            _classCallCheck(this, BaseFontLoader);\n\n            if (this.constructor === BaseFontLoader) {\n              (0, _util.unreachable)(\"Cannot initialize BaseFontLoader.\");\n            }\n\n            this.docId = docId;\n            this._onUnsupportedFeature = onUnsupportedFeature;\n            this._document = ownerDocument;\n            this.nativeFontFaces = [];\n            this.styleElement = null;\n          }\n\n          _createClass(BaseFontLoader, [{\n            key: \"addNativeFontFace\",\n            value: function addNativeFontFace(nativeFontFace) {\n              this.nativeFontFaces.push(nativeFontFace);\n\n              this._document.fonts.add(nativeFontFace);\n            }\n          }, {\n            key: \"insertRule\",\n            value: function insertRule(rule) {\n              var styleElement = this.styleElement;\n\n              if (!styleElement) {\n                styleElement = this.styleElement = this._document.createElement(\"style\");\n                styleElement.id = \"PDFJS_FONT_STYLE_TAG_\".concat(this.docId);\n\n                this._document.documentElement.getElementsByTagName(\"head\")[0].appendChild(styleElement);\n              }\n\n              var styleSheet = styleElement.sheet;\n              styleSheet.insertRule(rule, styleSheet.cssRules.length);\n            }\n          }, {\n            key: \"clear\",\n            value: function clear() {\n              var _iterator18 = _createForOfIteratorHelper(this.nativeFontFaces),\n                  _step18;\n\n              try {\n                for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n                  var nativeFontFace = _step18.value;\n\n                  this._document.fonts.delete(nativeFontFace);\n                }\n              } catch (err) {\n                _iterator18.e(err);\n              } finally {\n                _iterator18.f();\n              }\n\n              this.nativeFontFaces.length = 0;\n\n              if (this.styleElement) {\n                this.styleElement.remove();\n                this.styleElement = null;\n              }\n            }\n          }, {\n            key: \"bind\",\n            value: function () {\n              var _bind = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(font) {\n                var _this24 = this;\n\n                var nativeFontFace, rule;\n                return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        if (!(font.attached || font.missingFile)) {\n                          _context6.next = 2;\n                          break;\n                        }\n\n                        return _context6.abrupt(\"return\");\n\n                      case 2:\n                        font.attached = true;\n\n                        if (!this.isFontLoadingAPISupported) {\n                          _context6.next = 19;\n                          break;\n                        }\n\n                        nativeFontFace = font.createNativeFontFace();\n\n                        if (!nativeFontFace) {\n                          _context6.next = 18;\n                          break;\n                        }\n\n                        this.addNativeFontFace(nativeFontFace);\n                        _context6.prev = 7;\n                        _context6.next = 10;\n                        return nativeFontFace.loaded;\n\n                      case 10:\n                        _context6.next = 18;\n                        break;\n\n                      case 12:\n                        _context6.prev = 12;\n                        _context6.t0 = _context6[\"catch\"](7);\n\n                        this._onUnsupportedFeature({\n                          featureId: _util.UNSUPPORTED_FEATURES.errorFontLoadNative\n                        });\n\n                        (0, _util.warn)(\"Failed to load font '\".concat(nativeFontFace.family, \"': '\").concat(_context6.t0, \"'.\"));\n                        font.disableFontFace = true;\n                        throw _context6.t0;\n\n                      case 18:\n                        return _context6.abrupt(\"return\");\n\n                      case 19:\n                        rule = font.createFontFaceRule();\n\n                        if (!rule) {\n                          _context6.next = 26;\n                          break;\n                        }\n\n                        this.insertRule(rule);\n\n                        if (!this.isSyncFontLoadingSupported) {\n                          _context6.next = 24;\n                          break;\n                        }\n\n                        return _context6.abrupt(\"return\");\n\n                      case 24:\n                        _context6.next = 26;\n                        return new Promise(function (resolve) {\n                          var request = _this24._queueLoadingCallback(resolve);\n\n                          _this24._prepareFontLoadEvent([rule], [font], request);\n                        });\n\n                      case 26:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6, this, [[7, 12]]);\n              }));\n\n              function bind(_x3) {\n                return _bind.apply(this, arguments);\n              }\n\n              return bind;\n            }()\n          }, {\n            key: \"_queueLoadingCallback\",\n            value: function _queueLoadingCallback(callback) {\n              (0, _util.unreachable)(\"Abstract method `_queueLoadingCallback`.\");\n            }\n          }, {\n            key: \"_prepareFontLoadEvent\",\n            value: function _prepareFontLoadEvent(rules, fontsToLoad, request) {\n              (0, _util.unreachable)(\"Abstract method `_prepareFontLoadEvent`.\");\n            }\n          }, {\n            key: \"isFontLoadingAPISupported\",\n            get: function get() {\n              var _this$_document;\n\n              return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", !!((_this$_document = this._document) === null || _this$_document === void 0 ? void 0 : _this$_document.fonts));\n            }\n          }, {\n            key: \"isSyncFontLoadingSupported\",\n            get: function get() {\n              (0, _util.unreachable)(\"Abstract method `isSyncFontLoadingSupported`.\");\n            }\n          }, {\n            key: \"_loadTestFont\",\n            get: function get() {\n              (0, _util.unreachable)(\"Abstract method `_loadTestFont`.\");\n            }\n          }]);\n\n          return BaseFontLoader;\n        }();\n\n        var FontLoader;\n        exports.FontLoader = FontLoader;\n        {\n          exports.FontLoader = FontLoader = /*#__PURE__*/function (_BaseFontLoader) {\n            _inherits(GenericFontLoader, _BaseFontLoader);\n\n            var _super11 = _createSuper(GenericFontLoader);\n\n            function GenericFontLoader(params) {\n              var _this25;\n\n              _classCallCheck(this, GenericFontLoader);\n\n              _this25 = _super11.call(this, params);\n              _this25.loadingContext = {\n                requests: [],\n                nextRequestId: 0\n              };\n              _this25.loadTestFontId = 0;\n              return _this25;\n            }\n\n            _createClass(GenericFontLoader, [{\n              key: \"_queueLoadingCallback\",\n              value: function _queueLoadingCallback(callback) {\n                function completeRequest() {\n                  (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n                  request.done = true;\n\n                  while (context.requests.length > 0 && context.requests[0].done) {\n                    var otherRequest = context.requests.shift();\n                    setTimeout(otherRequest.callback, 0);\n                  }\n                }\n\n                var context = this.loadingContext;\n                var request = {\n                  id: \"pdfjs-font-loading-\".concat(context.nextRequestId++),\n                  done: false,\n                  complete: completeRequest,\n                  callback: callback\n                };\n                context.requests.push(request);\n                return request;\n              }\n            }, {\n              key: \"_prepareFontLoadEvent\",\n              value: function _prepareFontLoadEvent(rules, fonts, request) {\n                var _this26 = this;\n\n                function int32(data, offset) {\n                  return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n                }\n\n                function spliceString(s, offset, remove, insert) {\n                  var chunk1 = s.substring(0, offset);\n                  var chunk2 = s.substring(offset + remove);\n                  return chunk1 + insert + chunk2;\n                }\n\n                var i, ii;\n\n                var canvas = this._document.createElement(\"canvas\");\n\n                canvas.width = 1;\n                canvas.height = 1;\n                var ctx = canvas.getContext(\"2d\");\n                var called = 0;\n\n                function isFontReady(name, callback) {\n                  called++;\n\n                  if (called > 30) {\n                    (0, _util.warn)(\"Load test font never loaded.\");\n                    callback();\n                    return;\n                  }\n\n                  ctx.font = \"30px \" + name;\n                  ctx.fillText(\".\", 0, 20);\n                  var imageData = ctx.getImageData(0, 0, 1, 1);\n\n                  if (imageData.data[3] > 0) {\n                    callback();\n                    return;\n                  }\n\n                  setTimeout(isFontReady.bind(null, name, callback));\n                }\n\n                var loadTestFontId = \"lt\".concat(Date.now()).concat(this.loadTestFontId++);\n                var data = this._loadTestFont;\n                var COMMENT_OFFSET = 976;\n                data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n                var CFF_CHECKSUM_OFFSET = 16;\n                var XXXX_VALUE = 0x58585858;\n                var checksum = int32(data, CFF_CHECKSUM_OFFSET);\n\n                for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n                  checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n                }\n\n                if (i < loadTestFontId.length) {\n                  checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n                }\n\n                data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n                var url = \"url(data:font/opentype;base64,\".concat(btoa(data), \");\");\n                var rule = \"@font-face {font-family:\\\"\".concat(loadTestFontId, \"\\\";src:\").concat(url, \"}\");\n                this.insertRule(rule);\n                var names = [];\n\n                var _iterator19 = _createForOfIteratorHelper(fonts),\n                    _step19;\n\n                try {\n                  for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n                    var font = _step19.value;\n                    names.push(font.loadedName);\n                  }\n                } catch (err) {\n                  _iterator19.e(err);\n                } finally {\n                  _iterator19.f();\n                }\n\n                names.push(loadTestFontId);\n\n                var div = this._document.createElement(\"div\");\n\n                div.style.visibility = \"hidden\";\n                div.style.width = div.style.height = \"10px\";\n                div.style.position = \"absolute\";\n                div.style.top = div.style.left = \"0px\";\n\n                for (var _i4 = 0, _names = names; _i4 < _names.length; _i4++) {\n                  var name = _names[_i4];\n\n                  var span = this._document.createElement(\"span\");\n\n                  span.textContent = \"Hi\";\n                  span.style.fontFamily = name;\n                  div.appendChild(span);\n                }\n\n                this._document.body.appendChild(div);\n\n                isFontReady(loadTestFontId, function () {\n                  _this26._document.body.removeChild(div);\n\n                  request.complete();\n                });\n              }\n            }, {\n              key: \"isSyncFontLoadingSupported\",\n              get: function get() {\n                var supported = false;\n\n                if (typeof navigator === \"undefined\") {\n                  supported = true;\n                } else {\n                  var m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(navigator.userAgent);\n\n                  if ((m === null || m === void 0 ? void 0 : m[1]) >= 14) {\n                    supported = true;\n                  }\n                }\n\n                return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n              }\n            }, {\n              key: \"_loadTestFont\",\n              get: function get() {\n                var getLoadTestFont = function getLoadTestFont() {\n                  return atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n                };\n\n                return (0, _util.shadow)(this, \"_loadTestFont\", getLoadTestFont());\n              }\n            }]);\n\n            return GenericFontLoader;\n          }(BaseFontLoader);\n        }\n\n        var FontFaceObject = /*#__PURE__*/function () {\n          function FontFaceObject(translatedData, _ref29) {\n            var _ref29$isEvalSupporte = _ref29.isEvalSupported,\n                isEvalSupported = _ref29$isEvalSupporte === void 0 ? true : _ref29$isEvalSupporte,\n                _ref29$disableFontFac = _ref29.disableFontFace,\n                disableFontFace = _ref29$disableFontFac === void 0 ? false : _ref29$disableFontFac,\n                _ref29$ignoreErrors = _ref29.ignoreErrors,\n                ignoreErrors = _ref29$ignoreErrors === void 0 ? false : _ref29$ignoreErrors,\n                onUnsupportedFeature = _ref29.onUnsupportedFeature,\n                _ref29$fontRegistry = _ref29.fontRegistry,\n                fontRegistry = _ref29$fontRegistry === void 0 ? null : _ref29$fontRegistry;\n\n            _classCallCheck(this, FontFaceObject);\n\n            this.compiledGlyphs = Object.create(null);\n\n            for (var i in translatedData) {\n              this[i] = translatedData[i];\n            }\n\n            this.isEvalSupported = isEvalSupported !== false;\n            this.disableFontFace = disableFontFace === true;\n            this.ignoreErrors = ignoreErrors === true;\n            this._onUnsupportedFeature = onUnsupportedFeature;\n            this.fontRegistry = fontRegistry;\n          }\n\n          _createClass(FontFaceObject, [{\n            key: \"createNativeFontFace\",\n            value: function createNativeFontFace() {\n              if (!this.data || this.disableFontFace) {\n                return null;\n              }\n\n              var nativeFontFace;\n\n              if (!this.cssFontInfo) {\n                nativeFontFace = new FontFace(this.loadedName, this.data, {});\n              } else {\n                var css = {\n                  weight: this.cssFontInfo.fontWeight\n                };\n\n                if (this.cssFontInfo.italicAngle) {\n                  css.style = \"oblique \".concat(this.cssFontInfo.italicAngle, \"deg\");\n                }\n\n                nativeFontFace = new FontFace(this.cssFontInfo.fontFamily, this.data, css);\n              }\n\n              if (this.fontRegistry) {\n                this.fontRegistry.registerFont(this);\n              }\n\n              return nativeFontFace;\n            }\n          }, {\n            key: \"createFontFaceRule\",\n            value: function createFontFaceRule() {\n              if (!this.data || this.disableFontFace) {\n                return null;\n              }\n\n              var data = (0, _util.bytesToString)(this.data);\n              var url = \"url(data:\".concat(this.mimetype, \";base64,\").concat(btoa(data), \");\");\n              var rule;\n\n              if (!this.cssFontInfo) {\n                rule = \"@font-face {font-family:\\\"\".concat(this.loadedName, \"\\\";src:\").concat(url, \"}\");\n              } else {\n                var css = \"font-weight: \".concat(this.cssFontInfo.fontWeight, \";\");\n\n                if (this.cssFontInfo.italicAngle) {\n                  css += \"font-style: oblique \".concat(this.cssFontInfo.italicAngle, \"deg;\");\n                }\n\n                rule = \"@font-face {font-family:\\\"\".concat(this.cssFontInfo.fontFamily, \"\\\";\").concat(css, \"src:\").concat(url, \"}\");\n              }\n\n              if (this.fontRegistry) {\n                this.fontRegistry.registerFont(this, url);\n              }\n\n              return rule;\n            }\n          }, {\n            key: \"getPathGenerator\",\n            value: function getPathGenerator(objs, character) {\n              if (this.compiledGlyphs[character] !== undefined) {\n                return this.compiledGlyphs[character];\n              }\n\n              var cmds;\n\n              try {\n                cmds = objs.get(this.loadedName + \"_path_\" + character);\n              } catch (ex) {\n                if (!this.ignoreErrors) {\n                  throw ex;\n                }\n\n                this._onUnsupportedFeature({\n                  featureId: _util.UNSUPPORTED_FEATURES.errorFontGetPath\n                });\n\n                (0, _util.warn)(\"getPathGenerator - ignoring character: \\\"\".concat(ex, \"\\\".\"));\n                return this.compiledGlyphs[character] = function (c, size) {};\n              }\n\n              if (this.isEvalSupported && _util.IsEvalSupportedCached.value) {\n                var jsBuf = [];\n\n                var _iterator20 = _createForOfIteratorHelper(cmds),\n                    _step20;\n\n                try {\n                  for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n                    var current = _step20.value;\n                    var args = current.args !== undefined ? current.args.join(\",\") : \"\";\n                    jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n                  }\n                } catch (err) {\n                  _iterator20.e(err);\n                } finally {\n                  _iterator20.f();\n                }\n\n                return this.compiledGlyphs[character] = new Function(\"c\", \"size\", jsBuf.join(\"\"));\n              }\n\n              return this.compiledGlyphs[character] = function (c, size) {\n                var _iterator21 = _createForOfIteratorHelper(cmds),\n                    _step21;\n\n                try {\n                  for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n                    var _current = _step21.value;\n\n                    if (_current.cmd === \"scale\") {\n                      _current.args = [size, -size];\n                    }\n\n                    c[_current.cmd].apply(c, _current.args);\n                  }\n                } catch (err) {\n                  _iterator21.e(err);\n                } finally {\n                  _iterator21.f();\n                }\n              };\n            }\n          }]);\n\n          return FontFaceObject;\n        }();\n\n        exports.FontFaceObject = FontFaceObject;\n        /***/\n      },\n      /* 7 */\n\n      /***/\n      function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.NodeCMapReaderFactory = exports.NodeCanvasFactory = void 0;\n\n        var _display_utils = __w_pdfjs_require__(1);\n\n        var _is_node = __w_pdfjs_require__(4);\n\n        var _util = __w_pdfjs_require__(2);\n\n        var NodeCanvasFactory = function NodeCanvasFactory() {\n          _classCallCheck(this, NodeCanvasFactory);\n\n          (0, _util.unreachable)(\"Not implemented: NodeCanvasFactory\");\n        };\n\n        exports.NodeCanvasFactory = NodeCanvasFactory;\n\n        var NodeCMapReaderFactory = function NodeCMapReaderFactory() {\n          _classCallCheck(this, NodeCMapReaderFactory);\n\n          (0, _util.unreachable)(\"Not implemented: NodeCMapReaderFactory\");\n        };\n\n        exports.NodeCMapReaderFactory = NodeCMapReaderFactory;\n\n        if (_is_node.isNodeJS) {\n          exports.NodeCanvasFactory = NodeCanvasFactory = /*#__PURE__*/function (_display_utils$BaseCa) {\n            _inherits(NodeCanvasFactory, _display_utils$BaseCa);\n\n            var _super12 = _createSuper(NodeCanvasFactory);\n\n            function NodeCanvasFactory() {\n              _classCallCheck(this, NodeCanvasFactory);\n\n              return _super12.apply(this, arguments);\n            }\n\n            _createClass(NodeCanvasFactory, [{\n              key: \"create\",\n              value: function create(width, height) {\n                if (width <= 0 || height <= 0) {\n                  throw new Error(\"Invalid canvas size\");\n                }\n\n                var Canvas = require(\"canvas\");\n\n                var canvas = Canvas.createCanvas(width, height);\n                return {\n                  canvas: canvas,\n                  context: canvas.getContext(\"2d\")\n                };\n              }\n            }]);\n\n            return NodeCanvasFactory;\n          }(_display_utils.BaseCanvasFactory);\n\n          exports.NodeCMapReaderFactory = NodeCMapReaderFactory = /*#__PURE__*/function (_display_utils$BaseCM) {\n            _inherits(NodeCMapReaderFactory, _display_utils$BaseCM);\n\n            var _super13 = _createSuper(NodeCMapReaderFactory);\n\n            function NodeCMapReaderFactory() {\n              _classCallCheck(this, NodeCMapReaderFactory);\n\n              return _super13.apply(this, arguments);\n            }\n\n            _createClass(NodeCMapReaderFactory, [{\n              key: \"_fetchData\",\n              value: function _fetchData(url, compressionType) {\n                return new Promise(function (resolve, reject) {\n                  var fs = require(\"fs\");\n\n                  fs.readFile(url, function (error, data) {\n                    if (error || !data) {\n                      reject(new Error(error));\n                      return;\n                    }\n\n                    resolve({\n                      cMapData: new Uint8Array(data),\n                      compressionType: compressionType\n                    });\n                  });\n                });\n              }\n            }]);\n\n            return NodeCMapReaderFactory;\n          }(_display_utils.BaseCMapReaderFactory);\n        }\n        /***/\n\n      },\n      /* 8 */\n\n      /***/\n      function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.AnnotationStorage = void 0;\n\n        var _util = __w_pdfjs_require__(2);\n\n        var AnnotationStorage = /*#__PURE__*/function () {\n          function AnnotationStorage() {\n            _classCallCheck(this, AnnotationStorage);\n\n            this._storage = new Map();\n            this._modified = false;\n            this.onSetModified = null;\n            this.onResetModified = null;\n          }\n\n          _createClass(AnnotationStorage, [{\n            key: \"getValue\",\n            value: function getValue(key, defaultValue) {\n              var obj = this._storage.get(key);\n\n              return obj !== undefined ? obj : defaultValue;\n            }\n          }, {\n            key: \"setValue\",\n            value: function setValue(key, value) {\n              var obj = this._storage.get(key);\n\n              var modified = false;\n\n              if (obj !== undefined) {\n                for (var _i5 = 0, _Object$entries = Object.entries(value); _i5 < _Object$entries.length; _i5++) {\n                  var _Object$entries$_i = _slicedToArray(_Object$entries[_i5], 2),\n                      entry = _Object$entries$_i[0],\n                      val = _Object$entries$_i[1];\n\n                  if (obj[entry] !== val) {\n                    modified = true;\n                    obj[entry] = val;\n                  }\n                }\n              } else {\n                this._storage.set(key, value);\n\n                modified = true;\n              }\n\n              if (modified) {\n                this._setModified();\n              }\n            }\n          }, {\n            key: \"getAll\",\n            value: function getAll() {\n              return this._storage.size > 0 ? (0, _util.objectFromMap)(this._storage) : null;\n            }\n          }, {\n            key: \"_setModified\",\n            value: function _setModified() {\n              if (!this._modified) {\n                this._modified = true;\n\n                if (typeof this.onSetModified === \"function\") {\n                  this.onSetModified();\n                }\n              }\n            }\n          }, {\n            key: \"resetModified\",\n            value: function resetModified() {\n              if (this._modified) {\n                this._modified = false;\n\n                if (typeof this.onResetModified === \"function\") {\n                  this.onResetModified();\n                }\n              }\n            }\n          }, {\n            key: \"size\",\n            get: function get() {\n              return this._storage.size;\n            }\n          }, {\n            key: \"serializable\",\n            get: function get() {\n              return this._storage.size > 0 ? this._storage : null;\n            }\n          }]);\n\n          return AnnotationStorage;\n        }();\n\n        exports.AnnotationStorage = AnnotationStorage;\n        /***/\n      },\n      /* 9 */\n\n      /***/\n      function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.apiCompatibilityParams = void 0;\n\n        var _is_node = __w_pdfjs_require__(4);\n\n        var compatibilityParams = Object.create(null);\n        {\n          (function checkFontFace() {\n            if (_is_node.isNodeJS) {\n              compatibilityParams.disableFontFace = true;\n            }\n          })();\n        }\n        var apiCompatibilityParams = Object.freeze(compatibilityParams);\n        exports.apiCompatibilityParams = apiCompatibilityParams;\n        /***/\n      },\n      /* 10 */\n\n      /***/\n      function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.CanvasGraphics = void 0;\n\n        var _util = __w_pdfjs_require__(2);\n\n        var _pattern_helper = __w_pdfjs_require__(11);\n\n        var MIN_FONT_SIZE = 16;\n        var MAX_FONT_SIZE = 100;\n        var MAX_GROUP_SIZE = 4096;\n        var COMPILE_TYPE3_GLYPHS = true;\n        var MAX_SIZE_TO_COMPILE = 1000;\n        var FULL_CHUNK_HEIGHT = 16;\n        var LINEWIDTH_SCALE_FACTOR = 1.000001;\n\n        function addContextCurrentTransform(ctx) {\n          if (ctx.mozCurrentTransform) {\n            return;\n          }\n\n          ctx._originalSave = ctx.save;\n          ctx._originalRestore = ctx.restore;\n          ctx._originalRotate = ctx.rotate;\n          ctx._originalScale = ctx.scale;\n          ctx._originalTranslate = ctx.translate;\n          ctx._originalTransform = ctx.transform;\n          ctx._originalSetTransform = ctx.setTransform;\n          ctx._originalResetTransform = ctx.resetTransform;\n          ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n          ctx._transformStack = [];\n\n          try {\n            var desc = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(ctx), \"lineWidth\");\n            ctx._setLineWidth = desc.set;\n            ctx._getLineWidth = desc.get;\n            Object.defineProperty(ctx, \"lineWidth\", {\n              set: function setLineWidth(width) {\n                this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR);\n              },\n              get: function getLineWidth() {\n                return this._getLineWidth();\n              }\n            });\n          } catch (_) {}\n\n          Object.defineProperty(ctx, \"mozCurrentTransform\", {\n            get: function getCurrentTransform() {\n              return this._transformMatrix;\n            }\n          });\n          Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n            get: function getCurrentTransformInverse() {\n              var _this$_transformMatri = _slicedToArray(this._transformMatrix, 6),\n                  a = _this$_transformMatri[0],\n                  b = _this$_transformMatri[1],\n                  c = _this$_transformMatri[2],\n                  d = _this$_transformMatri[3],\n                  e = _this$_transformMatri[4],\n                  f = _this$_transformMatri[5];\n\n              var ad_bc = a * d - b * c;\n              var bc_ad = b * c - a * d;\n              return [d / ad_bc, b / bc_ad, c / bc_ad, a / ad_bc, (d * e - c * f) / bc_ad, (b * e - a * f) / ad_bc];\n            }\n          });\n\n          ctx.save = function ctxSave() {\n            var old = this._transformMatrix;\n\n            this._transformStack.push(old);\n\n            this._transformMatrix = old.slice(0, 6);\n\n            this._originalSave();\n          };\n\n          ctx.restore = function ctxRestore() {\n            var prev = this._transformStack.pop();\n\n            if (prev) {\n              this._transformMatrix = prev;\n\n              this._originalRestore();\n            }\n          };\n\n          ctx.translate = function ctxTranslate(x, y) {\n            var m = this._transformMatrix;\n            m[4] = m[0] * x + m[2] * y + m[4];\n            m[5] = m[1] * x + m[3] * y + m[5];\n\n            this._originalTranslate(x, y);\n          };\n\n          ctx.scale = function ctxScale(x, y) {\n            var m = this._transformMatrix;\n            m[0] = m[0] * x;\n            m[1] = m[1] * x;\n            m[2] = m[2] * y;\n            m[3] = m[3] * y;\n\n            this._originalScale(x, y);\n          };\n\n          ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n            var m = this._transformMatrix;\n            this._transformMatrix = [m[0] * a + m[2] * b, m[1] * a + m[3] * b, m[0] * c + m[2] * d, m[1] * c + m[3] * d, m[0] * e + m[2] * f + m[4], m[1] * e + m[3] * f + m[5]];\n\n            ctx._originalTransform(a, b, c, d, e, f);\n          };\n\n          ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n            this._transformMatrix = [a, b, c, d, e, f];\n\n            ctx._originalSetTransform(a, b, c, d, e, f);\n          };\n\n          ctx.resetTransform = function ctxResetTransform() {\n            this._transformMatrix = [1, 0, 0, 1, 0, 0];\n\n            ctx._originalResetTransform();\n          };\n\n          ctx.rotate = function ctxRotate(angle) {\n            var cosValue = Math.cos(angle);\n            var sinValue = Math.sin(angle);\n            var m = this._transformMatrix;\n            this._transformMatrix = [m[0] * cosValue + m[2] * sinValue, m[1] * cosValue + m[3] * sinValue, m[0] * -sinValue + m[2] * cosValue, m[1] * -sinValue + m[3] * cosValue, m[4], m[5]];\n\n            this._originalRotate(angle);\n          };\n        }\n\n        var CachedCanvases = /*#__PURE__*/function () {\n          function CachedCanvases(canvasFactory) {\n            _classCallCheck(this, CachedCanvases);\n\n            this.canvasFactory = canvasFactory;\n            this.cache = Object.create(null);\n          }\n\n          _createClass(CachedCanvases, [{\n            key: \"getCanvas\",\n            value: function getCanvas(id, width, height, trackTransform) {\n              var canvasEntry;\n\n              if (this.cache[id] !== undefined) {\n                canvasEntry = this.cache[id];\n                this.canvasFactory.reset(canvasEntry, width, height);\n                canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n              } else {\n                canvasEntry = this.canvasFactory.create(width, height);\n                this.cache[id] = canvasEntry;\n              }\n\n              if (trackTransform) {\n                addContextCurrentTransform(canvasEntry.context);\n              }\n\n              return canvasEntry;\n            }\n          }, {\n            key: \"clear\",\n            value: function clear() {\n              for (var id in this.cache) {\n                var canvasEntry = this.cache[id];\n                this.canvasFactory.destroy(canvasEntry);\n                delete this.cache[id];\n              }\n            }\n          }]);\n\n          return CachedCanvases;\n        }();\n\n        function compileType3Glyph(imgData) {\n          var POINT_TO_PROCESS_LIMIT = 1000;\n          var POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n          var width = imgData.width,\n              height = imgData.height,\n              width1 = width + 1;\n          var i, ii, j, j0;\n          var points = new Uint8Array(width1 * (height + 1));\n          var lineSize = width + 7 & ~7,\n              data0 = imgData.data;\n          var data = new Uint8Array(lineSize * height);\n          var pos = 0;\n\n          for (i = 0, ii = data0.length; i < ii; i++) {\n            var elem = data0[i];\n            var mask = 128;\n\n            while (mask > 0) {\n              data[pos++] = elem & mask ? 0 : 255;\n              mask >>= 1;\n            }\n          }\n\n          var count = 0;\n          pos = 0;\n\n          if (data[pos] !== 0) {\n            points[0] = 1;\n            ++count;\n          }\n\n          for (j = 1; j < width; j++) {\n            if (data[pos] !== data[pos + 1]) {\n              points[j] = data[pos] ? 2 : 1;\n              ++count;\n            }\n\n            pos++;\n          }\n\n          if (data[pos] !== 0) {\n            points[j] = 2;\n            ++count;\n          }\n\n          for (i = 1; i < height; i++) {\n            pos = i * lineSize;\n            j0 = i * width1;\n\n            if (data[pos - lineSize] !== data[pos]) {\n              points[j0] = data[pos] ? 1 : 8;\n              ++count;\n            }\n\n            var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n\n            for (j = 1; j < width; j++) {\n              sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n\n              if (POINT_TYPES[sum]) {\n                points[j0 + j] = POINT_TYPES[sum];\n                ++count;\n              }\n\n              pos++;\n            }\n\n            if (data[pos - lineSize] !== data[pos]) {\n              points[j0 + j] = data[pos] ? 2 : 4;\n              ++count;\n            }\n\n            if (count > POINT_TO_PROCESS_LIMIT) {\n              return null;\n            }\n          }\n\n          pos = lineSize * (height - 1);\n          j0 = i * width1;\n\n          if (data[pos] !== 0) {\n            points[j0] = 8;\n            ++count;\n          }\n\n          for (j = 1; j < width; j++) {\n            if (data[pos] !== data[pos + 1]) {\n              points[j0 + j] = data[pos] ? 4 : 8;\n              ++count;\n            }\n\n            pos++;\n          }\n\n          if (data[pos] !== 0) {\n            points[j0 + j] = 4;\n            ++count;\n          }\n\n          if (count > POINT_TO_PROCESS_LIMIT) {\n            return null;\n          }\n\n          var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n          var outlines = [];\n\n          for (i = 0; count && i <= height; i++) {\n            var p = i * width1;\n            var end = p + width;\n\n            while (p < end && !points[p]) {\n              p++;\n            }\n\n            if (p === end) {\n              continue;\n            }\n\n            var coords = [p % width1, i];\n            var p0 = p;\n            var type = points[p];\n\n            do {\n              var step = steps[type];\n\n              do {\n                p += step;\n              } while (!points[p]);\n\n              var pp = points[p];\n\n              if (pp !== 5 && pp !== 10) {\n                type = pp;\n                points[p] = 0;\n              } else {\n                type = pp & 0x33 * type >> 4;\n                points[p] &= type >> 2 | type << 2;\n              }\n\n              coords.push(p % width1, p / width1 | 0);\n\n              if (!points[p]) {\n                --count;\n              }\n            } while (p0 !== p);\n\n            outlines.push(coords);\n            --i;\n          }\n\n          var drawOutline = function drawOutline(c) {\n            c.save();\n            c.scale(1 / width, -1 / height);\n            c.translate(0, -height);\n            c.beginPath();\n\n            for (var k = 0, kk = outlines.length; k < kk; k++) {\n              var o = outlines[k];\n              c.moveTo(o[0], o[1]);\n\n              for (var l = 2, ll = o.length; l < ll; l += 2) {\n                c.lineTo(o[l], o[l + 1]);\n              }\n            }\n\n            c.fill();\n            c.beginPath();\n            c.restore();\n          };\n\n          return drawOutline;\n        }\n\n        var CanvasExtraState = /*#__PURE__*/function () {\n          function CanvasExtraState() {\n            _classCallCheck(this, CanvasExtraState);\n\n            this.alphaIsShape = false;\n            this.fontSize = 0;\n            this.fontSizeScale = 1;\n            this.textMatrix = _util.IDENTITY_MATRIX;\n            this.textMatrixScale = 1;\n            this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n            this.leading = 0;\n            this.x = 0;\n            this.y = 0;\n            this.lineX = 0;\n            this.lineY = 0;\n            this.charSpacing = 0;\n            this.wordSpacing = 0;\n            this.textHScale = 1;\n            this.textRenderingMode = _util.TextRenderingMode.FILL;\n            this.textRise = 0;\n            this.fillColor = \"#000000\";\n            this.strokeColor = \"#000000\";\n            this.patternFill = false;\n            this.fillAlpha = 1;\n            this.strokeAlpha = 1;\n            this.lineWidth = 1;\n            this.activeSMask = null;\n            this.resumeSMaskCtx = null;\n            this.transferMaps = null;\n          }\n\n          _createClass(CanvasExtraState, [{\n            key: \"clone\",\n            value: function clone() {\n              return Object.create(this);\n            }\n          }, {\n            key: \"setCurrentPoint\",\n            value: function setCurrentPoint(x, y) {\n              this.x = x;\n              this.y = y;\n            }\n          }]);\n\n          return CanvasExtraState;\n        }();\n\n        var CanvasGraphics = function CanvasGraphicsClosure() {\n          var EXECUTION_TIME = 15;\n          var EXECUTION_STEPS = 10;\n\n          function putBinaryImageData(ctx, imgData) {\n            var transferMaps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n              ctx.putImageData(imgData, 0, 0);\n              return;\n            }\n\n            var height = imgData.height,\n                width = imgData.width;\n            var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n            var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n            var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n            var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n            var srcPos = 0,\n                destPos;\n            var src = imgData.data;\n            var dest = chunkImgData.data;\n            var i, j, thisChunkHeight, elemsInThisChunk;\n            var transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n\n            if (transferMaps) {\n              switch (transferMaps.length) {\n                case 1:\n                  transferMapRed = transferMaps[0];\n                  transferMapGreen = transferMaps[0];\n                  transferMapBlue = transferMaps[0];\n                  transferMapGray = transferMaps[0];\n                  break;\n\n                case 4:\n                  transferMapRed = transferMaps[0];\n                  transferMapGreen = transferMaps[1];\n                  transferMapBlue = transferMaps[2];\n                  transferMapGray = transferMaps[3];\n                  break;\n              }\n            }\n\n            if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n              var srcLength = src.byteLength;\n              var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n              var dest32DataLength = dest32.length;\n              var fullSrcDiff = width + 7 >> 3;\n              var white = 0xffffffff;\n              var black = _util.IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n              if (transferMapGray) {\n                if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n                  var _ref30 = [black, white];\n                  white = _ref30[0];\n                  black = _ref30[1];\n                }\n              }\n\n              for (i = 0; i < totalChunks; i++) {\n                thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n                destPos = 0;\n\n                for (j = 0; j < thisChunkHeight; j++) {\n                  var srcDiff = srcLength - srcPos;\n                  var k = 0;\n                  var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n                  var kEndUnrolled = kEnd & ~7;\n                  var mask = 0;\n                  var srcByte = 0;\n\n                  for (; k < kEndUnrolled; k += 8) {\n                    srcByte = src[srcPos++];\n                    dest32[destPos++] = srcByte & 128 ? white : black;\n                    dest32[destPos++] = srcByte & 64 ? white : black;\n                    dest32[destPos++] = srcByte & 32 ? white : black;\n                    dest32[destPos++] = srcByte & 16 ? white : black;\n                    dest32[destPos++] = srcByte & 8 ? white : black;\n                    dest32[destPos++] = srcByte & 4 ? white : black;\n                    dest32[destPos++] = srcByte & 2 ? white : black;\n                    dest32[destPos++] = srcByte & 1 ? white : black;\n                  }\n\n                  for (; k < kEnd; k++) {\n                    if (mask === 0) {\n                      srcByte = src[srcPos++];\n                      mask = 128;\n                    }\n\n                    dest32[destPos++] = srcByte & mask ? white : black;\n                    mask >>= 1;\n                  }\n                }\n\n                while (destPos < dest32DataLength) {\n                  dest32[destPos++] = 0;\n                }\n\n                ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n              }\n            } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n              var hasTransferMaps = !!(transferMapRed || transferMapGreen || transferMapBlue);\n              j = 0;\n              elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n\n              for (i = 0; i < fullChunks; i++) {\n                dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n                srcPos += elemsInThisChunk;\n\n                if (hasTransferMaps) {\n                  for (var _k = 0; _k < elemsInThisChunk; _k += 4) {\n                    if (transferMapRed) {\n                      dest[_k + 0] = transferMapRed[dest[_k + 0]];\n                    }\n\n                    if (transferMapGreen) {\n                      dest[_k + 1] = transferMapGreen[dest[_k + 1]];\n                    }\n\n                    if (transferMapBlue) {\n                      dest[_k + 2] = transferMapBlue[dest[_k + 2]];\n                    }\n                  }\n                }\n\n                ctx.putImageData(chunkImgData, 0, j);\n                j += FULL_CHUNK_HEIGHT;\n              }\n\n              if (i < totalChunks) {\n                elemsInThisChunk = width * partialChunkHeight * 4;\n                dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n                if (hasTransferMaps) {\n                  for (var _k2 = 0; _k2 < elemsInThisChunk; _k2 += 4) {\n                    if (transferMapRed) {\n                      dest[_k2 + 0] = transferMapRed[dest[_k2 + 0]];\n                    }\n\n                    if (transferMapGreen) {\n                      dest[_k2 + 1] = transferMapGreen[dest[_k2 + 1]];\n                    }\n\n                    if (transferMapBlue) {\n                      dest[_k2 + 2] = transferMapBlue[dest[_k2 + 2]];\n                    }\n                  }\n                }\n\n                ctx.putImageData(chunkImgData, 0, j);\n              }\n            } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n              var _hasTransferMaps = !!(transferMapRed || transferMapGreen || transferMapBlue);\n\n              thisChunkHeight = FULL_CHUNK_HEIGHT;\n              elemsInThisChunk = width * thisChunkHeight;\n\n              for (i = 0; i < totalChunks; i++) {\n                if (i >= fullChunks) {\n                  thisChunkHeight = partialChunkHeight;\n                  elemsInThisChunk = width * thisChunkHeight;\n                }\n\n                destPos = 0;\n\n                for (j = elemsInThisChunk; j--;) {\n                  dest[destPos++] = src[srcPos++];\n                  dest[destPos++] = src[srcPos++];\n                  dest[destPos++] = src[srcPos++];\n                  dest[destPos++] = 255;\n                }\n\n                if (_hasTransferMaps) {\n                  for (var _k3 = 0; _k3 < destPos; _k3 += 4) {\n                    if (transferMapRed) {\n                      dest[_k3 + 0] = transferMapRed[dest[_k3 + 0]];\n                    }\n\n                    if (transferMapGreen) {\n                      dest[_k3 + 1] = transferMapGreen[dest[_k3 + 1]];\n                    }\n\n                    if (transferMapBlue) {\n                      dest[_k3 + 2] = transferMapBlue[dest[_k3 + 2]];\n                    }\n                  }\n                }\n\n                ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n              }\n            } else {\n              throw new Error(\"bad image kind: \".concat(imgData.kind));\n            }\n          }\n\n          function putBinaryImageMask(ctx, imgData) {\n            var height = imgData.height,\n                width = imgData.width;\n            var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n            var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n            var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n            var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n            var srcPos = 0;\n            var src = imgData.data;\n            var dest = chunkImgData.data;\n\n            for (var i = 0; i < totalChunks; i++) {\n              var thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n              var destPos = 3;\n\n              for (var j = 0; j < thisChunkHeight; j++) {\n                var elem = void 0,\n                    mask = 0;\n\n                for (var k = 0; k < width; k++) {\n                  if (!mask) {\n                    elem = src[srcPos++];\n                    mask = 128;\n                  }\n\n                  dest[destPos] = elem & mask ? 0 : 255;\n                  destPos += 4;\n                  mask >>= 1;\n                }\n              }\n\n              ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n            }\n          }\n\n          function copyCtxState(sourceCtx, destCtx) {\n            var properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\"];\n\n            for (var i = 0, ii = properties.length; i < ii; i++) {\n              var property = properties[i];\n\n              if (sourceCtx[property] !== undefined) {\n                destCtx[property] = sourceCtx[property];\n              }\n            }\n\n            if (sourceCtx.setLineDash !== undefined) {\n              destCtx.setLineDash(sourceCtx.getLineDash());\n              destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n            }\n          }\n\n          function resetCtxToDefault(ctx) {\n            ctx.strokeStyle = \"#000000\";\n            ctx.fillStyle = \"#000000\";\n            ctx.fillRule = \"nonzero\";\n            ctx.globalAlpha = 1;\n            ctx.lineWidth = 1;\n            ctx.lineCap = \"butt\";\n            ctx.lineJoin = \"miter\";\n            ctx.miterLimit = 10;\n            ctx.globalCompositeOperation = \"source-over\";\n            ctx.font = \"10px sans-serif\";\n\n            if (ctx.setLineDash !== undefined) {\n              ctx.setLineDash([]);\n              ctx.lineDashOffset = 0;\n            }\n          }\n\n          function composeSMaskBackdrop(bytes, r0, g0, b0) {\n            var length = bytes.length;\n\n            for (var i = 3; i < length; i += 4) {\n              var alpha = bytes[i];\n\n              if (alpha === 0) {\n                bytes[i - 3] = r0;\n                bytes[i - 2] = g0;\n                bytes[i - 1] = b0;\n              } else if (alpha < 255) {\n                var alpha_ = 255 - alpha;\n                bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n                bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n                bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n              }\n            }\n          }\n\n          function composeSMaskAlpha(maskData, layerData, transferMap) {\n            var length = maskData.length;\n            var scale = 1 / 255;\n\n            for (var i = 3; i < length; i += 4) {\n              var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n              layerData[i] = layerData[i] * alpha * scale | 0;\n            }\n          }\n\n          function composeSMaskLuminosity(maskData, layerData, transferMap) {\n            var length = maskData.length;\n\n            for (var i = 3; i < length; i += 4) {\n              var y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n              layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n            }\n          }\n\n          function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap) {\n            var hasBackdrop = !!backdrop;\n            var r0 = hasBackdrop ? backdrop[0] : 0;\n            var g0 = hasBackdrop ? backdrop[1] : 0;\n            var b0 = hasBackdrop ? backdrop[2] : 0;\n            var composeFn;\n\n            if (subtype === \"Luminosity\") {\n              composeFn = composeSMaskLuminosity;\n            } else {\n              composeFn = composeSMaskAlpha;\n            }\n\n            var PIXELS_TO_PROCESS = 1048576;\n            var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n\n            for (var row = 0; row < height; row += chunkSize) {\n              var chunkHeight = Math.min(chunkSize, height - row);\n              var maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n              var layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n              if (hasBackdrop) {\n                composeSMaskBackdrop(maskData.data, r0, g0, b0);\n              }\n\n              composeFn(maskData.data, layerData.data, transferMap);\n              maskCtx.putImageData(layerData, 0, row);\n            }\n          }\n\n          function composeSMask(ctx, smask, layerCtx) {\n            var mask = smask.canvas;\n            var maskCtx = smask.context;\n            ctx.setTransform(smask.scaleX, 0, 0, smask.scaleY, smask.offsetX, smask.offsetY);\n            genericComposeSMask(maskCtx, layerCtx, mask.width, mask.height, smask.subtype, smask.backdrop, smask.transferMap);\n            ctx.drawImage(mask, 0, 0);\n          }\n\n          var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n          var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n          var NORMAL_CLIP = {};\n          var EO_CLIP = {};\n\n          var CanvasGraphics = /*#__PURE__*/function () {\n            function CanvasGraphics(canvasCtx, commonObjs, objs, canvasFactory, imageLayer, optionalContentConfig) {\n              _classCallCheck(this, CanvasGraphics);\n\n              this.ctx = canvasCtx;\n              this.current = new CanvasExtraState();\n              this.stateStack = [];\n              this.pendingClip = null;\n              this.pendingEOFill = false;\n              this.res = null;\n              this.xobjs = null;\n              this.commonObjs = commonObjs;\n              this.objs = objs;\n              this.canvasFactory = canvasFactory;\n              this.imageLayer = imageLayer;\n              this.groupStack = [];\n              this.processingType3 = null;\n              this.baseTransform = null;\n              this.baseTransformStack = [];\n              this.groupLevel = 0;\n              this.smaskStack = [];\n              this.smaskCounter = 0;\n              this.tempSMask = null;\n              this.contentVisible = true;\n              this.markedContentStack = [];\n              this.optionalContentConfig = optionalContentConfig;\n              this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n\n              if (canvasCtx) {\n                addContextCurrentTransform(canvasCtx);\n              }\n\n              this._cachedGetSinglePixelWidth = null;\n            }\n\n            _createClass(CanvasGraphics, [{\n              key: \"beginDrawing\",\n              value: function beginDrawing(_ref31) {\n                var transform = _ref31.transform,\n                    viewport = _ref31.viewport,\n                    _ref31$transparency = _ref31.transparency,\n                    transparency = _ref31$transparency === void 0 ? false : _ref31$transparency,\n                    _ref31$background = _ref31.background,\n                    background = _ref31$background === void 0 ? null : _ref31$background;\n                var width = this.ctx.canvas.width;\n                var height = this.ctx.canvas.height;\n                this.ctx.save();\n                this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n                this.ctx.fillRect(0, 0, width, height);\n                this.ctx.restore();\n\n                if (transparency) {\n                  var transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height, true);\n                  this.compositeCtx = this.ctx;\n                  this.transparentCanvas = transparentCanvas.canvas;\n                  this.ctx = transparentCanvas.context;\n                  this.ctx.save();\n                  this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n                }\n\n                this.ctx.save();\n                resetCtxToDefault(this.ctx);\n\n                if (transform) {\n                  this.ctx.transform.apply(this.ctx, transform);\n                }\n\n                this.ctx.transform.apply(this.ctx, viewport.transform);\n                this.baseTransform = this.ctx.mozCurrentTransform.slice();\n                this._combinedScaleFactor = Math.hypot(this.baseTransform[0], this.baseTransform[2]);\n\n                if (this.imageLayer) {\n                  this.imageLayer.beginLayout();\n                }\n              }\n            }, {\n              key: \"executeOperatorList\",\n              value: function executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n                var argsArray = operatorList.argsArray;\n                var fnArray = operatorList.fnArray;\n                var i = executionStartIdx || 0;\n                var argsArrayLen = argsArray.length;\n\n                if (argsArrayLen === i) {\n                  return i;\n                }\n\n                var chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n                var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n                var steps = 0;\n                var commonObjs = this.commonObjs;\n                var objs = this.objs;\n                var fnId;\n\n                while (true) {\n                  if (stepper !== undefined && i === stepper.nextBreakPoint) {\n                    stepper.breakIt(i, continueCallback);\n                    return i;\n                  }\n\n                  fnId = fnArray[i];\n\n                  if (fnId !== _util.OPS.dependency) {\n                    this[fnId].apply(this, argsArray[i]);\n                  } else {\n                    var _iterator22 = _createForOfIteratorHelper(argsArray[i]),\n                        _step22;\n\n                    try {\n                      for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n                        var depObjId = _step22.value;\n                        var objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n                        if (!objsPool.has(depObjId)) {\n                          objsPool.get(depObjId, continueCallback);\n                          return i;\n                        }\n                      }\n                    } catch (err) {\n                      _iterator22.e(err);\n                    } finally {\n                      _iterator22.f();\n                    }\n                  }\n\n                  i++;\n\n                  if (i === argsArrayLen) {\n                    return i;\n                  }\n\n                  if (chunkOperations && ++steps > EXECUTION_STEPS) {\n                    if (Date.now() > endTime) {\n                      continueCallback();\n                      return i;\n                    }\n\n                    steps = 0;\n                  }\n                }\n              }\n            }, {\n              key: \"endDrawing\",\n              value: function endDrawing() {\n                while (this.stateStack.length || this.current.activeSMask !== null) {\n                  this.restore();\n                }\n\n                this.ctx.restore();\n\n                if (this.transparentCanvas) {\n                  this.ctx = this.compositeCtx;\n                  this.ctx.save();\n                  this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n                  this.ctx.drawImage(this.transparentCanvas, 0, 0);\n                  this.ctx.restore();\n                  this.transparentCanvas = null;\n                }\n\n                this.cachedCanvases.clear();\n\n                if (this.imageLayer) {\n                  this.imageLayer.endLayout();\n                }\n              }\n            }, {\n              key: \"setLineWidth\",\n              value: function setLineWidth(width) {\n                this.current.lineWidth = width;\n                this.ctx.lineWidth = width;\n              }\n            }, {\n              key: \"setLineCap\",\n              value: function setLineCap(style) {\n                this.ctx.lineCap = LINE_CAP_STYLES[style];\n              }\n            }, {\n              key: \"setLineJoin\",\n              value: function setLineJoin(style) {\n                this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n              }\n            }, {\n              key: \"setMiterLimit\",\n              value: function setMiterLimit(limit) {\n                this.ctx.miterLimit = limit;\n              }\n            }, {\n              key: \"setDash\",\n              value: function setDash(dashArray, dashPhase) {\n                var ctx = this.ctx;\n\n                if (ctx.setLineDash !== undefined) {\n                  ctx.setLineDash(dashArray);\n                  ctx.lineDashOffset = dashPhase;\n                }\n              }\n            }, {\n              key: \"setRenderingIntent\",\n              value: function setRenderingIntent(intent) {}\n            }, {\n              key: \"setFlatness\",\n              value: function setFlatness(flatness) {}\n            }, {\n              key: \"setGState\",\n              value: function setGState(states) {\n                for (var i = 0, ii = states.length; i < ii; i++) {\n                  var state = states[i];\n                  var key = state[0];\n                  var value = state[1];\n\n                  switch (key) {\n                    case \"LW\":\n                      this.setLineWidth(value);\n                      break;\n\n                    case \"LC\":\n                      this.setLineCap(value);\n                      break;\n\n                    case \"LJ\":\n                      this.setLineJoin(value);\n                      break;\n\n                    case \"ML\":\n                      this.setMiterLimit(value);\n                      break;\n\n                    case \"D\":\n                      this.setDash(value[0], value[1]);\n                      break;\n\n                    case \"RI\":\n                      this.setRenderingIntent(value);\n                      break;\n\n                    case \"FL\":\n                      this.setFlatness(value);\n                      break;\n\n                    case \"Font\":\n                      this.setFont(value[0], value[1]);\n                      break;\n\n                    case \"CA\":\n                      this.current.strokeAlpha = state[1];\n                      break;\n\n                    case \"ca\":\n                      this.current.fillAlpha = state[1];\n                      this.ctx.globalAlpha = state[1];\n                      break;\n\n                    case \"BM\":\n                      this.ctx.globalCompositeOperation = value;\n                      break;\n\n                    case \"SMask\":\n                      if (this.current.activeSMask) {\n                        if (this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1].activeSMask === this.current.activeSMask) {\n                          this.suspendSMaskGroup();\n                        } else {\n                          this.endSMaskGroup();\n                        }\n                      }\n\n                      this.current.activeSMask = value ? this.tempSMask : null;\n\n                      if (this.current.activeSMask) {\n                        this.beginSMaskGroup();\n                      }\n\n                      this.tempSMask = null;\n                      break;\n\n                    case \"TR\":\n                      this.current.transferMaps = value;\n                  }\n                }\n              }\n            }, {\n              key: \"beginSMaskGroup\",\n              value: function beginSMaskGroup() {\n                var activeSMask = this.current.activeSMask;\n                var drawnWidth = activeSMask.canvas.width;\n                var drawnHeight = activeSMask.canvas.height;\n                var cacheId = \"smaskGroupAt\" + this.groupLevel;\n                var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n                var currentCtx = this.ctx;\n                var currentTransform = currentCtx.mozCurrentTransform;\n                this.ctx.save();\n                var groupCtx = scratchCanvas.context;\n                groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n                groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n                groupCtx.transform.apply(groupCtx, currentTransform);\n                activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n                copyCtxState(currentCtx, groupCtx);\n                this.ctx = groupCtx;\n                this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n                this.groupStack.push(currentCtx);\n                this.groupLevel++;\n              }\n            }, {\n              key: \"suspendSMaskGroup\",\n              value: function suspendSMaskGroup() {\n                var groupCtx = this.ctx;\n                this.groupLevel--;\n                this.ctx = this.groupStack.pop();\n                composeSMask(this.ctx, this.current.activeSMask, groupCtx);\n                this.ctx.restore();\n                this.ctx.save();\n                copyCtxState(groupCtx, this.ctx);\n                this.current.resumeSMaskCtx = groupCtx;\n\n                var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n\n                this.ctx.transform.apply(this.ctx, deltaTransform);\n                groupCtx.save();\n                groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n                groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n                groupCtx.restore();\n              }\n            }, {\n              key: \"resumeSMaskGroup\",\n              value: function resumeSMaskGroup() {\n                var groupCtx = this.current.resumeSMaskCtx;\n                var currentCtx = this.ctx;\n                this.ctx = groupCtx;\n                this.groupStack.push(currentCtx);\n                this.groupLevel++;\n              }\n            }, {\n              key: \"endSMaskGroup\",\n              value: function endSMaskGroup() {\n                var groupCtx = this.ctx;\n                this.groupLevel--;\n                this.ctx = this.groupStack.pop();\n                composeSMask(this.ctx, this.current.activeSMask, groupCtx);\n                this.ctx.restore();\n                copyCtxState(groupCtx, this.ctx);\n\n                var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n\n                this.ctx.transform.apply(this.ctx, deltaTransform);\n              }\n            }, {\n              key: \"save\",\n              value: function save() {\n                this.ctx.save();\n                var old = this.current;\n                this.stateStack.push(old);\n                this.current = old.clone();\n                this.current.resumeSMaskCtx = null;\n              }\n            }, {\n              key: \"restore\",\n              value: function restore() {\n                if (this.current.resumeSMaskCtx) {\n                  this.resumeSMaskGroup();\n                }\n\n                if (this.current.activeSMask !== null && (this.stateStack.length === 0 || this.stateStack[this.stateStack.length - 1].activeSMask !== this.current.activeSMask)) {\n                  this.endSMaskGroup();\n                }\n\n                if (this.stateStack.length !== 0) {\n                  this.current = this.stateStack.pop();\n                  this.ctx.restore();\n                  this.pendingClip = null;\n                  this._cachedGetSinglePixelWidth = null;\n                } else {\n                  this.current.activeSMask = null;\n                }\n              }\n            }, {\n              key: \"transform\",\n              value: function transform(a, b, c, d, e, f) {\n                this.ctx.transform(a, b, c, d, e, f);\n                this._cachedGetSinglePixelWidth = null;\n              }\n            }, {\n              key: \"constructPath\",\n              value: function constructPath(ops, args) {\n                var ctx = this.ctx;\n                var current = this.current;\n                var x = current.x,\n                    y = current.y;\n\n                for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\n                  switch (ops[i] | 0) {\n                    case _util.OPS.rectangle:\n                      x = args[j++];\n                      y = args[j++];\n                      var width = args[j++];\n                      var height = args[j++];\n                      var xw = x + width;\n                      var yh = y + height;\n                      ctx.moveTo(x, y);\n\n                      if (width === 0 || height === 0) {\n                        ctx.lineTo(xw, yh);\n                      } else {\n                        ctx.lineTo(xw, y);\n                        ctx.lineTo(xw, yh);\n                        ctx.lineTo(x, yh);\n                      }\n\n                      ctx.closePath();\n                      break;\n\n                    case _util.OPS.moveTo:\n                      x = args[j++];\n                      y = args[j++];\n                      ctx.moveTo(x, y);\n                      break;\n\n                    case _util.OPS.lineTo:\n                      x = args[j++];\n                      y = args[j++];\n                      ctx.lineTo(x, y);\n                      break;\n\n                    case _util.OPS.curveTo:\n                      x = args[j + 4];\n                      y = args[j + 5];\n                      ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n                      j += 6;\n                      break;\n\n                    case _util.OPS.curveTo2:\n                      ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n                      x = args[j + 2];\n                      y = args[j + 3];\n                      j += 4;\n                      break;\n\n                    case _util.OPS.curveTo3:\n                      x = args[j + 2];\n                      y = args[j + 3];\n                      ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n                      j += 4;\n                      break;\n\n                    case _util.OPS.closePath:\n                      ctx.closePath();\n                      break;\n                  }\n                }\n\n                current.setCurrentPoint(x, y);\n              }\n            }, {\n              key: \"closePath\",\n              value: function closePath() {\n                this.ctx.closePath();\n              }\n            }, {\n              key: \"stroke\",\n              value: function stroke(consumePath) {\n                consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n                var ctx = this.ctx;\n                var strokeColor = this.current.strokeColor;\n                ctx.globalAlpha = this.current.strokeAlpha;\n\n                if (this.contentVisible) {\n                  if (typeof strokeColor === \"object\" && (strokeColor === null || strokeColor === void 0 ? void 0 : strokeColor.getPattern)) {\n                    var lineWidth = this.getSinglePixelWidth();\n                    ctx.save();\n                    ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n                    ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n                    ctx.stroke();\n                    ctx.restore();\n                  } else {\n                    var _lineWidth = this.getSinglePixelWidth();\n\n                    if (_lineWidth < 0 && -_lineWidth >= this.current.lineWidth) {\n                      ctx.save();\n                      ctx.resetTransform();\n                      ctx.lineWidth = Math.round(this._combinedScaleFactor);\n                      ctx.stroke();\n                      ctx.restore();\n                    } else {\n                      ctx.lineWidth = Math.max(_lineWidth, this.current.lineWidth);\n                      ctx.stroke();\n                    }\n                  }\n                }\n\n                if (consumePath) {\n                  this.consumePath();\n                }\n\n                ctx.globalAlpha = this.current.fillAlpha;\n              }\n            }, {\n              key: \"closeStroke\",\n              value: function closeStroke() {\n                this.closePath();\n                this.stroke();\n              }\n            }, {\n              key: \"fill\",\n              value: function fill(consumePath) {\n                consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n                var ctx = this.ctx;\n                var fillColor = this.current.fillColor;\n                var isPatternFill = this.current.patternFill;\n                var needRestore = false;\n\n                if (isPatternFill) {\n                  ctx.save();\n                  ctx.fillStyle = fillColor.getPattern(ctx, this);\n                  needRestore = true;\n                }\n\n                if (this.contentVisible) {\n                  if (this.pendingEOFill) {\n                    ctx.fill(\"evenodd\");\n                    this.pendingEOFill = false;\n                  } else {\n                    ctx.fill();\n                  }\n                }\n\n                if (needRestore) {\n                  ctx.restore();\n                }\n\n                if (consumePath) {\n                  this.consumePath();\n                }\n              }\n            }, {\n              key: \"eoFill\",\n              value: function eoFill() {\n                this.pendingEOFill = true;\n                this.fill();\n              }\n            }, {\n              key: \"fillStroke\",\n              value: function fillStroke() {\n                this.fill(false);\n                this.stroke(false);\n                this.consumePath();\n              }\n            }, {\n              key: \"eoFillStroke\",\n              value: function eoFillStroke() {\n                this.pendingEOFill = true;\n                this.fillStroke();\n              }\n            }, {\n              key: \"closeFillStroke\",\n              value: function closeFillStroke() {\n                this.closePath();\n                this.fillStroke();\n              }\n            }, {\n              key: \"closeEOFillStroke\",\n              value: function closeEOFillStroke() {\n                this.pendingEOFill = true;\n                this.closePath();\n                this.fillStroke();\n              }\n            }, {\n              key: \"endPath\",\n              value: function endPath() {\n                this.consumePath();\n              }\n            }, {\n              key: \"clip\",\n              value: function clip() {\n                this.pendingClip = NORMAL_CLIP;\n              }\n            }, {\n              key: \"eoClip\",\n              value: function eoClip() {\n                this.pendingClip = EO_CLIP;\n              }\n            }, {\n              key: \"beginText\",\n              value: function beginText() {\n                this.current.textMatrix = _util.IDENTITY_MATRIX;\n                this.current.textMatrixScale = 1;\n                this.current.x = this.current.lineX = 0;\n                this.current.y = this.current.lineY = 0;\n              }\n            }, {\n              key: \"endText\",\n              value: function endText() {\n                var paths = this.pendingTextPaths;\n                var ctx = this.ctx;\n\n                if (paths === undefined) {\n                  ctx.beginPath();\n                  return;\n                }\n\n                ctx.save();\n                ctx.beginPath();\n\n                for (var i = 0; i < paths.length; i++) {\n                  var path = paths[i];\n                  ctx.setTransform.apply(ctx, path.transform);\n                  ctx.translate(path.x, path.y);\n                  path.addToPath(ctx, path.fontSize);\n                }\n\n                ctx.restore();\n                ctx.clip();\n                ctx.beginPath();\n                delete this.pendingTextPaths;\n              }\n            }, {\n              key: \"setCharSpacing\",\n              value: function setCharSpacing(spacing) {\n                this.current.charSpacing = spacing;\n              }\n            }, {\n              key: \"setWordSpacing\",\n              value: function setWordSpacing(spacing) {\n                this.current.wordSpacing = spacing;\n              }\n            }, {\n              key: \"setHScale\",\n              value: function setHScale(scale) {\n                this.current.textHScale = scale / 100;\n              }\n            }, {\n              key: \"setLeading\",\n              value: function setLeading(leading) {\n                this.current.leading = -leading;\n              }\n            }, {\n              key: \"setFont\",\n              value: function setFont(fontRefName, size) {\n                var fontObj = this.commonObjs.get(fontRefName);\n                var current = this.current;\n\n                if (!fontObj) {\n                  throw new Error(\"Can't find font for \".concat(fontRefName));\n                }\n\n                current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n\n                if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n                  (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n                }\n\n                if (size < 0) {\n                  size = -size;\n                  current.fontDirection = -1;\n                } else {\n                  current.fontDirection = 1;\n                }\n\n                this.current.font = fontObj;\n                this.current.fontSize = size;\n\n                if (fontObj.isType3Font) {\n                  return;\n                }\n\n                var name = fontObj.loadedName || \"sans-serif\";\n                var bold = \"normal\";\n\n                if (fontObj.black) {\n                  bold = \"900\";\n                } else if (fontObj.bold) {\n                  bold = \"bold\";\n                }\n\n                var italic = fontObj.italic ? \"italic\" : \"normal\";\n                var typeface = \"\\\"\".concat(name, \"\\\", \").concat(fontObj.fallbackName);\n                var browserFontSize = size;\n\n                if (size < MIN_FONT_SIZE) {\n                  browserFontSize = MIN_FONT_SIZE;\n                } else if (size > MAX_FONT_SIZE) {\n                  browserFontSize = MAX_FONT_SIZE;\n                }\n\n                this.current.fontSizeScale = size / browserFontSize;\n                this.ctx.font = \"\".concat(italic, \" \").concat(bold, \" \").concat(browserFontSize, \"px \").concat(typeface);\n              }\n            }, {\n              key: \"setTextRenderingMode\",\n              value: function setTextRenderingMode(mode) {\n                this.current.textRenderingMode = mode;\n              }\n            }, {\n              key: \"setTextRise\",\n              value: function setTextRise(rise) {\n                this.current.textRise = rise;\n              }\n            }, {\n              key: \"moveText\",\n              value: function moveText(x, y) {\n                this.current.x = this.current.lineX += x;\n                this.current.y = this.current.lineY += y;\n              }\n            }, {\n              key: \"setLeadingMoveText\",\n              value: function setLeadingMoveText(x, y) {\n                this.setLeading(-y);\n                this.moveText(x, y);\n              }\n            }, {\n              key: \"setTextMatrix\",\n              value: function setTextMatrix(a, b, c, d, e, f) {\n                this.current.textMatrix = [a, b, c, d, e, f];\n                this.current.textMatrixScale = Math.hypot(a, b);\n                this.current.x = this.current.lineX = 0;\n                this.current.y = this.current.lineY = 0;\n              }\n            }, {\n              key: \"nextLine\",\n              value: function nextLine() {\n                this.moveText(0, this.current.leading);\n              }\n            }, {\n              key: \"paintChar\",\n              value: function paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\n                var ctx = this.ctx;\n                var current = this.current;\n                var font = current.font;\n                var textRenderingMode = current.textRenderingMode;\n                var fontSize = current.fontSize / current.fontSizeScale;\n                var fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n                var isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n                var patternFill = current.patternFill && !font.missingFile;\n                var addToPath;\n\n                if (font.disableFontFace || isAddToPathSet || patternFill) {\n                  addToPath = font.getPathGenerator(this.commonObjs, character);\n                }\n\n                if (font.disableFontFace || patternFill) {\n                  ctx.save();\n                  ctx.translate(x, y);\n                  ctx.beginPath();\n                  addToPath(ctx, fontSize);\n\n                  if (patternTransform) {\n                    ctx.setTransform.apply(ctx, patternTransform);\n                  }\n\n                  if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                    ctx.fill();\n                  }\n\n                  if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                    if (resetLineWidthToOne) {\n                      ctx.resetTransform();\n                      ctx.lineWidth = Math.round(this._combinedScaleFactor);\n                    }\n\n                    ctx.stroke();\n                  }\n\n                  ctx.restore();\n                } else {\n                  if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                    ctx.fillText(character, x, y);\n                  }\n\n                  if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                    if (resetLineWidthToOne) {\n                      ctx.save();\n                      ctx.moveTo(x, y);\n                      ctx.resetTransform();\n                      ctx.lineWidth = Math.round(this._combinedScaleFactor);\n                      ctx.strokeText(character, 0, 0);\n                      ctx.restore();\n                    } else {\n                      ctx.strokeText(character, x, y);\n                    }\n                  }\n                }\n\n                if (isAddToPathSet) {\n                  var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n                  paths.push({\n                    transform: ctx.mozCurrentTransform,\n                    x: x,\n                    y: y,\n                    fontSize: fontSize,\n                    addToPath: addToPath\n                  });\n                }\n              }\n            }, {\n              key: \"showText\",\n              value: function showText(glyphs) {\n                var current = this.current;\n                var font = current.font;\n\n                if (font.isType3Font) {\n                  return this.showType3Text(glyphs);\n                }\n\n                var fontSize = current.fontSize;\n\n                if (fontSize === 0) {\n                  return undefined;\n                }\n\n                var ctx = this.ctx;\n                var fontSizeScale = current.fontSizeScale;\n                var charSpacing = current.charSpacing;\n                var wordSpacing = current.wordSpacing;\n                var fontDirection = current.fontDirection;\n                var textHScale = current.textHScale * fontDirection;\n                var glyphsLength = glyphs.length;\n                var vertical = font.vertical;\n                var spacingDir = vertical ? 1 : -1;\n                var defaultVMetrics = font.defaultVMetrics;\n                var widthAdvanceScale = fontSize * current.fontMatrix[0];\n                var simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n                ctx.save();\n                var patternTransform;\n\n                if (current.patternFill) {\n                  ctx.save();\n                  var pattern = current.fillColor.getPattern(ctx, this);\n                  patternTransform = ctx.mozCurrentTransform;\n                  ctx.restore();\n                  ctx.fillStyle = pattern;\n                }\n\n                ctx.transform.apply(ctx, current.textMatrix);\n                ctx.translate(current.x, current.y + current.textRise);\n\n                if (fontDirection > 0) {\n                  ctx.scale(textHScale, -1);\n                } else {\n                  ctx.scale(textHScale, 1);\n                }\n\n                var lineWidth = current.lineWidth;\n                var resetLineWidthToOne = false;\n                var scale = current.textMatrixScale;\n\n                if (scale === 0 || lineWidth === 0) {\n                  var fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n                  if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                    this._cachedGetSinglePixelWidth = null;\n                    lineWidth = this.getSinglePixelWidth();\n                    resetLineWidthToOne = lineWidth < 0;\n                  }\n                } else {\n                  lineWidth /= scale;\n                }\n\n                if (fontSizeScale !== 1.0) {\n                  ctx.scale(fontSizeScale, fontSizeScale);\n                  lineWidth /= fontSizeScale;\n                }\n\n                ctx.lineWidth = lineWidth;\n                var x = 0,\n                    i;\n\n                for (i = 0; i < glyphsLength; ++i) {\n                  var glyph = glyphs[i];\n\n                  if ((0, _util.isNum)(glyph)) {\n                    x += spacingDir * glyph * fontSize / 1000;\n                    continue;\n                  }\n\n                  var restoreNeeded = false;\n                  var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n                  var character = glyph.fontChar;\n                  var accent = glyph.accent;\n                  var scaledX = void 0,\n                      scaledY = void 0;\n                  var width = glyph.width;\n\n                  if (vertical) {\n                    var vmetric = glyph.vmetric || defaultVMetrics;\n                    var vx = -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n                    var vy = vmetric[2] * widthAdvanceScale;\n                    width = vmetric ? -vmetric[0] : width;\n                    scaledX = vx / fontSizeScale;\n                    scaledY = (x + vy) / fontSizeScale;\n                  } else {\n                    scaledX = x / fontSizeScale;\n                    scaledY = 0;\n                  }\n\n                  if (font.remeasure && width > 0) {\n                    var measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n\n                    if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n                      var characterScaleX = width / measuredWidth;\n                      restoreNeeded = true;\n                      ctx.save();\n                      ctx.scale(characterScaleX, 1);\n                      scaledX /= characterScaleX;\n                    } else if (width !== measuredWidth) {\n                      scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n                    }\n                  }\n\n                  if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n                    if (simpleFillText && !accent) {\n                      ctx.fillText(character, scaledX, scaledY);\n                    } else {\n                      this.paintChar(character, scaledX, scaledY, patternTransform, resetLineWidthToOne);\n\n                      if (accent) {\n                        var scaledAccentX = scaledX + fontSize * accent.offset.x / fontSizeScale;\n                        var scaledAccentY = scaledY - fontSize * accent.offset.y / fontSizeScale;\n                        this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform, resetLineWidthToOne);\n                      }\n                    }\n                  }\n\n                  var charWidth = void 0;\n\n                  if (vertical) {\n                    charWidth = width * widthAdvanceScale - spacing * fontDirection;\n                  } else {\n                    charWidth = width * widthAdvanceScale + spacing * fontDirection;\n                  }\n\n                  x += charWidth;\n\n                  if (restoreNeeded) {\n                    ctx.restore();\n                  }\n                }\n\n                if (vertical) {\n                  current.y -= x;\n                } else {\n                  current.x += x * textHScale;\n                }\n\n                ctx.restore();\n                return undefined;\n              }\n            }, {\n              key: \"showType3Text\",\n              value: function showType3Text(glyphs) {\n                var ctx = this.ctx;\n                var current = this.current;\n                var font = current.font;\n                var fontSize = current.fontSize;\n                var fontDirection = current.fontDirection;\n                var spacingDir = font.vertical ? 1 : -1;\n                var charSpacing = current.charSpacing;\n                var wordSpacing = current.wordSpacing;\n                var textHScale = current.textHScale * fontDirection;\n                var fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n                var glyphsLength = glyphs.length;\n                var isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n                var i, glyph, width, spacingLength;\n\n                if (isTextInvisible || fontSize === 0) {\n                  return;\n                }\n\n                this._cachedGetSinglePixelWidth = null;\n                ctx.save();\n                ctx.transform.apply(ctx, current.textMatrix);\n                ctx.translate(current.x, current.y);\n                ctx.scale(textHScale, fontDirection);\n\n                for (i = 0; i < glyphsLength; ++i) {\n                  glyph = glyphs[i];\n\n                  if ((0, _util.isNum)(glyph)) {\n                    spacingLength = spacingDir * glyph * fontSize / 1000;\n                    this.ctx.translate(spacingLength, 0);\n                    current.x += spacingLength * textHScale;\n                    continue;\n                  }\n\n                  var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n                  var operatorList = font.charProcOperatorList[glyph.operatorListId];\n\n                  if (!operatorList) {\n                    (0, _util.warn)(\"Type3 character \\\"\".concat(glyph.operatorListId, \"\\\" is not available.\"));\n                    continue;\n                  }\n\n                  if (this.contentVisible) {\n                    this.processingType3 = glyph;\n                    this.save();\n                    ctx.scale(fontSize, fontSize);\n                    ctx.transform.apply(ctx, fontMatrix);\n                    this.executeOperatorList(operatorList);\n                    this.restore();\n                  }\n\n                  var transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\n\n                  width = transformed[0] * fontSize + spacing;\n                  ctx.translate(width, 0);\n                  current.x += width * textHScale;\n                }\n\n                ctx.restore();\n                this.processingType3 = null;\n              }\n            }, {\n              key: \"setCharWidth\",\n              value: function setCharWidth(xWidth, yWidth) {}\n            }, {\n              key: \"setCharWidthAndBounds\",\n              value: function setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n                this.ctx.rect(llx, lly, urx - llx, ury - lly);\n                this.clip();\n                this.endPath();\n              }\n            }, {\n              key: \"getColorN_Pattern\",\n              value: function getColorN_Pattern(IR) {\n                var _this27 = this;\n\n                var pattern;\n\n                if (IR[0] === \"TilingPattern\") {\n                  var color = IR[1];\n                  var baseTransform = this.baseTransform || this.ctx.mozCurrentTransform.slice();\n                  var canvasGraphicsFactory = {\n                    createCanvasGraphics: function createCanvasGraphics(ctx) {\n                      return new CanvasGraphics(ctx, _this27.commonObjs, _this27.objs, _this27.canvasFactory);\n                    }\n                  };\n                  pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n                } else {\n                  pattern = (0, _pattern_helper.getShadingPattern)(IR);\n                }\n\n                return pattern;\n              }\n            }, {\n              key: \"setStrokeColorN\",\n              value: function setStrokeColorN() {\n                this.current.strokeColor = this.getColorN_Pattern(arguments);\n              }\n            }, {\n              key: \"setFillColorN\",\n              value: function setFillColorN() {\n                this.current.fillColor = this.getColorN_Pattern(arguments);\n                this.current.patternFill = true;\n              }\n            }, {\n              key: \"setStrokeRGBColor\",\n              value: function setStrokeRGBColor(r, g, b) {\n                var color = _util.Util.makeHexColor(r, g, b);\n\n                this.ctx.strokeStyle = color;\n                this.current.strokeColor = color;\n              }\n            }, {\n              key: \"setFillRGBColor\",\n              value: function setFillRGBColor(r, g, b) {\n                var color = _util.Util.makeHexColor(r, g, b);\n\n                this.ctx.fillStyle = color;\n                this.current.fillColor = color;\n                this.current.patternFill = false;\n              }\n            }, {\n              key: \"shadingFill\",\n              value: function shadingFill(patternIR) {\n                if (!this.contentVisible) {\n                  return;\n                }\n\n                var ctx = this.ctx;\n                this.save();\n                var pattern = (0, _pattern_helper.getShadingPattern)(patternIR);\n                ctx.fillStyle = pattern.getPattern(ctx, this, true);\n                var inv = ctx.mozCurrentTransformInverse;\n\n                if (inv) {\n                  var canvas = ctx.canvas;\n                  var width = canvas.width;\n                  var height = canvas.height;\n\n                  var bl = _util.Util.applyTransform([0, 0], inv);\n\n                  var br = _util.Util.applyTransform([0, height], inv);\n\n                  var ul = _util.Util.applyTransform([width, 0], inv);\n\n                  var ur = _util.Util.applyTransform([width, height], inv);\n\n                  var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n                  var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n                  var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n                  var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n                  this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n                } else {\n                  this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n                }\n\n                this.restore();\n              }\n            }, {\n              key: \"beginInlineImage\",\n              value: function beginInlineImage() {\n                (0, _util.unreachable)(\"Should not call beginInlineImage\");\n              }\n            }, {\n              key: \"beginImageData\",\n              value: function beginImageData() {\n                (0, _util.unreachable)(\"Should not call beginImageData\");\n              }\n            }, {\n              key: \"paintFormXObjectBegin\",\n              value: function paintFormXObjectBegin(matrix, bbox) {\n                if (!this.contentVisible) {\n                  return;\n                }\n\n                this.save();\n                this.baseTransformStack.push(this.baseTransform);\n\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  this.transform.apply(this, matrix);\n                }\n\n                this.baseTransform = this.ctx.mozCurrentTransform;\n\n                if (bbox) {\n                  var width = bbox[2] - bbox[0];\n                  var height = bbox[3] - bbox[1];\n                  this.ctx.rect(bbox[0], bbox[1], width, height);\n                  this.clip();\n                  this.endPath();\n                }\n              }\n            }, {\n              key: \"paintFormXObjectEnd\",\n              value: function paintFormXObjectEnd() {\n                if (!this.contentVisible) {\n                  return;\n                }\n\n                this.restore();\n                this.baseTransform = this.baseTransformStack.pop();\n              }\n            }, {\n              key: \"beginGroup\",\n              value: function beginGroup(group) {\n                if (!this.contentVisible) {\n                  return;\n                }\n\n                this.save();\n                var currentCtx = this.ctx;\n\n                if (!group.isolated) {\n                  (0, _util.info)(\"TODO: Support non-isolated groups.\");\n                }\n\n                if (group.knockout) {\n                  (0, _util.warn)(\"Knockout groups not supported.\");\n                }\n\n                var currentTransform = currentCtx.mozCurrentTransform;\n\n                if (group.matrix) {\n                  currentCtx.transform.apply(currentCtx, group.matrix);\n                }\n\n                if (!group.bbox) {\n                  throw new Error(\"Bounding box is required.\");\n                }\n\n                var bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, currentCtx.mozCurrentTransform);\n\n                var canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n                bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n                var offsetX = Math.floor(bounds[0]);\n                var offsetY = Math.floor(bounds[1]);\n                var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n                var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n                var scaleX = 1,\n                    scaleY = 1;\n\n                if (drawnWidth > MAX_GROUP_SIZE) {\n                  scaleX = drawnWidth / MAX_GROUP_SIZE;\n                  drawnWidth = MAX_GROUP_SIZE;\n                }\n\n                if (drawnHeight > MAX_GROUP_SIZE) {\n                  scaleY = drawnHeight / MAX_GROUP_SIZE;\n                  drawnHeight = MAX_GROUP_SIZE;\n                }\n\n                var cacheId = \"groupAt\" + this.groupLevel;\n\n                if (group.smask) {\n                  cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n                }\n\n                var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n                var groupCtx = scratchCanvas.context;\n                groupCtx.scale(1 / scaleX, 1 / scaleY);\n                groupCtx.translate(-offsetX, -offsetY);\n                groupCtx.transform.apply(groupCtx, currentTransform);\n\n                if (group.smask) {\n                  this.smaskStack.push({\n                    canvas: scratchCanvas.canvas,\n                    context: groupCtx,\n                    offsetX: offsetX,\n                    offsetY: offsetY,\n                    scaleX: scaleX,\n                    scaleY: scaleY,\n                    subtype: group.smask.subtype,\n                    backdrop: group.smask.backdrop,\n                    transferMap: group.smask.transferMap || null,\n                    startTransformInverse: null\n                  });\n                } else {\n                  currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n                  currentCtx.translate(offsetX, offsetY);\n                  currentCtx.scale(scaleX, scaleY);\n                }\n\n                copyCtxState(currentCtx, groupCtx);\n                this.ctx = groupCtx;\n                this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n                this.groupStack.push(currentCtx);\n                this.groupLevel++;\n                this.current.activeSMask = null;\n              }\n            }, {\n              key: \"endGroup\",\n              value: function endGroup(group) {\n                if (!this.contentVisible) {\n                  return;\n                }\n\n                this.groupLevel--;\n                var groupCtx = this.ctx;\n                this.ctx = this.groupStack.pop();\n\n                if (this.ctx.imageSmoothingEnabled !== undefined) {\n                  this.ctx.imageSmoothingEnabled = false;\n                } else {\n                  this.ctx.mozImageSmoothingEnabled = false;\n                }\n\n                if (group.smask) {\n                  this.tempSMask = this.smaskStack.pop();\n                } else {\n                  this.ctx.drawImage(groupCtx.canvas, 0, 0);\n                }\n\n                this.restore();\n              }\n            }, {\n              key: \"beginAnnotations\",\n              value: function beginAnnotations() {\n                this.save();\n\n                if (this.baseTransform) {\n                  this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n                }\n              }\n            }, {\n              key: \"endAnnotations\",\n              value: function endAnnotations() {\n                this.restore();\n              }\n            }, {\n              key: \"beginAnnotation\",\n              value: function beginAnnotation(rect, transform, matrix) {\n                this.save();\n                resetCtxToDefault(this.ctx);\n                this.current = new CanvasExtraState();\n\n                if (Array.isArray(rect) && rect.length === 4) {\n                  var width = rect[2] - rect[0];\n                  var height = rect[3] - rect[1];\n                  this.ctx.rect(rect[0], rect[1], width, height);\n                  this.clip();\n                  this.endPath();\n                }\n\n                this.transform.apply(this, transform);\n                this.transform.apply(this, matrix);\n              }\n            }, {\n              key: \"endAnnotation\",\n              value: function endAnnotation() {\n                this.restore();\n              }\n            }, {\n              key: \"paintImageMaskXObject\",\n              value: function paintImageMaskXObject(img) {\n                if (!this.contentVisible) {\n                  return;\n                }\n\n                var ctx = this.ctx;\n                var width = img.width,\n                    height = img.height;\n                var fillColor = this.current.fillColor;\n                var isPatternFill = this.current.patternFill;\n                var glyph = this.processingType3;\n\n                if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n                  if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n                    glyph.compiled = compileType3Glyph({\n                      data: img.data,\n                      width: width,\n                      height: height\n                    });\n                  } else {\n                    glyph.compiled = null;\n                  }\n                }\n\n                if (glyph === null || glyph === void 0 ? void 0 : glyph.compiled) {\n                  glyph.compiled(ctx);\n                  return;\n                }\n\n                var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n                var maskCtx = maskCanvas.context;\n                maskCtx.save();\n                putBinaryImageMask(maskCtx, img);\n                maskCtx.globalCompositeOperation = \"source-in\";\n                maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n                maskCtx.fillRect(0, 0, width, height);\n                maskCtx.restore();\n                this.paintInlineImageXObject(maskCanvas.canvas);\n              }\n            }, {\n              key: \"paintImageMaskXObjectRepeat\",\n              value: function paintImageMaskXObjectRepeat(imgData, scaleX) {\n                var skewX = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n                var skewY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n                var scaleY = arguments.length > 4 ? arguments[4] : undefined;\n                var positions = arguments.length > 5 ? arguments[5] : undefined;\n\n                if (!this.contentVisible) {\n                  return;\n                }\n\n                var width = imgData.width;\n                var height = imgData.height;\n                var fillColor = this.current.fillColor;\n                var isPatternFill = this.current.patternFill;\n                var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n                var maskCtx = maskCanvas.context;\n                maskCtx.save();\n                putBinaryImageMask(maskCtx, imgData);\n                maskCtx.globalCompositeOperation = \"source-in\";\n                maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n                maskCtx.fillRect(0, 0, width, height);\n                maskCtx.restore();\n                var ctx = this.ctx;\n\n                for (var i = 0, ii = positions.length; i < ii; i += 2) {\n                  ctx.save();\n                  ctx.transform(scaleX, skewX, skewY, scaleY, positions[i], positions[i + 1]);\n                  ctx.scale(1, -1);\n                  ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n                  ctx.restore();\n                }\n              }\n            }, {\n              key: \"paintImageMaskXObjectGroup\",\n              value: function paintImageMaskXObjectGroup(images) {\n                if (!this.contentVisible) {\n                  return;\n                }\n\n                var ctx = this.ctx;\n                var fillColor = this.current.fillColor;\n                var isPatternFill = this.current.patternFill;\n\n                for (var i = 0, ii = images.length; i < ii; i++) {\n                  var image = images[i];\n                  var width = image.width,\n                      height = image.height;\n                  var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n                  var maskCtx = maskCanvas.context;\n                  maskCtx.save();\n                  putBinaryImageMask(maskCtx, image);\n                  maskCtx.globalCompositeOperation = \"source-in\";\n                  maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n                  maskCtx.fillRect(0, 0, width, height);\n                  maskCtx.restore();\n                  ctx.save();\n                  ctx.transform.apply(ctx, image.transform);\n                  ctx.scale(1, -1);\n                  ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n                  ctx.restore();\n                }\n              }\n            }, {\n              key: \"paintImageXObject\",\n              value: function paintImageXObject(objId) {\n                if (!this.contentVisible) {\n                  return;\n                }\n\n                var imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n                if (!imgData) {\n                  (0, _util.warn)(\"Dependent image isn't ready yet\");\n                  return;\n                }\n\n                this.paintInlineImageXObject(imgData);\n              }\n            }, {\n              key: \"paintImageXObjectRepeat\",\n              value: function paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n                if (!this.contentVisible) {\n                  return;\n                }\n\n                var imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n                if (!imgData) {\n                  (0, _util.warn)(\"Dependent image isn't ready yet\");\n                  return;\n                }\n\n                var width = imgData.width;\n                var height = imgData.height;\n                var map = [];\n\n                for (var i = 0, ii = positions.length; i < ii; i += 2) {\n                  map.push({\n                    transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n                    x: 0,\n                    y: 0,\n                    w: width,\n                    h: height\n                  });\n                }\n\n                this.paintInlineImageXObjectGroup(imgData, map);\n              }\n            }, {\n              key: \"paintInlineImageXObject\",\n              value: function paintInlineImageXObject(imgData) {\n                if (!this.contentVisible) {\n                  return;\n                }\n\n                var width = imgData.width;\n                var height = imgData.height;\n                var ctx = this.ctx;\n                this.save();\n                ctx.scale(1 / width, -1 / height);\n                var currentTransform = ctx.mozCurrentTransformInverse;\n                var widthScale = Math.max(Math.hypot(currentTransform[0], currentTransform[1]), 1);\n                var heightScale = Math.max(Math.hypot(currentTransform[2], currentTransform[3]), 1);\n                var imgToPaint, tmpCanvas, tmpCtx;\n\n                if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n                  imgToPaint = imgData;\n                } else {\n                  tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n                  tmpCtx = tmpCanvas.context;\n                  putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n                  imgToPaint = tmpCanvas.canvas;\n                }\n\n                var paintWidth = width,\n                    paintHeight = height;\n                var tmpCanvasId = \"prescale1\";\n\n                while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n                  var newWidth = paintWidth,\n                      newHeight = paintHeight;\n\n                  if (widthScale > 2 && paintWidth > 1) {\n                    newWidth = Math.ceil(paintWidth / 2);\n                    widthScale /= paintWidth / newWidth;\n                  }\n\n                  if (heightScale > 2 && paintHeight > 1) {\n                    newHeight = Math.ceil(paintHeight / 2);\n                    heightScale /= paintHeight / newHeight;\n                  }\n\n                  tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n                  tmpCtx = tmpCanvas.context;\n                  tmpCtx.clearRect(0, 0, newWidth, newHeight);\n                  tmpCtx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n                  imgToPaint = tmpCanvas.canvas;\n                  paintWidth = newWidth;\n                  paintHeight = newHeight;\n                  tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n                }\n\n                ctx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, -height, width, height);\n\n                if (this.imageLayer) {\n                  var position = this.getCanvasPosition(0, -height);\n                  this.imageLayer.appendImage({\n                    imgData: imgData,\n                    left: position[0],\n                    top: position[1],\n                    width: width / currentTransform[0],\n                    height: height / currentTransform[3]\n                  });\n                }\n\n                this.restore();\n              }\n            }, {\n              key: \"paintInlineImageXObjectGroup\",\n              value: function paintInlineImageXObjectGroup(imgData, map) {\n                if (!this.contentVisible) {\n                  return;\n                }\n\n                var ctx = this.ctx;\n                var w = imgData.width;\n                var h = imgData.height;\n                var tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n                var tmpCtx = tmpCanvas.context;\n                putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n                for (var i = 0, ii = map.length; i < ii; i++) {\n                  var entry = map[i];\n                  ctx.save();\n                  ctx.transform.apply(ctx, entry.transform);\n                  ctx.scale(1, -1);\n                  ctx.drawImage(tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n\n                  if (this.imageLayer) {\n                    var position = this.getCanvasPosition(entry.x, entry.y);\n                    this.imageLayer.appendImage({\n                      imgData: imgData,\n                      left: position[0],\n                      top: position[1],\n                      width: w,\n                      height: h\n                    });\n                  }\n\n                  ctx.restore();\n                }\n              }\n            }, {\n              key: \"paintSolidColorImageMask\",\n              value: function paintSolidColorImageMask() {\n                if (!this.contentVisible) {\n                  return;\n                }\n\n                this.ctx.fillRect(0, 0, 1, 1);\n              }\n            }, {\n              key: \"markPoint\",\n              value: function markPoint(tag) {}\n            }, {\n              key: \"markPointProps\",\n              value: function markPointProps(tag, properties) {}\n            }, {\n              key: \"beginMarkedContent\",\n              value: function beginMarkedContent(tag) {\n                this.markedContentStack.push({\n                  visible: true\n                });\n              }\n            }, {\n              key: \"beginMarkedContentProps\",\n              value: function beginMarkedContentProps(tag, properties) {\n                if (tag === \"OC\") {\n                  this.markedContentStack.push({\n                    visible: this.optionalContentConfig.isVisible(properties)\n                  });\n                } else {\n                  this.markedContentStack.push({\n                    visible: true\n                  });\n                }\n\n                this.contentVisible = this.isContentVisible();\n              }\n            }, {\n              key: \"endMarkedContent\",\n              value: function endMarkedContent() {\n                this.markedContentStack.pop();\n                this.contentVisible = this.isContentVisible();\n              }\n            }, {\n              key: \"beginCompat\",\n              value: function beginCompat() {}\n            }, {\n              key: \"endCompat\",\n              value: function endCompat() {}\n            }, {\n              key: \"consumePath\",\n              value: function consumePath() {\n                var ctx = this.ctx;\n\n                if (this.pendingClip) {\n                  if (this.pendingClip === EO_CLIP) {\n                    ctx.clip(\"evenodd\");\n                  } else {\n                    ctx.clip();\n                  }\n\n                  this.pendingClip = null;\n                }\n\n                ctx.beginPath();\n              }\n            }, {\n              key: \"getSinglePixelWidth\",\n              value: function getSinglePixelWidth() {\n                if (this._cachedGetSinglePixelWidth === null) {\n                  var m = this.ctx.mozCurrentTransform;\n                  var absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n                  var sqNorm1 = Math.pow(m[0], 2) + Math.pow(m[2], 2);\n                  var sqNorm2 = Math.pow(m[1], 2) + Math.pow(m[3], 2);\n                  var pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\n\n                  if (sqNorm1 !== sqNorm2 && this._combinedScaleFactor * pixelHeight > 1) {\n                    this._cachedGetSinglePixelWidth = -(this._combinedScaleFactor * pixelHeight);\n                  } else if (absDet > Number.EPSILON) {\n                    this._cachedGetSinglePixelWidth = pixelHeight;\n                  } else {\n                    this._cachedGetSinglePixelWidth = 1;\n                  }\n                }\n\n                return this._cachedGetSinglePixelWidth;\n              }\n            }, {\n              key: \"getCanvasPosition\",\n              value: function getCanvasPosition(x, y) {\n                var transform = this.ctx.mozCurrentTransform;\n                return [transform[0] * x + transform[2] * y + transform[4], transform[1] * x + transform[3] * y + transform[5]];\n              }\n            }, {\n              key: \"isContentVisible\",\n              value: function isContentVisible() {\n                for (var i = this.markedContentStack.length - 1; i >= 0; i--) {\n                  if (!this.markedContentStack[i].visible) {\n                    return false;\n                  }\n                }\n\n                return true;\n              }\n            }, {\n              key: \"isFontSubpixelAAEnabled\",\n              get: function get() {\n                var _this$cachedCanvases$ = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10),\n                    ctx = _this$cachedCanvases$.context;\n\n                ctx.scale(1.5, 1);\n                ctx.fillText(\"I\", 0, 10);\n                var data = ctx.getImageData(0, 0, 10, 10).data;\n                var enabled = false;\n\n                for (var i = 3; i < data.length; i += 4) {\n                  if (data[i] > 0 && data[i] < 255) {\n                    enabled = true;\n                    break;\n                  }\n                }\n\n                return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n              }\n            }]);\n\n            return CanvasGraphics;\n          }();\n\n          for (var op in _util.OPS) {\n            CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n          }\n\n          return CanvasGraphics;\n        }();\n\n        exports.CanvasGraphics = CanvasGraphics;\n        /***/\n      },\n      /* 11 */\n\n      /***/\n      function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.getShadingPattern = getShadingPattern;\n        exports.TilingPattern = void 0;\n\n        var _util = __w_pdfjs_require__(2);\n\n        var svgElement;\n\n        function createMatrix(matrix) {\n          if (typeof DOMMatrix !== \"undefined\") {\n            return new DOMMatrix(matrix);\n          }\n\n          if (!svgElement) {\n            svgElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n          }\n\n          return svgElement.createSVGMatrix(matrix);\n        }\n\n        function applyBoundingBox(ctx, bbox) {\n          if (!bbox || typeof Path2D === \"undefined\") {\n            return;\n          }\n\n          var width = bbox[2] - bbox[0];\n          var height = bbox[3] - bbox[1];\n          var region = new Path2D();\n          region.rect(bbox[0], bbox[1], width, height);\n          ctx.clip(region);\n        }\n\n        var BaseShadingPattern = /*#__PURE__*/function () {\n          function BaseShadingPattern() {\n            _classCallCheck(this, BaseShadingPattern);\n\n            if (this.constructor === BaseShadingPattern) {\n              (0, _util.unreachable)(\"Cannot initialize BaseShadingPattern.\");\n            }\n          }\n\n          _createClass(BaseShadingPattern, [{\n            key: \"getPattern\",\n            value: function getPattern() {\n              (0, _util.unreachable)(\"Abstract method `getPattern` called.\");\n            }\n          }]);\n\n          return BaseShadingPattern;\n        }();\n\n        var RadialAxialShadingPattern = /*#__PURE__*/function (_BaseShadingPattern) {\n          _inherits(RadialAxialShadingPattern, _BaseShadingPattern);\n\n          var _super14 = _createSuper(RadialAxialShadingPattern);\n\n          function RadialAxialShadingPattern(IR) {\n            var _this28;\n\n            _classCallCheck(this, RadialAxialShadingPattern);\n\n            _this28 = _super14.call(this);\n            _this28._type = IR[1];\n            _this28._bbox = IR[2];\n            _this28._colorStops = IR[3];\n            _this28._p0 = IR[4];\n            _this28._p1 = IR[5];\n            _this28._r0 = IR[6];\n            _this28._r1 = IR[7];\n            _this28._matrix = IR[8];\n            return _this28;\n          }\n\n          _createClass(RadialAxialShadingPattern, [{\n            key: \"getPattern\",\n            value: function getPattern(ctx, owner, shadingFill) {\n              var tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", ctx.canvas.width, ctx.canvas.height, true);\n              var tmpCtx = tmpCanvas.context;\n              tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n              tmpCtx.beginPath();\n              tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n\n              if (!shadingFill) {\n                tmpCtx.setTransform.apply(tmpCtx, owner.baseTransform);\n\n                if (this._matrix) {\n                  tmpCtx.transform.apply(tmpCtx, this._matrix);\n                }\n              } else {\n                tmpCtx.setTransform.apply(tmpCtx, ctx.mozCurrentTransform);\n              }\n\n              applyBoundingBox(tmpCtx, this._bbox);\n              var grad;\n\n              if (this._type === \"axial\") {\n                grad = tmpCtx.createLinearGradient(this._p0[0], this._p0[1], this._p1[0], this._p1[1]);\n              } else if (this._type === \"radial\") {\n                grad = tmpCtx.createRadialGradient(this._p0[0], this._p0[1], this._r0, this._p1[0], this._p1[1], this._r1);\n              }\n\n              var _iterator23 = _createForOfIteratorHelper(this._colorStops),\n                  _step23;\n\n              try {\n                for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n                  var colorStop = _step23.value;\n                  grad.addColorStop(colorStop[0], colorStop[1]);\n                }\n              } catch (err) {\n                _iterator23.e(err);\n              } finally {\n                _iterator23.f();\n              }\n\n              tmpCtx.fillStyle = grad;\n              tmpCtx.fill();\n              var pattern = ctx.createPattern(tmpCanvas.canvas, \"repeat\");\n              pattern.setTransform(createMatrix(ctx.mozCurrentTransformInverse));\n              return pattern;\n            }\n          }]);\n\n          return RadialAxialShadingPattern;\n        }(BaseShadingPattern);\n\n        function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n          var coords = context.coords,\n              colors = context.colors;\n          var bytes = data.data,\n              rowSize = data.width * 4;\n          var tmp;\n\n          if (coords[p1 + 1] > coords[p2 + 1]) {\n            tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n            tmp = c1;\n            c1 = c2;\n            c2 = tmp;\n          }\n\n          if (coords[p2 + 1] > coords[p3 + 1]) {\n            tmp = p2;\n            p2 = p3;\n            p3 = tmp;\n            tmp = c2;\n            c2 = c3;\n            c3 = tmp;\n          }\n\n          if (coords[p1 + 1] > coords[p2 + 1]) {\n            tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n            tmp = c1;\n            c1 = c2;\n            c2 = tmp;\n          }\n\n          var x1 = (coords[p1] + context.offsetX) * context.scaleX;\n          var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n          var x2 = (coords[p2] + context.offsetX) * context.scaleX;\n          var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n          var x3 = (coords[p3] + context.offsetX) * context.scaleX;\n          var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n\n          if (y1 >= y3) {\n            return;\n          }\n\n          var c1r = colors[c1],\n              c1g = colors[c1 + 1],\n              c1b = colors[c1 + 2];\n          var c2r = colors[c2],\n              c2g = colors[c2 + 1],\n              c2b = colors[c2 + 2];\n          var c3r = colors[c3],\n              c3g = colors[c3 + 1],\n              c3b = colors[c3 + 2];\n          var minY = Math.round(y1),\n              maxY = Math.round(y3);\n          var xa, car, cag, cab;\n          var xb, cbr, cbg, cbb;\n\n          for (var y = minY; y <= maxY; y++) {\n            if (y < y2) {\n              var _k4 = void 0;\n\n              if (y < y1) {\n                _k4 = 0;\n              } else if (y1 === y2) {\n                _k4 = 1;\n              } else {\n                _k4 = (y1 - y) / (y1 - y2);\n              }\n\n              xa = x1 - (x1 - x2) * _k4;\n              car = c1r - (c1r - c2r) * _k4;\n              cag = c1g - (c1g - c2g) * _k4;\n              cab = c1b - (c1b - c2b) * _k4;\n            } else {\n              var _k5 = void 0;\n\n              if (y > y3) {\n                _k5 = 1;\n              } else if (y2 === y3) {\n                _k5 = 0;\n              } else {\n                _k5 = (y2 - y) / (y2 - y3);\n              }\n\n              xa = x2 - (x2 - x3) * _k5;\n              car = c2r - (c2r - c3r) * _k5;\n              cag = c2g - (c2g - c3g) * _k5;\n              cab = c2b - (c2b - c3b) * _k5;\n            }\n\n            var k = void 0;\n\n            if (y < y1) {\n              k = 0;\n            } else if (y > y3) {\n              k = 1;\n            } else {\n              k = (y1 - y) / (y1 - y3);\n            }\n\n            xb = x1 - (x1 - x3) * k;\n            cbr = c1r - (c1r - c3r) * k;\n            cbg = c1g - (c1g - c3g) * k;\n            cbb = c1b - (c1b - c3b) * k;\n            var x1_ = Math.round(Math.min(xa, xb));\n            var x2_ = Math.round(Math.max(xa, xb));\n            var j = rowSize * y + x1_ * 4;\n\n            for (var x = x1_; x <= x2_; x++) {\n              k = (xa - x) / (xa - xb);\n\n              if (k < 0) {\n                k = 0;\n              } else if (k > 1) {\n                k = 1;\n              }\n\n              bytes[j++] = car - (car - cbr) * k | 0;\n              bytes[j++] = cag - (cag - cbg) * k | 0;\n              bytes[j++] = cab - (cab - cbb) * k | 0;\n              bytes[j++] = 255;\n            }\n          }\n        }\n\n        function drawFigure(data, figure, context) {\n          var ps = figure.coords;\n          var cs = figure.colors;\n          var i, ii;\n\n          switch (figure.type) {\n            case \"lattice\":\n              var verticesPerRow = figure.verticesPerRow;\n              var rows = Math.floor(ps.length / verticesPerRow) - 1;\n              var cols = verticesPerRow - 1;\n\n              for (i = 0; i < rows; i++) {\n                var q = i * verticesPerRow;\n\n                for (var j = 0; j < cols; j++, q++) {\n                  drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n                  drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n                }\n              }\n\n              break;\n\n            case \"triangles\":\n              for (i = 0, ii = ps.length; i < ii; i += 3) {\n                drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n              }\n\n              break;\n\n            default:\n              throw new Error(\"illegal figure\");\n          }\n        }\n\n        var MeshShadingPattern = /*#__PURE__*/function (_BaseShadingPattern2) {\n          _inherits(MeshShadingPattern, _BaseShadingPattern2);\n\n          var _super15 = _createSuper(MeshShadingPattern);\n\n          function MeshShadingPattern(IR) {\n            var _this29;\n\n            _classCallCheck(this, MeshShadingPattern);\n\n            _this29 = _super15.call(this);\n            _this29._coords = IR[2];\n            _this29._colors = IR[3];\n            _this29._figures = IR[4];\n            _this29._bounds = IR[5];\n            _this29._matrix = IR[6];\n            _this29._bbox = IR[7];\n            _this29._background = IR[8];\n            return _this29;\n          }\n\n          _createClass(MeshShadingPattern, [{\n            key: \"_createMeshCanvas\",\n            value: function _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n              var EXPECTED_SCALE = 1.1;\n              var MAX_PATTERN_SIZE = 3000;\n              var BORDER_SIZE = 2;\n              var offsetX = Math.floor(this._bounds[0]);\n              var offsetY = Math.floor(this._bounds[1]);\n              var boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n              var boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n              var width = Math.min(Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n              var height = Math.min(Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n              var scaleX = boundsWidth / width;\n              var scaleY = boundsHeight / height;\n              var context = {\n                coords: this._coords,\n                colors: this._colors,\n                offsetX: -offsetX,\n                offsetY: -offsetY,\n                scaleX: 1 / scaleX,\n                scaleY: 1 / scaleY\n              };\n              var paddedWidth = width + BORDER_SIZE * 2;\n              var paddedHeight = height + BORDER_SIZE * 2;\n              var tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n              var tmpCtx = tmpCanvas.context;\n              var data = tmpCtx.createImageData(width, height);\n\n              if (backgroundColor) {\n                var bytes = data.data;\n\n                for (var i = 0, ii = bytes.length; i < ii; i += 4) {\n                  bytes[i] = backgroundColor[0];\n                  bytes[i + 1] = backgroundColor[1];\n                  bytes[i + 2] = backgroundColor[2];\n                  bytes[i + 3] = 255;\n                }\n              }\n\n              var _iterator24 = _createForOfIteratorHelper(this._figures),\n                  _step24;\n\n              try {\n                for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n                  var figure = _step24.value;\n                  drawFigure(data, figure, context);\n                }\n              } catch (err) {\n                _iterator24.e(err);\n              } finally {\n                _iterator24.f();\n              }\n\n              tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n              var canvas = tmpCanvas.canvas;\n              return {\n                canvas: canvas,\n                offsetX: offsetX - BORDER_SIZE * scaleX,\n                offsetY: offsetY - BORDER_SIZE * scaleY,\n                scaleX: scaleX,\n                scaleY: scaleY\n              };\n            }\n          }, {\n            key: \"getPattern\",\n            value: function getPattern(ctx, owner, shadingFill) {\n              applyBoundingBox(ctx, this._bbox);\n              var scale;\n\n              if (shadingFill) {\n                scale = _util.Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n              } else {\n                scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n\n                if (this._matrix) {\n                  var matrixScale = _util.Util.singularValueDecompose2dScale(this._matrix);\n\n                  scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n                }\n              }\n\n              var temporaryPatternCanvas = this._createMeshCanvas(scale, shadingFill ? null : this._background, owner.cachedCanvases);\n\n              if (!shadingFill) {\n                ctx.setTransform.apply(ctx, owner.baseTransform);\n\n                if (this._matrix) {\n                  ctx.transform.apply(ctx, this._matrix);\n                }\n              }\n\n              ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n              ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n              return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n            }\n          }]);\n\n          return MeshShadingPattern;\n        }(BaseShadingPattern);\n\n        var DummyShadingPattern = /*#__PURE__*/function (_BaseShadingPattern3) {\n          _inherits(DummyShadingPattern, _BaseShadingPattern3);\n\n          var _super16 = _createSuper(DummyShadingPattern);\n\n          function DummyShadingPattern() {\n            _classCallCheck(this, DummyShadingPattern);\n\n            return _super16.apply(this, arguments);\n          }\n\n          _createClass(DummyShadingPattern, [{\n            key: \"getPattern\",\n            value: function getPattern() {\n              return \"hotpink\";\n            }\n          }]);\n\n          return DummyShadingPattern;\n        }(BaseShadingPattern);\n\n        function getShadingPattern(IR) {\n          switch (IR[0]) {\n            case \"RadialAxial\":\n              return new RadialAxialShadingPattern(IR);\n\n            case \"Mesh\":\n              return new MeshShadingPattern(IR);\n\n            case \"Dummy\":\n              return new DummyShadingPattern();\n          }\n\n          throw new Error(\"Unknown IR type: \".concat(IR[0]));\n        }\n\n        var PaintType = {\n          COLORED: 1,\n          UNCOLORED: 2\n        };\n\n        var TilingPattern = /*#__PURE__*/function () {\n          _createClass(TilingPattern, null, [{\n            key: \"MAX_PATTERN_SIZE\",\n            get: function get() {\n              return (0, _util.shadow)(this, \"MAX_PATTERN_SIZE\", 3000);\n            }\n          }]);\n\n          function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n            _classCallCheck(this, TilingPattern);\n\n            this.operatorList = IR[2];\n            this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n            this.bbox = IR[4];\n            this.xstep = IR[5];\n            this.ystep = IR[6];\n            this.paintType = IR[7];\n            this.tilingType = IR[8];\n            this.color = color;\n            this.ctx = ctx;\n            this.canvasGraphicsFactory = canvasGraphicsFactory;\n            this.baseTransform = baseTransform;\n          }\n\n          _createClass(TilingPattern, [{\n            key: \"createPatternCanvas\",\n            value: function createPatternCanvas(owner) {\n              var operatorList = this.operatorList;\n              var bbox = this.bbox;\n              var xstep = this.xstep;\n              var ystep = this.ystep;\n              var paintType = this.paintType;\n              var tilingType = this.tilingType;\n              var color = this.color;\n              var canvasGraphicsFactory = this.canvasGraphicsFactory;\n              (0, _util.info)(\"TilingType: \" + tilingType);\n              var x0 = bbox[0],\n                  y0 = bbox[1],\n                  x1 = bbox[2],\n                  y1 = bbox[3];\n\n              var matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n\n              var curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n\n              var combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\n              var dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n              var dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n              var tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n              var tmpCtx = tmpCanvas.context;\n              var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n              graphics.groupLevel = owner.groupLevel;\n              this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n              graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n              this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n              graphics.baseTransform = graphics.ctx.mozCurrentTransform.slice();\n              graphics.executeOperatorList(operatorList);\n              graphics.endDrawing();\n              return {\n                canvas: tmpCanvas.canvas,\n                scaleX: dimx.scale,\n                scaleY: dimy.scale\n              };\n            }\n          }, {\n            key: \"getSizeAndScale\",\n            value: function getSizeAndScale(step, realOutputSize, scale) {\n              step = Math.abs(step);\n              var maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n              var size = Math.ceil(step * scale);\n\n              if (size >= maxSize) {\n                size = maxSize;\n              } else {\n                scale = size / step;\n              }\n\n              return {\n                scale: scale,\n                size: size\n              };\n            }\n          }, {\n            key: \"clipBbox\",\n            value: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n              if (Array.isArray(bbox) && bbox.length === 4) {\n                var bboxWidth = x1 - x0;\n                var bboxHeight = y1 - y0;\n                graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n                graphics.clip();\n                graphics.endPath();\n              }\n            }\n          }, {\n            key: \"setFillAndStrokeStyleToContext\",\n            value: function setFillAndStrokeStyleToContext(graphics, paintType, color) {\n              var context = graphics.ctx,\n                  current = graphics.current;\n\n              switch (paintType) {\n                case PaintType.COLORED:\n                  var ctx = this.ctx;\n                  context.fillStyle = ctx.fillStyle;\n                  context.strokeStyle = ctx.strokeStyle;\n                  current.fillColor = ctx.fillStyle;\n                  current.strokeColor = ctx.strokeStyle;\n                  break;\n\n                case PaintType.UNCOLORED:\n                  var cssColor = _util.Util.makeHexColor(color[0], color[1], color[2]);\n\n                  context.fillStyle = cssColor;\n                  context.strokeStyle = cssColor;\n                  current.fillColor = cssColor;\n                  current.strokeColor = cssColor;\n                  break;\n\n                default:\n                  throw new _util.FormatError(\"Unsupported paint type: \".concat(paintType));\n              }\n            }\n          }, {\n            key: \"getPattern\",\n            value: function getPattern(ctx, owner, shadingFill) {\n              ctx = this.ctx;\n              var matrix = ctx.mozCurrentTransformInverse;\n\n              if (!shadingFill) {\n                matrix = _util.Util.transform(matrix, owner.baseTransform);\n\n                if (this.matrix) {\n                  matrix = _util.Util.transform(matrix, this.matrix);\n                }\n              }\n\n              var temporaryPatternCanvas = this.createPatternCanvas(owner);\n              var domMatrix = createMatrix(matrix);\n              domMatrix = domMatrix.scale(1 / temporaryPatternCanvas.scaleX, 1 / temporaryPatternCanvas.scaleY);\n              var pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n              pattern.setTransform(domMatrix);\n              return pattern;\n            }\n          }]);\n\n          return TilingPattern;\n        }();\n\n        exports.TilingPattern = TilingPattern;\n        /***/\n      },\n      /* 12 */\n\n      /***/\n      function (__unused_webpack_module, exports) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.GlobalWorkerOptions = void 0;\n        var GlobalWorkerOptions = Object.create(null);\n        exports.GlobalWorkerOptions = GlobalWorkerOptions;\n        GlobalWorkerOptions.workerPort = GlobalWorkerOptions.workerPort === undefined ? null : GlobalWorkerOptions.workerPort;\n        GlobalWorkerOptions.workerSrc = GlobalWorkerOptions.workerSrc === undefined ? \"\" : GlobalWorkerOptions.workerSrc;\n        /***/\n      },\n      /* 13 */\n\n      /***/\n      function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.MessageHandler = void 0;\n\n        var _util = __w_pdfjs_require__(2);\n\n        var CallbackKind = {\n          UNKNOWN: 0,\n          DATA: 1,\n          ERROR: 2\n        };\n        var StreamKind = {\n          UNKNOWN: 0,\n          CANCEL: 1,\n          CANCEL_COMPLETE: 2,\n          CLOSE: 3,\n          ENQUEUE: 4,\n          ERROR: 5,\n          PULL: 6,\n          PULL_COMPLETE: 7,\n          START_COMPLETE: 8\n        };\n\n        function wrapReason(reason) {\n          if (typeof reason !== \"object\" || reason === null) {\n            return reason;\n          }\n\n          switch (reason.name) {\n            case \"AbortException\":\n              return new _util.AbortException(reason.message);\n\n            case \"MissingPDFException\":\n              return new _util.MissingPDFException(reason.message);\n\n            case \"UnexpectedResponseException\":\n              return new _util.UnexpectedResponseException(reason.message, reason.status);\n\n            case \"UnknownErrorException\":\n              return new _util.UnknownErrorException(reason.message, reason.details);\n\n            default:\n              return new _util.UnknownErrorException(reason.message, reason.toString());\n          }\n        }\n\n        var MessageHandler = /*#__PURE__*/function () {\n          function MessageHandler(sourceName, targetName, comObj) {\n            var _this30 = this;\n\n            _classCallCheck(this, MessageHandler);\n\n            this.sourceName = sourceName;\n            this.targetName = targetName;\n            this.comObj = comObj;\n            this.callbackId = 1;\n            this.streamId = 1;\n            this.postMessageTransfers = true;\n            this.streamSinks = Object.create(null);\n            this.streamControllers = Object.create(null);\n            this.callbackCapabilities = Object.create(null);\n            this.actionHandler = Object.create(null);\n\n            this._onComObjOnMessage = function (event) {\n              var data = event.data;\n\n              if (data.targetName !== _this30.sourceName) {\n                return;\n              }\n\n              if (data.stream) {\n                _this30._processStreamMessage(data);\n\n                return;\n              }\n\n              if (data.callback) {\n                var callbackId = data.callbackId;\n                var capability = _this30.callbackCapabilities[callbackId];\n\n                if (!capability) {\n                  throw new Error(\"Cannot resolve callback \".concat(callbackId));\n                }\n\n                delete _this30.callbackCapabilities[callbackId];\n\n                if (data.callback === CallbackKind.DATA) {\n                  capability.resolve(data.data);\n                } else if (data.callback === CallbackKind.ERROR) {\n                  capability.reject(wrapReason(data.reason));\n                } else {\n                  throw new Error(\"Unexpected callback case\");\n                }\n\n                return;\n              }\n\n              var action = _this30.actionHandler[data.action];\n\n              if (!action) {\n                throw new Error(\"Unknown action from worker: \".concat(data.action));\n              }\n\n              if (data.callbackId) {\n                var cbSourceName = _this30.sourceName;\n                var cbTargetName = data.sourceName;\n                new Promise(function (resolve) {\n                  resolve(action(data.data));\n                }).then(function (result) {\n                  comObj.postMessage({\n                    sourceName: cbSourceName,\n                    targetName: cbTargetName,\n                    callback: CallbackKind.DATA,\n                    callbackId: data.callbackId,\n                    data: result\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName: cbSourceName,\n                    targetName: cbTargetName,\n                    callback: CallbackKind.ERROR,\n                    callbackId: data.callbackId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                return;\n              }\n\n              if (data.streamId) {\n                _this30._createStreamSink(data);\n\n                return;\n              }\n\n              action(data.data);\n            };\n\n            comObj.addEventListener(\"message\", this._onComObjOnMessage);\n          }\n\n          _createClass(MessageHandler, [{\n            key: \"on\",\n            value: function on(actionName, handler) {\n              var ah = this.actionHandler;\n\n              if (ah[actionName]) {\n                throw new Error(\"There is already an actionName called \\\"\".concat(actionName, \"\\\"\"));\n              }\n\n              ah[actionName] = handler;\n            }\n          }, {\n            key: \"send\",\n            value: function send(actionName, data, transfers) {\n              this._postMessage({\n                sourceName: this.sourceName,\n                targetName: this.targetName,\n                action: actionName,\n                data: data\n              }, transfers);\n            }\n          }, {\n            key: \"sendWithPromise\",\n            value: function sendWithPromise(actionName, data, transfers) {\n              var callbackId = this.callbackId++;\n              var capability = (0, _util.createPromiseCapability)();\n              this.callbackCapabilities[callbackId] = capability;\n\n              try {\n                this._postMessage({\n                  sourceName: this.sourceName,\n                  targetName: this.targetName,\n                  action: actionName,\n                  callbackId: callbackId,\n                  data: data\n                }, transfers);\n              } catch (ex) {\n                capability.reject(ex);\n              }\n\n              return capability.promise;\n            }\n          }, {\n            key: \"sendWithStream\",\n            value: function sendWithStream(actionName, data, queueingStrategy, transfers) {\n              var _this31 = this;\n\n              var streamId = this.streamId++;\n              var sourceName = this.sourceName;\n              var targetName = this.targetName;\n              var comObj = this.comObj;\n              return new ReadableStream({\n                start: function start(controller) {\n                  var startCapability = (0, _util.createPromiseCapability)();\n                  _this31.streamControllers[streamId] = {\n                    controller: controller,\n                    startCall: startCapability,\n                    pullCall: null,\n                    cancelCall: null,\n                    isClosed: false\n                  };\n\n                  _this31._postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    action: actionName,\n                    streamId: streamId,\n                    data: data,\n                    desiredSize: controller.desiredSize\n                  }, transfers);\n\n                  return startCapability.promise;\n                },\n                pull: function pull(controller) {\n                  var pullCapability = (0, _util.createPromiseCapability)();\n                  _this31.streamControllers[streamId].pullCall = pullCapability;\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.PULL,\n                    streamId: streamId,\n                    desiredSize: controller.desiredSize\n                  });\n                  return pullCapability.promise;\n                },\n                cancel: function cancel(reason) {\n                  (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n                  var cancelCapability = (0, _util.createPromiseCapability)();\n                  _this31.streamControllers[streamId].cancelCall = cancelCapability;\n                  _this31.streamControllers[streamId].isClosed = true;\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.CANCEL,\n                    streamId: streamId,\n                    reason: wrapReason(reason)\n                  });\n                  return cancelCapability.promise;\n                }\n              }, queueingStrategy);\n            }\n          }, {\n            key: \"_createStreamSink\",\n            value: function _createStreamSink(data) {\n              var self = this;\n              var action = this.actionHandler[data.action];\n              var streamId = data.streamId;\n              var sourceName = this.sourceName;\n              var targetName = data.sourceName;\n              var comObj = this.comObj;\n              var streamSink = {\n                enqueue: function enqueue(chunk) {\n                  var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n                  var transfers = arguments.length > 2 ? arguments[2] : undefined;\n\n                  if (this.isCancelled) {\n                    return;\n                  }\n\n                  var lastDesiredSize = this.desiredSize;\n                  this.desiredSize -= size;\n\n                  if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n                    this.sinkCapability = (0, _util.createPromiseCapability)();\n                    this.ready = this.sinkCapability.promise;\n                  }\n\n                  self._postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.ENQUEUE,\n                    streamId: streamId,\n                    chunk: chunk\n                  }, transfers);\n                },\n                close: function close() {\n                  if (this.isCancelled) {\n                    return;\n                  }\n\n                  this.isCancelled = true;\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.CLOSE,\n                    streamId: streamId\n                  });\n                  delete self.streamSinks[streamId];\n                },\n                error: function error(reason) {\n                  (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n\n                  if (this.isCancelled) {\n                    return;\n                  }\n\n                  this.isCancelled = true;\n                  comObj.postMessage({\n                    sourceName: sourceName,\n                    targetName: targetName,\n                    stream: StreamKind.ERROR,\n                    streamId: streamId,\n                    reason: wrapReason(reason)\n                  });\n                },\n                sinkCapability: (0, _util.createPromiseCapability)(),\n                onPull: null,\n                onCancel: null,\n                isCancelled: false,\n                desiredSize: data.desiredSize,\n                ready: null\n              };\n              streamSink.sinkCapability.resolve();\n              streamSink.ready = streamSink.sinkCapability.promise;\n              this.streamSinks[streamId] = streamSink;\n              new Promise(function (resolve) {\n                resolve(action(data.data, streamSink));\n              }).then(function () {\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.START_COMPLETE,\n                  streamId: streamId,\n                  success: true\n                });\n              }, function (reason) {\n                comObj.postMessage({\n                  sourceName: sourceName,\n                  targetName: targetName,\n                  stream: StreamKind.START_COMPLETE,\n                  streamId: streamId,\n                  reason: wrapReason(reason)\n                });\n              });\n            }\n          }, {\n            key: \"_processStreamMessage\",\n            value: function _processStreamMessage(data) {\n              var streamId = data.streamId;\n              var sourceName = this.sourceName;\n              var targetName = data.sourceName;\n              var comObj = this.comObj;\n\n              switch (data.stream) {\n                case StreamKind.START_COMPLETE:\n                  if (data.success) {\n                    this.streamControllers[streamId].startCall.resolve();\n                  } else {\n                    this.streamControllers[streamId].startCall.reject(wrapReason(data.reason));\n                  }\n\n                  break;\n\n                case StreamKind.PULL_COMPLETE:\n                  if (data.success) {\n                    this.streamControllers[streamId].pullCall.resolve();\n                  } else {\n                    this.streamControllers[streamId].pullCall.reject(wrapReason(data.reason));\n                  }\n\n                  break;\n\n                case StreamKind.PULL:\n                  if (!this.streamSinks[streamId]) {\n                    comObj.postMessage({\n                      sourceName: sourceName,\n                      targetName: targetName,\n                      stream: StreamKind.PULL_COMPLETE,\n                      streamId: streamId,\n                      success: true\n                    });\n                    break;\n                  }\n\n                  if (this.streamSinks[streamId].desiredSize <= 0 && data.desiredSize > 0) {\n                    this.streamSinks[streamId].sinkCapability.resolve();\n                  }\n\n                  this.streamSinks[streamId].desiredSize = data.desiredSize;\n                  var onPull = this.streamSinks[data.streamId].onPull;\n                  new Promise(function (resolve) {\n                    resolve(onPull && onPull());\n                  }).then(function () {\n                    comObj.postMessage({\n                      sourceName: sourceName,\n                      targetName: targetName,\n                      stream: StreamKind.PULL_COMPLETE,\n                      streamId: streamId,\n                      success: true\n                    });\n                  }, function (reason) {\n                    comObj.postMessage({\n                      sourceName: sourceName,\n                      targetName: targetName,\n                      stream: StreamKind.PULL_COMPLETE,\n                      streamId: streamId,\n                      reason: wrapReason(reason)\n                    });\n                  });\n                  break;\n\n                case StreamKind.ENQUEUE:\n                  (0, _util.assert)(this.streamControllers[streamId], \"enqueue should have stream controller\");\n\n                  if (this.streamControllers[streamId].isClosed) {\n                    break;\n                  }\n\n                  this.streamControllers[streamId].controller.enqueue(data.chunk);\n                  break;\n\n                case StreamKind.CLOSE:\n                  (0, _util.assert)(this.streamControllers[streamId], \"close should have stream controller\");\n\n                  if (this.streamControllers[streamId].isClosed) {\n                    break;\n                  }\n\n                  this.streamControllers[streamId].isClosed = true;\n                  this.streamControllers[streamId].controller.close();\n\n                  this._deleteStreamController(streamId);\n\n                  break;\n\n                case StreamKind.ERROR:\n                  (0, _util.assert)(this.streamControllers[streamId], \"error should have stream controller\");\n                  this.streamControllers[streamId].controller.error(wrapReason(data.reason));\n\n                  this._deleteStreamController(streamId);\n\n                  break;\n\n                case StreamKind.CANCEL_COMPLETE:\n                  if (data.success) {\n                    this.streamControllers[streamId].cancelCall.resolve();\n                  } else {\n                    this.streamControllers[streamId].cancelCall.reject(wrapReason(data.reason));\n                  }\n\n                  this._deleteStreamController(streamId);\n\n                  break;\n\n                case StreamKind.CANCEL:\n                  if (!this.streamSinks[streamId]) {\n                    break;\n                  }\n\n                  var onCancel = this.streamSinks[data.streamId].onCancel;\n                  new Promise(function (resolve) {\n                    resolve(onCancel && onCancel(wrapReason(data.reason)));\n                  }).then(function () {\n                    comObj.postMessage({\n                      sourceName: sourceName,\n                      targetName: targetName,\n                      stream: StreamKind.CANCEL_COMPLETE,\n                      streamId: streamId,\n                      success: true\n                    });\n                  }, function (reason) {\n                    comObj.postMessage({\n                      sourceName: sourceName,\n                      targetName: targetName,\n                      stream: StreamKind.CANCEL_COMPLETE,\n                      streamId: streamId,\n                      reason: wrapReason(reason)\n                    });\n                  });\n                  this.streamSinks[streamId].sinkCapability.reject(wrapReason(data.reason));\n                  this.streamSinks[streamId].isCancelled = true;\n                  delete this.streamSinks[streamId];\n                  break;\n\n                default:\n                  throw new Error(\"Unexpected stream case\");\n              }\n            }\n          }, {\n            key: \"_deleteStreamController\",\n            value: function () {\n              var _deleteStreamController2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(streamId) {\n                return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        _context7.next = 2;\n                        return Promise.allSettled([this.streamControllers[streamId].startCall, this.streamControllers[streamId].pullCall, this.streamControllers[streamId].cancelCall].map(function (capability) {\n                          return capability && capability.promise;\n                        }));\n\n                      case 2:\n                        delete this.streamControllers[streamId];\n\n                      case 3:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7, this);\n              }));\n\n              function _deleteStreamController(_x4) {\n                return _deleteStreamController2.apply(this, arguments);\n              }\n\n              return _deleteStreamController;\n            }()\n          }, {\n            key: \"_postMessage\",\n            value: function _postMessage(message, transfers) {\n              if (transfers && this.postMessageTransfers) {\n                this.comObj.postMessage(message, transfers);\n              } else {\n                this.comObj.postMessage(message);\n              }\n            }\n          }, {\n            key: \"destroy\",\n            value: function destroy() {\n              this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n            }\n          }]);\n\n          return MessageHandler;\n        }();\n\n        exports.MessageHandler = MessageHandler;\n        /***/\n      },\n      /* 14 */\n\n      /***/\n      function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.Metadata = void 0;\n\n        var _util = __w_pdfjs_require__(2);\n\n        var Metadata = /*#__PURE__*/function () {\n          function Metadata(_ref32) {\n            var parsedData = _ref32.parsedData,\n                rawData = _ref32.rawData;\n\n            _classCallCheck(this, Metadata);\n\n            this._metadataMap = parsedData;\n            this._data = rawData;\n          }\n\n          _createClass(Metadata, [{\n            key: \"getRaw\",\n            value: function getRaw() {\n              return this._data;\n            }\n          }, {\n            key: \"get\",\n            value: function get(name) {\n              var _this$_metadataMap$ge;\n\n              return (_this$_metadataMap$ge = this._metadataMap.get(name)) !== null && _this$_metadataMap$ge !== void 0 ? _this$_metadataMap$ge : null;\n            }\n          }, {\n            key: \"getAll\",\n            value: function getAll() {\n              return (0, _util.objectFromMap)(this._metadataMap);\n            }\n          }, {\n            key: \"has\",\n            value: function has(name) {\n              return this._metadataMap.has(name);\n            }\n          }]);\n\n          return Metadata;\n        }();\n\n        exports.Metadata = Metadata;\n        /***/\n      },\n      /* 15 */\n\n      /***/\n      function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.OptionalContentConfig = void 0;\n\n        var _util = __w_pdfjs_require__(2);\n\n        var OptionalContentGroup = function OptionalContentGroup(name, intent) {\n          _classCallCheck(this, OptionalContentGroup);\n\n          this.visible = true;\n          this.name = name;\n          this.intent = intent;\n        };\n\n        var OptionalContentConfig = /*#__PURE__*/function () {\n          function OptionalContentConfig(data) {\n            _classCallCheck(this, OptionalContentConfig);\n\n            this.name = null;\n            this.creator = null;\n            this._order = null;\n            this._groups = new Map();\n\n            if (data === null) {\n              return;\n            }\n\n            this.name = data.name;\n            this.creator = data.creator;\n            this._order = data.order;\n\n            var _iterator25 = _createForOfIteratorHelper(data.groups),\n                _step25;\n\n            try {\n              for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n                var _group = _step25.value;\n\n                this._groups.set(_group.id, new OptionalContentGroup(_group.name, _group.intent));\n              }\n            } catch (err) {\n              _iterator25.e(err);\n            } finally {\n              _iterator25.f();\n            }\n\n            if (data.baseState === \"OFF\") {\n              var _iterator26 = _createForOfIteratorHelper(this._groups),\n                  _step26;\n\n              try {\n                for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n                  var group = _step26.value;\n                  group.visible = false;\n                }\n              } catch (err) {\n                _iterator26.e(err);\n              } finally {\n                _iterator26.f();\n              }\n            }\n\n            var _iterator27 = _createForOfIteratorHelper(data.on),\n                _step27;\n\n            try {\n              for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {\n                var on = _step27.value;\n                this._groups.get(on).visible = true;\n              }\n            } catch (err) {\n              _iterator27.e(err);\n            } finally {\n              _iterator27.f();\n            }\n\n            var _iterator28 = _createForOfIteratorHelper(data.off),\n                _step28;\n\n            try {\n              for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {\n                var off = _step28.value;\n                this._groups.get(off).visible = false;\n              }\n            } catch (err) {\n              _iterator28.e(err);\n            } finally {\n              _iterator28.f();\n            }\n          }\n\n          _createClass(OptionalContentConfig, [{\n            key: \"_evaluateVisibilityExpression\",\n            value: function _evaluateVisibilityExpression(array) {\n              var length = array.length;\n\n              if (length < 2) {\n                return true;\n              }\n\n              var operator = array[0];\n\n              for (var i = 1; i < length; i++) {\n                var element = array[i];\n                var state = void 0;\n\n                if (Array.isArray(element)) {\n                  state = this._evaluateVisibilityExpression(element);\n                } else if (this._groups.has(element)) {\n                  state = this._groups.get(element).visible;\n                } else {\n                  (0, _util.warn)(\"Optional content group not found: \".concat(element));\n                  return true;\n                }\n\n                switch (operator) {\n                  case \"And\":\n                    if (!state) {\n                      return false;\n                    }\n\n                    break;\n\n                  case \"Or\":\n                    if (state) {\n                      return true;\n                    }\n\n                    break;\n\n                  case \"Not\":\n                    return !state;\n\n                  default:\n                    return true;\n                }\n              }\n\n              return operator === \"And\";\n            }\n          }, {\n            key: \"isVisible\",\n            value: function isVisible(group) {\n              if (group.type === \"OCG\") {\n                if (!this._groups.has(group.id)) {\n                  (0, _util.warn)(\"Optional content group not found: \".concat(group.id));\n                  return true;\n                }\n\n                return this._groups.get(group.id).visible;\n              } else if (group.type === \"OCMD\") {\n                if (group.expression) {\n                  return this._evaluateVisibilityExpression(group.expression);\n                }\n\n                if (!group.policy || group.policy === \"AnyOn\") {\n                  var _iterator29 = _createForOfIteratorHelper(group.ids),\n                      _step29;\n\n                  try {\n                    for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {\n                      var id = _step29.value;\n\n                      if (!this._groups.has(id)) {\n                        (0, _util.warn)(\"Optional content group not found: \".concat(id));\n                        return true;\n                      }\n\n                      if (this._groups.get(id).visible) {\n                        return true;\n                      }\n                    }\n                  } catch (err) {\n                    _iterator29.e(err);\n                  } finally {\n                    _iterator29.f();\n                  }\n\n                  return false;\n                } else if (group.policy === \"AllOn\") {\n                  var _iterator30 = _createForOfIteratorHelper(group.ids),\n                      _step30;\n\n                  try {\n                    for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {\n                      var _id = _step30.value;\n\n                      if (!this._groups.has(_id)) {\n                        (0, _util.warn)(\"Optional content group not found: \".concat(_id));\n                        return true;\n                      }\n\n                      if (!this._groups.get(_id).visible) {\n                        return false;\n                      }\n                    }\n                  } catch (err) {\n                    _iterator30.e(err);\n                  } finally {\n                    _iterator30.f();\n                  }\n\n                  return true;\n                } else if (group.policy === \"AnyOff\") {\n                  var _iterator31 = _createForOfIteratorHelper(group.ids),\n                      _step31;\n\n                  try {\n                    for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {\n                      var _id2 = _step31.value;\n\n                      if (!this._groups.has(_id2)) {\n                        (0, _util.warn)(\"Optional content group not found: \".concat(_id2));\n                        return true;\n                      }\n\n                      if (!this._groups.get(_id2).visible) {\n                        return true;\n                      }\n                    }\n                  } catch (err) {\n                    _iterator31.e(err);\n                  } finally {\n                    _iterator31.f();\n                  }\n\n                  return false;\n                } else if (group.policy === \"AllOff\") {\n                  var _iterator32 = _createForOfIteratorHelper(group.ids),\n                      _step32;\n\n                  try {\n                    for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {\n                      var _id3 = _step32.value;\n\n                      if (!this._groups.has(_id3)) {\n                        (0, _util.warn)(\"Optional content group not found: \".concat(_id3));\n                        return true;\n                      }\n\n                      if (this._groups.get(_id3).visible) {\n                        return false;\n                      }\n                    }\n                  } catch (err) {\n                    _iterator32.e(err);\n                  } finally {\n                    _iterator32.f();\n                  }\n\n                  return true;\n                }\n\n                (0, _util.warn)(\"Unknown optional content policy \".concat(group.policy, \".\"));\n                return true;\n              }\n\n              (0, _util.warn)(\"Unknown group type \".concat(group.type, \".\"));\n              return true;\n            }\n          }, {\n            key: \"setVisibility\",\n            value: function setVisibility(id) {\n              var visible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n              if (!this._groups.has(id)) {\n                (0, _util.warn)(\"Optional content group not found: \".concat(id));\n                return;\n              }\n\n              this._groups.get(id).visible = !!visible;\n            }\n          }, {\n            key: \"getOrder\",\n            value: function getOrder() {\n              if (!this._groups.size) {\n                return null;\n              }\n\n              if (this._order) {\n                return this._order.slice();\n              }\n\n              return Array.from(this._groups.keys());\n            }\n          }, {\n            key: \"getGroups\",\n            value: function getGroups() {\n              return this._groups.size > 0 ? (0, _util.objectFromMap)(this._groups) : null;\n            }\n          }, {\n            key: \"getGroup\",\n            value: function getGroup(id) {\n              return this._groups.get(id) || null;\n            }\n          }]);\n\n          return OptionalContentConfig;\n        }();\n\n        exports.OptionalContentConfig = OptionalContentConfig;\n        /***/\n      },\n      /* 16 */\n\n      /***/\n      function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.PDFDataTransportStream = void 0;\n\n        var _util = __w_pdfjs_require__(2);\n\n        var _display_utils = __w_pdfjs_require__(1);\n\n        var PDFDataTransportStream = /*#__PURE__*/function () {\n          function PDFDataTransportStream(params, pdfDataRangeTransport) {\n            var _this32 = this;\n\n            _classCallCheck(this, PDFDataTransportStream);\n\n            (0, _util.assert)(pdfDataRangeTransport, 'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.');\n            this._queuedChunks = [];\n            this._progressiveDone = params.progressiveDone || false;\n            this._contentDispositionFilename = params.contentDispositionFilename || null;\n            var initialData = params.initialData;\n\n            if ((initialData === null || initialData === void 0 ? void 0 : initialData.length) > 0) {\n              var buffer = new Uint8Array(initialData).buffer;\n\n              this._queuedChunks.push(buffer);\n            }\n\n            this._pdfDataRangeTransport = pdfDataRangeTransport;\n            this._isStreamingSupported = !params.disableStream;\n            this._isRangeSupported = !params.disableRange;\n            this._contentLength = params.length;\n            this._fullRequestReader = null;\n            this._rangeReaders = [];\n\n            this._pdfDataRangeTransport.addRangeListener(function (begin, chunk) {\n              _this32._onReceiveData({\n                begin: begin,\n                chunk: chunk\n              });\n            });\n\n            this._pdfDataRangeTransport.addProgressListener(function (loaded, total) {\n              _this32._onProgress({\n                loaded: loaded,\n                total: total\n              });\n            });\n\n            this._pdfDataRangeTransport.addProgressiveReadListener(function (chunk) {\n              _this32._onReceiveData({\n                chunk: chunk\n              });\n            });\n\n            this._pdfDataRangeTransport.addProgressiveDoneListener(function () {\n              _this32._onProgressiveDone();\n            });\n\n            this._pdfDataRangeTransport.transportReady();\n          }\n\n          _createClass(PDFDataTransportStream, [{\n            key: \"_onReceiveData\",\n            value: function _onReceiveData(args) {\n              var buffer = new Uint8Array(args.chunk).buffer;\n\n              if (args.begin === undefined) {\n                if (this._fullRequestReader) {\n                  this._fullRequestReader._enqueue(buffer);\n                } else {\n                  this._queuedChunks.push(buffer);\n                }\n              } else {\n                var found = this._rangeReaders.some(function (rangeReader) {\n                  if (rangeReader._begin !== args.begin) {\n                    return false;\n                  }\n\n                  rangeReader._enqueue(buffer);\n\n                  return true;\n                });\n\n                (0, _util.assert)(found, \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\");\n              }\n            }\n          }, {\n            key: \"_onProgress\",\n            value: function _onProgress(evt) {\n              if (evt.total === undefined) {\n                var firstReader = this._rangeReaders[0];\n\n                if (firstReader === null || firstReader === void 0 ? void 0 : firstReader.onProgress) {\n                  firstReader.onProgress({\n                    loaded: evt.loaded\n                  });\n                }\n              } else {\n                var fullReader = this._fullRequestReader;\n\n                if (fullReader === null || fullReader === void 0 ? void 0 : fullReader.onProgress) {\n                  fullReader.onProgress({\n                    loaded: evt.loaded,\n                    total: evt.total\n                  });\n                }\n              }\n            }\n          }, {\n            key: \"_onProgressiveDone\",\n            value: function _onProgressiveDone() {\n              if (this._fullRequestReader) {\n                this._fullRequestReader.progressiveDone();\n              }\n\n              this._progressiveDone = true;\n            }\n          }, {\n            key: \"_removeRangeReader\",\n            value: function _removeRangeReader(reader) {\n              var i = this._rangeReaders.indexOf(reader);\n\n              if (i >= 0) {\n                this._rangeReaders.splice(i, 1);\n              }\n            }\n          }, {\n            key: \"getFullReader\",\n            value: function getFullReader() {\n              (0, _util.assert)(!this._fullRequestReader, \"PDFDataTransportStream.getFullReader can only be called once.\");\n              var queuedChunks = this._queuedChunks;\n              this._queuedChunks = null;\n              return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone, this._contentDispositionFilename);\n            }\n          }, {\n            key: \"getRangeReader\",\n            value: function getRangeReader(begin, end) {\n              if (end <= this._progressiveDataLength) {\n                return null;\n              }\n\n              var reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n\n              this._pdfDataRangeTransport.requestDataRange(begin, end);\n\n              this._rangeReaders.push(reader);\n\n              return reader;\n            }\n          }, {\n            key: \"cancelAllRequests\",\n            value: function cancelAllRequests(reason) {\n              if (this._fullRequestReader) {\n                this._fullRequestReader.cancel(reason);\n              }\n\n              var _iterator33 = _createForOfIteratorHelper(this._rangeReaders.slice(0)),\n                  _step33;\n\n              try {\n                for (_iterator33.s(); !(_step33 = _iterator33.n()).done;) {\n                  var reader = _step33.value;\n                  reader.cancel(reason);\n                }\n              } catch (err) {\n                _iterator33.e(err);\n              } finally {\n                _iterator33.f();\n              }\n\n              this._pdfDataRangeTransport.abort();\n            }\n          }, {\n            key: \"_progressiveDataLength\",\n            get: function get() {\n              var _this$_fullRequestRea, _this$_fullRequestRea2;\n\n              return (_this$_fullRequestRea = (_this$_fullRequestRea2 = this._fullRequestReader) === null || _this$_fullRequestRea2 === void 0 ? void 0 : _this$_fullRequestRea2._loaded) !== null && _this$_fullRequestRea !== void 0 ? _this$_fullRequestRea : 0;\n            }\n          }]);\n\n          return PDFDataTransportStream;\n        }();\n\n        exports.PDFDataTransportStream = PDFDataTransportStream;\n\n        var PDFDataTransportStreamReader = /*#__PURE__*/function () {\n          function PDFDataTransportStreamReader(stream, queuedChunks) {\n            var progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            var contentDispositionFilename = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n            _classCallCheck(this, PDFDataTransportStreamReader);\n\n            this._stream = stream;\n            this._done = progressiveDone || false;\n            this._filename = (0, _display_utils.isPdfFile)(contentDispositionFilename) ? contentDispositionFilename : null;\n            this._queuedChunks = queuedChunks || [];\n            this._loaded = 0;\n\n            var _iterator34 = _createForOfIteratorHelper(this._queuedChunks),\n                _step34;\n\n            try {\n              for (_iterator34.s(); !(_step34 = _iterator34.n()).done;) {\n                var chunk = _step34.value;\n                this._loaded += chunk.byteLength;\n              }\n            } catch (err) {\n              _iterator34.e(err);\n            } finally {\n              _iterator34.f();\n            }\n\n            this._requests = [];\n            this._headersReady = Promise.resolve();\n            stream._fullRequestReader = this;\n            this.onProgress = null;\n          }\n\n          _createClass(PDFDataTransportStreamReader, [{\n            key: \"_enqueue\",\n            value: function _enqueue(chunk) {\n              if (this._done) {\n                return;\n              }\n\n              if (this._requests.length > 0) {\n                var requestCapability = this._requests.shift();\n\n                requestCapability.resolve({\n                  value: chunk,\n                  done: false\n                });\n              } else {\n                this._queuedChunks.push(chunk);\n              }\n\n              this._loaded += chunk.byteLength;\n            }\n          }, {\n            key: \"read\",\n            value: function () {\n              var _read = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n                var chunk, requestCapability;\n                return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        if (!(this._queuedChunks.length > 0)) {\n                          _context8.next = 3;\n                          break;\n                        }\n\n                        chunk = this._queuedChunks.shift();\n                        return _context8.abrupt(\"return\", {\n                          value: chunk,\n                          done: false\n                        });\n\n                      case 3:\n                        if (!this._done) {\n                          _context8.next = 5;\n                          break;\n                        }\n\n                        return _context8.abrupt(\"return\", {\n                          value: undefined,\n                          done: true\n                        });\n\n                      case 5:\n                        requestCapability = (0, _util.createPromiseCapability)();\n\n                        this._requests.push(requestCapability);\n\n                        return _context8.abrupt(\"return\", requestCapability.promise);\n\n                      case 8:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8, this);\n              }));\n\n              function read() {\n                return _read.apply(this, arguments);\n              }\n\n              return read;\n            }()\n          }, {\n            key: \"cancel\",\n            value: function cancel(reason) {\n              this._done = true;\n\n              var _iterator35 = _createForOfIteratorHelper(this._requests),\n                  _step35;\n\n              try {\n                for (_iterator35.s(); !(_step35 = _iterator35.n()).done;) {\n                  var requestCapability = _step35.value;\n                  requestCapability.resolve({\n                    value: undefined,\n                    done: true\n                  });\n                }\n              } catch (err) {\n                _iterator35.e(err);\n              } finally {\n                _iterator35.f();\n              }\n\n              this._requests.length = 0;\n            }\n          }, {\n            key: \"progressiveDone\",\n            value: function progressiveDone() {\n              if (this._done) {\n                return;\n              }\n\n              this._done = true;\n            }\n          }, {\n            key: \"headersReady\",\n            get: function get() {\n              return this._headersReady;\n            }\n          }, {\n            key: \"filename\",\n            get: function get() {\n              return this._filename;\n            }\n          }, {\n            key: \"isRangeSupported\",\n            get: function get() {\n              return this._stream._isRangeSupported;\n            }\n          }, {\n            key: \"isStreamingSupported\",\n            get: function get() {\n              return this._stream._isStreamingSupported;\n            }\n          }, {\n            key: \"contentLength\",\n            get: function get() {\n              return this._stream._contentLength;\n            }\n          }]);\n\n          return PDFDataTransportStreamReader;\n        }();\n\n        var PDFDataTransportStreamRangeReader = /*#__PURE__*/function () {\n          function PDFDataTransportStreamRangeReader(stream, begin, end) {\n            _classCallCheck(this, PDFDataTransportStreamRangeReader);\n\n            this._stream = stream;\n            this._begin = begin;\n            this._end = end;\n            this._queuedChunk = null;\n            this._requests = [];\n            this._done = false;\n            this.onProgress = null;\n          }\n\n          _createClass(PDFDataTransportStreamRangeReader, [{\n            key: \"_enqueue\",\n            value: function _enqueue(chunk) {\n              if (this._done) {\n                return;\n              }\n\n              if (this._requests.length === 0) {\n                this._queuedChunk = chunk;\n              } else {\n                var requestsCapability = this._requests.shift();\n\n                requestsCapability.resolve({\n                  value: chunk,\n                  done: false\n                });\n\n                var _iterator36 = _createForOfIteratorHelper(this._requests),\n                    _step36;\n\n                try {\n                  for (_iterator36.s(); !(_step36 = _iterator36.n()).done;) {\n                    var requestCapability = _step36.value;\n                    requestCapability.resolve({\n                      value: undefined,\n                      done: true\n                    });\n                  }\n                } catch (err) {\n                  _iterator36.e(err);\n                } finally {\n                  _iterator36.f();\n                }\n\n                this._requests.length = 0;\n              }\n\n              this._done = true;\n\n              this._stream._removeRangeReader(this);\n            }\n          }, {\n            key: \"read\",\n            value: function () {\n              var _read2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n                var chunk, requestCapability;\n                return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        if (!this._queuedChunk) {\n                          _context9.next = 4;\n                          break;\n                        }\n\n                        chunk = this._queuedChunk;\n                        this._queuedChunk = null;\n                        return _context9.abrupt(\"return\", {\n                          value: chunk,\n                          done: false\n                        });\n\n                      case 4:\n                        if (!this._done) {\n                          _context9.next = 6;\n                          break;\n                        }\n\n                        return _context9.abrupt(\"return\", {\n                          value: undefined,\n                          done: true\n                        });\n\n                      case 6:\n                        requestCapability = (0, _util.createPromiseCapability)();\n\n                        this._requests.push(requestCapability);\n\n                        return _context9.abrupt(\"return\", requestCapability.promise);\n\n                      case 9:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9, this);\n              }));\n\n              function read() {\n                return _read2.apply(this, arguments);\n              }\n\n              return read;\n            }()\n          }, {\n            key: \"cancel\",\n            value: function cancel(reason) {\n              this._done = true;\n\n              var _iterator37 = _createForOfIteratorHelper(this._requests),\n                  _step37;\n\n              try {\n                for (_iterator37.s(); !(_step37 = _iterator37.n()).done;) {\n                  var requestCapability = _step37.value;\n                  requestCapability.resolve({\n                    value: undefined,\n                    done: true\n                  });\n                }\n              } catch (err) {\n                _iterator37.e(err);\n              } finally {\n                _iterator37.f();\n              }\n\n              this._requests.length = 0;\n\n              this._stream._removeRangeReader(this);\n            }\n          }, {\n            key: \"isStreamingSupported\",\n            get: function get() {\n              return false;\n            }\n          }]);\n\n          return PDFDataTransportStreamRangeReader;\n        }();\n        /***/\n\n      },\n      /* 17 */\n\n      /***/\n      function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.AnnotationLayer = void 0;\n\n        var _display_utils = __w_pdfjs_require__(1);\n\n        var _util = __w_pdfjs_require__(2);\n\n        var _annotation_storage = __w_pdfjs_require__(8);\n\n        var _scripting_utils = __w_pdfjs_require__(18);\n\n        var AnnotationElementFactory = /*#__PURE__*/function () {\n          function AnnotationElementFactory() {\n            _classCallCheck(this, AnnotationElementFactory);\n          }\n\n          _createClass(AnnotationElementFactory, null, [{\n            key: \"create\",\n            value: function create(parameters) {\n              var subtype = parameters.data.annotationType;\n\n              switch (subtype) {\n                case _util.AnnotationType.LINK:\n                  return new LinkAnnotationElement(parameters);\n\n                case _util.AnnotationType.TEXT:\n                  return new TextAnnotationElement(parameters);\n\n                case _util.AnnotationType.WIDGET:\n                  var fieldType = parameters.data.fieldType;\n\n                  switch (fieldType) {\n                    case \"Tx\":\n                      return new TextWidgetAnnotationElement(parameters);\n\n                    case \"Btn\":\n                      if (parameters.data.radioButton) {\n                        return new RadioButtonWidgetAnnotationElement(parameters);\n                      } else if (parameters.data.checkBox) {\n                        return new CheckboxWidgetAnnotationElement(parameters);\n                      }\n\n                      return new PushButtonWidgetAnnotationElement(parameters);\n\n                    case \"Ch\":\n                      return new ChoiceWidgetAnnotationElement(parameters);\n                  }\n\n                  return new WidgetAnnotationElement(parameters);\n\n                case _util.AnnotationType.POPUP:\n                  return new PopupAnnotationElement(parameters);\n\n                case _util.AnnotationType.FREETEXT:\n                  return new FreeTextAnnotationElement(parameters);\n\n                case _util.AnnotationType.LINE:\n                  return new LineAnnotationElement(parameters);\n\n                case _util.AnnotationType.SQUARE:\n                  return new SquareAnnotationElement(parameters);\n\n                case _util.AnnotationType.CIRCLE:\n                  return new CircleAnnotationElement(parameters);\n\n                case _util.AnnotationType.POLYLINE:\n                  return new PolylineAnnotationElement(parameters);\n\n                case _util.AnnotationType.CARET:\n                  return new CaretAnnotationElement(parameters);\n\n                case _util.AnnotationType.INK:\n                  return new InkAnnotationElement(parameters);\n\n                case _util.AnnotationType.POLYGON:\n                  return new PolygonAnnotationElement(parameters);\n\n                case _util.AnnotationType.HIGHLIGHT:\n                  return new HighlightAnnotationElement(parameters);\n\n                case _util.AnnotationType.UNDERLINE:\n                  return new UnderlineAnnotationElement(parameters);\n\n                case _util.AnnotationType.SQUIGGLY:\n                  return new SquigglyAnnotationElement(parameters);\n\n                case _util.AnnotationType.STRIKEOUT:\n                  return new StrikeOutAnnotationElement(parameters);\n\n                case _util.AnnotationType.STAMP:\n                  return new StampAnnotationElement(parameters);\n\n                case _util.AnnotationType.FILEATTACHMENT:\n                  return new FileAttachmentAnnotationElement(parameters);\n\n                default:\n                  return new AnnotationElement(parameters);\n              }\n            }\n          }]);\n\n          return AnnotationElementFactory;\n        }();\n\n        var AnnotationElement = /*#__PURE__*/function () {\n          function AnnotationElement(parameters) {\n            var _ref33 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n                _ref33$isRenderable = _ref33.isRenderable,\n                isRenderable = _ref33$isRenderable === void 0 ? false : _ref33$isRenderable,\n                _ref33$ignoreBorder = _ref33.ignoreBorder,\n                ignoreBorder = _ref33$ignoreBorder === void 0 ? false : _ref33$ignoreBorder,\n                _ref33$createQuadrila = _ref33.createQuadrilaterals,\n                createQuadrilaterals = _ref33$createQuadrila === void 0 ? false : _ref33$createQuadrila;\n\n            _classCallCheck(this, AnnotationElement);\n\n            this.isRenderable = isRenderable;\n            this.data = parameters.data;\n            this.layer = parameters.layer;\n            this.page = parameters.page;\n            this.viewport = parameters.viewport;\n            this.linkService = parameters.linkService;\n            this.downloadManager = parameters.downloadManager;\n            this.imageResourcesPath = parameters.imageResourcesPath;\n            this.renderInteractiveForms = parameters.renderInteractiveForms;\n            this.svgFactory = parameters.svgFactory;\n            this.annotationStorage = parameters.annotationStorage;\n            this.enableScripting = parameters.enableScripting;\n            this.hasJSActions = parameters.hasJSActions;\n            this._mouseState = parameters.mouseState;\n\n            if (isRenderable) {\n              this.container = this._createContainer(ignoreBorder);\n            }\n\n            if (createQuadrilaterals) {\n              this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n            }\n          }\n\n          _createClass(AnnotationElement, [{\n            key: \"_createContainer\",\n            value: function _createContainer() {\n              var ignoreBorder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n              var data = this.data,\n                  page = this.page,\n                  viewport = this.viewport;\n              var container = document.createElement(\"section\");\n              var width = data.rect[2] - data.rect[0];\n              var height = data.rect[3] - data.rect[1];\n              container.setAttribute(\"data-annotation-id\", data.id);\n\n              var rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n\n              container.style.transform = \"matrix(\".concat(viewport.transform.join(\",\"), \")\");\n              container.style.transformOrigin = \"\".concat(-rect[0], \"px \").concat(-rect[1], \"px\");\n\n              if (!ignoreBorder && data.borderStyle.width > 0) {\n                container.style.borderWidth = \"\".concat(data.borderStyle.width, \"px\");\n\n                if (data.borderStyle.style !== _util.AnnotationBorderStyleType.UNDERLINE) {\n                  width = width - 2 * data.borderStyle.width;\n                  height = height - 2 * data.borderStyle.width;\n                }\n\n                var horizontalRadius = data.borderStyle.horizontalCornerRadius;\n                var verticalRadius = data.borderStyle.verticalCornerRadius;\n\n                if (horizontalRadius > 0 || verticalRadius > 0) {\n                  var radius = \"\".concat(horizontalRadius, \"px / \").concat(verticalRadius, \"px\");\n                  container.style.borderRadius = radius;\n                }\n\n                switch (data.borderStyle.style) {\n                  case _util.AnnotationBorderStyleType.SOLID:\n                    container.style.borderStyle = \"solid\";\n                    break;\n\n                  case _util.AnnotationBorderStyleType.DASHED:\n                    container.style.borderStyle = \"dashed\";\n                    break;\n\n                  case _util.AnnotationBorderStyleType.BEVELED:\n                    (0, _util.warn)(\"Unimplemented border style: beveled\");\n                    break;\n\n                  case _util.AnnotationBorderStyleType.INSET:\n                    (0, _util.warn)(\"Unimplemented border style: inset\");\n                    break;\n\n                  case _util.AnnotationBorderStyleType.UNDERLINE:\n                    container.style.borderBottomStyle = \"solid\";\n                    break;\n\n                  default:\n                    break;\n                }\n\n                if (data.color) {\n                  container.style.borderColor = _util.Util.makeHexColor(data.color[0] | 0, data.color[1] | 0, data.color[2] | 0);\n                } else {\n                  container.style.borderWidth = 0;\n                }\n              }\n\n              container.style.left = \"\".concat(rect[0], \"px\");\n              container.style.top = \"\".concat(rect[1], \"px\");\n              container.style.width = \"\".concat(width, \"px\");\n              container.style.height = \"\".concat(height, \"px\");\n              return container;\n            }\n          }, {\n            key: \"_createQuadrilaterals\",\n            value: function _createQuadrilaterals() {\n              var ignoreBorder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n              if (!this.data.quadPoints) {\n                return null;\n              }\n\n              var quadrilaterals = [];\n              var savedRect = this.data.rect;\n\n              var _iterator38 = _createForOfIteratorHelper(this.data.quadPoints),\n                  _step38;\n\n              try {\n                for (_iterator38.s(); !(_step38 = _iterator38.n()).done;) {\n                  var quadPoint = _step38.value;\n                  this.data.rect = [quadPoint[2].x, quadPoint[2].y, quadPoint[1].x, quadPoint[1].y];\n                  quadrilaterals.push(this._createContainer(ignoreBorder));\n                }\n              } catch (err) {\n                _iterator38.e(err);\n              } finally {\n                _iterator38.f();\n              }\n\n              this.data.rect = savedRect;\n              return quadrilaterals;\n            }\n          }, {\n            key: \"_createPopup\",\n            value: function _createPopup(trigger, data) {\n              var container = this.container;\n\n              if (this.quadrilaterals) {\n                trigger = trigger || this.quadrilaterals;\n                container = this.quadrilaterals[0];\n              }\n\n              if (!trigger) {\n                trigger = document.createElement(\"div\");\n                trigger.style.height = container.style.height;\n                trigger.style.width = container.style.width;\n                container.appendChild(trigger);\n              }\n\n              var popupElement = new PopupElement({\n                container: container,\n                trigger: trigger,\n                color: data.color,\n                title: data.title,\n                modificationDate: data.modificationDate,\n                contents: data.contents,\n                hideWrapper: true\n              });\n              var popup = popupElement.render();\n              popup.style.left = container.style.width;\n              container.appendChild(popup);\n            }\n          }, {\n            key: \"_renderQuadrilaterals\",\n            value: function _renderQuadrilaterals(className) {\n              var _iterator39 = _createForOfIteratorHelper(this.quadrilaterals),\n                  _step39;\n\n              try {\n                for (_iterator39.s(); !(_step39 = _iterator39.n()).done;) {\n                  var quadrilateral = _step39.value;\n                  quadrilateral.className = className;\n                }\n              } catch (err) {\n                _iterator39.e(err);\n              } finally {\n                _iterator39.f();\n              }\n\n              return this.quadrilaterals;\n            }\n          }, {\n            key: \"render\",\n            value: function render() {\n              (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n            }\n          }]);\n\n          return AnnotationElement;\n        }();\n\n        var LinkAnnotationElement = /*#__PURE__*/function (_AnnotationElement) {\n          _inherits(LinkAnnotationElement, _AnnotationElement);\n\n          var _super17 = _createSuper(LinkAnnotationElement);\n\n          function LinkAnnotationElement(parameters) {\n            _classCallCheck(this, LinkAnnotationElement);\n\n            var isRenderable = !!(parameters.data.url || parameters.data.dest || parameters.data.action || parameters.data.isTooltipOnly || parameters.data.actions && (parameters.data.actions.Action || parameters.data.actions[\"Mouse Up\"] || parameters.data.actions[\"Mouse Down\"]));\n            return _super17.call(this, parameters, {\n              isRenderable: isRenderable,\n              createQuadrilaterals: true\n            });\n          }\n\n          _createClass(LinkAnnotationElement, [{\n            key: \"render\",\n            value: function render() {\n              var data = this.data,\n                  linkService = this.linkService;\n              var link = document.createElement(\"a\");\n\n              if (data.url) {\n                (0, _display_utils.addLinkAttributes)(link, {\n                  url: data.url,\n                  target: data.newWindow ? _display_utils.LinkTarget.BLANK : linkService.externalLinkTarget,\n                  rel: linkService.externalLinkRel,\n                  enabled: linkService.externalLinkEnabled\n                });\n              } else if (data.action) {\n                this._bindNamedAction(link, data.action);\n              } else if (data.dest) {\n                this._bindLink(link, data.dest);\n              } else if (data.actions && (data.actions.Action || data.actions[\"Mouse Up\"] || data.actions[\"Mouse Down\"]) && this.enableScripting && this.hasJSActions) {\n                this._bindJSAction(link, data);\n              } else {\n                this._bindLink(link, \"\");\n              }\n\n              if (this.quadrilaterals) {\n                return this._renderQuadrilaterals(\"linkAnnotation\").map(function (quadrilateral, index) {\n                  var linkElement = index === 0 ? link : link.cloneNode();\n                  quadrilateral.appendChild(linkElement);\n                  return quadrilateral;\n                });\n              }\n\n              this.container.className = \"linkAnnotation\";\n              this.container.appendChild(link);\n              return this.container;\n            }\n          }, {\n            key: \"_bindLink\",\n            value: function _bindLink(link, destination) {\n              var _this33 = this;\n\n              link.href = this.linkService.getDestinationHash(destination);\n\n              link.onclick = function () {\n                if (destination) {\n                  _this33.linkService.goToDestination(destination);\n                }\n\n                return false;\n              };\n\n              if (destination || destination === \"\") {\n                link.className = \"internalLink\";\n              }\n            }\n          }, {\n            key: \"_bindNamedAction\",\n            value: function _bindNamedAction(link, action) {\n              var _this34 = this;\n\n              link.href = this.linkService.getAnchorUrl(\"\");\n\n              link.onclick = function () {\n                _this34.linkService.executeNamedAction(action);\n\n                return false;\n              };\n\n              link.className = \"internalLink\";\n            }\n          }, {\n            key: \"_bindJSAction\",\n            value: function _bindJSAction(link, data) {\n              var _this35 = this;\n\n              link.href = this.linkService.getAnchorUrl(\"\");\n              var map = new Map([[\"Action\", \"onclick\"], [\"Mouse Up\", \"onmouseup\"], [\"Mouse Down\", \"onmousedown\"]]);\n\n              var _loop = function _loop() {\n                var name = _Object$keys[_i6];\n                var jsName = map.get(name);\n\n                if (!jsName) {\n                  return \"continue\";\n                }\n\n                link[jsName] = function () {\n                  var _this35$linkService$e;\n\n                  (_this35$linkService$e = _this35.linkService.eventBus) === null || _this35$linkService$e === void 0 ? void 0 : _this35$linkService$e.dispatch(\"dispatcheventinsandbox\", {\n                    source: _this35,\n                    detail: {\n                      id: data.id,\n                      name: name\n                    }\n                  });\n                  return false;\n                };\n              };\n\n              for (var _i6 = 0, _Object$keys = Object.keys(data.actions); _i6 < _Object$keys.length; _i6++) {\n                var _ret = _loop();\n\n                if (_ret === \"continue\") continue;\n              }\n\n              link.className = \"internalLink\";\n            }\n          }]);\n\n          return LinkAnnotationElement;\n        }(AnnotationElement);\n\n        var TextAnnotationElement = /*#__PURE__*/function (_AnnotationElement2) {\n          _inherits(TextAnnotationElement, _AnnotationElement2);\n\n          var _super18 = _createSuper(TextAnnotationElement);\n\n          function TextAnnotationElement(parameters) {\n            _classCallCheck(this, TextAnnotationElement);\n\n            var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n            return _super18.call(this, parameters, {\n              isRenderable: isRenderable\n            });\n          }\n\n          _createClass(TextAnnotationElement, [{\n            key: \"render\",\n            value: function render() {\n              this.container.className = \"textAnnotation\";\n              var image = document.createElement(\"img\");\n              image.style.height = this.container.style.height;\n              image.style.width = this.container.style.width;\n              image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n              image.alt = \"[{{type}} Annotation]\";\n              image.dataset.l10nId = \"text_annotation_type\";\n              image.dataset.l10nArgs = JSON.stringify({\n                type: this.data.name\n              });\n\n              if (!this.data.hasPopup) {\n                this._createPopup(image, this.data);\n              }\n\n              this.container.appendChild(image);\n              return this.container;\n            }\n          }]);\n\n          return TextAnnotationElement;\n        }(AnnotationElement);\n\n        var WidgetAnnotationElement = /*#__PURE__*/function (_AnnotationElement3) {\n          _inherits(WidgetAnnotationElement, _AnnotationElement3);\n\n          var _super19 = _createSuper(WidgetAnnotationElement);\n\n          function WidgetAnnotationElement() {\n            _classCallCheck(this, WidgetAnnotationElement);\n\n            return _super19.apply(this, arguments);\n          }\n\n          _createClass(WidgetAnnotationElement, [{\n            key: \"render\",\n            value: function render() {\n              if (this.data.alternativeText) {\n                this.container.title = this.data.alternativeText;\n              }\n\n              return this.container;\n            }\n          }, {\n            key: \"_getKeyModifier\",\n            value: function _getKeyModifier(event) {\n              return navigator.platform.includes(\"Win\") && event.ctrlKey || navigator.platform.includes(\"Mac\") && event.metaKey;\n            }\n          }, {\n            key: \"_setEventListener\",\n            value: function _setEventListener(element, baseName, eventName, valueGetter) {\n              var _this36 = this;\n\n              if (baseName.includes(\"mouse\")) {\n                element.addEventListener(baseName, function (event) {\n                  var _this36$linkService$e;\n\n                  (_this36$linkService$e = _this36.linkService.eventBus) === null || _this36$linkService$e === void 0 ? void 0 : _this36$linkService$e.dispatch(\"dispatcheventinsandbox\", {\n                    source: _this36,\n                    detail: {\n                      id: _this36.data.id,\n                      name: eventName,\n                      value: valueGetter(event),\n                      shift: event.shiftKey,\n                      modifier: _this36._getKeyModifier(event)\n                    }\n                  });\n                });\n              } else {\n                element.addEventListener(baseName, function (event) {\n                  var _this36$linkService$e2;\n\n                  (_this36$linkService$e2 = _this36.linkService.eventBus) === null || _this36$linkService$e2 === void 0 ? void 0 : _this36$linkService$e2.dispatch(\"dispatcheventinsandbox\", {\n                    source: _this36,\n                    detail: {\n                      id: _this36.data.id,\n                      name: eventName,\n                      value: event.target.checked\n                    }\n                  });\n                });\n              }\n            }\n          }, {\n            key: \"_setEventListeners\",\n            value: function _setEventListeners(element, names, getter) {\n              var _iterator40 = _createForOfIteratorHelper(names),\n                  _step40;\n\n              try {\n                for (_iterator40.s(); !(_step40 = _iterator40.n()).done;) {\n                  var _this$data$actions;\n\n                  var _step40$value = _slicedToArray(_step40.value, 2),\n                      baseName = _step40$value[0],\n                      eventName = _step40$value[1];\n\n                  if (eventName === \"Action\" || ((_this$data$actions = this.data.actions) === null || _this$data$actions === void 0 ? void 0 : _this$data$actions[eventName])) {\n                    this._setEventListener(element, baseName, eventName, getter);\n                  }\n                }\n              } catch (err) {\n                _iterator40.e(err);\n              } finally {\n                _iterator40.f();\n              }\n            }\n          }, {\n            key: \"_dispatchEventFromSandbox\",\n            value: function _dispatchEventFromSandbox(actions, jsEvent) {\n              var _this37 = this;\n\n              var setColor = function setColor(jsName, styleName, event) {\n                var color = event.detail[jsName];\n                event.target.style[styleName] = _scripting_utils.ColorConverters[\"\".concat(color[0], \"_HTML\")](color.slice(1));\n              };\n\n              var commonActions = {\n                display: function display(event) {\n                  var hidden = event.detail.display % 2 === 1;\n                  event.target.style.visibility = hidden ? \"hidden\" : \"visible\";\n\n                  _this37.annotationStorage.setValue(_this37.data.id, {\n                    hidden: hidden,\n                    print: event.detail.display === 0 || event.detail.display === 3\n                  });\n                },\n                print: function print(event) {\n                  _this37.annotationStorage.setValue(_this37.data.id, {\n                    print: event.detail.print\n                  });\n                },\n                hidden: function hidden(event) {\n                  event.target.style.visibility = event.detail.hidden ? \"hidden\" : \"visible\";\n\n                  _this37.annotationStorage.setValue(_this37.data.id, {\n                    hidden: event.detail.hidden\n                  });\n                },\n                focus: function focus(event) {\n                  setTimeout(function () {\n                    return event.target.focus({\n                      preventScroll: false\n                    });\n                  }, 0);\n                },\n                userName: function userName(event) {\n                  event.target.title = event.detail.userName;\n                },\n                readonly: function readonly(event) {\n                  if (event.detail.readonly) {\n                    event.target.setAttribute(\"readonly\", \"\");\n                  } else {\n                    event.target.removeAttribute(\"readonly\");\n                  }\n                },\n                required: function required(event) {\n                  if (event.detail.required) {\n                    event.target.setAttribute(\"required\", \"\");\n                  } else {\n                    event.target.removeAttribute(\"required\");\n                  }\n                },\n                bgColor: function bgColor(event) {\n                  setColor(\"bgColor\", \"backgroundColor\", event);\n                },\n                fillColor: function fillColor(event) {\n                  setColor(\"fillColor\", \"backgroundColor\", event);\n                },\n                fgColor: function fgColor(event) {\n                  setColor(\"fgColor\", \"color\", event);\n                },\n                textColor: function textColor(event) {\n                  setColor(\"textColor\", \"color\", event);\n                },\n                borderColor: function borderColor(event) {\n                  setColor(\"borderColor\", \"borderColor\", event);\n                },\n                strokeColor: function strokeColor(event) {\n                  setColor(\"strokeColor\", \"borderColor\", event);\n                }\n              };\n\n              for (var _i7 = 0, _Object$keys2 = Object.keys(jsEvent.detail); _i7 < _Object$keys2.length; _i7++) {\n                var name = _Object$keys2[_i7];\n                var action = actions[name] || commonActions[name];\n\n                if (action) {\n                  action(jsEvent);\n                }\n              }\n            }\n          }]);\n\n          return WidgetAnnotationElement;\n        }(AnnotationElement);\n\n        var TextWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem) {\n          _inherits(TextWidgetAnnotationElement, _WidgetAnnotationElem);\n\n          var _super20 = _createSuper(TextWidgetAnnotationElement);\n\n          function TextWidgetAnnotationElement(parameters) {\n            _classCallCheck(this, TextWidgetAnnotationElement);\n\n            var isRenderable = parameters.renderInteractiveForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n            return _super20.call(this, parameters, {\n              isRenderable: isRenderable\n            });\n          }\n\n          _createClass(TextWidgetAnnotationElement, [{\n            key: \"setPropertyOnSiblings\",\n            value: function setPropertyOnSiblings(base, key, value, keyInStorage) {\n              var storage = this.annotationStorage;\n\n              var _iterator41 = _createForOfIteratorHelper(document.getElementsByName(base.name)),\n                  _step41;\n\n              try {\n                for (_iterator41.s(); !(_step41 = _iterator41.n()).done;) {\n                  var element = _step41.value;\n\n                  if (element !== base) {\n                    element[key] = value;\n                    var data = Object.create(null);\n                    data[keyInStorage] = value;\n                    storage.setValue(element.getAttribute(\"id\"), data);\n                  }\n                }\n              } catch (err) {\n                _iterator41.e(err);\n              } finally {\n                _iterator41.f();\n              }\n            }\n          }, {\n            key: \"render\",\n            value: function render() {\n              var _this38 = this;\n\n              var storage = this.annotationStorage;\n              var id = this.data.id;\n              this.container.className = \"textWidgetAnnotation\";\n              var element = null;\n\n              if (this.renderInteractiveForms) {\n                var storedData = storage.getValue(id, {\n                  value: this.data.fieldValue,\n                  valueAsString: this.data.fieldValue\n                });\n                var textContent = storedData.valueAsString || storedData.value || \"\";\n                var elementData = {\n                  userValue: null,\n                  formattedValue: null,\n                  beforeInputSelectionRange: null,\n                  beforeInputValue: null\n                };\n\n                if (this.data.multiLine) {\n                  element = document.createElement(\"textarea\");\n                  element.textContent = textContent;\n                } else {\n                  element = document.createElement(\"input\");\n                  element.type = \"text\";\n                  element.setAttribute(\"value\", textContent);\n                }\n\n                elementData.userValue = textContent;\n                element.setAttribute(\"id\", id);\n                element.addEventListener(\"input\", function (event) {\n                  storage.setValue(id, {\n                    value: event.target.value\n                  });\n\n                  _this38.setPropertyOnSiblings(element, \"value\", event.target.value, \"value\");\n                });\n\n                var blurListener = function blurListener(event) {\n                  if (elementData.formattedValue) {\n                    event.target.value = elementData.formattedValue;\n                  }\n\n                  event.target.scrollLeft = 0;\n                  elementData.beforeInputSelectionRange = null;\n                };\n\n                if (this.enableScripting && this.hasJSActions) {\n                  var _this$data$actions2;\n\n                  element.addEventListener(\"focus\", function (event) {\n                    if (elementData.userValue) {\n                      event.target.value = elementData.userValue;\n                    }\n                  });\n                  element.addEventListener(\"updatefromsandbox\", function (jsEvent) {\n                    var actions = {\n                      value: function value(event) {\n                        elementData.userValue = event.detail.value || \"\";\n                        storage.setValue(id, {\n                          value: elementData.userValue.toString()\n                        });\n\n                        if (!elementData.formattedValue) {\n                          event.target.value = elementData.userValue;\n                        }\n                      },\n                      valueAsString: function valueAsString(event) {\n                        elementData.formattedValue = event.detail.valueAsString || \"\";\n\n                        if (event.target !== document.activeElement) {\n                          event.target.value = elementData.formattedValue;\n                        }\n\n                        storage.setValue(id, {\n                          formattedValue: elementData.formattedValue\n                        });\n                      },\n                      selRange: function selRange(event) {\n                        var _event$detail$selRang = _slicedToArray(event.detail.selRange, 2),\n                            selStart = _event$detail$selRang[0],\n                            selEnd = _event$detail$selRang[1];\n\n                        if (selStart >= 0 && selEnd < event.target.value.length) {\n                          event.target.setSelectionRange(selStart, selEnd);\n                        }\n                      }\n                    };\n\n                    _this38._dispatchEventFromSandbox(actions, jsEvent);\n                  });\n                  element.addEventListener(\"keydown\", function (event) {\n                    var _this38$linkService$e;\n\n                    elementData.beforeInputValue = event.target.value;\n                    var commitKey = -1;\n\n                    if (event.key === \"Escape\") {\n                      commitKey = 0;\n                    } else if (event.key === \"Enter\") {\n                      commitKey = 2;\n                    } else if (event.key === \"Tab\") {\n                      commitKey = 3;\n                    }\n\n                    if (commitKey === -1) {\n                      return;\n                    }\n\n                    elementData.userValue = event.target.value;\n                    (_this38$linkService$e = _this38.linkService.eventBus) === null || _this38$linkService$e === void 0 ? void 0 : _this38$linkService$e.dispatch(\"dispatcheventinsandbox\", {\n                      source: _this38,\n                      detail: {\n                        id: id,\n                        name: \"Keystroke\",\n                        value: event.target.value,\n                        willCommit: true,\n                        commitKey: commitKey,\n                        selStart: event.target.selectionStart,\n                        selEnd: event.target.selectionEnd\n                      }\n                    });\n                  });\n                  var _blurListener = blurListener;\n                  blurListener = null;\n                  element.addEventListener(\"blur\", function (event) {\n                    if (_this38._mouseState.isDown) {\n                      var _this38$linkService$e2;\n\n                      elementData.userValue = event.target.value;\n                      (_this38$linkService$e2 = _this38.linkService.eventBus) === null || _this38$linkService$e2 === void 0 ? void 0 : _this38$linkService$e2.dispatch(\"dispatcheventinsandbox\", {\n                        source: _this38,\n                        detail: {\n                          id: id,\n                          name: \"Keystroke\",\n                          value: event.target.value,\n                          willCommit: true,\n                          commitKey: 1,\n                          selStart: event.target.selectionStart,\n                          selEnd: event.target.selectionEnd\n                        }\n                      });\n                    }\n\n                    _blurListener(event);\n                  });\n                  element.addEventListener(\"mousedown\", function (event) {\n                    elementData.beforeInputValue = event.target.value;\n                    elementData.beforeInputSelectionRange = null;\n                  });\n                  element.addEventListener(\"keyup\", function (event) {\n                    if (event.target.selectionStart === event.target.selectionEnd) {\n                      elementData.beforeInputSelectionRange = null;\n                    }\n                  });\n                  element.addEventListener(\"select\", function (event) {\n                    elementData.beforeInputSelectionRange = [event.target.selectionStart, event.target.selectionEnd];\n                  });\n\n                  if ((_this$data$actions2 = this.data.actions) === null || _this$data$actions2 === void 0 ? void 0 : _this$data$actions2.Keystroke) {\n                    element.addEventListener(\"input\", function (event) {\n                      var _this38$linkService$e3;\n\n                      var selStart = -1;\n                      var selEnd = -1;\n\n                      if (elementData.beforeInputSelectionRange) {\n                        var _elementData$beforeIn = _slicedToArray(elementData.beforeInputSelectionRange, 2);\n\n                        selStart = _elementData$beforeIn[0];\n                        selEnd = _elementData$beforeIn[1];\n                      }\n\n                      (_this38$linkService$e3 = _this38.linkService.eventBus) === null || _this38$linkService$e3 === void 0 ? void 0 : _this38$linkService$e3.dispatch(\"dispatcheventinsandbox\", {\n                        source: _this38,\n                        detail: {\n                          id: id,\n                          name: \"Keystroke\",\n                          value: elementData.beforeInputValue,\n                          change: event.data,\n                          willCommit: false,\n                          selStart: selStart,\n                          selEnd: selEnd\n                        }\n                      });\n                    });\n                  }\n\n                  this._setEventListeners(element, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], function (event) {\n                    return event.target.value;\n                  });\n                }\n\n                if (blurListener) {\n                  element.addEventListener(\"blur\", blurListener);\n                }\n\n                element.disabled = this.data.readOnly;\n                element.name = this.data.fieldName;\n\n                if (this.data.maxLen !== null) {\n                  element.maxLength = this.data.maxLen;\n                }\n\n                if (this.data.comb) {\n                  var fieldWidth = this.data.rect[2] - this.data.rect[0];\n                  var combWidth = fieldWidth / this.data.maxLen;\n                  element.classList.add(\"comb\");\n                  element.style.letterSpacing = \"calc(\".concat(combWidth, \"px - 1ch)\");\n                }\n              } else {\n                element = document.createElement(\"div\");\n                element.textContent = this.data.fieldValue;\n                element.style.verticalAlign = \"middle\";\n                element.style.display = \"table-cell\";\n              }\n\n              this._setTextStyle(element);\n\n              this.container.appendChild(element);\n              return this.container;\n            }\n          }, {\n            key: \"_setTextStyle\",\n            value: function _setTextStyle(element) {\n              var TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n              var _this$data$defaultApp = this.data.defaultAppearanceData,\n                  fontSize = _this$data$defaultApp.fontSize,\n                  fontColor = _this$data$defaultApp.fontColor;\n              var style = element.style;\n\n              if (fontSize) {\n                style.fontSize = \"\".concat(fontSize, \"px\");\n              }\n\n              style.color = _util.Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n              if (this.data.textAlignment !== null) {\n                style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n              }\n            }\n          }]);\n\n          return TextWidgetAnnotationElement;\n        }(WidgetAnnotationElement);\n\n        var CheckboxWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem2) {\n          _inherits(CheckboxWidgetAnnotationElement, _WidgetAnnotationElem2);\n\n          var _super21 = _createSuper(CheckboxWidgetAnnotationElement);\n\n          function CheckboxWidgetAnnotationElement(parameters) {\n            _classCallCheck(this, CheckboxWidgetAnnotationElement);\n\n            return _super21.call(this, parameters, {\n              isRenderable: parameters.renderInteractiveForms\n            });\n          }\n\n          _createClass(CheckboxWidgetAnnotationElement, [{\n            key: \"render\",\n            value: function render() {\n              var _this39 = this;\n\n              var storage = this.annotationStorage;\n              var data = this.data;\n              var id = data.id;\n              var value = storage.getValue(id, {\n                value: data.fieldValue && (data.exportValue && data.exportValue === data.fieldValue || !data.exportValue && data.fieldValue !== \"Off\")\n              }).value;\n\n              if (typeof value === \"string\") {\n                value = value !== \"Off\";\n                storage.setValue(id, {\n                  value: value\n                });\n              }\n\n              this.container.className = \"buttonWidgetAnnotation checkBox\";\n              var element = document.createElement(\"input\");\n              element.disabled = data.readOnly;\n              element.type = \"checkbox\";\n              element.name = this.data.fieldName;\n\n              if (value) {\n                element.setAttribute(\"checked\", true);\n              }\n\n              element.setAttribute(\"id\", id);\n              element.addEventListener(\"change\", function (event) {\n                var name = event.target.name;\n\n                var _iterator42 = _createForOfIteratorHelper(document.getElementsByName(name)),\n                    _step42;\n\n                try {\n                  for (_iterator42.s(); !(_step42 = _iterator42.n()).done;) {\n                    var checkbox = _step42.value;\n\n                    if (checkbox !== event.target) {\n                      checkbox.checked = false;\n                      storage.setValue(checkbox.parentNode.getAttribute(\"data-annotation-id\"), {\n                        value: false\n                      });\n                    }\n                  }\n                } catch (err) {\n                  _iterator42.e(err);\n                } finally {\n                  _iterator42.f();\n                }\n\n                storage.setValue(id, {\n                  value: event.target.checked\n                });\n              });\n\n              if (this.enableScripting && this.hasJSActions) {\n                element.addEventListener(\"updatefromsandbox\", function (jsEvent) {\n                  var actions = {\n                    value: function value(event) {\n                      event.target.checked = event.detail.value !== \"Off\";\n                      storage.setValue(id, {\n                        value: event.target.checked\n                      });\n                    }\n                  };\n\n                  _this39._dispatchEventFromSandbox(actions, jsEvent);\n                });\n\n                this._setEventListeners(element, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], function (event) {\n                  return event.target.checked;\n                });\n              }\n\n              this.container.appendChild(element);\n              return this.container;\n            }\n          }]);\n\n          return CheckboxWidgetAnnotationElement;\n        }(WidgetAnnotationElement);\n\n        var RadioButtonWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem3) {\n          _inherits(RadioButtonWidgetAnnotationElement, _WidgetAnnotationElem3);\n\n          var _super22 = _createSuper(RadioButtonWidgetAnnotationElement);\n\n          function RadioButtonWidgetAnnotationElement(parameters) {\n            _classCallCheck(this, RadioButtonWidgetAnnotationElement);\n\n            return _super22.call(this, parameters, {\n              isRenderable: parameters.renderInteractiveForms\n            });\n          }\n\n          _createClass(RadioButtonWidgetAnnotationElement, [{\n            key: \"render\",\n            value: function render() {\n              var _this40 = this;\n\n              this.container.className = \"buttonWidgetAnnotation radioButton\";\n              var storage = this.annotationStorage;\n              var data = this.data;\n              var id = data.id;\n              var value = storage.getValue(id, {\n                value: data.fieldValue === data.buttonValue\n              }).value;\n\n              if (typeof value === \"string\") {\n                value = value !== data.buttonValue;\n                storage.setValue(id, {\n                  value: value\n                });\n              }\n\n              var element = document.createElement(\"input\");\n              element.disabled = data.readOnly;\n              element.type = \"radio\";\n              element.name = data.fieldName;\n\n              if (value) {\n                element.setAttribute(\"checked\", true);\n              }\n\n              element.setAttribute(\"id\", id);\n              element.addEventListener(\"change\", function (event) {\n                var target = event.target;\n\n                var _iterator43 = _createForOfIteratorHelper(document.getElementsByName(target.name)),\n                    _step43;\n\n                try {\n                  for (_iterator43.s(); !(_step43 = _iterator43.n()).done;) {\n                    var radio = _step43.value;\n\n                    if (radio !== target) {\n                      storage.setValue(radio.getAttribute(\"id\"), {\n                        value: false\n                      });\n                    }\n                  }\n                } catch (err) {\n                  _iterator43.e(err);\n                } finally {\n                  _iterator43.f();\n                }\n\n                storage.setValue(id, {\n                  value: target.checked\n                });\n              });\n\n              if (this.enableScripting && this.hasJSActions) {\n                var pdfButtonValue = data.buttonValue;\n                element.addEventListener(\"updatefromsandbox\", function (jsEvent) {\n                  var actions = {\n                    value: function value(event) {\n                      var checked = pdfButtonValue === event.detail.value;\n\n                      var _iterator44 = _createForOfIteratorHelper(document.getElementsByName(event.target.name)),\n                          _step44;\n\n                      try {\n                        for (_iterator44.s(); !(_step44 = _iterator44.n()).done;) {\n                          var radio = _step44.value;\n                          var radioId = radio.getAttribute(\"id\");\n                          radio.checked = radioId === id && checked;\n                          storage.setValue(radioId, {\n                            value: radio.checked\n                          });\n                        }\n                      } catch (err) {\n                        _iterator44.e(err);\n                      } finally {\n                        _iterator44.f();\n                      }\n                    }\n                  };\n\n                  _this40._dispatchEventFromSandbox(actions, jsEvent);\n                });\n\n                this._setEventListeners(element, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], function (event) {\n                  return event.target.checked;\n                });\n              }\n\n              this.container.appendChild(element);\n              return this.container;\n            }\n          }]);\n\n          return RadioButtonWidgetAnnotationElement;\n        }(WidgetAnnotationElement);\n\n        var PushButtonWidgetAnnotationElement = /*#__PURE__*/function (_LinkAnnotationElemen) {\n          _inherits(PushButtonWidgetAnnotationElement, _LinkAnnotationElemen);\n\n          var _super23 = _createSuper(PushButtonWidgetAnnotationElement);\n\n          function PushButtonWidgetAnnotationElement() {\n            _classCallCheck(this, PushButtonWidgetAnnotationElement);\n\n            return _super23.apply(this, arguments);\n          }\n\n          _createClass(PushButtonWidgetAnnotationElement, [{\n            key: \"render\",\n            value: function render() {\n              var container = _get(_getPrototypeOf(PushButtonWidgetAnnotationElement.prototype), \"render\", this).call(this);\n\n              container.className = \"buttonWidgetAnnotation pushButton\";\n\n              if (this.data.alternativeText) {\n                container.title = this.data.alternativeText;\n              }\n\n              return container;\n            }\n          }]);\n\n          return PushButtonWidgetAnnotationElement;\n        }(LinkAnnotationElement);\n\n        var ChoiceWidgetAnnotationElement = /*#__PURE__*/function (_WidgetAnnotationElem4) {\n          _inherits(ChoiceWidgetAnnotationElement, _WidgetAnnotationElem4);\n\n          var _super24 = _createSuper(ChoiceWidgetAnnotationElement);\n\n          function ChoiceWidgetAnnotationElement(parameters) {\n            _classCallCheck(this, ChoiceWidgetAnnotationElement);\n\n            return _super24.call(this, parameters, {\n              isRenderable: parameters.renderInteractiveForms\n            });\n          }\n\n          _createClass(ChoiceWidgetAnnotationElement, [{\n            key: \"render\",\n            value: function render() {\n              var _this41 = this;\n\n              this.container.className = \"choiceWidgetAnnotation\";\n              var storage = this.annotationStorage;\n              var id = this.data.id;\n              storage.getValue(id, {\n                value: this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined\n              });\n              var selectElement = document.createElement(\"select\");\n              selectElement.disabled = this.data.readOnly;\n              selectElement.name = this.data.fieldName;\n              selectElement.setAttribute(\"id\", id);\n\n              if (!this.data.combo) {\n                selectElement.size = this.data.options.length;\n\n                if (this.data.multiSelect) {\n                  selectElement.multiple = true;\n                }\n              }\n\n              var _iterator45 = _createForOfIteratorHelper(this.data.options),\n                  _step45;\n\n              try {\n                for (_iterator45.s(); !(_step45 = _iterator45.n()).done;) {\n                  var option = _step45.value;\n                  var optionElement = document.createElement(\"option\");\n                  optionElement.textContent = option.displayValue;\n                  optionElement.value = option.exportValue;\n\n                  if (this.data.fieldValue.includes(option.exportValue)) {\n                    optionElement.setAttribute(\"selected\", true);\n                  }\n\n                  selectElement.appendChild(optionElement);\n                }\n              } catch (err) {\n                _iterator45.e(err);\n              } finally {\n                _iterator45.f();\n              }\n\n              var getValue = function getValue(event, isExport) {\n                var name = isExport ? \"value\" : \"textContent\";\n                var options = event.target.options;\n\n                if (!event.target.multiple) {\n                  return options.selectedIndex === -1 ? null : options[options.selectedIndex][name];\n                }\n\n                return Array.prototype.filter.call(options, function (option) {\n                  return option.selected;\n                }).map(function (option) {\n                  return option[name];\n                });\n              };\n\n              var getItems = function getItems(event) {\n                var options = event.target.options;\n                return Array.prototype.map.call(options, function (option) {\n                  return {\n                    displayValue: option.textContent,\n                    exportValue: option.value\n                  };\n                });\n              };\n\n              if (this.enableScripting && this.hasJSActions) {\n                selectElement.addEventListener(\"updatefromsandbox\", function (jsEvent) {\n                  var actions = {\n                    value: function value(event) {\n                      var options = selectElement.options;\n                      var value = event.detail.value;\n                      var values = new Set(Array.isArray(value) ? value : [value]);\n                      Array.prototype.forEach.call(options, function (option) {\n                        option.selected = values.has(option.value);\n                      });\n                      storage.setValue(id, {\n                        value: getValue(event, true)\n                      });\n                    },\n                    multipleSelection: function multipleSelection(event) {\n                      selectElement.multiple = true;\n                    },\n                    remove: function remove(event) {\n                      var options = selectElement.options;\n                      var index = event.detail.remove;\n                      options[index].selected = false;\n                      selectElement.remove(index);\n\n                      if (options.length > 0) {\n                        var i = Array.prototype.findIndex.call(options, function (option) {\n                          return option.selected;\n                        });\n\n                        if (i === -1) {\n                          options[0].selected = true;\n                        }\n                      }\n\n                      storage.setValue(id, {\n                        value: getValue(event, true),\n                        items: getItems(event)\n                      });\n                    },\n                    clear: function clear(event) {\n                      while (selectElement.length !== 0) {\n                        selectElement.remove(0);\n                      }\n\n                      storage.setValue(id, {\n                        value: null,\n                        items: []\n                      });\n                    },\n                    insert: function insert(event) {\n                      var _event$detail$insert = event.detail.insert,\n                          index = _event$detail$insert.index,\n                          displayValue = _event$detail$insert.displayValue,\n                          exportValue = _event$detail$insert.exportValue;\n                      var optionElement = document.createElement(\"option\");\n                      optionElement.textContent = displayValue;\n                      optionElement.value = exportValue;\n                      selectElement.insertBefore(optionElement, selectElement.children[index]);\n                      storage.setValue(id, {\n                        value: getValue(event, true),\n                        items: getItems(event)\n                      });\n                    },\n                    items: function items(event) {\n                      var items = event.detail.items;\n\n                      while (selectElement.length !== 0) {\n                        selectElement.remove(0);\n                      }\n\n                      var _iterator46 = _createForOfIteratorHelper(items),\n                          _step46;\n\n                      try {\n                        for (_iterator46.s(); !(_step46 = _iterator46.n()).done;) {\n                          var item = _step46.value;\n                          var displayValue = item.displayValue,\n                              exportValue = item.exportValue;\n                          var optionElement = document.createElement(\"option\");\n                          optionElement.textContent = displayValue;\n                          optionElement.value = exportValue;\n                          selectElement.appendChild(optionElement);\n                        }\n                      } catch (err) {\n                        _iterator46.e(err);\n                      } finally {\n                        _iterator46.f();\n                      }\n\n                      if (selectElement.options.length > 0) {\n                        selectElement.options[0].selected = true;\n                      }\n\n                      storage.setValue(id, {\n                        value: getValue(event, true),\n                        items: getItems(event)\n                      });\n                    },\n                    indices: function indices(event) {\n                      var indices = new Set(event.detail.indices);\n                      var options = event.target.options;\n                      Array.prototype.forEach.call(options, function (option, i) {\n                        option.selected = indices.has(i);\n                      });\n                      storage.setValue(id, {\n                        value: getValue(event, true)\n                      });\n                    },\n                    editable: function editable(event) {\n                      event.target.disabled = !event.detail.editable;\n                    }\n                  };\n\n                  _this41._dispatchEventFromSandbox(actions, jsEvent);\n                });\n                selectElement.addEventListener(\"input\", function (event) {\n                  var _this41$linkService$e;\n\n                  var exportValue = getValue(event, true);\n                  var value = getValue(event, false);\n                  storage.setValue(id, {\n                    value: exportValue\n                  });\n                  (_this41$linkService$e = _this41.linkService.eventBus) === null || _this41$linkService$e === void 0 ? void 0 : _this41$linkService$e.dispatch(\"dispatcheventinsandbox\", {\n                    source: _this41,\n                    detail: {\n                      id: id,\n                      name: \"Keystroke\",\n                      value: value,\n                      changeEx: exportValue,\n                      willCommit: true,\n                      commitKey: 1,\n                      keyDown: false\n                    }\n                  });\n                });\n\n                this._setEventListeners(selectElement, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"], [\"input\", \"Action\"]], function (event) {\n                  return event.target.checked;\n                });\n              } else {\n                selectElement.addEventListener(\"input\", function (event) {\n                  storage.setValue(id, {\n                    value: getValue(event)\n                  });\n                });\n              }\n\n              this.container.appendChild(selectElement);\n              return this.container;\n            }\n          }]);\n\n          return ChoiceWidgetAnnotationElement;\n        }(WidgetAnnotationElement);\n\n        var PopupAnnotationElement = /*#__PURE__*/function (_AnnotationElement4) {\n          _inherits(PopupAnnotationElement, _AnnotationElement4);\n\n          var _super25 = _createSuper(PopupAnnotationElement);\n\n          function PopupAnnotationElement(parameters) {\n            _classCallCheck(this, PopupAnnotationElement);\n\n            var isRenderable = !!(parameters.data.title || parameters.data.contents);\n            return _super25.call(this, parameters, {\n              isRenderable: isRenderable\n            });\n          }\n\n          _createClass(PopupAnnotationElement, [{\n            key: \"render\",\n            value: function render() {\n              var IGNORE_TYPES = [\"Line\", \"Square\", \"Circle\", \"PolyLine\", \"Polygon\", \"Ink\"];\n              this.container.className = \"popupAnnotation\";\n\n              if (IGNORE_TYPES.includes(this.data.parentType)) {\n                return this.container;\n              }\n\n              var selector = \"[data-annotation-id=\\\"\".concat(this.data.parentId, \"\\\"]\");\n              var parentElements = this.layer.querySelectorAll(selector);\n\n              if (parentElements.length === 0) {\n                return this.container;\n              }\n\n              var popup = new PopupElement({\n                container: this.container,\n                trigger: Array.from(parentElements),\n                color: this.data.color,\n                title: this.data.title,\n                modificationDate: this.data.modificationDate,\n                contents: this.data.contents\n              });\n              var page = this.page;\n\n              var rect = _util.Util.normalizeRect([this.data.parentRect[0], page.view[3] - this.data.parentRect[1] + page.view[1], this.data.parentRect[2], page.view[3] - this.data.parentRect[3] + page.view[1]]);\n\n              var popupLeft = rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n              var popupTop = rect[1];\n              this.container.style.transformOrigin = \"\".concat(-popupLeft, \"px \").concat(-popupTop, \"px\");\n              this.container.style.left = \"\".concat(popupLeft, \"px\");\n              this.container.style.top = \"\".concat(popupTop, \"px\");\n              this.container.appendChild(popup.render());\n              return this.container;\n            }\n          }]);\n\n          return PopupAnnotationElement;\n        }(AnnotationElement);\n\n        var PopupElement = /*#__PURE__*/function () {\n          function PopupElement(parameters) {\n            _classCallCheck(this, PopupElement);\n\n            this.container = parameters.container;\n            this.trigger = parameters.trigger;\n            this.color = parameters.color;\n            this.title = parameters.title;\n            this.modificationDate = parameters.modificationDate;\n            this.contents = parameters.contents;\n            this.hideWrapper = parameters.hideWrapper || false;\n            this.pinned = false;\n          }\n\n          _createClass(PopupElement, [{\n            key: \"render\",\n            value: function render() {\n              var BACKGROUND_ENLIGHT = 0.7;\n              var wrapper = document.createElement(\"div\");\n              wrapper.className = \"popupWrapper\";\n              this.hideElement = this.hideWrapper ? wrapper : this.container;\n              this.hideElement.hidden = true;\n              var popup = document.createElement(\"div\");\n              popup.className = \"popup\";\n              var color = this.color;\n\n              if (color) {\n                var r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n                var g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n                var b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n                popup.style.backgroundColor = _util.Util.makeHexColor(r | 0, g | 0, b | 0);\n              }\n\n              var title = document.createElement(\"h1\");\n              title.textContent = this.title;\n              popup.appendChild(title);\n\n              var dateObject = _display_utils.PDFDateString.toDateObject(this.modificationDate);\n\n              if (dateObject) {\n                var modificationDate = document.createElement(\"span\");\n                modificationDate.textContent = \"{{date}}, {{time}}\";\n                modificationDate.dataset.l10nId = \"annotation_date_string\";\n                modificationDate.dataset.l10nArgs = JSON.stringify({\n                  date: dateObject.toLocaleDateString(),\n                  time: dateObject.toLocaleTimeString()\n                });\n                popup.appendChild(modificationDate);\n              }\n\n              var contents = this._formatContents(this.contents);\n\n              popup.appendChild(contents);\n\n              if (!Array.isArray(this.trigger)) {\n                this.trigger = [this.trigger];\n              }\n\n              var _iterator47 = _createForOfIteratorHelper(this.trigger),\n                  _step47;\n\n              try {\n                for (_iterator47.s(); !(_step47 = _iterator47.n()).done;) {\n                  var element = _step47.value;\n                  element.addEventListener(\"click\", this._toggle.bind(this));\n                  element.addEventListener(\"mouseover\", this._show.bind(this, false));\n                  element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n                }\n              } catch (err) {\n                _iterator47.e(err);\n              } finally {\n                _iterator47.f();\n              }\n\n              popup.addEventListener(\"click\", this._hide.bind(this, true));\n              wrapper.appendChild(popup);\n              return wrapper;\n            }\n          }, {\n            key: \"_formatContents\",\n            value: function _formatContents(contents) {\n              var p = document.createElement(\"p\");\n              var lines = contents.split(/(?:\\r\\n?|\\n)/);\n\n              for (var i = 0, ii = lines.length; i < ii; ++i) {\n                var line = lines[i];\n                p.appendChild(document.createTextNode(line));\n\n                if (i < ii - 1) {\n                  p.appendChild(document.createElement(\"br\"));\n                }\n              }\n\n              return p;\n            }\n          }, {\n            key: \"_toggle\",\n            value: function _toggle() {\n              if (this.pinned) {\n                this._hide(true);\n              } else {\n                this._show(true);\n              }\n            }\n          }, {\n            key: \"_show\",\n            value: function _show() {\n              var pin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n              if (pin) {\n                this.pinned = true;\n              }\n\n              if (this.hideElement.hidden) {\n                this.hideElement.hidden = false;\n                this.container.style.zIndex += 1;\n              }\n            }\n          }, {\n            key: \"_hide\",\n            value: function _hide() {\n              var unpin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n              if (unpin) {\n                this.pinned = false;\n              }\n\n              if (!this.hideElement.hidden && !this.pinned) {\n                this.hideElement.hidden = true;\n                this.container.style.zIndex -= 1;\n              }\n            }\n          }]);\n\n          return PopupElement;\n        }();\n\n        var FreeTextAnnotationElement = /*#__PURE__*/function (_AnnotationElement5) {\n          _inherits(FreeTextAnnotationElement, _AnnotationElement5);\n\n          var _super26 = _createSuper(FreeTextAnnotationElement);\n\n          function FreeTextAnnotationElement(parameters) {\n            _classCallCheck(this, FreeTextAnnotationElement);\n\n            var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n            return _super26.call(this, parameters, {\n              isRenderable: isRenderable,\n              ignoreBorder: true\n            });\n          }\n\n          _createClass(FreeTextAnnotationElement, [{\n            key: \"render\",\n            value: function render() {\n              this.container.className = \"freeTextAnnotation\";\n\n              if (!this.data.hasPopup) {\n                this._createPopup(null, this.data);\n              }\n\n              return this.container;\n            }\n          }]);\n\n          return FreeTextAnnotationElement;\n        }(AnnotationElement);\n\n        var LineAnnotationElement = /*#__PURE__*/function (_AnnotationElement6) {\n          _inherits(LineAnnotationElement, _AnnotationElement6);\n\n          var _super27 = _createSuper(LineAnnotationElement);\n\n          function LineAnnotationElement(parameters) {\n            _classCallCheck(this, LineAnnotationElement);\n\n            var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n            return _super27.call(this, parameters, {\n              isRenderable: isRenderable,\n              ignoreBorder: true\n            });\n          }\n\n          _createClass(LineAnnotationElement, [{\n            key: \"render\",\n            value: function render() {\n              this.container.className = \"lineAnnotation\";\n              var data = this.data;\n              var width = data.rect[2] - data.rect[0];\n              var height = data.rect[3] - data.rect[1];\n              var svg = this.svgFactory.create(width, height);\n              var line = this.svgFactory.createElement(\"svg:line\");\n              line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n              line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n              line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n              line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n              line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n              line.setAttribute(\"stroke\", \"transparent\");\n              svg.appendChild(line);\n              this.container.append(svg);\n\n              this._createPopup(line, data);\n\n              return this.container;\n            }\n          }]);\n\n          return LineAnnotationElement;\n        }(AnnotationElement);\n\n        var SquareAnnotationElement = /*#__PURE__*/function (_AnnotationElement7) {\n          _inherits(SquareAnnotationElement, _AnnotationElement7);\n\n          var _super28 = _createSuper(SquareAnnotationElement);\n\n          function SquareAnnotationElement(parameters) {\n            _classCallCheck(this, SquareAnnotationElement);\n\n            var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n            return _super28.call(this, parameters, {\n              isRenderable: isRenderable,\n              ignoreBorder: true\n            });\n          }\n\n          _createClass(SquareAnnotationElement, [{\n            key: \"render\",\n            value: function render() {\n              this.container.className = \"squareAnnotation\";\n              var data = this.data;\n              var width = data.rect[2] - data.rect[0];\n              var height = data.rect[3] - data.rect[1];\n              var svg = this.svgFactory.create(width, height);\n              var borderWidth = data.borderStyle.width;\n              var square = this.svgFactory.createElement(\"svg:rect\");\n              square.setAttribute(\"x\", borderWidth / 2);\n              square.setAttribute(\"y\", borderWidth / 2);\n              square.setAttribute(\"width\", width - borderWidth);\n              square.setAttribute(\"height\", height - borderWidth);\n              square.setAttribute(\"stroke-width\", borderWidth || 1);\n              square.setAttribute(\"stroke\", \"transparent\");\n              square.setAttribute(\"fill\", \"none\");\n              svg.appendChild(square);\n              this.container.append(svg);\n\n              this._createPopup(square, data);\n\n              return this.container;\n            }\n          }]);\n\n          return SquareAnnotationElement;\n        }(AnnotationElement);\n\n        var CircleAnnotationElement = /*#__PURE__*/function (_AnnotationElement8) {\n          _inherits(CircleAnnotationElement, _AnnotationElement8);\n\n          var _super29 = _createSuper(CircleAnnotationElement);\n\n          function CircleAnnotationElement(parameters) {\n            _classCallCheck(this, CircleAnnotationElement);\n\n            var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n            return _super29.call(this, parameters, {\n              isRenderable: isRenderable,\n              ignoreBorder: true\n            });\n          }\n\n          _createClass(CircleAnnotationElement, [{\n            key: \"render\",\n            value: function render() {\n              this.container.className = \"circleAnnotation\";\n              var data = this.data;\n              var width = data.rect[2] - data.rect[0];\n              var height = data.rect[3] - data.rect[1];\n              var svg = this.svgFactory.create(width, height);\n              var borderWidth = data.borderStyle.width;\n              var circle = this.svgFactory.createElement(\"svg:ellipse\");\n              circle.setAttribute(\"cx\", width / 2);\n              circle.setAttribute(\"cy\", height / 2);\n              circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n              circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n              circle.setAttribute(\"stroke-width\", borderWidth || 1);\n              circle.setAttribute(\"stroke\", \"transparent\");\n              circle.setAttribute(\"fill\", \"none\");\n              svg.appendChild(circle);\n              this.container.append(svg);\n\n              this._createPopup(circle, data);\n\n              return this.container;\n            }\n          }]);\n\n          return CircleAnnotationElement;\n        }(AnnotationElement);\n\n        var PolylineAnnotationElement = /*#__PURE__*/function (_AnnotationElement9) {\n          _inherits(PolylineAnnotationElement, _AnnotationElement9);\n\n          var _super30 = _createSuper(PolylineAnnotationElement);\n\n          function PolylineAnnotationElement(parameters) {\n            var _this42;\n\n            _classCallCheck(this, PolylineAnnotationElement);\n\n            var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n            _this42 = _super30.call(this, parameters, {\n              isRenderable: isRenderable,\n              ignoreBorder: true\n            });\n            _this42.containerClassName = \"polylineAnnotation\";\n            _this42.svgElementName = \"svg:polyline\";\n            return _this42;\n          }\n\n          _createClass(PolylineAnnotationElement, [{\n            key: \"render\",\n            value: function render() {\n              this.container.className = this.containerClassName;\n              var data = this.data;\n              var width = data.rect[2] - data.rect[0];\n              var height = data.rect[3] - data.rect[1];\n              var svg = this.svgFactory.create(width, height);\n              var points = [];\n\n              var _iterator48 = _createForOfIteratorHelper(data.vertices),\n                  _step48;\n\n              try {\n                for (_iterator48.s(); !(_step48 = _iterator48.n()).done;) {\n                  var coordinate = _step48.value;\n                  var x = coordinate.x - data.rect[0];\n                  var y = data.rect[3] - coordinate.y;\n                  points.push(x + \",\" + y);\n                }\n              } catch (err) {\n                _iterator48.e(err);\n              } finally {\n                _iterator48.f();\n              }\n\n              points = points.join(\" \");\n              var polyline = this.svgFactory.createElement(this.svgElementName);\n              polyline.setAttribute(\"points\", points);\n              polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n              polyline.setAttribute(\"stroke\", \"transparent\");\n              polyline.setAttribute(\"fill\", \"none\");\n              svg.appendChild(polyline);\n              this.container.append(svg);\n\n              this._createPopup(polyline, data);\n\n              return this.container;\n            }\n          }]);\n\n          return PolylineAnnotationElement;\n        }(AnnotationElement);\n\n        var PolygonAnnotationElement = /*#__PURE__*/function (_PolylineAnnotationEl) {\n          _inherits(PolygonAnnotationElement, _PolylineAnnotationEl);\n\n          var _super31 = _createSuper(PolygonAnnotationElement);\n\n          function PolygonAnnotationElement(parameters) {\n            var _this43;\n\n            _classCallCheck(this, PolygonAnnotationElement);\n\n            _this43 = _super31.call(this, parameters);\n            _this43.containerClassName = \"polygonAnnotation\";\n            _this43.svgElementName = \"svg:polygon\";\n            return _this43;\n          }\n\n          return PolygonAnnotationElement;\n        }(PolylineAnnotationElement);\n\n        var CaretAnnotationElement = /*#__PURE__*/function (_AnnotationElement10) {\n          _inherits(CaretAnnotationElement, _AnnotationElement10);\n\n          var _super32 = _createSuper(CaretAnnotationElement);\n\n          function CaretAnnotationElement(parameters) {\n            _classCallCheck(this, CaretAnnotationElement);\n\n            var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n            return _super32.call(this, parameters, {\n              isRenderable: isRenderable,\n              ignoreBorder: true\n            });\n          }\n\n          _createClass(CaretAnnotationElement, [{\n            key: \"render\",\n            value: function render() {\n              this.container.className = \"caretAnnotation\";\n\n              if (!this.data.hasPopup) {\n                this._createPopup(null, this.data);\n              }\n\n              return this.container;\n            }\n          }]);\n\n          return CaretAnnotationElement;\n        }(AnnotationElement);\n\n        var InkAnnotationElement = /*#__PURE__*/function (_AnnotationElement11) {\n          _inherits(InkAnnotationElement, _AnnotationElement11);\n\n          var _super33 = _createSuper(InkAnnotationElement);\n\n          function InkAnnotationElement(parameters) {\n            var _this44;\n\n            _classCallCheck(this, InkAnnotationElement);\n\n            var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n            _this44 = _super33.call(this, parameters, {\n              isRenderable: isRenderable,\n              ignoreBorder: true\n            });\n            _this44.containerClassName = \"inkAnnotation\";\n            _this44.svgElementName = \"svg:polyline\";\n            return _this44;\n          }\n\n          _createClass(InkAnnotationElement, [{\n            key: \"render\",\n            value: function render() {\n              this.container.className = this.containerClassName;\n              var data = this.data;\n              var width = data.rect[2] - data.rect[0];\n              var height = data.rect[3] - data.rect[1];\n              var svg = this.svgFactory.create(width, height);\n\n              var _iterator49 = _createForOfIteratorHelper(data.inkLists),\n                  _step49;\n\n              try {\n                for (_iterator49.s(); !(_step49 = _iterator49.n()).done;) {\n                  var inkList = _step49.value;\n                  var points = [];\n\n                  var _iterator50 = _createForOfIteratorHelper(inkList),\n                      _step50;\n\n                  try {\n                    for (_iterator50.s(); !(_step50 = _iterator50.n()).done;) {\n                      var coordinate = _step50.value;\n                      var x = coordinate.x - data.rect[0];\n                      var y = data.rect[3] - coordinate.y;\n                      points.push(\"\".concat(x, \",\").concat(y));\n                    }\n                  } catch (err) {\n                    _iterator50.e(err);\n                  } finally {\n                    _iterator50.f();\n                  }\n\n                  points = points.join(\" \");\n                  var polyline = this.svgFactory.createElement(this.svgElementName);\n                  polyline.setAttribute(\"points\", points);\n                  polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n                  polyline.setAttribute(\"stroke\", \"transparent\");\n                  polyline.setAttribute(\"fill\", \"none\");\n\n                  this._createPopup(polyline, data);\n\n                  svg.appendChild(polyline);\n                }\n              } catch (err) {\n                _iterator49.e(err);\n              } finally {\n                _iterator49.f();\n              }\n\n              this.container.append(svg);\n              return this.container;\n            }\n          }]);\n\n          return InkAnnotationElement;\n        }(AnnotationElement);\n\n        var HighlightAnnotationElement = /*#__PURE__*/function (_AnnotationElement12) {\n          _inherits(HighlightAnnotationElement, _AnnotationElement12);\n\n          var _super34 = _createSuper(HighlightAnnotationElement);\n\n          function HighlightAnnotationElement(parameters) {\n            _classCallCheck(this, HighlightAnnotationElement);\n\n            var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n            return _super34.call(this, parameters, {\n              isRenderable: isRenderable,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n            });\n          }\n\n          _createClass(HighlightAnnotationElement, [{\n            key: \"render\",\n            value: function render() {\n              if (!this.data.hasPopup) {\n                this._createPopup(null, this.data);\n              }\n\n              if (this.quadrilaterals) {\n                return this._renderQuadrilaterals(\"highlightAnnotation\");\n              }\n\n              this.container.className = \"highlightAnnotation\";\n              return this.container;\n            }\n          }]);\n\n          return HighlightAnnotationElement;\n        }(AnnotationElement);\n\n        var UnderlineAnnotationElement = /*#__PURE__*/function (_AnnotationElement13) {\n          _inherits(UnderlineAnnotationElement, _AnnotationElement13);\n\n          var _super35 = _createSuper(UnderlineAnnotationElement);\n\n          function UnderlineAnnotationElement(parameters) {\n            _classCallCheck(this, UnderlineAnnotationElement);\n\n            var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n            return _super35.call(this, parameters, {\n              isRenderable: isRenderable,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n            });\n          }\n\n          _createClass(UnderlineAnnotationElement, [{\n            key: \"render\",\n            value: function render() {\n              if (!this.data.hasPopup) {\n                this._createPopup(null, this.data);\n              }\n\n              if (this.quadrilaterals) {\n                return this._renderQuadrilaterals(\"underlineAnnotation\");\n              }\n\n              this.container.className = \"underlineAnnotation\";\n              return this.container;\n            }\n          }]);\n\n          return UnderlineAnnotationElement;\n        }(AnnotationElement);\n\n        var SquigglyAnnotationElement = /*#__PURE__*/function (_AnnotationElement14) {\n          _inherits(SquigglyAnnotationElement, _AnnotationElement14);\n\n          var _super36 = _createSuper(SquigglyAnnotationElement);\n\n          function SquigglyAnnotationElement(parameters) {\n            _classCallCheck(this, SquigglyAnnotationElement);\n\n            var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n            return _super36.call(this, parameters, {\n              isRenderable: isRenderable,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n            });\n          }\n\n          _createClass(SquigglyAnnotationElement, [{\n            key: \"render\",\n            value: function render() {\n              if (!this.data.hasPopup) {\n                this._createPopup(null, this.data);\n              }\n\n              if (this.quadrilaterals) {\n                return this._renderQuadrilaterals(\"squigglyAnnotation\");\n              }\n\n              this.container.className = \"squigglyAnnotation\";\n              return this.container;\n            }\n          }]);\n\n          return SquigglyAnnotationElement;\n        }(AnnotationElement);\n\n        var StrikeOutAnnotationElement = /*#__PURE__*/function (_AnnotationElement15) {\n          _inherits(StrikeOutAnnotationElement, _AnnotationElement15);\n\n          var _super37 = _createSuper(StrikeOutAnnotationElement);\n\n          function StrikeOutAnnotationElement(parameters) {\n            _classCallCheck(this, StrikeOutAnnotationElement);\n\n            var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n            return _super37.call(this, parameters, {\n              isRenderable: isRenderable,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n            });\n          }\n\n          _createClass(StrikeOutAnnotationElement, [{\n            key: \"render\",\n            value: function render() {\n              if (!this.data.hasPopup) {\n                this._createPopup(null, this.data);\n              }\n\n              if (this.quadrilaterals) {\n                return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n              }\n\n              this.container.className = \"strikeoutAnnotation\";\n              return this.container;\n            }\n          }]);\n\n          return StrikeOutAnnotationElement;\n        }(AnnotationElement);\n\n        var StampAnnotationElement = /*#__PURE__*/function (_AnnotationElement16) {\n          _inherits(StampAnnotationElement, _AnnotationElement16);\n\n          var _super38 = _createSuper(StampAnnotationElement);\n\n          function StampAnnotationElement(parameters) {\n            _classCallCheck(this, StampAnnotationElement);\n\n            var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n            return _super38.call(this, parameters, {\n              isRenderable: isRenderable,\n              ignoreBorder: true\n            });\n          }\n\n          _createClass(StampAnnotationElement, [{\n            key: \"render\",\n            value: function render() {\n              this.container.className = \"stampAnnotation\";\n\n              if (!this.data.hasPopup) {\n                this._createPopup(null, this.data);\n              }\n\n              return this.container;\n            }\n          }]);\n\n          return StampAnnotationElement;\n        }(AnnotationElement);\n\n        var FileAttachmentAnnotationElement = /*#__PURE__*/function (_AnnotationElement17) {\n          _inherits(FileAttachmentAnnotationElement, _AnnotationElement17);\n\n          var _super39 = _createSuper(FileAttachmentAnnotationElement);\n\n          function FileAttachmentAnnotationElement(parameters) {\n            var _this45$linkService$e;\n\n            var _this45;\n\n            _classCallCheck(this, FileAttachmentAnnotationElement);\n\n            _this45 = _super39.call(this, parameters, {\n              isRenderable: true\n            });\n            var _this45$data$file = _this45.data.file,\n                filename = _this45$data$file.filename,\n                content = _this45$data$file.content;\n            _this45.filename = (0, _display_utils.getFilenameFromUrl)(filename);\n            _this45.content = content;\n            (_this45$linkService$e = _this45.linkService.eventBus) === null || _this45$linkService$e === void 0 ? void 0 : _this45$linkService$e.dispatch(\"fileattachmentannotation\", {\n              source: _assertThisInitialized(_this45),\n              id: (0, _util.stringToPDFString)(filename),\n              filename: filename,\n              content: content\n            });\n            return _this45;\n          }\n\n          _createClass(FileAttachmentAnnotationElement, [{\n            key: \"render\",\n            value: function render() {\n              this.container.className = \"fileAttachmentAnnotation\";\n              var trigger = document.createElement(\"div\");\n              trigger.style.height = this.container.style.height;\n              trigger.style.width = this.container.style.width;\n              trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n              if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n                this._createPopup(trigger, this.data);\n              }\n\n              this.container.appendChild(trigger);\n              return this.container;\n            }\n          }, {\n            key: \"_download\",\n            value: function _download() {\n              var _this$downloadManager;\n\n              (_this$downloadManager = this.downloadManager) === null || _this$downloadManager === void 0 ? void 0 : _this$downloadManager.openOrDownloadData(this.container, this.content, this.filename);\n            }\n          }]);\n\n          return FileAttachmentAnnotationElement;\n        }(AnnotationElement);\n\n        var AnnotationLayer = /*#__PURE__*/function () {\n          function AnnotationLayer() {\n            _classCallCheck(this, AnnotationLayer);\n          }\n\n          _createClass(AnnotationLayer, null, [{\n            key: \"render\",\n            value: function render(parameters) {\n              var sortedAnnotations = [],\n                  popupAnnotations = [];\n\n              var _iterator51 = _createForOfIteratorHelper(parameters.annotations),\n                  _step51;\n\n              try {\n                for (_iterator51.s(); !(_step51 = _iterator51.n()).done;) {\n                  var _data3 = _step51.value;\n\n                  if (!_data3) {\n                    continue;\n                  }\n\n                  if (_data3.annotationType === _util.AnnotationType.POPUP) {\n                    popupAnnotations.push(_data3);\n                    continue;\n                  }\n\n                  sortedAnnotations.push(_data3);\n                }\n              } catch (err) {\n                _iterator51.e(err);\n              } finally {\n                _iterator51.f();\n              }\n\n              if (popupAnnotations.length) {\n                sortedAnnotations.push.apply(sortedAnnotations, popupAnnotations);\n              }\n\n              for (var _i8 = 0, _sortedAnnotations = sortedAnnotations; _i8 < _sortedAnnotations.length; _i8++) {\n                var data = _sortedAnnotations[_i8];\n                var element = AnnotationElementFactory.create({\n                  data: data,\n                  layer: parameters.div,\n                  page: parameters.page,\n                  viewport: parameters.viewport,\n                  linkService: parameters.linkService,\n                  downloadManager: parameters.downloadManager,\n                  imageResourcesPath: parameters.imageResourcesPath || \"\",\n                  renderInteractiveForms: parameters.renderInteractiveForms !== false,\n                  svgFactory: new _display_utils.DOMSVGFactory(),\n                  annotationStorage: parameters.annotationStorage || new _annotation_storage.AnnotationStorage(),\n                  enableScripting: parameters.enableScripting,\n                  hasJSActions: parameters.hasJSActions,\n                  mouseState: parameters.mouseState || {\n                    isDown: false\n                  }\n                });\n\n                if (element.isRenderable) {\n                  var rendered = element.render();\n\n                  if (data.hidden) {\n                    rendered.style.visibility = \"hidden\";\n                  }\n\n                  if (Array.isArray(rendered)) {\n                    var _iterator52 = _createForOfIteratorHelper(rendered),\n                        _step52;\n\n                    try {\n                      for (_iterator52.s(); !(_step52 = _iterator52.n()).done;) {\n                        var renderedElement = _step52.value;\n                        parameters.div.appendChild(renderedElement);\n                      }\n                    } catch (err) {\n                      _iterator52.e(err);\n                    } finally {\n                      _iterator52.f();\n                    }\n                  } else {\n                    if (element instanceof PopupAnnotationElement) {\n                      parameters.div.prepend(rendered);\n                    } else {\n                      parameters.div.appendChild(rendered);\n                    }\n                  }\n                }\n              }\n            }\n          }, {\n            key: \"update\",\n            value: function update(parameters) {\n              var transform = \"matrix(\".concat(parameters.viewport.transform.join(\",\"), \")\");\n\n              var _iterator53 = _createForOfIteratorHelper(parameters.annotations),\n                  _step53;\n\n              try {\n                for (_iterator53.s(); !(_step53 = _iterator53.n()).done;) {\n                  var data = _step53.value;\n                  var elements = parameters.div.querySelectorAll(\"[data-annotation-id=\\\"\".concat(data.id, \"\\\"]\"));\n\n                  if (elements) {\n                    var _iterator54 = _createForOfIteratorHelper(elements),\n                        _step54;\n\n                    try {\n                      for (_iterator54.s(); !(_step54 = _iterator54.n()).done;) {\n                        var element = _step54.value;\n                        element.style.transform = transform;\n                      }\n                    } catch (err) {\n                      _iterator54.e(err);\n                    } finally {\n                      _iterator54.f();\n                    }\n                  }\n                }\n              } catch (err) {\n                _iterator53.e(err);\n              } finally {\n                _iterator53.f();\n              }\n\n              parameters.div.hidden = false;\n            }\n          }]);\n\n          return AnnotationLayer;\n        }();\n\n        exports.AnnotationLayer = AnnotationLayer;\n        /***/\n      },\n      /* 18 */\n\n      /***/\n      function (__unused_webpack_module, exports) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.ColorConverters = void 0;\n\n        function makeColorComp(n) {\n          return Math.floor(Math.max(0, Math.min(1, n)) * 255).toString(16).padStart(2, \"0\");\n        }\n\n        var ColorConverters = /*#__PURE__*/function () {\n          function ColorConverters() {\n            _classCallCheck(this, ColorConverters);\n          }\n\n          _createClass(ColorConverters, null, [{\n            key: \"CMYK_G\",\n            value: function CMYK_G(_ref34) {\n              var _ref35 = _slicedToArray(_ref34, 4),\n                  c = _ref35[0],\n                  y = _ref35[1],\n                  m = _ref35[2],\n                  k = _ref35[3];\n\n              return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n            }\n          }, {\n            key: \"G_CMYK\",\n            value: function G_CMYK(_ref36) {\n              var _ref37 = _slicedToArray(_ref36, 1),\n                  g = _ref37[0];\n\n              return [\"CMYK\", 0, 0, 0, 1 - g];\n            }\n          }, {\n            key: \"G_RGB\",\n            value: function G_RGB(_ref38) {\n              var _ref39 = _slicedToArray(_ref38, 1),\n                  g = _ref39[0];\n\n              return [\"RGB\", g, g, g];\n            }\n          }, {\n            key: \"G_HTML\",\n            value: function G_HTML(_ref40) {\n              var _ref41 = _slicedToArray(_ref40, 1),\n                  g = _ref41[0];\n\n              var G = makeColorComp(g);\n              return \"#\".concat(G).concat(G).concat(G);\n            }\n          }, {\n            key: \"RGB_G\",\n            value: function RGB_G(_ref42) {\n              var _ref43 = _slicedToArray(_ref42, 3),\n                  r = _ref43[0],\n                  g = _ref43[1],\n                  b = _ref43[2];\n\n              return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n            }\n          }, {\n            key: \"RGB_HTML\",\n            value: function RGB_HTML(_ref44) {\n              var _ref45 = _slicedToArray(_ref44, 3),\n                  r = _ref45[0],\n                  g = _ref45[1],\n                  b = _ref45[2];\n\n              var R = makeColorComp(r);\n              var G = makeColorComp(g);\n              var B = makeColorComp(b);\n              return \"#\".concat(R).concat(G).concat(B);\n            }\n          }, {\n            key: \"T_HTML\",\n            value: function T_HTML() {\n              return \"#00000000\";\n            }\n          }, {\n            key: \"CMYK_RGB\",\n            value: function CMYK_RGB(_ref46) {\n              var _ref47 = _slicedToArray(_ref46, 4),\n                  c = _ref47[0],\n                  y = _ref47[1],\n                  m = _ref47[2],\n                  k = _ref47[3];\n\n              return [\"RGB\", 1 - Math.min(1, c + k), 1 - Math.min(1, m + k), 1 - Math.min(1, y + k)];\n            }\n          }, {\n            key: \"CMYK_HTML\",\n            value: function CMYK_HTML(components) {\n              return this.RGB_HTML(this.CMYK_RGB(components));\n            }\n          }, {\n            key: \"RGB_CMYK\",\n            value: function RGB_CMYK(_ref48) {\n              var _ref49 = _slicedToArray(_ref48, 3),\n                  r = _ref49[0],\n                  g = _ref49[1],\n                  b = _ref49[2];\n\n              var c = 1 - r;\n              var m = 1 - g;\n              var y = 1 - b;\n              var k = Math.min(c, m, y);\n              return [\"CMYK\", c, m, y, k];\n            }\n          }]);\n\n          return ColorConverters;\n        }();\n\n        exports.ColorConverters = ColorConverters;\n        /***/\n      },\n      /* 19 */\n\n      /***/\n      function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.renderTextLayer = renderTextLayer;\n\n        var _util = __w_pdfjs_require__(2);\n\n        var MAX_TEXT_DIVS_TO_RENDER = 100000;\n        var DEFAULT_FONT_SIZE = 30;\n        var DEFAULT_FONT_ASCENT = 0.8;\n        var ascentCache = new Map();\n        var AllWhitespaceRegexp = /^\\s+$/g;\n\n        function getAscent(fontFamily, ctx) {\n          var cachedAscent = ascentCache.get(fontFamily);\n\n          if (cachedAscent) {\n            return cachedAscent;\n          }\n\n          ctx.save();\n          ctx.font = \"\".concat(DEFAULT_FONT_SIZE, \"px \").concat(fontFamily);\n          var metrics = ctx.measureText(\"\");\n          var ascent = metrics.fontBoundingBoxAscent;\n          var descent = Math.abs(metrics.fontBoundingBoxDescent);\n\n          if (ascent) {\n            ctx.restore();\n            var ratio = ascent / (ascent + descent);\n            ascentCache.set(fontFamily, ratio);\n            return ratio;\n          }\n\n          ctx.strokeStyle = \"red\";\n          ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n          ctx.strokeText(\"g\", 0, 0);\n          var pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n          descent = 0;\n\n          for (var i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n            if (pixels[i] > 0) {\n              descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n              break;\n            }\n          }\n\n          ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n          ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n          pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n          ascent = 0;\n\n          for (var _i9 = 0, ii = pixels.length; _i9 < ii; _i9 += 4) {\n            if (pixels[_i9] > 0) {\n              ascent = DEFAULT_FONT_SIZE - Math.floor(_i9 / 4 / DEFAULT_FONT_SIZE);\n              break;\n            }\n          }\n\n          ctx.restore();\n\n          if (ascent) {\n            var _ratio = ascent / (ascent + descent);\n\n            ascentCache.set(fontFamily, _ratio);\n            return _ratio;\n          }\n\n          ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n          return DEFAULT_FONT_ASCENT;\n        }\n\n        function appendText(task, geom, styles, ctx) {\n          var textDiv = document.createElement(\"span\");\n          var textDivProperties = {\n            angle: 0,\n            canvasWidth: 0,\n            hasText: geom.str !== \"\",\n            hasEOL: geom.hasEOL,\n            originalTransform: null,\n            paddingBottom: 0,\n            paddingLeft: 0,\n            paddingRight: 0,\n            paddingTop: 0,\n            scale: 1\n          };\n\n          task._textDivs.push(textDiv);\n\n          var tx = _util.Util.transform(task._viewport.transform, geom.transform);\n\n          var angle = Math.atan2(tx[1], tx[0]);\n          var style = styles[geom.fontName];\n\n          if (style.vertical) {\n            angle += Math.PI / 2;\n          }\n\n          var fontHeight = Math.hypot(tx[2], tx[3]);\n          var fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\n          var left, top;\n\n          if (angle === 0) {\n            left = tx[4];\n            top = tx[5] - fontAscent;\n          } else {\n            left = tx[4] + fontAscent * Math.sin(angle);\n            top = tx[5] - fontAscent * Math.cos(angle);\n          }\n\n          textDiv.style.left = \"\".concat(left, \"px\");\n          textDiv.style.top = \"\".concat(top, \"px\");\n          textDiv.style.fontSize = \"\".concat(fontHeight, \"px\");\n          textDiv.style.fontFamily = style.fontFamily;\n          textDiv.setAttribute(\"role\", \"presentation\");\n          textDiv.textContent = geom.str;\n          textDiv.dir = geom.dir;\n\n          if (task._fontInspectorEnabled) {\n            textDiv.dataset.fontName = geom.fontName;\n          }\n\n          if (angle !== 0) {\n            textDivProperties.angle = angle * (180 / Math.PI);\n          }\n\n          var shouldScaleText = false;\n\n          if (geom.str.length > 1 || task._enhanceTextSelection && AllWhitespaceRegexp.test(geom.str)) {\n            shouldScaleText = true;\n          } else if (geom.transform[0] !== geom.transform[3]) {\n            var absScaleX = Math.abs(geom.transform[0]),\n                absScaleY = Math.abs(geom.transform[3]);\n\n            if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) {\n              shouldScaleText = true;\n            }\n          }\n\n          if (shouldScaleText) {\n            if (style.vertical) {\n              textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n            } else {\n              textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n            }\n          }\n\n          task._textDivProperties.set(textDiv, textDivProperties);\n\n          if (task._textContentStream) {\n            task._layoutText(textDiv);\n          }\n\n          if (task._enhanceTextSelection && textDivProperties.hasText) {\n            var angleCos = 1,\n                angleSin = 0;\n\n            if (angle !== 0) {\n              angleCos = Math.cos(angle);\n              angleSin = Math.sin(angle);\n            }\n\n            var divWidth = (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n            var divHeight = fontHeight;\n            var m, b;\n\n            if (angle !== 0) {\n              m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n              b = _util.Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n            } else {\n              b = [left, top, left + divWidth, top + divHeight];\n            }\n\n            task._bounds.push({\n              left: b[0],\n              top: b[1],\n              right: b[2],\n              bottom: b[3],\n              div: textDiv,\n              size: [divWidth, divHeight],\n              m: m\n            });\n          }\n        }\n\n        function render(task) {\n          if (task._canceled) {\n            return;\n          }\n\n          var textDivs = task._textDivs;\n          var capability = task._capability;\n          var textDivsLength = textDivs.length;\n\n          if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n            task._renderingDone = true;\n            capability.resolve();\n            return;\n          }\n\n          if (!task._textContentStream) {\n            for (var i = 0; i < textDivsLength; i++) {\n              task._layoutText(textDivs[i]);\n            }\n          }\n\n          task._renderingDone = true;\n          capability.resolve();\n        }\n\n        function findPositiveMin(ts, offset, count) {\n          var result = 0;\n\n          for (var i = 0; i < count; i++) {\n            var t = ts[offset++];\n\n            if (t > 0) {\n              result = result ? Math.min(t, result) : t;\n            }\n          }\n\n          return result;\n        }\n\n        function expand(task) {\n          var bounds = task._bounds;\n          var viewport = task._viewport;\n          var expanded = expandBounds(viewport.width, viewport.height, bounds);\n\n          for (var i = 0; i < expanded.length; i++) {\n            var div = bounds[i].div;\n\n            var divProperties = task._textDivProperties.get(div);\n\n            if (divProperties.angle === 0) {\n              divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n              divProperties.paddingTop = bounds[i].top - expanded[i].top;\n              divProperties.paddingRight = expanded[i].right - bounds[i].right;\n              divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n\n              task._textDivProperties.set(div, divProperties);\n\n              continue;\n            }\n\n            var e = expanded[i],\n                b = bounds[i];\n            var m = b.m,\n                c = m[0],\n                s = m[1];\n            var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n            var ts = new Float64Array(64);\n\n            for (var j = 0, jj = points.length; j < jj; j++) {\n              var t = _util.Util.applyTransform(points[j], m);\n\n              ts[j + 0] = c && (e.left - t[0]) / c;\n              ts[j + 4] = s && (e.top - t[1]) / s;\n              ts[j + 8] = c && (e.right - t[0]) / c;\n              ts[j + 12] = s && (e.bottom - t[1]) / s;\n              ts[j + 16] = s && (e.left - t[0]) / -s;\n              ts[j + 20] = c && (e.top - t[1]) / c;\n              ts[j + 24] = s && (e.right - t[0]) / -s;\n              ts[j + 28] = c && (e.bottom - t[1]) / c;\n              ts[j + 32] = c && (e.left - t[0]) / -c;\n              ts[j + 36] = s && (e.top - t[1]) / -s;\n              ts[j + 40] = c && (e.right - t[0]) / -c;\n              ts[j + 44] = s && (e.bottom - t[1]) / -s;\n              ts[j + 48] = s && (e.left - t[0]) / s;\n              ts[j + 52] = c && (e.top - t[1]) / -c;\n              ts[j + 56] = s && (e.right - t[0]) / s;\n              ts[j + 60] = c && (e.bottom - t[1]) / -c;\n            }\n\n            var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n            divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n            divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n            divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n            divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n\n            task._textDivProperties.set(div, divProperties);\n          }\n        }\n\n        function expandBounds(width, height, boxes) {\n          var bounds = boxes.map(function (box, i) {\n            return {\n              x1: box.left,\n              y1: box.top,\n              x2: box.right,\n              y2: box.bottom,\n              index: i,\n              x1New: undefined,\n              x2New: undefined\n            };\n          });\n          expandBoundsLTR(width, bounds);\n          var expanded = new Array(boxes.length);\n\n          var _iterator55 = _createForOfIteratorHelper(bounds),\n              _step55;\n\n          try {\n            for (_iterator55.s(); !(_step55 = _iterator55.n()).done;) {\n              var b = _step55.value;\n              var i = b.index;\n              expanded[i] = {\n                left: b.x1New,\n                top: 0,\n                right: b.x2New,\n                bottom: 0\n              };\n            }\n          } catch (err) {\n            _iterator55.e(err);\n          } finally {\n            _iterator55.f();\n          }\n\n          boxes.map(function (box, i) {\n            var e = expanded[i],\n                b = bounds[i];\n            b.x1 = box.top;\n            b.y1 = width - e.right;\n            b.x2 = box.bottom;\n            b.y2 = width - e.left;\n            b.index = i;\n            b.x1New = undefined;\n            b.x2New = undefined;\n          });\n          expandBoundsLTR(height, bounds);\n\n          var _iterator56 = _createForOfIteratorHelper(bounds),\n              _step56;\n\n          try {\n            for (_iterator56.s(); !(_step56 = _iterator56.n()).done;) {\n              var _b = _step56.value;\n              var _i10 = _b.index;\n              expanded[_i10].top = _b.x1New;\n              expanded[_i10].bottom = _b.x2New;\n            }\n          } catch (err) {\n            _iterator56.e(err);\n          } finally {\n            _iterator56.f();\n          }\n\n          return expanded;\n        }\n\n        function expandBoundsLTR(width, bounds) {\n          bounds.sort(function (a, b) {\n            return a.x1 - b.x1 || a.index - b.index;\n          });\n          var fakeBoundary = {\n            x1: -Infinity,\n            y1: -Infinity,\n            x2: 0,\n            y2: Infinity,\n            index: -1,\n            x1New: 0,\n            x2New: 0\n          };\n          var horizon = [{\n            start: -Infinity,\n            end: Infinity,\n            boundary: fakeBoundary\n          }];\n\n          var _iterator57 = _createForOfIteratorHelper(bounds),\n              _step57;\n\n          try {\n            for (_iterator57.s(); !(_step57 = _iterator57.n()).done;) {\n              var boundary = _step57.value;\n              var i = 0;\n\n              while (i < horizon.length && horizon[i].end <= boundary.y1) {\n                i++;\n              }\n\n              var j = horizon.length - 1;\n\n              while (j >= 0 && horizon[j].start >= boundary.y2) {\n                j--;\n              }\n\n              var _horizonPart = void 0,\n                  _affectedBoundary = void 0;\n\n              var q = void 0,\n                  k = void 0,\n                  maxXNew = -Infinity;\n\n              for (q = i; q <= j; q++) {\n                _horizonPart = horizon[q];\n                _affectedBoundary = _horizonPart.boundary;\n                var xNew = void 0;\n\n                if (_affectedBoundary.x2 > boundary.x1) {\n                  xNew = _affectedBoundary.index > boundary.index ? _affectedBoundary.x1New : boundary.x1;\n                } else if (_affectedBoundary.x2New === undefined) {\n                  xNew = (_affectedBoundary.x2 + boundary.x1) / 2;\n                } else {\n                  xNew = _affectedBoundary.x2New;\n                }\n\n                if (xNew > maxXNew) {\n                  maxXNew = xNew;\n                }\n              }\n\n              boundary.x1New = maxXNew;\n\n              for (q = i; q <= j; q++) {\n                _horizonPart = horizon[q];\n                _affectedBoundary = _horizonPart.boundary;\n\n                if (_affectedBoundary.x2New === undefined) {\n                  if (_affectedBoundary.x2 > boundary.x1) {\n                    if (_affectedBoundary.index > boundary.index) {\n                      _affectedBoundary.x2New = _affectedBoundary.x2;\n                    }\n                  } else {\n                    _affectedBoundary.x2New = maxXNew;\n                  }\n                } else if (_affectedBoundary.x2New > maxXNew) {\n                  _affectedBoundary.x2New = Math.max(maxXNew, _affectedBoundary.x2);\n                }\n              }\n\n              var changedHorizon = [];\n              var lastBoundary = null;\n\n              for (q = i; q <= j; q++) {\n                _horizonPart = horizon[q];\n                _affectedBoundary = _horizonPart.boundary;\n                var useBoundary = _affectedBoundary.x2 > boundary.x2 ? _affectedBoundary : boundary;\n\n                if (lastBoundary === useBoundary) {\n                  changedHorizon[changedHorizon.length - 1].end = _horizonPart.end;\n                } else {\n                  changedHorizon.push({\n                    start: _horizonPart.start,\n                    end: _horizonPart.end,\n                    boundary: useBoundary\n                  });\n                  lastBoundary = useBoundary;\n                }\n              }\n\n              if (horizon[i].start < boundary.y1) {\n                changedHorizon[0].start = boundary.y1;\n                changedHorizon.unshift({\n                  start: horizon[i].start,\n                  end: boundary.y1,\n                  boundary: horizon[i].boundary\n                });\n              }\n\n              if (boundary.y2 < horizon[j].end) {\n                changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n                changedHorizon.push({\n                  start: boundary.y2,\n                  end: horizon[j].end,\n                  boundary: horizon[j].boundary\n                });\n              }\n\n              for (q = i; q <= j; q++) {\n                _horizonPart = horizon[q];\n                _affectedBoundary = _horizonPart.boundary;\n\n                if (_affectedBoundary.x2New !== undefined) {\n                  continue;\n                }\n\n                var used = false;\n\n                for (k = i - 1; !used && k >= 0 && horizon[k].start >= _affectedBoundary.y1; k--) {\n                  used = horizon[k].boundary === _affectedBoundary;\n                }\n\n                for (k = j + 1; !used && k < horizon.length && horizon[k].end <= _affectedBoundary.y2; k++) {\n                  used = horizon[k].boundary === _affectedBoundary;\n                }\n\n                for (k = 0; !used && k < changedHorizon.length; k++) {\n                  used = changedHorizon[k].boundary === _affectedBoundary;\n                }\n\n                if (!used) {\n                  _affectedBoundary.x2New = maxXNew;\n                }\n              }\n\n              Array.prototype.splice.apply(horizon, [i, j - i + 1].concat(changedHorizon));\n            }\n          } catch (err) {\n            _iterator57.e(err);\n          } finally {\n            _iterator57.f();\n          }\n\n          for (var _i11 = 0, _horizon = horizon; _i11 < _horizon.length; _i11++) {\n            var horizonPart = _horizon[_i11];\n            var affectedBoundary = horizonPart.boundary;\n\n            if (affectedBoundary.x2New === undefined) {\n              affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n            }\n          }\n        }\n\n        var TextLayerRenderTask = /*#__PURE__*/function () {\n          function TextLayerRenderTask(_ref50) {\n            var _globalThis$FontInspe2,\n                _this46 = this;\n\n            var textContent = _ref50.textContent,\n                textContentStream = _ref50.textContentStream,\n                container = _ref50.container,\n                viewport = _ref50.viewport,\n                textDivs = _ref50.textDivs,\n                textContentItemsStr = _ref50.textContentItemsStr,\n                enhanceTextSelection = _ref50.enhanceTextSelection;\n\n            _classCallCheck(this, TextLayerRenderTask);\n\n            this._textContent = textContent;\n            this._textContentStream = textContentStream;\n            this._container = container;\n            this._document = container.ownerDocument;\n            this._viewport = viewport;\n            this._textDivs = textDivs || [];\n            this._textContentItemsStr = textContentItemsStr || [];\n            this._enhanceTextSelection = !!enhanceTextSelection;\n            this._fontInspectorEnabled = !!((_globalThis$FontInspe2 = globalThis.FontInspector) === null || _globalThis$FontInspe2 === void 0 ? void 0 : _globalThis$FontInspe2.enabled);\n            this._reader = null;\n            this._layoutTextLastFontSize = null;\n            this._layoutTextLastFontFamily = null;\n            this._layoutTextCtx = null;\n            this._textDivProperties = new WeakMap();\n            this._renderingDone = false;\n            this._canceled = false;\n            this._capability = (0, _util.createPromiseCapability)();\n            this._renderTimer = null;\n            this._bounds = [];\n\n            this._capability.promise.finally(function () {\n              if (_this46._layoutTextCtx) {\n                _this46._layoutTextCtx.canvas.width = 0;\n                _this46._layoutTextCtx.canvas.height = 0;\n                _this46._layoutTextCtx = null;\n              }\n            }).catch(function () {});\n          }\n\n          _createClass(TextLayerRenderTask, [{\n            key: \"cancel\",\n            value: function cancel() {\n              this._canceled = true;\n\n              if (this._reader) {\n                this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\"));\n\n                this._reader = null;\n              }\n\n              if (this._renderTimer !== null) {\n                clearTimeout(this._renderTimer);\n                this._renderTimer = null;\n              }\n\n              this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n            }\n          }, {\n            key: \"_processItems\",\n            value: function _processItems(items, styleCache) {\n              for (var i = 0, len = items.length; i < len; i++) {\n                if (items[i].str === undefined) {\n                  if (items[i].type === \"beginMarkedContentProps\" || items[i].type === \"beginMarkedContent\") {\n                    var parent = this._container;\n                    this._container = document.createElement(\"span\");\n\n                    this._container.classList.add(\"markedContent\");\n\n                    if (items[i].id !== null) {\n                      this._container.setAttribute(\"id\", \"\".concat(items[i].id));\n                    }\n\n                    parent.appendChild(this._container);\n                  } else if (items[i].type === \"endMarkedContent\") {\n                    this._container = this._container.parentNode;\n                  }\n\n                  continue;\n                }\n\n                this._textContentItemsStr.push(items[i].str);\n\n                appendText(this, items[i], styleCache, this._layoutTextCtx);\n              }\n            }\n          }, {\n            key: \"_layoutText\",\n            value: function _layoutText(textDiv) {\n              var textDivProperties = this._textDivProperties.get(textDiv);\n\n              var transform = \"\";\n\n              if (textDivProperties.canvasWidth !== 0 && textDivProperties.hasText) {\n                var _textDiv$style = textDiv.style,\n                    fontSize = _textDiv$style.fontSize,\n                    fontFamily = _textDiv$style.fontFamily;\n\n                if (fontSize !== this._layoutTextLastFontSize || fontFamily !== this._layoutTextLastFontFamily) {\n                  this._layoutTextCtx.font = \"\".concat(fontSize, \" \").concat(fontFamily);\n                  this._layoutTextLastFontSize = fontSize;\n                  this._layoutTextLastFontFamily = fontFamily;\n                }\n\n                var _this$_layoutTextCtx$ = this._layoutTextCtx.measureText(textDiv.textContent),\n                    width = _this$_layoutTextCtx$.width;\n\n                if (width > 0) {\n                  textDivProperties.scale = textDivProperties.canvasWidth / width;\n                  transform = \"scaleX(\".concat(textDivProperties.scale, \")\");\n                }\n              }\n\n              if (textDivProperties.angle !== 0) {\n                transform = \"rotate(\".concat(textDivProperties.angle, \"deg) \").concat(transform);\n              }\n\n              if (transform.length > 0) {\n                if (this._enhanceTextSelection) {\n                  textDivProperties.originalTransform = transform;\n                }\n\n                textDiv.style.transform = transform;\n              }\n\n              if (textDivProperties.hasText) {\n                this._container.appendChild(textDiv);\n              }\n\n              if (textDivProperties.hasEOL) {\n                var br = document.createElement(\"br\");\n                br.setAttribute(\"role\", \"presentation\");\n\n                this._container.appendChild(br);\n              }\n            }\n          }, {\n            key: \"_render\",\n            value: function _render() {\n              var _this47 = this;\n\n              var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n              var capability = (0, _util.createPromiseCapability)();\n              var styleCache = Object.create(null);\n\n              var canvas = this._document.createElement(\"canvas\");\n\n              canvas.height = canvas.width = DEFAULT_FONT_SIZE;\n              canvas.mozOpaque = true;\n              this._layoutTextCtx = canvas.getContext(\"2d\", {\n                alpha: false\n              });\n\n              if (this._textContent) {\n                var textItems = this._textContent.items;\n                var textStyles = this._textContent.styles;\n\n                this._processItems(textItems, textStyles);\n\n                capability.resolve();\n              } else if (this._textContentStream) {\n                var pump = function pump() {\n                  _this47._reader.read().then(function (_ref51) {\n                    var value = _ref51.value,\n                        done = _ref51.done;\n\n                    if (done) {\n                      capability.resolve();\n                      return;\n                    }\n\n                    Object.assign(styleCache, value.styles);\n\n                    _this47._processItems(value.items, styleCache);\n\n                    pump();\n                  }, capability.reject);\n                };\n\n                this._reader = this._textContentStream.getReader();\n                pump();\n              } else {\n                throw new Error('Neither \"textContent\" nor \"textContentStream\"' + \" parameters specified.\");\n              }\n\n              capability.promise.then(function () {\n                styleCache = null;\n\n                if (!timeout) {\n                  render(_this47);\n                } else {\n                  _this47._renderTimer = setTimeout(function () {\n                    render(_this47);\n                    _this47._renderTimer = null;\n                  }, timeout);\n                }\n              }, this._capability.reject);\n            }\n          }, {\n            key: \"expandTextDivs\",\n            value: function expandTextDivs() {\n              var expandDivs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n              if (!this._enhanceTextSelection || !this._renderingDone) {\n                return;\n              }\n\n              if (this._bounds !== null) {\n                expand(this);\n                this._bounds = null;\n              }\n\n              var transformBuf = [],\n                  paddingBuf = [];\n\n              for (var i = 0, ii = this._textDivs.length; i < ii; i++) {\n                var div = this._textDivs[i];\n\n                var divProps = this._textDivProperties.get(div);\n\n                if (!divProps.hasText) {\n                  continue;\n                }\n\n                if (expandDivs) {\n                  transformBuf.length = 0;\n                  paddingBuf.length = 0;\n\n                  if (divProps.originalTransform) {\n                    transformBuf.push(divProps.originalTransform);\n                  }\n\n                  if (divProps.paddingTop > 0) {\n                    paddingBuf.push(\"\".concat(divProps.paddingTop, \"px\"));\n                    transformBuf.push(\"translateY(\".concat(-divProps.paddingTop, \"px)\"));\n                  } else {\n                    paddingBuf.push(0);\n                  }\n\n                  if (divProps.paddingRight > 0) {\n                    paddingBuf.push(\"\".concat(divProps.paddingRight / divProps.scale, \"px\"));\n                  } else {\n                    paddingBuf.push(0);\n                  }\n\n                  if (divProps.paddingBottom > 0) {\n                    paddingBuf.push(\"\".concat(divProps.paddingBottom, \"px\"));\n                  } else {\n                    paddingBuf.push(0);\n                  }\n\n                  if (divProps.paddingLeft > 0) {\n                    paddingBuf.push(\"\".concat(divProps.paddingLeft / divProps.scale, \"px\"));\n                    transformBuf.push(\"translateX(\".concat(-divProps.paddingLeft / divProps.scale, \"px)\"));\n                  } else {\n                    paddingBuf.push(0);\n                  }\n\n                  div.style.padding = paddingBuf.join(\" \");\n\n                  if (transformBuf.length) {\n                    div.style.transform = transformBuf.join(\" \");\n                  }\n                } else {\n                  div.style.padding = null;\n                  div.style.transform = divProps.originalTransform;\n                }\n              }\n            }\n          }, {\n            key: \"promise\",\n            get: function get() {\n              return this._capability.promise;\n            }\n          }]);\n\n          return TextLayerRenderTask;\n        }();\n\n        function renderTextLayer(renderParameters) {\n          var task = new TextLayerRenderTask({\n            textContent: renderParameters.textContent,\n            textContentStream: renderParameters.textContentStream,\n            container: renderParameters.container,\n            viewport: renderParameters.viewport,\n            textDivs: renderParameters.textDivs,\n            textContentItemsStr: renderParameters.textContentItemsStr,\n            enhanceTextSelection: renderParameters.enhanceTextSelection\n          });\n\n          task._render(renderParameters.timeout);\n\n          return task;\n        }\n        /***/\n\n      },\n      /* 20 */\n\n      /***/\n      function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.SVGGraphics = void 0;\n\n        var _util = __w_pdfjs_require__(2);\n\n        var _display_utils = __w_pdfjs_require__(1);\n\n        var _is_node = __w_pdfjs_require__(4);\n\n        var SVGGraphics = function SVGGraphics() {\n          _classCallCheck(this, SVGGraphics);\n\n          (0, _util.unreachable)(\"Not implemented: SVGGraphics\");\n        };\n\n        exports.SVGGraphics = SVGGraphics;\n        {\n          var SVG_DEFAULTS = {\n            fontStyle: \"normal\",\n            fontWeight: \"normal\",\n            fillColor: \"#000000\"\n          };\n          var XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n          var XLINK_NS = \"http://www.w3.org/1999/xlink\";\n          var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n          var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n          var convertImgDataToPng = function () {\n            var PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n            var CHUNK_WRAPPER_SIZE = 12;\n            var crcTable = new Int32Array(256);\n\n            for (var i = 0; i < 256; i++) {\n              var c = i;\n\n              for (var h = 0; h < 8; h++) {\n                if (c & 1) {\n                  c = 0xedb88320 ^ c >> 1 & 0x7fffffff;\n                } else {\n                  c = c >> 1 & 0x7fffffff;\n                }\n              }\n\n              crcTable[i] = c;\n            }\n\n            function crc32(data, start, end) {\n              var crc = -1;\n\n              for (var _i12 = start; _i12 < end; _i12++) {\n                var a = (crc ^ data[_i12]) & 0xff;\n                var b = crcTable[a];\n                crc = crc >>> 8 ^ b;\n              }\n\n              return crc ^ -1;\n            }\n\n            function writePngChunk(type, body, data, offset) {\n              var p = offset;\n              var len = body.length;\n              data[p] = len >> 24 & 0xff;\n              data[p + 1] = len >> 16 & 0xff;\n              data[p + 2] = len >> 8 & 0xff;\n              data[p + 3] = len & 0xff;\n              p += 4;\n              data[p] = type.charCodeAt(0) & 0xff;\n              data[p + 1] = type.charCodeAt(1) & 0xff;\n              data[p + 2] = type.charCodeAt(2) & 0xff;\n              data[p + 3] = type.charCodeAt(3) & 0xff;\n              p += 4;\n              data.set(body, p);\n              p += body.length;\n              var crc = crc32(data, offset + 4, p);\n              data[p] = crc >> 24 & 0xff;\n              data[p + 1] = crc >> 16 & 0xff;\n              data[p + 2] = crc >> 8 & 0xff;\n              data[p + 3] = crc & 0xff;\n            }\n\n            function adler32(data, start, end) {\n              var a = 1;\n              var b = 0;\n\n              for (var _i13 = start; _i13 < end; ++_i13) {\n                a = (a + (data[_i13] & 0xff)) % 65521;\n                b = (b + a) % 65521;\n              }\n\n              return b << 16 | a;\n            }\n\n            function deflateSync(literals) {\n              if (!_is_node.isNodeJS) {\n                return deflateSyncUncompressed(literals);\n              }\n\n              try {\n                var input;\n\n                if (parseInt(process.versions.node) >= 8) {\n                  input = literals;\n                } else {\n                  input = Buffer.from(literals);\n                }\n\n                var output = require(\"zlib\").deflateSync(input, {\n                  level: 9\n                });\n\n                return output instanceof Uint8Array ? output : new Uint8Array(output);\n              } catch (e) {\n                (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n              }\n\n              return deflateSyncUncompressed(literals);\n            }\n\n            function deflateSyncUncompressed(literals) {\n              var len = literals.length;\n              var maxBlockLength = 0xffff;\n              var deflateBlocks = Math.ceil(len / maxBlockLength);\n              var idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n              var pi = 0;\n              idat[pi++] = 0x78;\n              idat[pi++] = 0x9c;\n              var pos = 0;\n\n              while (len > maxBlockLength) {\n                idat[pi++] = 0x00;\n                idat[pi++] = 0xff;\n                idat[pi++] = 0xff;\n                idat[pi++] = 0x00;\n                idat[pi++] = 0x00;\n                idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n                pi += maxBlockLength;\n                pos += maxBlockLength;\n                len -= maxBlockLength;\n              }\n\n              idat[pi++] = 0x01;\n              idat[pi++] = len & 0xff;\n              idat[pi++] = len >> 8 & 0xff;\n              idat[pi++] = ~len & 0xffff & 0xff;\n              idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n              idat.set(literals.subarray(pos), pi);\n              pi += literals.length - pos;\n              var adler = adler32(literals, 0, literals.length);\n              idat[pi++] = adler >> 24 & 0xff;\n              idat[pi++] = adler >> 16 & 0xff;\n              idat[pi++] = adler >> 8 & 0xff;\n              idat[pi++] = adler & 0xff;\n              return idat;\n            }\n\n            function encode(imgData, kind, forceDataSchema, isMask) {\n              var width = imgData.width;\n              var height = imgData.height;\n              var bitDepth, colorType, lineSize;\n              var bytes = imgData.data;\n\n              switch (kind) {\n                case _util.ImageKind.GRAYSCALE_1BPP:\n                  colorType = 0;\n                  bitDepth = 1;\n                  lineSize = width + 7 >> 3;\n                  break;\n\n                case _util.ImageKind.RGB_24BPP:\n                  colorType = 2;\n                  bitDepth = 8;\n                  lineSize = width * 3;\n                  break;\n\n                case _util.ImageKind.RGBA_32BPP:\n                  colorType = 6;\n                  bitDepth = 8;\n                  lineSize = width * 4;\n                  break;\n\n                default:\n                  throw new Error(\"invalid format\");\n              }\n\n              var literals = new Uint8Array((1 + lineSize) * height);\n              var offsetLiterals = 0,\n                  offsetBytes = 0;\n\n              for (var y = 0; y < height; ++y) {\n                literals[offsetLiterals++] = 0;\n                literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n                offsetBytes += lineSize;\n                offsetLiterals += lineSize;\n              }\n\n              if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n                offsetLiterals = 0;\n\n                for (var _y = 0; _y < height; _y++) {\n                  offsetLiterals++;\n\n                  for (var _i14 = 0; _i14 < lineSize; _i14++) {\n                    literals[offsetLiterals++] ^= 0xff;\n                  }\n                }\n              }\n\n              var ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\n              var idat = deflateSync(literals);\n              var pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n              var data = new Uint8Array(pngLength);\n              var offset = 0;\n              data.set(PNG_HEADER, offset);\n              offset += PNG_HEADER.length;\n              writePngChunk(\"IHDR\", ihdr, data, offset);\n              offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n              writePngChunk(\"IDATA\", idat, data, offset);\n              offset += CHUNK_WRAPPER_SIZE + idat.length;\n              writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n              return (0, _util.createObjectURL)(data, \"image/png\", forceDataSchema);\n            }\n\n            return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n              var kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n              return encode(imgData, kind, forceDataSchema, isMask);\n            };\n          }();\n\n          var SVGExtraState = /*#__PURE__*/function () {\n            function SVGExtraState() {\n              _classCallCheck(this, SVGExtraState);\n\n              this.fontSizeScale = 1;\n              this.fontWeight = SVG_DEFAULTS.fontWeight;\n              this.fontSize = 0;\n              this.textMatrix = _util.IDENTITY_MATRIX;\n              this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n              this.leading = 0;\n              this.textRenderingMode = _util.TextRenderingMode.FILL;\n              this.textMatrixScale = 1;\n              this.x = 0;\n              this.y = 0;\n              this.lineX = 0;\n              this.lineY = 0;\n              this.charSpacing = 0;\n              this.wordSpacing = 0;\n              this.textHScale = 1;\n              this.textRise = 0;\n              this.fillColor = SVG_DEFAULTS.fillColor;\n              this.strokeColor = \"#000000\";\n              this.fillAlpha = 1;\n              this.strokeAlpha = 1;\n              this.lineWidth = 1;\n              this.lineJoin = \"\";\n              this.lineCap = \"\";\n              this.miterLimit = 0;\n              this.dashArray = [];\n              this.dashPhase = 0;\n              this.dependencies = [];\n              this.activeClipUrl = null;\n              this.clipGroup = null;\n              this.maskId = \"\";\n            }\n\n            _createClass(SVGExtraState, [{\n              key: \"clone\",\n              value: function clone() {\n                return Object.create(this);\n              }\n            }, {\n              key: \"setCurrentPoint\",\n              value: function setCurrentPoint(x, y) {\n                this.x = x;\n                this.y = y;\n              }\n            }]);\n\n            return SVGExtraState;\n          }();\n\n          function opListToTree(opList) {\n            var opTree = [];\n            var tmp = [];\n\n            var _iterator58 = _createForOfIteratorHelper(opList),\n                _step58;\n\n            try {\n              for (_iterator58.s(); !(_step58 = _iterator58.n()).done;) {\n                var opListElement = _step58.value;\n\n                if (opListElement.fn === \"save\") {\n                  opTree.push({\n                    fnId: 92,\n                    fn: \"group\",\n                    items: []\n                  });\n                  tmp.push(opTree);\n                  opTree = opTree[opTree.length - 1].items;\n                  continue;\n                }\n\n                if (opListElement.fn === \"restore\") {\n                  opTree = tmp.pop();\n                } else {\n                  opTree.push(opListElement);\n                }\n              }\n            } catch (err) {\n              _iterator58.e(err);\n            } finally {\n              _iterator58.f();\n            }\n\n            return opTree;\n          }\n\n          function pf(value) {\n            if (Number.isInteger(value)) {\n              return value.toString();\n            }\n\n            var s = value.toFixed(10);\n            var i = s.length - 1;\n\n            if (s[i] !== \"0\") {\n              return s;\n            }\n\n            do {\n              i--;\n            } while (s[i] === \"0\");\n\n            return s.substring(0, s[i] === \".\" ? i : i + 1);\n          }\n\n          function pm(m) {\n            if (m[4] === 0 && m[5] === 0) {\n              if (m[1] === 0 && m[2] === 0) {\n                if (m[0] === 1 && m[3] === 1) {\n                  return \"\";\n                }\n\n                return \"scale(\".concat(pf(m[0]), \" \").concat(pf(m[3]), \")\");\n              }\n\n              if (m[0] === m[3] && m[1] === -m[2]) {\n                var a = Math.acos(m[0]) * 180 / Math.PI;\n                return \"rotate(\".concat(pf(a), \")\");\n              }\n            } else {\n              if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n                return \"translate(\".concat(pf(m[4]), \" \").concat(pf(m[5]), \")\");\n              }\n            }\n\n            return \"matrix(\".concat(pf(m[0]), \" \").concat(pf(m[1]), \" \").concat(pf(m[2]), \" \").concat(pf(m[3]), \" \").concat(pf(m[4]), \" \") + \"\".concat(pf(m[5]), \")\");\n          }\n\n          var clipCount = 0;\n          var maskCount = 0;\n          var shadingCount = 0;\n\n          exports.SVGGraphics = SVGGraphics = /*#__PURE__*/function () {\n            function SVGGraphics(commonObjs, objs) {\n              var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n              _classCallCheck(this, SVGGraphics);\n\n              this.svgFactory = new _display_utils.DOMSVGFactory();\n              this.current = new SVGExtraState();\n              this.transformMatrix = _util.IDENTITY_MATRIX;\n              this.transformStack = [];\n              this.extraStack = [];\n              this.commonObjs = commonObjs;\n              this.objs = objs;\n              this.pendingClip = null;\n              this.pendingEOFill = false;\n              this.embedFonts = false;\n              this.embeddedFonts = Object.create(null);\n              this.cssStyle = null;\n              this.forceDataSchema = !!forceDataSchema;\n              this._operatorIdMapping = [];\n\n              for (var op in _util.OPS) {\n                this._operatorIdMapping[_util.OPS[op]] = op;\n              }\n            }\n\n            _createClass(SVGGraphics, [{\n              key: \"save\",\n              value: function save() {\n                this.transformStack.push(this.transformMatrix);\n                var old = this.current;\n                this.extraStack.push(old);\n                this.current = old.clone();\n              }\n            }, {\n              key: \"restore\",\n              value: function restore() {\n                this.transformMatrix = this.transformStack.pop();\n                this.current = this.extraStack.pop();\n                this.pendingClip = null;\n                this.tgrp = null;\n              }\n            }, {\n              key: \"group\",\n              value: function group(items) {\n                this.save();\n                this.executeOpTree(items);\n                this.restore();\n              }\n            }, {\n              key: \"loadDependencies\",\n              value: function loadDependencies(operatorList) {\n                var _this48 = this;\n\n                var fnArray = operatorList.fnArray;\n                var argsArray = operatorList.argsArray;\n\n                for (var i = 0, ii = fnArray.length; i < ii; i++) {\n                  if (fnArray[i] !== _util.OPS.dependency) {\n                    continue;\n                  }\n\n                  var _iterator59 = _createForOfIteratorHelper(argsArray[i]),\n                      _step59;\n\n                  try {\n                    var _loop2 = function _loop2() {\n                      var obj = _step59.value;\n                      var objsPool = obj.startsWith(\"g_\") ? _this48.commonObjs : _this48.objs;\n                      var promise = new Promise(function (resolve) {\n                        objsPool.get(obj, resolve);\n                      });\n\n                      _this48.current.dependencies.push(promise);\n                    };\n\n                    for (_iterator59.s(); !(_step59 = _iterator59.n()).done;) {\n                      _loop2();\n                    }\n                  } catch (err) {\n                    _iterator59.e(err);\n                  } finally {\n                    _iterator59.f();\n                  }\n                }\n\n                return Promise.all(this.current.dependencies);\n              }\n            }, {\n              key: \"transform\",\n              value: function transform(a, b, c, d, e, f) {\n                var transformMatrix = [a, b, c, d, e, f];\n                this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n                this.tgrp = null;\n              }\n            }, {\n              key: \"getSVG\",\n              value: function getSVG(operatorList, viewport) {\n                var _this49 = this;\n\n                this.viewport = viewport;\n\n                var svgElement = this._initialize(viewport);\n\n                return this.loadDependencies(operatorList).then(function () {\n                  _this49.transformMatrix = _util.IDENTITY_MATRIX;\n\n                  _this49.executeOpTree(_this49.convertOpList(operatorList));\n\n                  return svgElement;\n                });\n              }\n            }, {\n              key: \"convertOpList\",\n              value: function convertOpList(operatorList) {\n                var operatorIdMapping = this._operatorIdMapping;\n                var argsArray = operatorList.argsArray;\n                var fnArray = operatorList.fnArray;\n                var opList = [];\n\n                for (var i = 0, ii = fnArray.length; i < ii; i++) {\n                  var fnId = fnArray[i];\n                  opList.push({\n                    fnId: fnId,\n                    fn: operatorIdMapping[fnId],\n                    args: argsArray[i]\n                  });\n                }\n\n                return opListToTree(opList);\n              }\n            }, {\n              key: \"executeOpTree\",\n              value: function executeOpTree(opTree) {\n                var _iterator60 = _createForOfIteratorHelper(opTree),\n                    _step60;\n\n                try {\n                  for (_iterator60.s(); !(_step60 = _iterator60.n()).done;) {\n                    var opTreeElement = _step60.value;\n                    var fn = opTreeElement.fn;\n                    var fnId = opTreeElement.fnId;\n                    var args = opTreeElement.args;\n\n                    switch (fnId | 0) {\n                      case _util.OPS.beginText:\n                        this.beginText();\n                        break;\n\n                      case _util.OPS.dependency:\n                        break;\n\n                      case _util.OPS.setLeading:\n                        this.setLeading(args);\n                        break;\n\n                      case _util.OPS.setLeadingMoveText:\n                        this.setLeadingMoveText(args[0], args[1]);\n                        break;\n\n                      case _util.OPS.setFont:\n                        this.setFont(args);\n                        break;\n\n                      case _util.OPS.showText:\n                        this.showText(args[0]);\n                        break;\n\n                      case _util.OPS.showSpacedText:\n                        this.showText(args[0]);\n                        break;\n\n                      case _util.OPS.endText:\n                        this.endText();\n                        break;\n\n                      case _util.OPS.moveText:\n                        this.moveText(args[0], args[1]);\n                        break;\n\n                      case _util.OPS.setCharSpacing:\n                        this.setCharSpacing(args[0]);\n                        break;\n\n                      case _util.OPS.setWordSpacing:\n                        this.setWordSpacing(args[0]);\n                        break;\n\n                      case _util.OPS.setHScale:\n                        this.setHScale(args[0]);\n                        break;\n\n                      case _util.OPS.setTextMatrix:\n                        this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n                        break;\n\n                      case _util.OPS.setTextRise:\n                        this.setTextRise(args[0]);\n                        break;\n\n                      case _util.OPS.setTextRenderingMode:\n                        this.setTextRenderingMode(args[0]);\n                        break;\n\n                      case _util.OPS.setLineWidth:\n                        this.setLineWidth(args[0]);\n                        break;\n\n                      case _util.OPS.setLineJoin:\n                        this.setLineJoin(args[0]);\n                        break;\n\n                      case _util.OPS.setLineCap:\n                        this.setLineCap(args[0]);\n                        break;\n\n                      case _util.OPS.setMiterLimit:\n                        this.setMiterLimit(args[0]);\n                        break;\n\n                      case _util.OPS.setFillRGBColor:\n                        this.setFillRGBColor(args[0], args[1], args[2]);\n                        break;\n\n                      case _util.OPS.setStrokeRGBColor:\n                        this.setStrokeRGBColor(args[0], args[1], args[2]);\n                        break;\n\n                      case _util.OPS.setStrokeColorN:\n                        this.setStrokeColorN(args);\n                        break;\n\n                      case _util.OPS.setFillColorN:\n                        this.setFillColorN(args);\n                        break;\n\n                      case _util.OPS.shadingFill:\n                        this.shadingFill(args[0]);\n                        break;\n\n                      case _util.OPS.setDash:\n                        this.setDash(args[0], args[1]);\n                        break;\n\n                      case _util.OPS.setRenderingIntent:\n                        this.setRenderingIntent(args[0]);\n                        break;\n\n                      case _util.OPS.setFlatness:\n                        this.setFlatness(args[0]);\n                        break;\n\n                      case _util.OPS.setGState:\n                        this.setGState(args[0]);\n                        break;\n\n                      case _util.OPS.fill:\n                        this.fill();\n                        break;\n\n                      case _util.OPS.eoFill:\n                        this.eoFill();\n                        break;\n\n                      case _util.OPS.stroke:\n                        this.stroke();\n                        break;\n\n                      case _util.OPS.fillStroke:\n                        this.fillStroke();\n                        break;\n\n                      case _util.OPS.eoFillStroke:\n                        this.eoFillStroke();\n                        break;\n\n                      case _util.OPS.clip:\n                        this.clip(\"nonzero\");\n                        break;\n\n                      case _util.OPS.eoClip:\n                        this.clip(\"evenodd\");\n                        break;\n\n                      case _util.OPS.paintSolidColorImageMask:\n                        this.paintSolidColorImageMask();\n                        break;\n\n                      case _util.OPS.paintImageXObject:\n                        this.paintImageXObject(args[0]);\n                        break;\n\n                      case _util.OPS.paintInlineImageXObject:\n                        this.paintInlineImageXObject(args[0]);\n                        break;\n\n                      case _util.OPS.paintImageMaskXObject:\n                        this.paintImageMaskXObject(args[0]);\n                        break;\n\n                      case _util.OPS.paintFormXObjectBegin:\n                        this.paintFormXObjectBegin(args[0], args[1]);\n                        break;\n\n                      case _util.OPS.paintFormXObjectEnd:\n                        this.paintFormXObjectEnd();\n                        break;\n\n                      case _util.OPS.closePath:\n                        this.closePath();\n                        break;\n\n                      case _util.OPS.closeStroke:\n                        this.closeStroke();\n                        break;\n\n                      case _util.OPS.closeFillStroke:\n                        this.closeFillStroke();\n                        break;\n\n                      case _util.OPS.closeEOFillStroke:\n                        this.closeEOFillStroke();\n                        break;\n\n                      case _util.OPS.nextLine:\n                        this.nextLine();\n                        break;\n\n                      case _util.OPS.transform:\n                        this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n                        break;\n\n                      case _util.OPS.constructPath:\n                        this.constructPath(args[0], args[1]);\n                        break;\n\n                      case _util.OPS.endPath:\n                        this.endPath();\n                        break;\n\n                      case 92:\n                        this.group(opTreeElement.items);\n                        break;\n\n                      default:\n                        (0, _util.warn)(\"Unimplemented operator \".concat(fn));\n                        break;\n                    }\n                  }\n                } catch (err) {\n                  _iterator60.e(err);\n                } finally {\n                  _iterator60.f();\n                }\n              }\n            }, {\n              key: \"setWordSpacing\",\n              value: function setWordSpacing(wordSpacing) {\n                this.current.wordSpacing = wordSpacing;\n              }\n            }, {\n              key: \"setCharSpacing\",\n              value: function setCharSpacing(charSpacing) {\n                this.current.charSpacing = charSpacing;\n              }\n            }, {\n              key: \"nextLine\",\n              value: function nextLine() {\n                this.moveText(0, this.current.leading);\n              }\n            }, {\n              key: \"setTextMatrix\",\n              value: function setTextMatrix(a, b, c, d, e, f) {\n                var current = this.current;\n                current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n                current.textMatrixScale = Math.hypot(a, b);\n                current.x = current.lineX = 0;\n                current.y = current.lineY = 0;\n                current.xcoords = [];\n                current.ycoords = [];\n                current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n                current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n                current.tspan.setAttributeNS(null, \"font-size\", \"\".concat(pf(current.fontSize), \"px\"));\n                current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n                current.txtElement = this.svgFactory.createElement(\"svg:text\");\n                current.txtElement.appendChild(current.tspan);\n              }\n            }, {\n              key: \"beginText\",\n              value: function beginText() {\n                var current = this.current;\n                current.x = current.lineX = 0;\n                current.y = current.lineY = 0;\n                current.textMatrix = _util.IDENTITY_MATRIX;\n                current.lineMatrix = _util.IDENTITY_MATRIX;\n                current.textMatrixScale = 1;\n                current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n                current.txtElement = this.svgFactory.createElement(\"svg:text\");\n                current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n                current.xcoords = [];\n                current.ycoords = [];\n              }\n            }, {\n              key: \"moveText\",\n              value: function moveText(x, y) {\n                var current = this.current;\n                current.x = current.lineX += x;\n                current.y = current.lineY += y;\n                current.xcoords = [];\n                current.ycoords = [];\n                current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n                current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n                current.tspan.setAttributeNS(null, \"font-size\", \"\".concat(pf(current.fontSize), \"px\"));\n                current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n              }\n            }, {\n              key: \"showText\",\n              value: function showText(glyphs) {\n                var current = this.current;\n                var font = current.font;\n                var fontSize = current.fontSize;\n\n                if (fontSize === 0) {\n                  return;\n                }\n\n                var fontSizeScale = current.fontSizeScale;\n                var charSpacing = current.charSpacing;\n                var wordSpacing = current.wordSpacing;\n                var fontDirection = current.fontDirection;\n                var textHScale = current.textHScale * fontDirection;\n                var vertical = font.vertical;\n                var spacingDir = vertical ? 1 : -1;\n                var defaultVMetrics = font.defaultVMetrics;\n                var widthAdvanceScale = fontSize * current.fontMatrix[0];\n                var x = 0;\n\n                var _iterator61 = _createForOfIteratorHelper(glyphs),\n                    _step61;\n\n                try {\n                  for (_iterator61.s(); !(_step61 = _iterator61.n()).done;) {\n                    var glyph = _step61.value;\n\n                    if (glyph === null) {\n                      x += fontDirection * wordSpacing;\n                      continue;\n                    } else if ((0, _util.isNum)(glyph)) {\n                      x += spacingDir * glyph * fontSize / 1000;\n                      continue;\n                    }\n\n                    var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n                    var character = glyph.fontChar;\n                    var scaledX = void 0,\n                        scaledY = void 0;\n                    var width = glyph.width;\n\n                    if (vertical) {\n                      var vx = void 0;\n                      var vmetric = glyph.vmetric || defaultVMetrics;\n                      vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n                      vx = -vx * widthAdvanceScale;\n                      var vy = vmetric[2] * widthAdvanceScale;\n                      width = vmetric ? -vmetric[0] : width;\n                      scaledX = vx / fontSizeScale;\n                      scaledY = (x + vy) / fontSizeScale;\n                    } else {\n                      scaledX = x / fontSizeScale;\n                      scaledY = 0;\n                    }\n\n                    if (glyph.isInFont || font.missingFile) {\n                      current.xcoords.push(current.x + scaledX);\n\n                      if (vertical) {\n                        current.ycoords.push(-current.y + scaledY);\n                      }\n\n                      current.tspan.textContent += character;\n                    } else {}\n\n                    var charWidth = void 0;\n\n                    if (vertical) {\n                      charWidth = width * widthAdvanceScale - spacing * fontDirection;\n                    } else {\n                      charWidth = width * widthAdvanceScale + spacing * fontDirection;\n                    }\n\n                    x += charWidth;\n                  }\n                } catch (err) {\n                  _iterator61.e(err);\n                } finally {\n                  _iterator61.f();\n                }\n\n                current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n\n                if (vertical) {\n                  current.tspan.setAttributeNS(null, \"y\", current.ycoords.map(pf).join(\" \"));\n                } else {\n                  current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n                }\n\n                if (vertical) {\n                  current.y -= x;\n                } else {\n                  current.x += x * textHScale;\n                }\n\n                current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n                current.tspan.setAttributeNS(null, \"font-size\", \"\".concat(pf(current.fontSize), \"px\"));\n\n                if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n                  current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n                }\n\n                if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n                  current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n                }\n\n                var fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n                if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                  if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n                    current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n                  }\n\n                  if (current.fillAlpha < 1) {\n                    current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n                  }\n                } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {\n                  current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n                } else {\n                  current.tspan.setAttributeNS(null, \"fill\", \"none\");\n                }\n\n                if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                  var lineWidthScale = 1 / (current.textMatrixScale || 1);\n\n                  this._setStrokeAttributes(current.tspan, lineWidthScale);\n                }\n\n                var textMatrix = current.textMatrix;\n\n                if (current.textRise !== 0) {\n                  textMatrix = textMatrix.slice();\n                  textMatrix[5] += current.textRise;\n                }\n\n                current.txtElement.setAttributeNS(null, \"transform\", \"\".concat(pm(textMatrix), \" scale(\").concat(pf(textHScale), \", -1)\"));\n                current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n                current.txtElement.appendChild(current.tspan);\n                current.txtgrp.appendChild(current.txtElement);\n\n                this._ensureTransformGroup().appendChild(current.txtElement);\n              }\n            }, {\n              key: \"setLeadingMoveText\",\n              value: function setLeadingMoveText(x, y) {\n                this.setLeading(-y);\n                this.moveText(x, y);\n              }\n            }, {\n              key: \"addFontStyle\",\n              value: function addFontStyle(fontObj) {\n                if (!fontObj.data) {\n                  throw new Error(\"addFontStyle: No font data available, \" + 'ensure that the \"fontExtraProperties\" API parameter is set.');\n                }\n\n                if (!this.cssStyle) {\n                  this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n                  this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n                  this.defs.appendChild(this.cssStyle);\n                }\n\n                var url = (0, _util.createObjectURL)(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n                this.cssStyle.textContent += \"@font-face { font-family: \\\"\".concat(fontObj.loadedName, \"\\\";\") + \" src: url(\".concat(url, \"); }\\n\");\n              }\n            }, {\n              key: \"setFont\",\n              value: function setFont(details) {\n                var current = this.current;\n                var fontObj = this.commonObjs.get(details[0]);\n                var size = details[1];\n                current.font = fontObj;\n\n                if (this.embedFonts && !fontObj.missingFile && !this.embeddedFonts[fontObj.loadedName]) {\n                  this.addFontStyle(fontObj);\n                  this.embeddedFonts[fontObj.loadedName] = fontObj;\n                }\n\n                current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n                var bold = \"normal\";\n\n                if (fontObj.black) {\n                  bold = \"900\";\n                } else if (fontObj.bold) {\n                  bold = \"bold\";\n                }\n\n                var italic = fontObj.italic ? \"italic\" : \"normal\";\n\n                if (size < 0) {\n                  size = -size;\n                  current.fontDirection = -1;\n                } else {\n                  current.fontDirection = 1;\n                }\n\n                current.fontSize = size;\n                current.fontFamily = fontObj.loadedName;\n                current.fontWeight = bold;\n                current.fontStyle = italic;\n                current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n                current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n                current.xcoords = [];\n                current.ycoords = [];\n              }\n            }, {\n              key: \"endText\",\n              value: function endText() {\n                var _current$txtElement;\n\n                var current = this.current;\n\n                if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && ((_current$txtElement = current.txtElement) === null || _current$txtElement === void 0 ? void 0 : _current$txtElement.hasChildNodes())) {\n                  current.element = current.txtElement;\n                  this.clip(\"nonzero\");\n                  this.endPath();\n                }\n              }\n            }, {\n              key: \"setLineWidth\",\n              value: function setLineWidth(width) {\n                if (width > 0) {\n                  this.current.lineWidth = width;\n                }\n              }\n            }, {\n              key: \"setLineCap\",\n              value: function setLineCap(style) {\n                this.current.lineCap = LINE_CAP_STYLES[style];\n              }\n            }, {\n              key: \"setLineJoin\",\n              value: function setLineJoin(style) {\n                this.current.lineJoin = LINE_JOIN_STYLES[style];\n              }\n            }, {\n              key: \"setMiterLimit\",\n              value: function setMiterLimit(limit) {\n                this.current.miterLimit = limit;\n              }\n            }, {\n              key: \"setStrokeAlpha\",\n              value: function setStrokeAlpha(strokeAlpha) {\n                this.current.strokeAlpha = strokeAlpha;\n              }\n            }, {\n              key: \"setStrokeRGBColor\",\n              value: function setStrokeRGBColor(r, g, b) {\n                this.current.strokeColor = _util.Util.makeHexColor(r, g, b);\n              }\n            }, {\n              key: \"setFillAlpha\",\n              value: function setFillAlpha(fillAlpha) {\n                this.current.fillAlpha = fillAlpha;\n              }\n            }, {\n              key: \"setFillRGBColor\",\n              value: function setFillRGBColor(r, g, b) {\n                this.current.fillColor = _util.Util.makeHexColor(r, g, b);\n                this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n                this.current.xcoords = [];\n                this.current.ycoords = [];\n              }\n            }, {\n              key: \"setStrokeColorN\",\n              value: function setStrokeColorN(args) {\n                this.current.strokeColor = this._makeColorN_Pattern(args);\n              }\n            }, {\n              key: \"setFillColorN\",\n              value: function setFillColorN(args) {\n                this.current.fillColor = this._makeColorN_Pattern(args);\n              }\n            }, {\n              key: \"shadingFill\",\n              value: function shadingFill(args) {\n                var width = this.viewport.width;\n                var height = this.viewport.height;\n\n                var inv = _util.Util.inverseTransform(this.transformMatrix);\n\n                var bl = _util.Util.applyTransform([0, 0], inv);\n\n                var br = _util.Util.applyTransform([0, height], inv);\n\n                var ul = _util.Util.applyTransform([width, 0], inv);\n\n                var ur = _util.Util.applyTransform([width, height], inv);\n\n                var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n                var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n                var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n                var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n                var rect = this.svgFactory.createElement(\"svg:rect\");\n                rect.setAttributeNS(null, \"x\", x0);\n                rect.setAttributeNS(null, \"y\", y0);\n                rect.setAttributeNS(null, \"width\", x1 - x0);\n                rect.setAttributeNS(null, \"height\", y1 - y0);\n                rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n\n                if (this.current.fillAlpha < 1) {\n                  rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n                }\n\n                this._ensureTransformGroup().appendChild(rect);\n              }\n            }, {\n              key: \"_makeColorN_Pattern\",\n              value: function _makeColorN_Pattern(args) {\n                if (args[0] === \"TilingPattern\") {\n                  return this._makeTilingPattern(args);\n                }\n\n                return this._makeShadingPattern(args);\n              }\n            }, {\n              key: \"_makeTilingPattern\",\n              value: function _makeTilingPattern(args) {\n                var color = args[1];\n                var operatorList = args[2];\n                var matrix = args[3] || _util.IDENTITY_MATRIX;\n\n                var _args$ = _slicedToArray(args[4], 4),\n                    x0 = _args$[0],\n                    y0 = _args$[1],\n                    x1 = _args$[2],\n                    y1 = _args$[3];\n\n                var xstep = args[5];\n                var ystep = args[6];\n                var paintType = args[7];\n                var tilingId = \"shading\".concat(shadingCount++);\n\n                var _util$Util$applyTrans = _util.Util.applyTransform([x0, y0], matrix),\n                    _util$Util$applyTrans2 = _slicedToArray(_util$Util$applyTrans, 2),\n                    tx0 = _util$Util$applyTrans2[0],\n                    ty0 = _util$Util$applyTrans2[1];\n\n                var _util$Util$applyTrans3 = _util.Util.applyTransform([x1, y1], matrix),\n                    _util$Util$applyTrans4 = _slicedToArray(_util$Util$applyTrans3, 2),\n                    tx1 = _util$Util$applyTrans4[0],\n                    ty1 = _util$Util$applyTrans4[1];\n\n                var _util$Util$singularVa = _util.Util.singularValueDecompose2dScale(matrix),\n                    _util$Util$singularVa2 = _slicedToArray(_util$Util$singularVa, 2),\n                    xscale = _util$Util$singularVa2[0],\n                    yscale = _util$Util$singularVa2[1];\n\n                var txstep = xstep * xscale;\n                var tystep = ystep * yscale;\n                var tiling = this.svgFactory.createElement(\"svg:pattern\");\n                tiling.setAttributeNS(null, \"id\", tilingId);\n                tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n                tiling.setAttributeNS(null, \"width\", txstep);\n                tiling.setAttributeNS(null, \"height\", tystep);\n                tiling.setAttributeNS(null, \"x\", \"\".concat(tx0));\n                tiling.setAttributeNS(null, \"y\", \"\".concat(ty0));\n                var svg = this.svg;\n                var transformMatrix = this.transformMatrix;\n                var fillColor = this.current.fillColor;\n                var strokeColor = this.current.strokeColor;\n                var bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n                this.svg = bbox;\n                this.transformMatrix = matrix;\n\n                if (paintType === 2) {\n                  var _util$Util;\n\n                  var cssColor = (_util$Util = _util.Util).makeHexColor.apply(_util$Util, _toConsumableArray(color));\n\n                  this.current.fillColor = cssColor;\n                  this.current.strokeColor = cssColor;\n                }\n\n                this.executeOpTree(this.convertOpList(operatorList));\n                this.svg = svg;\n                this.transformMatrix = transformMatrix;\n                this.current.fillColor = fillColor;\n                this.current.strokeColor = strokeColor;\n                tiling.appendChild(bbox.childNodes[0]);\n                this.defs.appendChild(tiling);\n                return \"url(#\".concat(tilingId, \")\");\n              }\n            }, {\n              key: \"_makeShadingPattern\",\n              value: function _makeShadingPattern(args) {\n                switch (args[0]) {\n                  case \"RadialAxial\":\n                    var shadingId = \"shading\".concat(shadingCount++);\n                    var colorStops = args[3];\n                    var gradient;\n\n                    switch (args[1]) {\n                      case \"axial\":\n                        var point0 = args[4];\n                        var point1 = args[5];\n                        gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n                        gradient.setAttributeNS(null, \"id\", shadingId);\n                        gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                        gradient.setAttributeNS(null, \"x1\", point0[0]);\n                        gradient.setAttributeNS(null, \"y1\", point0[1]);\n                        gradient.setAttributeNS(null, \"x2\", point1[0]);\n                        gradient.setAttributeNS(null, \"y2\", point1[1]);\n                        break;\n\n                      case \"radial\":\n                        var focalPoint = args[4];\n                        var circlePoint = args[5];\n                        var focalRadius = args[6];\n                        var circleRadius = args[7];\n                        gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n                        gradient.setAttributeNS(null, \"id\", shadingId);\n                        gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                        gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n                        gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n                        gradient.setAttributeNS(null, \"r\", circleRadius);\n                        gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n                        gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n                        gradient.setAttributeNS(null, \"fr\", focalRadius);\n                        break;\n\n                      default:\n                        throw new Error(\"Unknown RadialAxial type: \".concat(args[1]));\n                    }\n\n                    var _iterator62 = _createForOfIteratorHelper(colorStops),\n                        _step62;\n\n                    try {\n                      for (_iterator62.s(); !(_step62 = _iterator62.n()).done;) {\n                        var colorStop = _step62.value;\n                        var stop = this.svgFactory.createElement(\"svg:stop\");\n                        stop.setAttributeNS(null, \"offset\", colorStop[0]);\n                        stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n                        gradient.appendChild(stop);\n                      }\n                    } catch (err) {\n                      _iterator62.e(err);\n                    } finally {\n                      _iterator62.f();\n                    }\n\n                    this.defs.appendChild(gradient);\n                    return \"url(#\".concat(shadingId, \")\");\n\n                  case \"Mesh\":\n                    (0, _util.warn)(\"Unimplemented pattern Mesh\");\n                    return null;\n\n                  case \"Dummy\":\n                    return \"hotpink\";\n\n                  default:\n                    throw new Error(\"Unknown IR type: \".concat(args[0]));\n                }\n              }\n            }, {\n              key: \"setDash\",\n              value: function setDash(dashArray, dashPhase) {\n                this.current.dashArray = dashArray;\n                this.current.dashPhase = dashPhase;\n              }\n            }, {\n              key: \"constructPath\",\n              value: function constructPath(ops, args) {\n                var current = this.current;\n                var x = current.x,\n                    y = current.y;\n                var d = [];\n                var j = 0;\n\n                var _iterator63 = _createForOfIteratorHelper(ops),\n                    _step63;\n\n                try {\n                  for (_iterator63.s(); !(_step63 = _iterator63.n()).done;) {\n                    var op = _step63.value;\n\n                    switch (op | 0) {\n                      case _util.OPS.rectangle:\n                        x = args[j++];\n                        y = args[j++];\n                        var width = args[j++];\n                        var height = args[j++];\n                        var xw = x + width;\n                        var yh = y + height;\n                        d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n                        break;\n\n                      case _util.OPS.moveTo:\n                        x = args[j++];\n                        y = args[j++];\n                        d.push(\"M\", pf(x), pf(y));\n                        break;\n\n                      case _util.OPS.lineTo:\n                        x = args[j++];\n                        y = args[j++];\n                        d.push(\"L\", pf(x), pf(y));\n                        break;\n\n                      case _util.OPS.curveTo:\n                        x = args[j + 4];\n                        y = args[j + 5];\n                        d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n                        j += 6;\n                        break;\n\n                      case _util.OPS.curveTo2:\n                        d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n                        x = args[j + 2];\n                        y = args[j + 3];\n                        j += 4;\n                        break;\n\n                      case _util.OPS.curveTo3:\n                        x = args[j + 2];\n                        y = args[j + 3];\n                        d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n                        j += 4;\n                        break;\n\n                      case _util.OPS.closePath:\n                        d.push(\"Z\");\n                        break;\n                    }\n                  }\n                } catch (err) {\n                  _iterator63.e(err);\n                } finally {\n                  _iterator63.f();\n                }\n\n                d = d.join(\" \");\n\n                if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) {\n                  d = current.path.getAttributeNS(null, \"d\") + d;\n                } else {\n                  current.path = this.svgFactory.createElement(\"svg:path\");\n\n                  this._ensureTransformGroup().appendChild(current.path);\n                }\n\n                current.path.setAttributeNS(null, \"d\", d);\n                current.path.setAttributeNS(null, \"fill\", \"none\");\n                current.element = current.path;\n                current.setCurrentPoint(x, y);\n              }\n            }, {\n              key: \"endPath\",\n              value: function endPath() {\n                var current = this.current;\n                current.path = null;\n\n                if (!this.pendingClip) {\n                  return;\n                }\n\n                if (!current.element) {\n                  this.pendingClip = null;\n                  return;\n                }\n\n                var clipId = \"clippath\".concat(clipCount++);\n                var clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n                clipPath.setAttributeNS(null, \"id\", clipId);\n                clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n                var clipElement = current.element.cloneNode(true);\n\n                if (this.pendingClip === \"evenodd\") {\n                  clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n                } else {\n                  clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n                }\n\n                this.pendingClip = null;\n                clipPath.appendChild(clipElement);\n                this.defs.appendChild(clipPath);\n\n                if (current.activeClipUrl) {\n                  current.clipGroup = null;\n\n                  var _iterator64 = _createForOfIteratorHelper(this.extraStack),\n                      _step64;\n\n                  try {\n                    for (_iterator64.s(); !(_step64 = _iterator64.n()).done;) {\n                      var prev = _step64.value;\n                      prev.clipGroup = null;\n                    }\n                  } catch (err) {\n                    _iterator64.e(err);\n                  } finally {\n                    _iterator64.f();\n                  }\n\n                  clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n                }\n\n                current.activeClipUrl = \"url(#\".concat(clipId, \")\");\n                this.tgrp = null;\n              }\n            }, {\n              key: \"clip\",\n              value: function clip(type) {\n                this.pendingClip = type;\n              }\n            }, {\n              key: \"closePath\",\n              value: function closePath() {\n                var current = this.current;\n\n                if (current.path) {\n                  var d = \"\".concat(current.path.getAttributeNS(null, \"d\"), \"Z\");\n                  current.path.setAttributeNS(null, \"d\", d);\n                }\n              }\n            }, {\n              key: \"setLeading\",\n              value: function setLeading(leading) {\n                this.current.leading = -leading;\n              }\n            }, {\n              key: \"setTextRise\",\n              value: function setTextRise(textRise) {\n                this.current.textRise = textRise;\n              }\n            }, {\n              key: \"setTextRenderingMode\",\n              value: function setTextRenderingMode(textRenderingMode) {\n                this.current.textRenderingMode = textRenderingMode;\n              }\n            }, {\n              key: \"setHScale\",\n              value: function setHScale(scale) {\n                this.current.textHScale = scale / 100;\n              }\n            }, {\n              key: \"setRenderingIntent\",\n              value: function setRenderingIntent(intent) {}\n            }, {\n              key: \"setFlatness\",\n              value: function setFlatness(flatness) {}\n            }, {\n              key: \"setGState\",\n              value: function setGState(states) {\n                var _iterator65 = _createForOfIteratorHelper(states),\n                    _step65;\n\n                try {\n                  for (_iterator65.s(); !(_step65 = _iterator65.n()).done;) {\n                    var _step65$value = _slicedToArray(_step65.value, 2),\n                        key = _step65$value[0],\n                        value = _step65$value[1];\n\n                    switch (key) {\n                      case \"LW\":\n                        this.setLineWidth(value);\n                        break;\n\n                      case \"LC\":\n                        this.setLineCap(value);\n                        break;\n\n                      case \"LJ\":\n                        this.setLineJoin(value);\n                        break;\n\n                      case \"ML\":\n                        this.setMiterLimit(value);\n                        break;\n\n                      case \"D\":\n                        this.setDash(value[0], value[1]);\n                        break;\n\n                      case \"RI\":\n                        this.setRenderingIntent(value);\n                        break;\n\n                      case \"FL\":\n                        this.setFlatness(value);\n                        break;\n\n                      case \"Font\":\n                        this.setFont(value);\n                        break;\n\n                      case \"CA\":\n                        this.setStrokeAlpha(value);\n                        break;\n\n                      case \"ca\":\n                        this.setFillAlpha(value);\n                        break;\n\n                      default:\n                        (0, _util.warn)(\"Unimplemented graphic state operator \".concat(key));\n                        break;\n                    }\n                  }\n                } catch (err) {\n                  _iterator65.e(err);\n                } finally {\n                  _iterator65.f();\n                }\n              }\n            }, {\n              key: \"fill\",\n              value: function fill() {\n                var current = this.current;\n\n                if (current.element) {\n                  current.element.setAttributeNS(null, \"fill\", current.fillColor);\n                  current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n                  this.endPath();\n                }\n              }\n            }, {\n              key: \"stroke\",\n              value: function stroke() {\n                var current = this.current;\n\n                if (current.element) {\n                  this._setStrokeAttributes(current.element);\n\n                  current.element.setAttributeNS(null, \"fill\", \"none\");\n                  this.endPath();\n                }\n              }\n            }, {\n              key: \"_setStrokeAttributes\",\n              value: function _setStrokeAttributes(element) {\n                var lineWidthScale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n                var current = this.current;\n                var dashArray = current.dashArray;\n\n                if (lineWidthScale !== 1 && dashArray.length > 0) {\n                  dashArray = dashArray.map(function (value) {\n                    return lineWidthScale * value;\n                  });\n                }\n\n                element.setAttributeNS(null, \"stroke\", current.strokeColor);\n                element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n                element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n                element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n                element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n                element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n                element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n                element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n              }\n            }, {\n              key: \"eoFill\",\n              value: function eoFill() {\n                if (this.current.element) {\n                  this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n                }\n\n                this.fill();\n              }\n            }, {\n              key: \"fillStroke\",\n              value: function fillStroke() {\n                this.stroke();\n                this.fill();\n              }\n            }, {\n              key: \"eoFillStroke\",\n              value: function eoFillStroke() {\n                if (this.current.element) {\n                  this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n                }\n\n                this.fillStroke();\n              }\n            }, {\n              key: \"closeStroke\",\n              value: function closeStroke() {\n                this.closePath();\n                this.stroke();\n              }\n            }, {\n              key: \"closeFillStroke\",\n              value: function closeFillStroke() {\n                this.closePath();\n                this.fillStroke();\n              }\n            }, {\n              key: \"closeEOFillStroke\",\n              value: function closeEOFillStroke() {\n                this.closePath();\n                this.eoFillStroke();\n              }\n            }, {\n              key: \"paintSolidColorImageMask\",\n              value: function paintSolidColorImageMask() {\n                var rect = this.svgFactory.createElement(\"svg:rect\");\n                rect.setAttributeNS(null, \"x\", \"0\");\n                rect.setAttributeNS(null, \"y\", \"0\");\n                rect.setAttributeNS(null, \"width\", \"1px\");\n                rect.setAttributeNS(null, \"height\", \"1px\");\n                rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n                this._ensureTransformGroup().appendChild(rect);\n              }\n            }, {\n              key: \"paintImageXObject\",\n              value: function paintImageXObject(objId) {\n                var imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n                if (!imgData) {\n                  (0, _util.warn)(\"Dependent image with object ID \".concat(objId, \" is not ready yet\"));\n                  return;\n                }\n\n                this.paintInlineImageXObject(imgData);\n              }\n            }, {\n              key: \"paintInlineImageXObject\",\n              value: function paintInlineImageXObject(imgData, mask) {\n                var width = imgData.width;\n                var height = imgData.height;\n                var imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n                var cliprect = this.svgFactory.createElement(\"svg:rect\");\n                cliprect.setAttributeNS(null, \"x\", \"0\");\n                cliprect.setAttributeNS(null, \"y\", \"0\");\n                cliprect.setAttributeNS(null, \"width\", pf(width));\n                cliprect.setAttributeNS(null, \"height\", pf(height));\n                this.current.element = cliprect;\n                this.clip(\"nonzero\");\n                var imgEl = this.svgFactory.createElement(\"svg:image\");\n                imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n                imgEl.setAttributeNS(null, \"x\", \"0\");\n                imgEl.setAttributeNS(null, \"y\", pf(-height));\n                imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n                imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n                imgEl.setAttributeNS(null, \"transform\", \"scale(\".concat(pf(1 / width), \" \").concat(pf(-1 / height), \")\"));\n\n                if (mask) {\n                  mask.appendChild(imgEl);\n                } else {\n                  this._ensureTransformGroup().appendChild(imgEl);\n                }\n              }\n            }, {\n              key: \"paintImageMaskXObject\",\n              value: function paintImageMaskXObject(imgData) {\n                var current = this.current;\n                var width = imgData.width;\n                var height = imgData.height;\n                var fillColor = current.fillColor;\n                current.maskId = \"mask\".concat(maskCount++);\n                var mask = this.svgFactory.createElement(\"svg:mask\");\n                mask.setAttributeNS(null, \"id\", current.maskId);\n                var rect = this.svgFactory.createElement(\"svg:rect\");\n                rect.setAttributeNS(null, \"x\", \"0\");\n                rect.setAttributeNS(null, \"y\", \"0\");\n                rect.setAttributeNS(null, \"width\", pf(width));\n                rect.setAttributeNS(null, \"height\", pf(height));\n                rect.setAttributeNS(null, \"fill\", fillColor);\n                rect.setAttributeNS(null, \"mask\", \"url(#\".concat(current.maskId, \")\"));\n                this.defs.appendChild(mask);\n\n                this._ensureTransformGroup().appendChild(rect);\n\n                this.paintInlineImageXObject(imgData, mask);\n              }\n            }, {\n              key: \"paintFormXObjectBegin\",\n              value: function paintFormXObjectBegin(matrix, bbox) {\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n                }\n\n                if (bbox) {\n                  var width = bbox[2] - bbox[0];\n                  var height = bbox[3] - bbox[1];\n                  var cliprect = this.svgFactory.createElement(\"svg:rect\");\n                  cliprect.setAttributeNS(null, \"x\", bbox[0]);\n                  cliprect.setAttributeNS(null, \"y\", bbox[1]);\n                  cliprect.setAttributeNS(null, \"width\", pf(width));\n                  cliprect.setAttributeNS(null, \"height\", pf(height));\n                  this.current.element = cliprect;\n                  this.clip(\"nonzero\");\n                  this.endPath();\n                }\n              }\n            }, {\n              key: \"paintFormXObjectEnd\",\n              value: function paintFormXObjectEnd() {}\n            }, {\n              key: \"_initialize\",\n              value: function _initialize(viewport) {\n                var svg = this.svgFactory.create(viewport.width, viewport.height);\n                var definitions = this.svgFactory.createElement(\"svg:defs\");\n                svg.appendChild(definitions);\n                this.defs = definitions;\n                var rootGroup = this.svgFactory.createElement(\"svg:g\");\n                rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n                svg.appendChild(rootGroup);\n                this.svg = rootGroup;\n                return svg;\n              }\n            }, {\n              key: \"_ensureClipGroup\",\n              value: function _ensureClipGroup() {\n                if (!this.current.clipGroup) {\n                  var clipGroup = this.svgFactory.createElement(\"svg:g\");\n                  clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n                  this.svg.appendChild(clipGroup);\n                  this.current.clipGroup = clipGroup;\n                }\n\n                return this.current.clipGroup;\n              }\n            }, {\n              key: \"_ensureTransformGroup\",\n              value: function _ensureTransformGroup() {\n                if (!this.tgrp) {\n                  this.tgrp = this.svgFactory.createElement(\"svg:g\");\n                  this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n                  if (this.current.activeClipUrl) {\n                    this._ensureClipGroup().appendChild(this.tgrp);\n                  } else {\n                    this.svg.appendChild(this.tgrp);\n                  }\n                }\n\n                return this.tgrp;\n              }\n            }]);\n\n            return SVGGraphics;\n          }();\n        }\n        /***/\n      },\n      /* 21 */\n\n      /***/\n      function (__unused_webpack_module, exports) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.XfaLayer = void 0;\n\n        var XfaLayer = /*#__PURE__*/function () {\n          function XfaLayer() {\n            _classCallCheck(this, XfaLayer);\n          }\n\n          _createClass(XfaLayer, null, [{\n            key: \"setupStorage\",\n            value: function setupStorage(html, fieldId, element, storage) {\n              var storedData = storage.getValue(fieldId, {\n                value: null\n              });\n\n              switch (element.name) {\n                case \"textarea\":\n                  html.textContent = storedData.value !== null ? storedData.value : \"\";\n                  html.addEventListener(\"input\", function (event) {\n                    storage.setValue(fieldId, {\n                      value: event.target.value\n                    });\n                  });\n                  break;\n\n                case \"input\":\n                  if (storedData.value !== null) {\n                    html.setAttribute(\"value\", storedData.value);\n                  }\n\n                  if (element.attributes.type === \"radio\") {\n                    html.addEventListener(\"change\", function (event) {\n                      var target = event.target;\n\n                      var _iterator66 = _createForOfIteratorHelper(document.getElementsByName(target.name)),\n                          _step66;\n\n                      try {\n                        for (_iterator66.s(); !(_step66 = _iterator66.n()).done;) {\n                          var radio = _step66.value;\n\n                          if (radio !== target) {\n                            var id = radio.id;\n                            storage.setValue(id.split(\"-\")[0], {\n                              value: false\n                            });\n                          }\n                        }\n                      } catch (err) {\n                        _iterator66.e(err);\n                      } finally {\n                        _iterator66.f();\n                      }\n\n                      storage.setValue(fieldId, {\n                        value: target.checked\n                      });\n                    });\n                  } else {\n                    html.addEventListener(\"input\", function (event) {\n                      storage.setValue(fieldId, {\n                        value: event.target.value\n                      });\n                    });\n                  }\n\n                  break;\n\n                case \"select\":\n                  if (storedData.value !== null) {\n                    var _iterator67 = _createForOfIteratorHelper(element.children),\n                        _step67;\n\n                    try {\n                      for (_iterator67.s(); !(_step67 = _iterator67.n()).done;) {\n                        var option = _step67.value;\n\n                        if (option.attributes.value === storedData.value) {\n                          option.attributes.selected = true;\n                        }\n                      }\n                    } catch (err) {\n                      _iterator67.e(err);\n                    } finally {\n                      _iterator67.f();\n                    }\n                  }\n\n                  html.addEventListener(\"input\", function (event) {\n                    var options = event.target.options;\n                    var value = options.selectedIndex === -1 ? null : options[options.selectedIndex].value;\n                    storage.setValue(fieldId, {\n                      value: value\n                    });\n                  });\n                  break;\n              }\n            }\n          }, {\n            key: \"setAttributes\",\n            value: function setAttributes(html, element, storage) {\n              var attributes = element.attributes;\n\n              for (var _i15 = 0, _Object$entries2 = Object.entries(attributes); _i15 < _Object$entries2.length; _i15++) {\n                var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i15], 2),\n                    key = _Object$entries2$_i[0],\n                    value = _Object$entries2$_i[1];\n\n                if (value === null || value === undefined || key === \"fieldId\") {\n                  continue;\n                }\n\n                if (key !== \"style\") {\n                  if (key === \"textContent\") {\n                    html.textContent = value;\n                  } else {\n                    html.setAttribute(key, value);\n                  }\n                } else {\n                  Object.assign(html.style, value);\n                }\n              }\n\n              if (storage && attributes.fieldId !== undefined) {\n                this.setupStorage(html, attributes.fieldId, element, storage);\n              }\n            }\n          }, {\n            key: \"render\",\n            value: function render(parameters) {\n              var storage = parameters.annotationStorage;\n              var root = parameters.xfa;\n              var rootHtml = document.createElement(root.name);\n\n              if (root.attributes) {\n                this.setAttributes(rootHtml, root);\n              }\n\n              var stack = [[root, -1, rootHtml]];\n              var rootDiv = parameters.div;\n              rootDiv.appendChild(rootHtml);\n              var coeffs = parameters.viewport.transform.join(\",\");\n              rootDiv.style.transform = \"matrix(\".concat(coeffs, \")\");\n              rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n\n              while (stack.length > 0) {\n                var _stack = _slicedToArray(stack[stack.length - 1], 3),\n                    parent = _stack[0],\n                    i = _stack[1],\n                    html = _stack[2];\n\n                if (i + 1 === parent.children.length) {\n                  stack.pop();\n                  continue;\n                }\n\n                var child = parent.children[++stack[stack.length - 1][1]];\n\n                if (child === null) {\n                  continue;\n                }\n\n                var name = child.name;\n\n                if (name === \"#text\") {\n                  html.appendChild(document.createTextNode(child.value));\n                  continue;\n                }\n\n                var childHtml = document.createElement(name);\n                html.appendChild(childHtml);\n\n                if (child.attributes) {\n                  this.setAttributes(childHtml, child, storage);\n                }\n\n                if (child.children && child.children.length > 0) {\n                  stack.push([child, -1, childHtml]);\n                } else if (child.value) {\n                  childHtml.appendChild(document.createTextNode(child.value));\n                }\n              }\n            }\n          }, {\n            key: \"update\",\n            value: function update(parameters) {\n              var transform = \"matrix(\".concat(parameters.viewport.transform.join(\",\"), \")\");\n              parameters.div.style.transform = transform;\n              parameters.div.hidden = false;\n            }\n          }]);\n\n          return XfaLayer;\n        }();\n\n        exports.XfaLayer = XfaLayer;\n        /***/\n      },\n      /* 22 */\n\n      /***/\n      function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.PDFNodeStream = void 0;\n\n        var _util = __w_pdfjs_require__(2);\n\n        var _network_utils = __w_pdfjs_require__(23);\n\n        ;\n\n        var fs = require(\"fs\");\n\n        var http = require(\"http\");\n\n        var https = require(\"https\");\n\n        var url = require(\"url\");\n\n        var fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\n        function parseUrl(sourceUrl) {\n          var parsedUrl = url.parse(sourceUrl);\n\n          if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n            return parsedUrl;\n          }\n\n          if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n            return url.parse(\"file:///\".concat(sourceUrl));\n          }\n\n          if (!parsedUrl.host) {\n            parsedUrl.protocol = \"file:\";\n          }\n\n          return parsedUrl;\n        }\n\n        var PDFNodeStream = /*#__PURE__*/function () {\n          function PDFNodeStream(source) {\n            _classCallCheck(this, PDFNodeStream);\n\n            this.source = source;\n            this.url = parseUrl(source.url);\n            this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n            this.isFsUrl = this.url.protocol === \"file:\";\n            this.httpHeaders = this.isHttp && source.httpHeaders || {};\n            this._fullRequestReader = null;\n            this._rangeRequestReaders = [];\n          }\n\n          _createClass(PDFNodeStream, [{\n            key: \"getFullReader\",\n            value: function getFullReader() {\n              (0, _util.assert)(!this._fullRequestReader, \"PDFNodeStream.getFullReader can only be called once.\");\n              this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n              return this._fullRequestReader;\n            }\n          }, {\n            key: \"getRangeReader\",\n            value: function getRangeReader(start, end) {\n              if (end <= this._progressiveDataLength) {\n                return null;\n              }\n\n              var rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n\n              this._rangeRequestReaders.push(rangeReader);\n\n              return rangeReader;\n            }\n          }, {\n            key: \"cancelAllRequests\",\n            value: function cancelAllRequests(reason) {\n              if (this._fullRequestReader) {\n                this._fullRequestReader.cancel(reason);\n              }\n\n              var _iterator68 = _createForOfIteratorHelper(this._rangeRequestReaders.slice(0)),\n                  _step68;\n\n              try {\n                for (_iterator68.s(); !(_step68 = _iterator68.n()).done;) {\n                  var reader = _step68.value;\n                  reader.cancel(reason);\n                }\n              } catch (err) {\n                _iterator68.e(err);\n              } finally {\n                _iterator68.f();\n              }\n            }\n          }, {\n            key: \"_progressiveDataLength\",\n            get: function get() {\n              var _this$_fullRequestRea3, _this$_fullRequestRea4;\n\n              return (_this$_fullRequestRea3 = (_this$_fullRequestRea4 = this._fullRequestReader) === null || _this$_fullRequestRea4 === void 0 ? void 0 : _this$_fullRequestRea4._loaded) !== null && _this$_fullRequestRea3 !== void 0 ? _this$_fullRequestRea3 : 0;\n            }\n          }]);\n\n          return PDFNodeStream;\n        }();\n\n        exports.PDFNodeStream = PDFNodeStream;\n\n        var BaseFullReader = /*#__PURE__*/function () {\n          function BaseFullReader(stream) {\n            _classCallCheck(this, BaseFullReader);\n\n            this._url = stream.url;\n            this._done = false;\n            this._storedError = null;\n            this.onProgress = null;\n            var source = stream.source;\n            this._contentLength = source.length;\n            this._loaded = 0;\n            this._filename = null;\n            this._disableRange = source.disableRange || false;\n            this._rangeChunkSize = source.rangeChunkSize;\n\n            if (!this._rangeChunkSize && !this._disableRange) {\n              this._disableRange = true;\n            }\n\n            this._isStreamingSupported = !source.disableStream;\n            this._isRangeSupported = !source.disableRange;\n            this._readableStream = null;\n            this._readCapability = (0, _util.createPromiseCapability)();\n            this._headersCapability = (0, _util.createPromiseCapability)();\n          }\n\n          _createClass(BaseFullReader, [{\n            key: \"read\",\n            value: function () {\n              var _read3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n                var chunk, buffer;\n                return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        _context10.next = 2;\n                        return this._readCapability.promise;\n\n                      case 2:\n                        if (!this._done) {\n                          _context10.next = 4;\n                          break;\n                        }\n\n                        return _context10.abrupt(\"return\", {\n                          value: undefined,\n                          done: true\n                        });\n\n                      case 4:\n                        if (!this._storedError) {\n                          _context10.next = 6;\n                          break;\n                        }\n\n                        throw this._storedError;\n\n                      case 6:\n                        chunk = this._readableStream.read();\n\n                        if (!(chunk === null)) {\n                          _context10.next = 10;\n                          break;\n                        }\n\n                        this._readCapability = (0, _util.createPromiseCapability)();\n                        return _context10.abrupt(\"return\", this.read());\n\n                      case 10:\n                        this._loaded += chunk.length;\n\n                        if (this.onProgress) {\n                          this.onProgress({\n                            loaded: this._loaded,\n                            total: this._contentLength\n                          });\n                        }\n\n                        buffer = new Uint8Array(chunk).buffer;\n                        return _context10.abrupt(\"return\", {\n                          value: buffer,\n                          done: false\n                        });\n\n                      case 14:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10, this);\n              }));\n\n              function read() {\n                return _read3.apply(this, arguments);\n              }\n\n              return read;\n            }()\n          }, {\n            key: \"cancel\",\n            value: function cancel(reason) {\n              if (!this._readableStream) {\n                this._error(reason);\n\n                return;\n              }\n\n              this._readableStream.destroy(reason);\n            }\n          }, {\n            key: \"_error\",\n            value: function _error(reason) {\n              this._storedError = reason;\n\n              this._readCapability.resolve();\n            }\n          }, {\n            key: \"_setReadableStream\",\n            value: function _setReadableStream(readableStream) {\n              var _this50 = this;\n\n              this._readableStream = readableStream;\n              readableStream.on(\"readable\", function () {\n                _this50._readCapability.resolve();\n              });\n              readableStream.on(\"end\", function () {\n                readableStream.destroy();\n                _this50._done = true;\n\n                _this50._readCapability.resolve();\n              });\n              readableStream.on(\"error\", function (reason) {\n                _this50._error(reason);\n              });\n\n              if (!this._isStreamingSupported && this._isRangeSupported) {\n                this._error(new _util.AbortException(\"streaming is disabled\"));\n              }\n\n              if (this._storedError) {\n                this._readableStream.destroy(this._storedError);\n              }\n            }\n          }, {\n            key: \"headersReady\",\n            get: function get() {\n              return this._headersCapability.promise;\n            }\n          }, {\n            key: \"filename\",\n            get: function get() {\n              return this._filename;\n            }\n          }, {\n            key: \"contentLength\",\n            get: function get() {\n              return this._contentLength;\n            }\n          }, {\n            key: \"isRangeSupported\",\n            get: function get() {\n              return this._isRangeSupported;\n            }\n          }, {\n            key: \"isStreamingSupported\",\n            get: function get() {\n              return this._isStreamingSupported;\n            }\n          }]);\n\n          return BaseFullReader;\n        }();\n\n        var BaseRangeReader = /*#__PURE__*/function () {\n          function BaseRangeReader(stream) {\n            _classCallCheck(this, BaseRangeReader);\n\n            this._url = stream.url;\n            this._done = false;\n            this._storedError = null;\n            this.onProgress = null;\n            this._loaded = 0;\n            this._readableStream = null;\n            this._readCapability = (0, _util.createPromiseCapability)();\n            var source = stream.source;\n            this._isStreamingSupported = !source.disableStream;\n          }\n\n          _createClass(BaseRangeReader, [{\n            key: \"read\",\n            value: function () {\n              var _read4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n                var chunk, buffer;\n                return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n                  while (1) {\n                    switch (_context11.prev = _context11.next) {\n                      case 0:\n                        _context11.next = 2;\n                        return this._readCapability.promise;\n\n                      case 2:\n                        if (!this._done) {\n                          _context11.next = 4;\n                          break;\n                        }\n\n                        return _context11.abrupt(\"return\", {\n                          value: undefined,\n                          done: true\n                        });\n\n                      case 4:\n                        if (!this._storedError) {\n                          _context11.next = 6;\n                          break;\n                        }\n\n                        throw this._storedError;\n\n                      case 6:\n                        chunk = this._readableStream.read();\n\n                        if (!(chunk === null)) {\n                          _context11.next = 10;\n                          break;\n                        }\n\n                        this._readCapability = (0, _util.createPromiseCapability)();\n                        return _context11.abrupt(\"return\", this.read());\n\n                      case 10:\n                        this._loaded += chunk.length;\n\n                        if (this.onProgress) {\n                          this.onProgress({\n                            loaded: this._loaded\n                          });\n                        }\n\n                        buffer = new Uint8Array(chunk).buffer;\n                        return _context11.abrupt(\"return\", {\n                          value: buffer,\n                          done: false\n                        });\n\n                      case 14:\n                      case \"end\":\n                        return _context11.stop();\n                    }\n                  }\n                }, _callee11, this);\n              }));\n\n              function read() {\n                return _read4.apply(this, arguments);\n              }\n\n              return read;\n            }()\n          }, {\n            key: \"cancel\",\n            value: function cancel(reason) {\n              if (!this._readableStream) {\n                this._error(reason);\n\n                return;\n              }\n\n              this._readableStream.destroy(reason);\n            }\n          }, {\n            key: \"_error\",\n            value: function _error(reason) {\n              this._storedError = reason;\n\n              this._readCapability.resolve();\n            }\n          }, {\n            key: \"_setReadableStream\",\n            value: function _setReadableStream(readableStream) {\n              var _this51 = this;\n\n              this._readableStream = readableStream;\n              readableStream.on(\"readable\", function () {\n                _this51._readCapability.resolve();\n              });\n              readableStream.on(\"end\", function () {\n                readableStream.destroy();\n                _this51._done = true;\n\n                _this51._readCapability.resolve();\n              });\n              readableStream.on(\"error\", function (reason) {\n                _this51._error(reason);\n              });\n\n              if (this._storedError) {\n                this._readableStream.destroy(this._storedError);\n              }\n            }\n          }, {\n            key: \"isStreamingSupported\",\n            get: function get() {\n              return this._isStreamingSupported;\n            }\n          }]);\n\n          return BaseRangeReader;\n        }();\n\n        function createRequestOptions(parsedUrl, headers) {\n          return {\n            protocol: parsedUrl.protocol,\n            auth: parsedUrl.auth,\n            host: parsedUrl.hostname,\n            port: parsedUrl.port,\n            path: parsedUrl.path,\n            method: \"GET\",\n            headers: headers\n          };\n        }\n\n        var PDFNodeStreamFullReader = /*#__PURE__*/function (_BaseFullReader) {\n          _inherits(PDFNodeStreamFullReader, _BaseFullReader);\n\n          var _super40 = _createSuper(PDFNodeStreamFullReader);\n\n          function PDFNodeStreamFullReader(stream) {\n            var _this52;\n\n            _classCallCheck(this, PDFNodeStreamFullReader);\n\n            _this52 = _super40.call(this, stream);\n\n            var handleResponse = function handleResponse(response) {\n              if (response.statusCode === 404) {\n                var error = new _util.MissingPDFException(\"Missing PDF \\\"\".concat(_this52._url, \"\\\".\"));\n                _this52._storedError = error;\n\n                _this52._headersCapability.reject(error);\n\n                return;\n              }\n\n              _this52._headersCapability.resolve();\n\n              _this52._setReadableStream(response);\n\n              var getResponseHeader = function getResponseHeader(name) {\n                return _this52._readableStream.headers[name.toLowerCase()];\n              };\n\n              var _ref52 = (0, _network_utils.validateRangeRequestCapabilities)({\n                getResponseHeader: getResponseHeader,\n                isHttp: stream.isHttp,\n                rangeChunkSize: _this52._rangeChunkSize,\n                disableRange: _this52._disableRange\n              }),\n                  allowRangeRequests = _ref52.allowRangeRequests,\n                  suggestedLength = _ref52.suggestedLength;\n\n              _this52._isRangeSupported = allowRangeRequests;\n              _this52._contentLength = suggestedLength || _this52._contentLength;\n              _this52._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n            };\n\n            _this52._request = null;\n\n            if (_this52._url.protocol === \"http:\") {\n              _this52._request = http.request(createRequestOptions(_this52._url, stream.httpHeaders), handleResponse);\n            } else {\n              _this52._request = https.request(createRequestOptions(_this52._url, stream.httpHeaders), handleResponse);\n            }\n\n            _this52._request.on(\"error\", function (reason) {\n              _this52._storedError = reason;\n\n              _this52._headersCapability.reject(reason);\n            });\n\n            _this52._request.end();\n\n            return _this52;\n          }\n\n          return PDFNodeStreamFullReader;\n        }(BaseFullReader);\n\n        var PDFNodeStreamRangeReader = /*#__PURE__*/function (_BaseRangeReader) {\n          _inherits(PDFNodeStreamRangeReader, _BaseRangeReader);\n\n          var _super41 = _createSuper(PDFNodeStreamRangeReader);\n\n          function PDFNodeStreamRangeReader(stream, start, end) {\n            var _this53;\n\n            _classCallCheck(this, PDFNodeStreamRangeReader);\n\n            _this53 = _super41.call(this, stream);\n            _this53._httpHeaders = {};\n\n            for (var property in stream.httpHeaders) {\n              var value = stream.httpHeaders[property];\n\n              if (typeof value === \"undefined\") {\n                continue;\n              }\n\n              _this53._httpHeaders[property] = value;\n            }\n\n            _this53._httpHeaders.Range = \"bytes=\".concat(start, \"-\").concat(end - 1);\n\n            var handleResponse = function handleResponse(response) {\n              if (response.statusCode === 404) {\n                var error = new _util.MissingPDFException(\"Missing PDF \\\"\".concat(_this53._url, \"\\\".\"));\n                _this53._storedError = error;\n                return;\n              }\n\n              _this53._setReadableStream(response);\n            };\n\n            _this53._request = null;\n\n            if (_this53._url.protocol === \"http:\") {\n              _this53._request = http.request(createRequestOptions(_this53._url, _this53._httpHeaders), handleResponse);\n            } else {\n              _this53._request = https.request(createRequestOptions(_this53._url, _this53._httpHeaders), handleResponse);\n            }\n\n            _this53._request.on(\"error\", function (reason) {\n              _this53._storedError = reason;\n            });\n\n            _this53._request.end();\n\n            return _this53;\n          }\n\n          return PDFNodeStreamRangeReader;\n        }(BaseRangeReader);\n\n        var PDFNodeStreamFsFullReader = /*#__PURE__*/function (_BaseFullReader2) {\n          _inherits(PDFNodeStreamFsFullReader, _BaseFullReader2);\n\n          var _super42 = _createSuper(PDFNodeStreamFsFullReader);\n\n          function PDFNodeStreamFsFullReader(stream) {\n            var _this54;\n\n            _classCallCheck(this, PDFNodeStreamFsFullReader);\n\n            _this54 = _super42.call(this, stream);\n            var path = decodeURIComponent(_this54._url.path);\n\n            if (fileUriRegex.test(_this54._url.href)) {\n              path = path.replace(/^\\//, \"\");\n            }\n\n            fs.lstat(path, function (error, stat) {\n              if (error) {\n                if (error.code === \"ENOENT\") {\n                  error = new _util.MissingPDFException(\"Missing PDF \\\"\".concat(path, \"\\\".\"));\n                }\n\n                _this54._storedError = error;\n\n                _this54._headersCapability.reject(error);\n\n                return;\n              }\n\n              _this54._contentLength = stat.size;\n\n              _this54._setReadableStream(fs.createReadStream(path));\n\n              _this54._headersCapability.resolve();\n            });\n            return _this54;\n          }\n\n          return PDFNodeStreamFsFullReader;\n        }(BaseFullReader);\n\n        var PDFNodeStreamFsRangeReader = /*#__PURE__*/function (_BaseRangeReader2) {\n          _inherits(PDFNodeStreamFsRangeReader, _BaseRangeReader2);\n\n          var _super43 = _createSuper(PDFNodeStreamFsRangeReader);\n\n          function PDFNodeStreamFsRangeReader(stream, start, end) {\n            var _this55;\n\n            _classCallCheck(this, PDFNodeStreamFsRangeReader);\n\n            _this55 = _super43.call(this, stream);\n            var path = decodeURIComponent(_this55._url.path);\n\n            if (fileUriRegex.test(_this55._url.href)) {\n              path = path.replace(/^\\//, \"\");\n            }\n\n            _this55._setReadableStream(fs.createReadStream(path, {\n              start: start,\n              end: end - 1\n            }));\n\n            return _this55;\n          }\n\n          return PDFNodeStreamFsRangeReader;\n        }(BaseRangeReader);\n        /***/\n\n      },\n      /* 23 */\n\n      /***/\n      function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.createResponseStatusError = createResponseStatusError;\n        exports.extractFilenameFromHeader = extractFilenameFromHeader;\n        exports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\n        exports.validateResponseStatus = validateResponseStatus;\n\n        var _util = __w_pdfjs_require__(2);\n\n        var _content_disposition = __w_pdfjs_require__(24);\n\n        var _display_utils = __w_pdfjs_require__(1);\n\n        function validateRangeRequestCapabilities(_ref53) {\n          var getResponseHeader = _ref53.getResponseHeader,\n              isHttp = _ref53.isHttp,\n              rangeChunkSize = _ref53.rangeChunkSize,\n              disableRange = _ref53.disableRange;\n          (0, _util.assert)(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n          var returnValues = {\n            allowRangeRequests: false,\n            suggestedLength: undefined\n          };\n          var length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n\n          if (!Number.isInteger(length)) {\n            return returnValues;\n          }\n\n          returnValues.suggestedLength = length;\n\n          if (length <= 2 * rangeChunkSize) {\n            return returnValues;\n          }\n\n          if (disableRange || !isHttp) {\n            return returnValues;\n          }\n\n          if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n            return returnValues;\n          }\n\n          var contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n\n          if (contentEncoding !== \"identity\") {\n            return returnValues;\n          }\n\n          returnValues.allowRangeRequests = true;\n          return returnValues;\n        }\n\n        function extractFilenameFromHeader(getResponseHeader) {\n          var contentDisposition = getResponseHeader(\"Content-Disposition\");\n\n          if (contentDisposition) {\n            var filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n\n            if (filename.includes(\"%\")) {\n              try {\n                filename = decodeURIComponent(filename);\n              } catch (ex) {}\n            }\n\n            if ((0, _display_utils.isPdfFile)(filename)) {\n              return filename;\n            }\n          }\n\n          return null;\n        }\n\n        function createResponseStatusError(status, url) {\n          if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\n            return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n          }\n\n          return new _util.UnexpectedResponseException(\"Unexpected server response (\".concat(status, \") while retrieving PDF \\\"\").concat(url, \"\\\".\"), status);\n        }\n\n        function validateResponseStatus(status) {\n          return status === 200 || status === 206;\n        }\n        /***/\n\n      },\n      /* 24 */\n\n      /***/\n      function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\n\n        var _util = __w_pdfjs_require__(2);\n\n        function getFilenameFromContentDispositionHeader(contentDisposition) {\n          var needsEncodingFixup = true;\n          var tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n\n          if (tmp) {\n            tmp = tmp[1];\n            var filename = rfc2616unquote(tmp);\n            filename = unescape(filename);\n            filename = rfc5987decode(filename);\n            filename = rfc2047decode(filename);\n            return fixupEncoding(filename);\n          }\n\n          tmp = rfc2231getparam(contentDisposition);\n\n          if (tmp) {\n            var _filename = rfc2047decode(tmp);\n\n            return fixupEncoding(_filename);\n          }\n\n          tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n\n          if (tmp) {\n            tmp = tmp[1];\n\n            var _filename2 = rfc2616unquote(tmp);\n\n            _filename2 = rfc2047decode(_filename2);\n            return fixupEncoding(_filename2);\n          }\n\n          function toParamRegExp(attributePattern, flags) {\n            return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n          }\n\n          function textdecode(encoding, value) {\n            if (encoding) {\n              if (!/^[\\x00-\\xFF]+$/.test(value)) {\n                return value;\n              }\n\n              try {\n                var decoder = new TextDecoder(encoding, {\n                  fatal: true\n                });\n                var buffer = (0, _util.stringToBytes)(value);\n                value = decoder.decode(buffer);\n                needsEncodingFixup = false;\n              } catch (e) {\n                if (/^utf-?8$/i.test(encoding)) {\n                  try {\n                    value = decodeURIComponent(escape(value));\n                    needsEncodingFixup = false;\n                  } catch (err) {}\n                }\n              }\n            }\n\n            return value;\n          }\n\n          function fixupEncoding(value) {\n            if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n              value = textdecode(\"utf-8\", value);\n\n              if (needsEncodingFixup) {\n                value = textdecode(\"iso-8859-1\", value);\n              }\n            }\n\n            return value;\n          }\n\n          function rfc2231getparam(contentDispositionStr) {\n            var matches = [];\n            var match;\n            var iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n\n            while ((match = iter.exec(contentDispositionStr)) !== null) {\n              var _match = match,\n                  _match2 = _slicedToArray(_match, 4),\n                  n = _match2[1],\n                  quot = _match2[2],\n                  part = _match2[3];\n\n              n = parseInt(n, 10);\n\n              if (n in matches) {\n                if (n === 0) {\n                  break;\n                }\n\n                continue;\n              }\n\n              matches[n] = [quot, part];\n            }\n\n            var parts = [];\n\n            for (var _n = 0; _n < matches.length; ++_n) {\n              if (!(_n in matches)) {\n                break;\n              }\n\n              var _matches$_n = _slicedToArray(matches[_n], 2),\n                  _quot = _matches$_n[0],\n                  _part = _matches$_n[1];\n\n              _part = rfc2616unquote(_part);\n\n              if (_quot) {\n                _part = unescape(_part);\n\n                if (_n === 0) {\n                  _part = rfc5987decode(_part);\n                }\n              }\n\n              parts.push(_part);\n            }\n\n            return parts.join(\"\");\n          }\n\n          function rfc2616unquote(value) {\n            if (value.startsWith('\"')) {\n              var parts = value.slice(1).split('\\\\\"');\n\n              for (var i = 0; i < parts.length; ++i) {\n                var quotindex = parts[i].indexOf('\"');\n\n                if (quotindex !== -1) {\n                  parts[i] = parts[i].slice(0, quotindex);\n                  parts.length = i + 1;\n                }\n\n                parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n              }\n\n              value = parts.join('\"');\n            }\n\n            return value;\n          }\n\n          function rfc5987decode(extvalue) {\n            var encodingend = extvalue.indexOf(\"'\");\n\n            if (encodingend === -1) {\n              return extvalue;\n            }\n\n            var encoding = extvalue.slice(0, encodingend);\n            var langvalue = extvalue.slice(encodingend + 1);\n            var value = langvalue.replace(/^[^']*'/, \"\");\n            return textdecode(encoding, value);\n          }\n\n          function rfc2047decode(value) {\n            if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n              return value;\n            }\n\n            return value.replace(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (matches, charset, encoding, text) {\n              if (encoding === \"q\" || encoding === \"Q\") {\n                text = text.replace(/_/g, \" \");\n                text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n                  return String.fromCharCode(parseInt(hex, 16));\n                });\n                return textdecode(charset, text);\n              }\n\n              try {\n                text = atob(text);\n              } catch (e) {}\n\n              return textdecode(charset, text);\n            });\n          }\n\n          return \"\";\n        }\n        /***/\n\n      },\n      /* 25 */\n\n      /***/\n      function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.PDFNetworkStream = void 0;\n\n        var _util = __w_pdfjs_require__(2);\n\n        var _network_utils = __w_pdfjs_require__(23);\n\n        ;\n        var OK_RESPONSE = 200;\n        var PARTIAL_CONTENT_RESPONSE = 206;\n\n        function getArrayBuffer(xhr) {\n          var data = xhr.response;\n\n          if (typeof data !== \"string\") {\n            return data;\n          }\n\n          var array = (0, _util.stringToBytes)(data);\n          return array.buffer;\n        }\n\n        var NetworkManager = /*#__PURE__*/function () {\n          function NetworkManager(url, args) {\n            _classCallCheck(this, NetworkManager);\n\n            this.url = url;\n            args = args || {};\n            this.isHttp = /^https?:/i.test(url);\n            this.httpHeaders = this.isHttp && args.httpHeaders || {};\n            this.withCredentials = args.withCredentials || false;\n\n            this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n              return new XMLHttpRequest();\n            };\n\n            this.currXhrId = 0;\n            this.pendingRequests = Object.create(null);\n          }\n\n          _createClass(NetworkManager, [{\n            key: \"requestRange\",\n            value: function requestRange(begin, end, listeners) {\n              var args = {\n                begin: begin,\n                end: end\n              };\n\n              for (var prop in listeners) {\n                args[prop] = listeners[prop];\n              }\n\n              return this.request(args);\n            }\n          }, {\n            key: \"requestFull\",\n            value: function requestFull(listeners) {\n              return this.request(listeners);\n            }\n          }, {\n            key: \"request\",\n            value: function request(args) {\n              var xhr = this.getXhr();\n              var xhrId = this.currXhrId++;\n              var pendingRequest = this.pendingRequests[xhrId] = {\n                xhr: xhr\n              };\n              xhr.open(\"GET\", this.url);\n              xhr.withCredentials = this.withCredentials;\n\n              for (var property in this.httpHeaders) {\n                var value = this.httpHeaders[property];\n\n                if (typeof value === \"undefined\") {\n                  continue;\n                }\n\n                xhr.setRequestHeader(property, value);\n              }\n\n              if (this.isHttp && \"begin\" in args && \"end\" in args) {\n                xhr.setRequestHeader(\"Range\", \"bytes=\".concat(args.begin, \"-\").concat(args.end - 1));\n                pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n              } else {\n                pendingRequest.expectedStatus = OK_RESPONSE;\n              }\n\n              xhr.responseType = \"arraybuffer\";\n\n              if (args.onError) {\n                xhr.onerror = function (evt) {\n                  args.onError(xhr.status);\n                };\n              }\n\n              xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n              xhr.onprogress = this.onProgress.bind(this, xhrId);\n              pendingRequest.onHeadersReceived = args.onHeadersReceived;\n              pendingRequest.onDone = args.onDone;\n              pendingRequest.onError = args.onError;\n              pendingRequest.onProgress = args.onProgress;\n              xhr.send(null);\n              return xhrId;\n            }\n          }, {\n            key: \"onProgress\",\n            value: function onProgress(xhrId, evt) {\n              var pendingRequest = this.pendingRequests[xhrId];\n\n              if (!pendingRequest) {\n                return;\n              }\n\n              if (pendingRequest.onProgress) {\n                pendingRequest.onProgress(evt);\n              }\n            }\n          }, {\n            key: \"onStateChange\",\n            value: function onStateChange(xhrId, evt) {\n              var pendingRequest = this.pendingRequests[xhrId];\n\n              if (!pendingRequest) {\n                return;\n              }\n\n              var xhr = pendingRequest.xhr;\n\n              if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n                pendingRequest.onHeadersReceived();\n                delete pendingRequest.onHeadersReceived;\n              }\n\n              if (xhr.readyState !== 4) {\n                return;\n              }\n\n              if (!(xhrId in this.pendingRequests)) {\n                return;\n              }\n\n              delete this.pendingRequests[xhrId];\n\n              if (xhr.status === 0 && this.isHttp) {\n                if (pendingRequest.onError) {\n                  pendingRequest.onError(xhr.status);\n                }\n\n                return;\n              }\n\n              var xhrStatus = xhr.status || OK_RESPONSE;\n              var ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n              if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n                if (pendingRequest.onError) {\n                  pendingRequest.onError(xhr.status);\n                }\n\n                return;\n              }\n\n              var chunk = getArrayBuffer(xhr);\n\n              if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n                var rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n                var matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n                pendingRequest.onDone({\n                  begin: parseInt(matches[1], 10),\n                  chunk: chunk\n                });\n              } else if (chunk) {\n                pendingRequest.onDone({\n                  begin: 0,\n                  chunk: chunk\n                });\n              } else if (pendingRequest.onError) {\n                pendingRequest.onError(xhr.status);\n              }\n            }\n          }, {\n            key: \"getRequestXhr\",\n            value: function getRequestXhr(xhrId) {\n              return this.pendingRequests[xhrId].xhr;\n            }\n          }, {\n            key: \"isPendingRequest\",\n            value: function isPendingRequest(xhrId) {\n              return xhrId in this.pendingRequests;\n            }\n          }, {\n            key: \"abortRequest\",\n            value: function abortRequest(xhrId) {\n              var xhr = this.pendingRequests[xhrId].xhr;\n              delete this.pendingRequests[xhrId];\n              xhr.abort();\n            }\n          }]);\n\n          return NetworkManager;\n        }();\n\n        var PDFNetworkStream = /*#__PURE__*/function () {\n          function PDFNetworkStream(source) {\n            _classCallCheck(this, PDFNetworkStream);\n\n            this._source = source;\n            this._manager = new NetworkManager(source.url, {\n              httpHeaders: source.httpHeaders,\n              withCredentials: source.withCredentials\n            });\n            this._rangeChunkSize = source.rangeChunkSize;\n            this._fullRequestReader = null;\n            this._rangeRequestReaders = [];\n          }\n\n          _createClass(PDFNetworkStream, [{\n            key: \"_onRangeRequestReaderClosed\",\n            value: function _onRangeRequestReaderClosed(reader) {\n              var i = this._rangeRequestReaders.indexOf(reader);\n\n              if (i >= 0) {\n                this._rangeRequestReaders.splice(i, 1);\n              }\n            }\n          }, {\n            key: \"getFullReader\",\n            value: function getFullReader() {\n              (0, _util.assert)(!this._fullRequestReader, \"PDFNetworkStream.getFullReader can only be called once.\");\n              this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n              return this._fullRequestReader;\n            }\n          }, {\n            key: \"getRangeReader\",\n            value: function getRangeReader(begin, end) {\n              var reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n              reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n\n              this._rangeRequestReaders.push(reader);\n\n              return reader;\n            }\n          }, {\n            key: \"cancelAllRequests\",\n            value: function cancelAllRequests(reason) {\n              if (this._fullRequestReader) {\n                this._fullRequestReader.cancel(reason);\n              }\n\n              var _iterator69 = _createForOfIteratorHelper(this._rangeRequestReaders.slice(0)),\n                  _step69;\n\n              try {\n                for (_iterator69.s(); !(_step69 = _iterator69.n()).done;) {\n                  var reader = _step69.value;\n                  reader.cancel(reason);\n                }\n              } catch (err) {\n                _iterator69.e(err);\n              } finally {\n                _iterator69.f();\n              }\n            }\n          }]);\n\n          return PDFNetworkStream;\n        }();\n\n        exports.PDFNetworkStream = PDFNetworkStream;\n\n        var PDFNetworkStreamFullRequestReader = /*#__PURE__*/function () {\n          function PDFNetworkStreamFullRequestReader(manager, source) {\n            _classCallCheck(this, PDFNetworkStreamFullRequestReader);\n\n            this._manager = manager;\n            var args = {\n              onHeadersReceived: this._onHeadersReceived.bind(this),\n              onDone: this._onDone.bind(this),\n              onError: this._onError.bind(this),\n              onProgress: this._onProgress.bind(this)\n            };\n            this._url = source.url;\n            this._fullRequestId = manager.requestFull(args);\n            this._headersReceivedCapability = (0, _util.createPromiseCapability)();\n            this._disableRange = source.disableRange || false;\n            this._contentLength = source.length;\n            this._rangeChunkSize = source.rangeChunkSize;\n\n            if (!this._rangeChunkSize && !this._disableRange) {\n              this._disableRange = true;\n            }\n\n            this._isStreamingSupported = false;\n            this._isRangeSupported = false;\n            this._cachedChunks = [];\n            this._requests = [];\n            this._done = false;\n            this._storedError = undefined;\n            this._filename = null;\n            this.onProgress = null;\n          }\n\n          _createClass(PDFNetworkStreamFullRequestReader, [{\n            key: \"_onHeadersReceived\",\n            value: function _onHeadersReceived() {\n              var fullRequestXhrId = this._fullRequestId;\n\n              var fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n              var getResponseHeader = function getResponseHeader(name) {\n                return fullRequestXhr.getResponseHeader(name);\n              };\n\n              var _ref54 = (0, _network_utils.validateRangeRequestCapabilities)({\n                getResponseHeader: getResponseHeader,\n                isHttp: this._manager.isHttp,\n                rangeChunkSize: this._rangeChunkSize,\n                disableRange: this._disableRange\n              }),\n                  allowRangeRequests = _ref54.allowRangeRequests,\n                  suggestedLength = _ref54.suggestedLength;\n\n              if (allowRangeRequests) {\n                this._isRangeSupported = true;\n              }\n\n              this._contentLength = suggestedLength || this._contentLength;\n              this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n              if (this._isRangeSupported) {\n                this._manager.abortRequest(fullRequestXhrId);\n              }\n\n              this._headersReceivedCapability.resolve();\n            }\n          }, {\n            key: \"_onDone\",\n            value: function _onDone(args) {\n              if (args) {\n                if (this._requests.length > 0) {\n                  var requestCapability = this._requests.shift();\n\n                  requestCapability.resolve({\n                    value: args.chunk,\n                    done: false\n                  });\n                } else {\n                  this._cachedChunks.push(args.chunk);\n                }\n              }\n\n              this._done = true;\n\n              if (this._cachedChunks.length > 0) {\n                return;\n              }\n\n              var _iterator70 = _createForOfIteratorHelper(this._requests),\n                  _step70;\n\n              try {\n                for (_iterator70.s(); !(_step70 = _iterator70.n()).done;) {\n                  var _requestCapability = _step70.value;\n\n                  _requestCapability.resolve({\n                    value: undefined,\n                    done: true\n                  });\n                }\n              } catch (err) {\n                _iterator70.e(err);\n              } finally {\n                _iterator70.f();\n              }\n\n              this._requests.length = 0;\n            }\n          }, {\n            key: \"_onError\",\n            value: function _onError(status) {\n              var url = this._url;\n              var exception = (0, _network_utils.createResponseStatusError)(status, url);\n              this._storedError = exception;\n\n              this._headersReceivedCapability.reject(exception);\n\n              var _iterator71 = _createForOfIteratorHelper(this._requests),\n                  _step71;\n\n              try {\n                for (_iterator71.s(); !(_step71 = _iterator71.n()).done;) {\n                  var requestCapability = _step71.value;\n                  requestCapability.reject(exception);\n                }\n              } catch (err) {\n                _iterator71.e(err);\n              } finally {\n                _iterator71.f();\n              }\n\n              this._requests.length = 0;\n              this._cachedChunks.length = 0;\n            }\n          }, {\n            key: \"_onProgress\",\n            value: function _onProgress(data) {\n              if (this.onProgress) {\n                this.onProgress({\n                  loaded: data.loaded,\n                  total: data.lengthComputable ? data.total : this._contentLength\n                });\n              }\n            }\n          }, {\n            key: \"read\",\n            value: function () {\n              var _read5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n                var chunk, requestCapability;\n                return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        if (!this._storedError) {\n                          _context12.next = 2;\n                          break;\n                        }\n\n                        throw this._storedError;\n\n                      case 2:\n                        if (!(this._cachedChunks.length > 0)) {\n                          _context12.next = 5;\n                          break;\n                        }\n\n                        chunk = this._cachedChunks.shift();\n                        return _context12.abrupt(\"return\", {\n                          value: chunk,\n                          done: false\n                        });\n\n                      case 5:\n                        if (!this._done) {\n                          _context12.next = 7;\n                          break;\n                        }\n\n                        return _context12.abrupt(\"return\", {\n                          value: undefined,\n                          done: true\n                        });\n\n                      case 7:\n                        requestCapability = (0, _util.createPromiseCapability)();\n\n                        this._requests.push(requestCapability);\n\n                        return _context12.abrupt(\"return\", requestCapability.promise);\n\n                      case 10:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, _callee12, this);\n              }));\n\n              function read() {\n                return _read5.apply(this, arguments);\n              }\n\n              return read;\n            }()\n          }, {\n            key: \"cancel\",\n            value: function cancel(reason) {\n              this._done = true;\n\n              this._headersReceivedCapability.reject(reason);\n\n              var _iterator72 = _createForOfIteratorHelper(this._requests),\n                  _step72;\n\n              try {\n                for (_iterator72.s(); !(_step72 = _iterator72.n()).done;) {\n                  var requestCapability = _step72.value;\n                  requestCapability.resolve({\n                    value: undefined,\n                    done: true\n                  });\n                }\n              } catch (err) {\n                _iterator72.e(err);\n              } finally {\n                _iterator72.f();\n              }\n\n              this._requests.length = 0;\n\n              if (this._manager.isPendingRequest(this._fullRequestId)) {\n                this._manager.abortRequest(this._fullRequestId);\n              }\n\n              this._fullRequestReader = null;\n            }\n          }, {\n            key: \"filename\",\n            get: function get() {\n              return this._filename;\n            }\n          }, {\n            key: \"isRangeSupported\",\n            get: function get() {\n              return this._isRangeSupported;\n            }\n          }, {\n            key: \"isStreamingSupported\",\n            get: function get() {\n              return this._isStreamingSupported;\n            }\n          }, {\n            key: \"contentLength\",\n            get: function get() {\n              return this._contentLength;\n            }\n          }, {\n            key: \"headersReady\",\n            get: function get() {\n              return this._headersReceivedCapability.promise;\n            }\n          }]);\n\n          return PDFNetworkStreamFullRequestReader;\n        }();\n\n        var PDFNetworkStreamRangeRequestReader = /*#__PURE__*/function () {\n          function PDFNetworkStreamRangeRequestReader(manager, begin, end) {\n            _classCallCheck(this, PDFNetworkStreamRangeRequestReader);\n\n            this._manager = manager;\n            var args = {\n              onDone: this._onDone.bind(this),\n              onProgress: this._onProgress.bind(this)\n            };\n            this._requestId = manager.requestRange(begin, end, args);\n            this._requests = [];\n            this._queuedChunk = null;\n            this._done = false;\n            this.onProgress = null;\n            this.onClosed = null;\n          }\n\n          _createClass(PDFNetworkStreamRangeRequestReader, [{\n            key: \"_close\",\n            value: function _close() {\n              if (this.onClosed) {\n                this.onClosed(this);\n              }\n            }\n          }, {\n            key: \"_onDone\",\n            value: function _onDone(data) {\n              var chunk = data.chunk;\n\n              if (this._requests.length > 0) {\n                var requestCapability = this._requests.shift();\n\n                requestCapability.resolve({\n                  value: chunk,\n                  done: false\n                });\n              } else {\n                this._queuedChunk = chunk;\n              }\n\n              this._done = true;\n\n              var _iterator73 = _createForOfIteratorHelper(this._requests),\n                  _step73;\n\n              try {\n                for (_iterator73.s(); !(_step73 = _iterator73.n()).done;) {\n                  var _requestCapability2 = _step73.value;\n\n                  _requestCapability2.resolve({\n                    value: undefined,\n                    done: true\n                  });\n                }\n              } catch (err) {\n                _iterator73.e(err);\n              } finally {\n                _iterator73.f();\n              }\n\n              this._requests.length = 0;\n\n              this._close();\n            }\n          }, {\n            key: \"_onProgress\",\n            value: function _onProgress(evt) {\n              if (!this.isStreamingSupported && this.onProgress) {\n                this.onProgress({\n                  loaded: evt.loaded\n                });\n              }\n            }\n          }, {\n            key: \"read\",\n            value: function () {\n              var _read6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n                var chunk, requestCapability;\n                return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n                  while (1) {\n                    switch (_context13.prev = _context13.next) {\n                      case 0:\n                        if (!(this._queuedChunk !== null)) {\n                          _context13.next = 4;\n                          break;\n                        }\n\n                        chunk = this._queuedChunk;\n                        this._queuedChunk = null;\n                        return _context13.abrupt(\"return\", {\n                          value: chunk,\n                          done: false\n                        });\n\n                      case 4:\n                        if (!this._done) {\n                          _context13.next = 6;\n                          break;\n                        }\n\n                        return _context13.abrupt(\"return\", {\n                          value: undefined,\n                          done: true\n                        });\n\n                      case 6:\n                        requestCapability = (0, _util.createPromiseCapability)();\n\n                        this._requests.push(requestCapability);\n\n                        return _context13.abrupt(\"return\", requestCapability.promise);\n\n                      case 9:\n                      case \"end\":\n                        return _context13.stop();\n                    }\n                  }\n                }, _callee13, this);\n              }));\n\n              function read() {\n                return _read6.apply(this, arguments);\n              }\n\n              return read;\n            }()\n          }, {\n            key: \"cancel\",\n            value: function cancel(reason) {\n              this._done = true;\n\n              var _iterator74 = _createForOfIteratorHelper(this._requests),\n                  _step74;\n\n              try {\n                for (_iterator74.s(); !(_step74 = _iterator74.n()).done;) {\n                  var requestCapability = _step74.value;\n                  requestCapability.resolve({\n                    value: undefined,\n                    done: true\n                  });\n                }\n              } catch (err) {\n                _iterator74.e(err);\n              } finally {\n                _iterator74.f();\n              }\n\n              this._requests.length = 0;\n\n              if (this._manager.isPendingRequest(this._requestId)) {\n                this._manager.abortRequest(this._requestId);\n              }\n\n              this._close();\n            }\n          }, {\n            key: \"isStreamingSupported\",\n            get: function get() {\n              return false;\n            }\n          }]);\n\n          return PDFNetworkStreamRangeRequestReader;\n        }();\n        /***/\n\n      },\n      /* 26 */\n\n      /***/\n      function (__unused_webpack_module, exports, __w_pdfjs_require__) {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.PDFFetchStream = void 0;\n\n        var _util = __w_pdfjs_require__(2);\n\n        var _network_utils = __w_pdfjs_require__(23);\n\n        ;\n\n        function createFetchOptions(headers, withCredentials, abortController) {\n          return {\n            method: \"GET\",\n            headers: headers,\n            signal: abortController === null || abortController === void 0 ? void 0 : abortController.signal,\n            mode: \"cors\",\n            credentials: withCredentials ? \"include\" : \"same-origin\",\n            redirect: \"follow\"\n          };\n        }\n\n        function createHeaders(httpHeaders) {\n          var headers = new Headers();\n\n          for (var property in httpHeaders) {\n            var value = httpHeaders[property];\n\n            if (typeof value === \"undefined\") {\n              continue;\n            }\n\n            headers.append(property, value);\n          }\n\n          return headers;\n        }\n\n        var PDFFetchStream = /*#__PURE__*/function () {\n          function PDFFetchStream(source) {\n            _classCallCheck(this, PDFFetchStream);\n\n            this.source = source;\n            this.isHttp = /^https?:/i.test(source.url);\n            this.httpHeaders = this.isHttp && source.httpHeaders || {};\n            this._fullRequestReader = null;\n            this._rangeRequestReaders = [];\n          }\n\n          _createClass(PDFFetchStream, [{\n            key: \"getFullReader\",\n            value: function getFullReader() {\n              (0, _util.assert)(!this._fullRequestReader, \"PDFFetchStream.getFullReader can only be called once.\");\n              this._fullRequestReader = new PDFFetchStreamReader(this);\n              return this._fullRequestReader;\n            }\n          }, {\n            key: \"getRangeReader\",\n            value: function getRangeReader(begin, end) {\n              if (end <= this._progressiveDataLength) {\n                return null;\n              }\n\n              var reader = new PDFFetchStreamRangeReader(this, begin, end);\n\n              this._rangeRequestReaders.push(reader);\n\n              return reader;\n            }\n          }, {\n            key: \"cancelAllRequests\",\n            value: function cancelAllRequests(reason) {\n              if (this._fullRequestReader) {\n                this._fullRequestReader.cancel(reason);\n              }\n\n              var _iterator75 = _createForOfIteratorHelper(this._rangeRequestReaders.slice(0)),\n                  _step75;\n\n              try {\n                for (_iterator75.s(); !(_step75 = _iterator75.n()).done;) {\n                  var reader = _step75.value;\n                  reader.cancel(reason);\n                }\n              } catch (err) {\n                _iterator75.e(err);\n              } finally {\n                _iterator75.f();\n              }\n            }\n          }, {\n            key: \"_progressiveDataLength\",\n            get: function get() {\n              var _this$_fullRequestRea5, _this$_fullRequestRea6;\n\n              return (_this$_fullRequestRea5 = (_this$_fullRequestRea6 = this._fullRequestReader) === null || _this$_fullRequestRea6 === void 0 ? void 0 : _this$_fullRequestRea6._loaded) !== null && _this$_fullRequestRea5 !== void 0 ? _this$_fullRequestRea5 : 0;\n            }\n          }]);\n\n          return PDFFetchStream;\n        }();\n\n        exports.PDFFetchStream = PDFFetchStream;\n\n        var PDFFetchStreamReader = /*#__PURE__*/function () {\n          function PDFFetchStreamReader(stream) {\n            var _this56 = this;\n\n            _classCallCheck(this, PDFFetchStreamReader);\n\n            this._stream = stream;\n            this._reader = null;\n            this._loaded = 0;\n            this._filename = null;\n            var source = stream.source;\n            this._withCredentials = source.withCredentials || false;\n            this._contentLength = source.length;\n            this._headersCapability = (0, _util.createPromiseCapability)();\n            this._disableRange = source.disableRange || false;\n            this._rangeChunkSize = source.rangeChunkSize;\n\n            if (!this._rangeChunkSize && !this._disableRange) {\n              this._disableRange = true;\n            }\n\n            if (typeof AbortController !== \"undefined\") {\n              this._abortController = new AbortController();\n            }\n\n            this._isStreamingSupported = !source.disableStream;\n            this._isRangeSupported = !source.disableRange;\n            this._headers = createHeaders(this._stream.httpHeaders);\n            var url = source.url;\n            fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(function (response) {\n              if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n                throw (0, _network_utils.createResponseStatusError)(response.status, url);\n              }\n\n              _this56._reader = response.body.getReader();\n\n              _this56._headersCapability.resolve();\n\n              var getResponseHeader = function getResponseHeader(name) {\n                return response.headers.get(name);\n              };\n\n              var _ref55 = (0, _network_utils.validateRangeRequestCapabilities)({\n                getResponseHeader: getResponseHeader,\n                isHttp: _this56._stream.isHttp,\n                rangeChunkSize: _this56._rangeChunkSize,\n                disableRange: _this56._disableRange\n              }),\n                  allowRangeRequests = _ref55.allowRangeRequests,\n                  suggestedLength = _ref55.suggestedLength;\n\n              _this56._isRangeSupported = allowRangeRequests;\n              _this56._contentLength = suggestedLength || _this56._contentLength;\n              _this56._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n              if (!_this56._isStreamingSupported && _this56._isRangeSupported) {\n                _this56.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n              }\n            }).catch(this._headersCapability.reject);\n            this.onProgress = null;\n          }\n\n          _createClass(PDFFetchStreamReader, [{\n            key: \"read\",\n            value: function () {\n              var _read7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n                var _yield$this$_reader$r, value, done, buffer;\n\n                return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n                  while (1) {\n                    switch (_context14.prev = _context14.next) {\n                      case 0:\n                        _context14.next = 2;\n                        return this._headersCapability.promise;\n\n                      case 2:\n                        _context14.next = 4;\n                        return this._reader.read();\n\n                      case 4:\n                        _yield$this$_reader$r = _context14.sent;\n                        value = _yield$this$_reader$r.value;\n                        done = _yield$this$_reader$r.done;\n\n                        if (!done) {\n                          _context14.next = 9;\n                          break;\n                        }\n\n                        return _context14.abrupt(\"return\", {\n                          value: value,\n                          done: done\n                        });\n\n                      case 9:\n                        this._loaded += value.byteLength;\n\n                        if (this.onProgress) {\n                          this.onProgress({\n                            loaded: this._loaded,\n                            total: this._contentLength\n                          });\n                        }\n\n                        buffer = new Uint8Array(value).buffer;\n                        return _context14.abrupt(\"return\", {\n                          value: buffer,\n                          done: false\n                        });\n\n                      case 13:\n                      case \"end\":\n                        return _context14.stop();\n                    }\n                  }\n                }, _callee14, this);\n              }));\n\n              function read() {\n                return _read7.apply(this, arguments);\n              }\n\n              return read;\n            }()\n          }, {\n            key: \"cancel\",\n            value: function cancel(reason) {\n              if (this._reader) {\n                this._reader.cancel(reason);\n              }\n\n              if (this._abortController) {\n                this._abortController.abort();\n              }\n            }\n          }, {\n            key: \"headersReady\",\n            get: function get() {\n              return this._headersCapability.promise;\n            }\n          }, {\n            key: \"filename\",\n            get: function get() {\n              return this._filename;\n            }\n          }, {\n            key: \"contentLength\",\n            get: function get() {\n              return this._contentLength;\n            }\n          }, {\n            key: \"isRangeSupported\",\n            get: function get() {\n              return this._isRangeSupported;\n            }\n          }, {\n            key: \"isStreamingSupported\",\n            get: function get() {\n              return this._isStreamingSupported;\n            }\n          }]);\n\n          return PDFFetchStreamReader;\n        }();\n\n        var PDFFetchStreamRangeReader = /*#__PURE__*/function () {\n          function PDFFetchStreamRangeReader(stream, begin, end) {\n            var _this57 = this;\n\n            _classCallCheck(this, PDFFetchStreamRangeReader);\n\n            this._stream = stream;\n            this._reader = null;\n            this._loaded = 0;\n            var source = stream.source;\n            this._withCredentials = source.withCredentials || false;\n            this._readCapability = (0, _util.createPromiseCapability)();\n            this._isStreamingSupported = !source.disableStream;\n\n            if (typeof AbortController !== \"undefined\") {\n              this._abortController = new AbortController();\n            }\n\n            this._headers = createHeaders(this._stream.httpHeaders);\n\n            this._headers.append(\"Range\", \"bytes=\".concat(begin, \"-\").concat(end - 1));\n\n            var url = source.url;\n            fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(function (response) {\n              if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n                throw (0, _network_utils.createResponseStatusError)(response.status, url);\n              }\n\n              _this57._readCapability.resolve();\n\n              _this57._reader = response.body.getReader();\n            }).catch(function (reason) {\n              if ((reason === null || reason === void 0 ? void 0 : reason.name) === \"AbortError\") {\n                return;\n              }\n\n              throw reason;\n            });\n            this.onProgress = null;\n          }\n\n          _createClass(PDFFetchStreamRangeReader, [{\n            key: \"read\",\n            value: function () {\n              var _read8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15() {\n                var _yield$this$_reader$r2, value, done, buffer;\n\n                return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n                  while (1) {\n                    switch (_context15.prev = _context15.next) {\n                      case 0:\n                        _context15.next = 2;\n                        return this._readCapability.promise;\n\n                      case 2:\n                        _context15.next = 4;\n                        return this._reader.read();\n\n                      case 4:\n                        _yield$this$_reader$r2 = _context15.sent;\n                        value = _yield$this$_reader$r2.value;\n                        done = _yield$this$_reader$r2.done;\n\n                        if (!done) {\n                          _context15.next = 9;\n                          break;\n                        }\n\n                        return _context15.abrupt(\"return\", {\n                          value: value,\n                          done: done\n                        });\n\n                      case 9:\n                        this._loaded += value.byteLength;\n\n                        if (this.onProgress) {\n                          this.onProgress({\n                            loaded: this._loaded\n                          });\n                        }\n\n                        buffer = new Uint8Array(value).buffer;\n                        return _context15.abrupt(\"return\", {\n                          value: buffer,\n                          done: false\n                        });\n\n                      case 13:\n                      case \"end\":\n                        return _context15.stop();\n                    }\n                  }\n                }, _callee15, this);\n              }));\n\n              function read() {\n                return _read8.apply(this, arguments);\n              }\n\n              return read;\n            }()\n          }, {\n            key: \"cancel\",\n            value: function cancel(reason) {\n              if (this._reader) {\n                this._reader.cancel(reason);\n              }\n\n              if (this._abortController) {\n                this._abortController.abort();\n              }\n            }\n          }, {\n            key: \"isStreamingSupported\",\n            get: function get() {\n              return this._isStreamingSupported;\n            }\n          }]);\n\n          return PDFFetchStreamRangeReader;\n        }();\n        /***/\n\n      }\n      /******/\n      ];\n      /************************************************************************/\n\n      /******/\n      // The module cache\n\n      /******/\n\n      var __webpack_module_cache__ = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __w_pdfjs_require__(moduleId) {\n        /******/\n        // Check if module is in cache\n\n        /******/\n        var cachedModule = __webpack_module_cache__[moduleId];\n        /******/\n\n        if (cachedModule !== undefined) {\n          /******/\n          return cachedModule.exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = __webpack_module_cache__[moduleId] = {\n          /******/\n          // no module.id needed\n\n          /******/\n          // no module.loaded needed\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        __webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /************************************************************************/\n\n\n      var __webpack_exports__ = {}; // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n\n      (function () {\n        var exports = __webpack_exports__;\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        Object.defineProperty(exports, \"addLinkAttributes\", {\n          enumerable: true,\n          get: function get() {\n            return _display_utils.addLinkAttributes;\n          }\n        });\n        Object.defineProperty(exports, \"getFilenameFromUrl\", {\n          enumerable: true,\n          get: function get() {\n            return _display_utils.getFilenameFromUrl;\n          }\n        });\n        Object.defineProperty(exports, \"getPdfFilenameFromUrl\", {\n          enumerable: true,\n          get: function get() {\n            return _display_utils.getPdfFilenameFromUrl;\n          }\n        });\n        Object.defineProperty(exports, \"isPdfFile\", {\n          enumerable: true,\n          get: function get() {\n            return _display_utils.isPdfFile;\n          }\n        });\n        Object.defineProperty(exports, \"LinkTarget\", {\n          enumerable: true,\n          get: function get() {\n            return _display_utils.LinkTarget;\n          }\n        });\n        Object.defineProperty(exports, \"loadScript\", {\n          enumerable: true,\n          get: function get() {\n            return _display_utils.loadScript;\n          }\n        });\n        Object.defineProperty(exports, \"PDFDateString\", {\n          enumerable: true,\n          get: function get() {\n            return _display_utils.PDFDateString;\n          }\n        });\n        Object.defineProperty(exports, \"RenderingCancelledException\", {\n          enumerable: true,\n          get: function get() {\n            return _display_utils.RenderingCancelledException;\n          }\n        });\n        Object.defineProperty(exports, \"build\", {\n          enumerable: true,\n          get: function get() {\n            return _api.build;\n          }\n        });\n        Object.defineProperty(exports, \"getDocument\", {\n          enumerable: true,\n          get: function get() {\n            return _api.getDocument;\n          }\n        });\n        Object.defineProperty(exports, \"LoopbackPort\", {\n          enumerable: true,\n          get: function get() {\n            return _api.LoopbackPort;\n          }\n        });\n        Object.defineProperty(exports, \"PDFDataRangeTransport\", {\n          enumerable: true,\n          get: function get() {\n            return _api.PDFDataRangeTransport;\n          }\n        });\n        Object.defineProperty(exports, \"PDFWorker\", {\n          enumerable: true,\n          get: function get() {\n            return _api.PDFWorker;\n          }\n        });\n        Object.defineProperty(exports, \"version\", {\n          enumerable: true,\n          get: function get() {\n            return _api.version;\n          }\n        });\n        Object.defineProperty(exports, \"CMapCompressionType\", {\n          enumerable: true,\n          get: function get() {\n            return _util.CMapCompressionType;\n          }\n        });\n        Object.defineProperty(exports, \"createObjectURL\", {\n          enumerable: true,\n          get: function get() {\n            return _util.createObjectURL;\n          }\n        });\n        Object.defineProperty(exports, \"createPromiseCapability\", {\n          enumerable: true,\n          get: function get() {\n            return _util.createPromiseCapability;\n          }\n        });\n        Object.defineProperty(exports, \"createValidAbsoluteUrl\", {\n          enumerable: true,\n          get: function get() {\n            return _util.createValidAbsoluteUrl;\n          }\n        });\n        Object.defineProperty(exports, \"InvalidPDFException\", {\n          enumerable: true,\n          get: function get() {\n            return _util.InvalidPDFException;\n          }\n        });\n        Object.defineProperty(exports, \"MissingPDFException\", {\n          enumerable: true,\n          get: function get() {\n            return _util.MissingPDFException;\n          }\n        });\n        Object.defineProperty(exports, \"OPS\", {\n          enumerable: true,\n          get: function get() {\n            return _util.OPS;\n          }\n        });\n        Object.defineProperty(exports, \"PasswordResponses\", {\n          enumerable: true,\n          get: function get() {\n            return _util.PasswordResponses;\n          }\n        });\n        Object.defineProperty(exports, \"PermissionFlag\", {\n          enumerable: true,\n          get: function get() {\n            return _util.PermissionFlag;\n          }\n        });\n        Object.defineProperty(exports, \"removeNullCharacters\", {\n          enumerable: true,\n          get: function get() {\n            return _util.removeNullCharacters;\n          }\n        });\n        Object.defineProperty(exports, \"shadow\", {\n          enumerable: true,\n          get: function get() {\n            return _util.shadow;\n          }\n        });\n        Object.defineProperty(exports, \"UnexpectedResponseException\", {\n          enumerable: true,\n          get: function get() {\n            return _util.UnexpectedResponseException;\n          }\n        });\n        Object.defineProperty(exports, \"UNSUPPORTED_FEATURES\", {\n          enumerable: true,\n          get: function get() {\n            return _util.UNSUPPORTED_FEATURES;\n          }\n        });\n        Object.defineProperty(exports, \"Util\", {\n          enumerable: true,\n          get: function get() {\n            return _util.Util;\n          }\n        });\n        Object.defineProperty(exports, \"VerbosityLevel\", {\n          enumerable: true,\n          get: function get() {\n            return _util.VerbosityLevel;\n          }\n        });\n        Object.defineProperty(exports, \"AnnotationLayer\", {\n          enumerable: true,\n          get: function get() {\n            return _annotation_layer.AnnotationLayer;\n          }\n        });\n        Object.defineProperty(exports, \"apiCompatibilityParams\", {\n          enumerable: true,\n          get: function get() {\n            return _api_compatibility.apiCompatibilityParams;\n          }\n        });\n        Object.defineProperty(exports, \"GlobalWorkerOptions\", {\n          enumerable: true,\n          get: function get() {\n            return _worker_options.GlobalWorkerOptions;\n          }\n        });\n        Object.defineProperty(exports, \"renderTextLayer\", {\n          enumerable: true,\n          get: function get() {\n            return _text_layer.renderTextLayer;\n          }\n        });\n        Object.defineProperty(exports, \"SVGGraphics\", {\n          enumerable: true,\n          get: function get() {\n            return _svg.SVGGraphics;\n          }\n        });\n        Object.defineProperty(exports, \"XfaLayer\", {\n          enumerable: true,\n          get: function get() {\n            return _xfa_layer.XfaLayer;\n          }\n        });\n\n        var _display_utils = __w_pdfjs_require__(1);\n\n        var _api = __w_pdfjs_require__(5);\n\n        var _util = __w_pdfjs_require__(2);\n\n        var _annotation_layer = __w_pdfjs_require__(17);\n\n        var _api_compatibility = __w_pdfjs_require__(9);\n\n        var _worker_options = __w_pdfjs_require__(12);\n\n        var _text_layer = __w_pdfjs_require__(19);\n\n        var _svg = __w_pdfjs_require__(20);\n\n        var _xfa_layer = __w_pdfjs_require__(21);\n\n        var pdfjsVersion = '2.9.359';\n        var pdfjsBuild = 'e667c8cbc';\n        {\n          var _w_pdfjs_require__ = __w_pdfjs_require__(4),\n              isNodeJS = _w_pdfjs_require__.isNodeJS;\n\n          if (isNodeJS) {\n            var PDFNodeStream = __w_pdfjs_require__(22).PDFNodeStream;\n\n            (0, _api.setPDFNetworkStreamFactory)(function (params) {\n              return new PDFNodeStream(params);\n            });\n          } else {\n            var PDFNetworkStream = __w_pdfjs_require__(25).PDFNetworkStream;\n\n            var PDFFetchStream;\n\n            if ((0, _display_utils.isFetchSupported)()) {\n              PDFFetchStream = __w_pdfjs_require__(26).PDFFetchStream;\n            }\n\n            (0, _api.setPDFNetworkStreamFactory)(function (params) {\n              if (PDFFetchStream && (0, _display_utils.isValidFetchUrl)(params.url)) {\n                return new PDFFetchStream(params);\n              }\n\n              return new PDFNetworkStream(params);\n            });\n          }\n        }\n      })();\n      /******/\n\n\n      return __webpack_exports__;\n      /******/\n    }()\n  );\n});","map":{"version":3,"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/shared/compatibility.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/node_utils.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_storage.js","webpack://pdfjs-dist/build/pdf/src/display/api_compatibility.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/optional_content_config.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/shared/scripting_utils.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_layer.js","webpack://pdfjs-dist/build/pdf/src/display/node_stream.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js"],"names":["DEFAULT_LINK_REL","SVG_NS","constructor","unreachable","create","reset","canvasAndContext","width","height","destroy","ownerDocument","globalThis","canvas","context","baseUrl","isCompressed","url","compressionType","CMapCompressionType","reason","_fetchData","isFetchSupported","isValidFetchUrl","document","response","cMapData","stringToBytes","request","XMLHttpRequest","resolve","reject","assert","svg","createElement","offsetX","offsetY","dontFlip","centerX","viewBox","centerY","rotation","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","Math","offsetCanvasY","clone","scale","convertToViewportPoint","convertToViewportRectangle","topLeft","rect","bottomRight","convertToPdfPoint","LinkTarget","NONE","SELF","BLANK","PARENT","TOP","enabled","urlNullRemoved","removeNullCharacters","link","targetStr","ii","i","anchor","query","end","defaultFilename","isDataScheme","warn","reURI","reFilename","splitURI","suggestedFilename","decodeURIComponent","Object","time","name","Date","timeEnd","start","outBuf","longest","duration","Response","protocol","removeScriptElement","script","console","isString","pdfDateStringRegex","matches","year","parseInt","month","day","hour","minute","second","universalTimeRelation","offsetHour","offsetMinute","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","PermissionFlag","PRINT","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","AnnotationType","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","AnnotationStateModelType","MARKED","REVIEW","AnnotationMarkedState","UNMARKED","AnnotationReviewState","ACCEPTED","REJECTED","CANCELLED","COMPLETED","AnnotationReplyType","GROUP","REPLY","AnnotationFlag","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","AnnotationFieldFlag","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","AnnotationBorderStyleType","SOLID","DASHED","BEVELED","INSET","AnnotationActionEventType","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","DocumentActionEventType","WC","WS","DS","WP","DP","PageActionEventType","O","StreamType","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","FontType","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","VerbosityLevel","ERRORS","WARNINGS","INFOS","BINARY","STREAM","OPS","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","UNSUPPORTED_FEATURES","unknown","forms","javaScript","signatures","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontBuildPath","errorFontGetPath","errorMarkedContent","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","verbosity","Number","base","other","absoluteUrl","_isValidProtocol","enumerable","configurable","writable","BaseException","NullCharactersRegExp","str","bytes","length","MAX_ARGUMENT_COUNT","String","strBuf","chunkEnd","chunk","arr","resultLength","arrayByteLength","pos","data","item","itemLength","value","obj","buffer8","view32","IsLittleEndianCached","shadow","isLittleEndian","IsEvalSupportedCached","isEvalSupported","hexNumbers","Array","n","m1","m2","xt","p","m","yt","d","p1","Util","p2","r","p3","p4","v","transpose","a","b","c","first","sx","sy","orderedX","rect1","rect2","orderedY","result","PDFStringTranslateTable","code","match","buf","char","escape","unescape","encodeURIComponent","arr1","arr2","date","buffer","capability","isSettled","get","contentType","forceDataSchema","URL","type","digits","b1","b2","b3","d1","d2","d3","d4","isNodeJS","process","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","DefaultCanvasFactory","DefaultCMapReaderFactory","createPDFNetworkStream","task","src","source","isArrayBuffer","range","params","rangeTransport","worker","window","isNaN","apiCompatibilityParams","setVerbosityLevel","workerParams","port","GlobalWorkerOptions","PDFWorker","docId","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","initialData","progressiveDone","contentDispositionFilename","disableRange","disableStream","httpHeaders","withCredentials","rangeChunkSize","messageHandler","transport","Promise","pdfDataRangeTransport","apiVersion","password","disableAutoFetch","maxImageSize","disableFontFace","postMessageTransfers","docBaseUrl","ignoreErrors","fontExtraProperties","enableXfa","PDFDocumentLoadingTask","nextDocumentId","transportDestroyed","addRangeListener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","listener","onDataProgress","onDataProgressiveRead","requestDataRange","getPage","getPageIndex","getDestination","cleanup","keepLoadedFonts","arguments","deprecated","pdfBug","getViewport","getAnnotations","intent","render","renderInteractiveForms","imageLayer","canvasFactory","background","includeAnnotationStorage","optionalContentConfigPromise","renderingIntent","intentState","clearTimeout","canvasFactoryInstance","annotationStorage","fnArray","argsArray","lastChunk","pageIndex","complete","error","internalRenderTask","callback","objs","commonObjs","operatorList","useRequestAnimationFrame","renderTask","opListTask","streamTextContent","normalizeWhitespace","disableCombineTextItems","includeMarkedContent","TEXT_CONTENT_CHUNK_SIZE","combineTextItems","highWaterMark","size","textContent","getTextContent","readableStream","reader","pump","items","styles","waitOn","force","resetStats","_tryCleanup","renderTasks","_startRenderPage","_renderPageChunk","operatorListChunk","_pumpOperatorList","args","_abortOperatorList","curIntentState","postMessage","cloned","transfers","cloneValue","desc","event","addEventListener","removeEventListener","pdfWorkerPorts","isWorkerDisabled","nextFakeWorkerId","fallbackWorkerSrc","pdfjsFilePath","mainWorkerMessageHandler","fakeWorkerCapability","loader","getMainThreadWorkerMessageHandler","eval","getWorkerSrc","loadScript","wrapper","_initializeFromPort","workerSrc","isSameOrigin","createCDNWrapper","terminateEarly","onWorkerError","sendTest","testObj","info","setupFakeWorkerGlobal","WorkerMessageHandler","id","workerHandler","loadingTask","onUnsupportedFeature","page","terminated","evt","loaded","total","sink","readyReason","headersCapability","fullReader","isStreamingSupported","isRangeSupported","contentLength","rangeReader","pdfInfo","ex","msg","exception","updatePassword","exportedError","exportedData","fontRegistry","registerFont","pageProxy","MAX_IMAGE_SIZE_TO_STORE","imageData","fetched","builtInCMap","_onUnsupportedFeature","pageNumber","promise","pageInfo","numPages","filename","getPageJSActions","getPageXfa","getStructTree","results","metadata","cleanupSuccessful","_ensureObj","resolved","has","InternalRenderTask","canvasInRendering","initializeGraphics","transparency","cancel","version","build","addNativeFontFace","insertRule","styleElement","styleSheet","nativeFontFace","featureId","rule","_queueLoadingCallback","_prepareFontLoadEvent","FontLoader","requests","nextRequestId","supported","navigator","otherRequest","setTimeout","done","getLoadTestFont","atob","offset","chunk1","s","chunk2","ctx","called","isFontReady","loadTestFontId","COMMENT_OFFSET","spliceString","CFF_CHECKSUM_OFFSET","XXXX_VALUE","checksum","int32","string32","btoa","names","div","span","translatedData","css","weight","bytesToString","getPathGenerator","cmds","jsBuf","current","NodeCanvasFactory","NodeCMapReaderFactory","Canvas","__non_webpack_require__","fs","getValue","setValue","modified","objectFromMap","compatibilityParams","MIN_FONT_SIZE","MAX_FONT_SIZE","MAX_GROUP_SIZE","COMPILE_TYPE3_GLYPHS","MAX_SIZE_TO_COMPILE","FULL_CHUNK_HEIGHT","LINEWIDTH_SCALE_FACTOR","set","ad_bc","bc_ad","old","prev","cosValue","sinValue","getCanvas","canvasEntry","addContextCurrentTransform","POINT_TO_PROCESS_LIMIT","POINT_TYPES","imgData","width1","points","lineSize","data0","elem","mask","count","j","j0","sum","steps","outlines","coords","p0","step","pp","drawOutline","k","kk","o","l","ll","setCurrentPoint","CanvasGraphics","EXECUTION_TIME","EXECUTION_STEPS","transferMaps","partialChunkHeight","fullChunks","totalChunks","chunkImgData","srcPos","dest","transferMapRed","transferMapGreen","transferMapBlue","transferMapGray","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","thisChunkHeight","destPos","srcDiff","kEnd","kEndUnrolled","srcByte","hasTransferMaps","elemsInThisChunk","properties","property","sourceCtx","destCtx","alpha","alpha_","r0","g0","b0","maskData","transferMap","layerData","y","hasBackdrop","backdrop","subtype","composeFn","PIXELS_TO_PROCESS","chunkSize","row","chunkHeight","maskCtx","layerCtx","composeSMaskBackdrop","genericComposeSMask","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","beginDrawing","transparentCanvas","resetCtxToDefault","viewport","executeOperatorList","executionStartIdx","argsArrayLen","chunkOperations","endTime","stepper","fnId","objsPool","depObjId","continueCallback","states","state","key","activeSMask","drawnWidth","drawnHeight","cacheId","scratchCanvas","currentCtx","currentTransform","groupCtx","copyCtxState","composeSMask","deltaTransform","x","ops","xw","yh","consumePath","strokeColor","lineWidth","fillColor","isPatternFill","needRestore","paths","path","fontObj","bold","italic","typeface","browserFontSize","paintChar","textRenderingMode","fontSize","fillStrokeMode","isAddToPathSet","patternFill","addToPath","fontSizeScale","charSpacing","wordSpacing","fontDirection","textHScale","glyphsLength","glyphs","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","patternTransform","resetLineWidthToOne","glyph","isNum","restoreNeeded","spacing","character","accent","vmetric","vx","vy","scaledX","scaledY","measuredWidth","characterScaleX","scaledAccentX","scaledAccentY","charWidth","showType3Text","fontMatrix","isTextInvisible","spacingLength","transformed","urx","ury","getColorN_Pattern","IR","color","baseTransform","canvasGraphicsFactory","createCanvasGraphics","getShadingPattern","inv","bl","br","ul","ur","x0","y0","x1","y1","matrix","bbox","group","bounds","canvasBounds","scaleX","scaleY","startTransformInverse","img","maskCanvas","putBinaryImageMask","skewX","skewY","positions","images","image","objId","map","w","h","widthScale","heightScale","imgToPaint","tmpCanvas","tmpCtx","putBinaryImageData","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","position","left","top","entry","visible","tag","absDet","sqNorm1","sqNorm2","pixelHeight","getCanvasPosition","svgElement","region","getPattern","owner","applyBoundingBox","grad","colorStop","createMatrix","colors","rowSize","tmp","c1","c2","c3","x2","y2","x3","y3","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","minY","maxY","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","ps","figure","cs","verticesPerRow","rows","cols","q","drawTriangle","_createMeshCanvas","EXPECTED_SCALE","MAX_PATTERN_SIZE","BORDER_SIZE","boundsWidth","boundsHeight","combinedScale","paddedWidth","paddedHeight","cachedCanvases","backgroundColor","drawFigure","matrixScale","temporaryPatternCanvas","PaintType","COLORED","UNCOLORED","createPatternCanvas","xstep","ystep","paintType","tilingType","curMatrixScale","dimx","dimy","graphics","getSizeAndScale","maxSize","TilingPattern","clipBbox","bboxWidth","bboxHeight","setFillAndStrokeStyleToContext","cssColor","domMatrix","CallbackKind","DATA","ERROR","StreamKind","CANCEL","CANCEL_COMPLETE","CLOSE","ENQUEUE","PULL","PULL_COMPLETE","START_COMPLETE","callbackId","wrapReason","action","cbSourceName","cbTargetName","comObj","sourceName","targetName","on","ah","send","sendWithPromise","sendWithStream","streamId","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","stream","cancelCapability","_createStreamSink","self","streamSink","enqueue","lastDesiredSize","close","sinkCapability","onPull","onCancel","isCancelled","ready","success","_processStreamMessage","_postMessage","_evaluateVisibilityExpression","array","operator","element","isVisible","setVisibility","getGroup","_onReceiveData","found","_onProgress","firstReader","_removeRangeReader","queuedChunks","getRangeReader","cancelAllRequests","isPdfFile","_enqueue","requestCapability","requestsCapability","parameters","fieldType","isRenderable","ignoreBorder","createQuadrilaterals","_createContainer","container","horizontalRadius","verticalRadius","radius","_createQuadrilaterals","quadrilaterals","savedRect","quadPoint","_createPopup","trigger","popupElement","title","modificationDate","contents","hideWrapper","popup","_renderQuadrilaterals","quadrilateral","addLinkAttributes","target","linkService","rel","linkElement","index","_bindLink","destination","_bindNamedAction","_bindJSAction","jsName","detail","JSON","_getKeyModifier","_setEventListener","baseName","valueGetter","shift","modifier","_setEventListeners","eventName","_dispatchEventFromSandbox","setColor","ColorConverters","commonActions","display","hidden","print","focus","preventScroll","userName","readonly","required","bgColor","fgColor","textColor","borderColor","jsEvent","actions","setPropertyOnSiblings","storage","storedData","valueAsString","elementData","userValue","formattedValue","beforeInputSelectionRange","beforeInputValue","blurListener","selRange","selStart","selEnd","commitKey","willCommit","_blurListener","change","fieldWidth","combWidth","_setTextStyle","TEXT_ALIGNMENT","style","fontColor","checkbox","radio","pdfButtonValue","checked","radioId","selectElement","optionElement","option","isExport","options","getItems","displayValue","exportValue","values","multipleSelection","remove","clear","insert","indices","editable","changeEx","keyDown","IGNORE_TYPES","selector","parentElements","popupLeft","popupTop","BACKGROUND_ENLIGHT","g","dateObject","PDFDateString","_formatContents","lines","line","_show","pin","_hide","unpin","borderWidth","square","circle","coordinate","polyline","getFilenameFromUrl","stringToPDFString","sortedAnnotations","popupAnnotations","layer","downloadManager","imageResourcesPath","svgFactory","enableScripting","hasJSActions","mouseState","isDown","rendered","elements","G","makeColorComp","R","B","MAX_TEXT_DIVS_TO_RENDER","DEFAULT_FONT_SIZE","DEFAULT_FONT_ASCENT","ascentCache","AllWhitespaceRegexp","cachedAscent","metrics","ascent","descent","ratio","pixels","textDiv","textDivProperties","angle","canvasWidth","hasText","geom","hasEOL","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","tx","fontHeight","fontAscent","getAscent","shouldScaleText","absScaleX","absScaleY","angleCos","angleSin","divWidth","divHeight","right","bottom","textDivs","textDivsLength","t","ts","expanded","expandBounds","divProperties","e","jj","boxScale","findPositiveMin","box","x1New","x2New","expandBoundsLTR","boxes","fakeBoundary","horizon","boundary","maxXNew","horizonPart","affectedBoundary","xNew","changedHorizon","lastBoundary","useBoundary","used","textContentItemsStr","_processItems","len","parent","appendText","_layoutText","fontFamily","_render","timeout","styleCache","textItems","textStyles","expandTextDivs","expandDivs","expand","transformBuf","paddingBuf","divProps","renderParameters","textContentStream","enhanceTextSelection","SVGGraphics","SVG_DEFAULTS","fontStyle","fontWeight","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","CHUNK_WRAPPER_SIZE","crcTable","crc","body","crc32","deflateSyncUncompressed","input","Buffer","output","level","literals","maxBlockLength","deflateBlocks","idat","pi","adler","adler32","colorType","bitDepth","offsetLiterals","offsetBytes","kind","ihdr","deflateSync","pngLength","writePngChunk","createObjectURL","encode","opTree","opListElement","fn","pf","clipCount","maskCount","shadingCount","loadDependencies","transformMatrix","getSVG","convertOpList","operatorIdMapping","opList","opListToTree","executeOpTree","opTreeElement","lineWidthScale","textMatrix","pm","addFontStyle","details","setStrokeAlpha","setFillAlpha","_makeColorN_Pattern","_makeTilingPattern","tilingId","txstep","tystep","tiling","tx1","ty1","_makeShadingPattern","shadingId","colorStops","point0","point1","gradient","focalPoint","circlePoint","focalRadius","circleRadius","stop","op","clipId","clipPath","clipElement","_setStrokeAttributes","dashArray","imgSrc","cliprect","imgEl","_initialize","definitions","rootGroup","clipGroup","html","attributes","root","rootHtml","stack","rootDiv","coeffs","child","childHtml","http","https","fileUriRegex","parsedUrl","parseUrl","_error","_setReadableStream","auth","host","method","handleResponse","getResponseHeader","isHttp","suggestedLength","extractFilenameFromHeader","createRequestOptions","stat","returnValues","allowRangeRequests","contentEncoding","contentDisposition","getFilenameFromContentDispositionHeader","status","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","decoder","fatal","textdecode","iter","parts","part","quotindex","encodingend","extvalue","encoding","langvalue","text","OK_RESPONSE","PARTIAL_CONTENT_RESPONSE","xhr","requestRange","listeners","requestFull","xhrId","pendingRequest","onProgress","onStateChange","xhrStatus","ok_response_on_range_request","getArrayBuffer","rangeHeader","begin","getRequestXhr","isPendingRequest","abortRequest","_onRangeRequestReaderClosed","onHeadersReceived","onDone","onError","manager","fullRequestXhrId","fullRequestXhr","_onDone","_onError","createResponseStatusError","signal","abortController","mode","credentials","redirect","headers","createHeaders","fetch","createFetchOptions","validateResponseStatus","pdfjsVersion","pdfjsBuild","require","PDFNodeStream","setPDFNetworkStreamFactory","PDFNetworkStream","PDFFetchStream"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn ","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  BaseException,\n  CMapCompressionType,\n  isString,\n  removeNullCharacters,\n  stringToBytes,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    unreachable(\"Abstract method `create` called.\");\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n}\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    canvas.width = width;\n    canvas.height = height;\n    return {\n      canvas,\n      context,\n    };\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    if (\n      (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      (isFetchSupported() && isValidFetchUrl(url, document.baseURI))\n    ) {\n      return fetch(url).then(async response => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        let cMapData;\n        if (this.isCompressed) {\n          cMapData = new Uint8Array(await response.arrayBuffer());\n        } else {\n          cMapData = stringToBytes(await response.text());\n        }\n        return { cMapData, compressionType };\n      });\n    }\n\n    // The Fetch API is not supported.\n    return new Promise((resolve, reject) => {\n      const request = new XMLHttpRequest();\n      request.open(\"GET\", url, true);\n\n      if (this.isCompressed) {\n        request.responseType = \"arraybuffer\";\n      }\n      request.onreadystatechange = () => {\n        if (request.readyState !== XMLHttpRequest.DONE) {\n          return;\n        }\n        if (request.status === 200 || request.status === 0) {\n          let cMapData;\n          if (this.isCompressed && request.response) {\n            cMapData = new Uint8Array(request.response);\n          } else if (!this.isCompressed && request.responseText) {\n            cMapData = stringToBytes(request.responseText);\n          }\n          if (cMapData) {\n            resolve({ cMapData, compressionType });\n            return;\n          }\n        }\n        reject(new Error(request.statusText));\n      };\n\n      request.send(null);\n    });\n  }\n}\n\nclass DOMSVGFactory {\n  create(width, height) {\n    assert(width > 0 && height > 0, \"Invalid SVG dimensions\");\n\n    const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", width + \"px\");\n    svg.setAttribute(\"height\", height + \"px\");\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n    return svg;\n  }\n\n  createElement(type) {\n    assert(typeof type === \"string\", \"Invalid SVG element type\");\n\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    // Normalize the rotation, by clamping it to the [0, 360) range.\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg);\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLLinkElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\n\n/**\n * Gets the filename from a given URL.\n * @param {string} url\n * @returns {string}\n */\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch (ex) {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isFetchSupported() {\n  return (\n    typeof fetch !== \"undefined\" &&\n    typeof Response !== \"undefined\" &&\n    \"body\" in Response.prototype &&\n    typeof ReadableStream !== \"undefined\"\n  );\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * @param {string} src\n * @param {boolean} [removeScriptElement]\n * @returns {Promise<void>}\n */\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n          \"(\\\\d{4})\" + // Year (required)\n          \"(\\\\d{2})?\" + // Month (optional)\n          \"(\\\\d{2})?\" + // Day (optional)\n          \"(\\\\d{2})?\" + // Hour (optional)\n          \"(\\\\d{2})?\" + // Minute (optional)\n          \"(\\\\d{2})?\" + // Second (optional)\n          \"([Z|+|-])?\" + // Universal time relation (optional)\n          \"(\\\\d{2})?\" + // Offset hour (optional)\n          \"'?\" + // Splitting apostrophe (optional)\n          \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\nexport {\n  addLinkAttributes,\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  DEFAULT_LINK_REL,\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  isDataScheme,\n  isFetchSupported,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PageViewport,\n  PDFDateString,\n  RenderingCancelledException,\n  StatTimer,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  signatures: \"signatures\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontBuildPath: \"errorFontBuildPath\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg);\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg);\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {}\n\nclass MissingPDFException extends BaseException {}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg);\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {}\n\nconst NullCharactersRegExp = /\\x00/g;\n\n/**\n * @param {string} str\n */\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      String.fromCharCode((char >> 8) & 0xff),\n      String.fromCharCode(char & 0xff)\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nfunction createObjectURL(data, contentType = \"\", forceDataSchema = false) {\n  if (URL.createObjectURL && !forceDataSchema) {\n    return URL.createObjectURL(new Blob([data], { type: contentType }));\n  }\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  let buffer = `data:${contentType};base64,`;\n  for (let i = 0, ii = data.length; i < ii; i += 3) {\n    const b1 = data[i] & 0xff;\n    const b2 = data[i + 1] & 0xff;\n    const b3 = data[i + 2] & 0xff;\n    const d1 = b1 >> 2,\n      d2 = ((b1 & 3) << 4) | (b2 >> 4);\n    const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n    const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n    buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  bytesToString,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  escapeString,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isAscii,\n  isBool,\n  IsEvalSupportedCached,\n  IsLittleEndianCached,\n  isNum,\n  isSameOrigin,\n  isString,\n  MissingPDFException,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF16BEString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNodeJS } from \"./is_node.js\";\n\n// Skip compatibility checks for modern builds and if we already ran the module.\nif (\n  (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"SKIP_BABEL\")) &&\n  (typeof globalThis === \"undefined\" || !globalThis._pdfjsCompatibilityChecked)\n) {\n  // Provides support for globalThis in legacy browsers.\n  // Support: Firefox<65, Chrome<71, Safari<12.1\n  if (typeof globalThis === \"undefined\" || globalThis.Math !== Math) {\n    // eslint-disable-next-line no-global-assign\n    globalThis = require(\"core-js/es/global-this\");\n  }\n  globalThis._pdfjsCompatibilityChecked = true;\n\n  // Support: Node.js\n  (function checkNodeBtoa() {\n    if (globalThis.btoa || !isNodeJS) {\n      return;\n    }\n    globalThis.btoa = function (chars) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(chars, \"binary\").toString(\"base64\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkNodeAtob() {\n    if (globalThis.atob || !isNodeJS) {\n      return;\n    }\n    globalThis.atob = function (input) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(input, \"base64\").toString(\"binary\");\n    };\n  })();\n\n  // Provides support for Object.fromEntries in legacy browsers.\n  // Support: Firefox<63, Chrome<73, Safari<12.1, Node.js<12.0.0\n  (function checkObjectFromEntries() {\n    if (Object.fromEntries) {\n      return;\n    }\n    require(\"core-js/es/object/from-entries.js\");\n  })();\n\n  // Provides support for *recent* additions to the Promise specification,\n  // however basic Promise support is assumed to be available natively.\n  // Support: Firefox<71, Chrome<76, Safari<13, Node.js<12.9.0\n  (function checkPromise() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `Promise` shouldn't\n      // need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.Promise.allSettled) {\n      return;\n    }\n    globalThis.Promise = require(\"core-js/es/promise/index.js\");\n  })();\n\n  // Support: Node.js\n  (function checkReadableStream() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `ReadableStream`\n      // shouldn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    let isReadableStreamSupported = false;\n\n    if (typeof ReadableStream !== \"undefined\") {\n      // MS Edge may say it has ReadableStream but they are not up to spec yet.\n      try {\n        // eslint-disable-next-line no-new\n        new ReadableStream({\n          start(controller) {\n            controller.close();\n          },\n        });\n        isReadableStreamSupported = true;\n      } catch (e) {\n        // The ReadableStream constructor cannot be used.\n      }\n    }\n    if (isReadableStreamSupported) {\n      return;\n    }\n    globalThis.ReadableStream =\n      require(\"web-streams-polyfill/dist/ponyfill.js\").ReadableStream;\n  })();\n}\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  isDataScheme,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport { NodeCanvasFactory, NodeCMapReaderFactory } from \"./node_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { apiCompatibilityParams } from \"./api_compatibility.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\nconst DefaultCanvasFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n *\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string|URL} [url] - The URL of the PDF.\n * @property {TypedArray|Array<number>|string} [data] - Binary PDF data. Use\n *    typed arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use `atob()` to convert it to a binary string first.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via `@font-face` rules. If disabled, fonts will\n *   be rendered using a built-in font renderer that constructs the glyphs with\n *   primitive path commands. The default value is `false`.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [enableXfa] - Render Xfa forms if any.\n *   The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string|URL|TypedArray|PDFDataRangeTransport|DocumentInitParameters}\n *   src - Can be a URL where a PDF file is located, a typed array (Uint8Array)\n *         already populated with data, or a parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\" || src instanceof URL) {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either string, URL, Uint8Array, or parameter object.\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    const value = source[key];\n\n    switch (key) {\n      case \"url\":\n        if (typeof window !== \"undefined\") {\n          try {\n            // The full path is required in the 'url' field.\n            params[key] = new URL(value, window.location).href;\n            continue;\n          } catch (ex) {\n            warn(`Cannot create valid URL: \"${ex}\".`);\n          }\n        } else if (typeof value === \"string\" || value instanceof URL) {\n          params[key] = value.toString(); // Support Node.js environments.\n          continue;\n        }\n        throw new Error(\n          \"Invalid PDF url data: \" +\n            \"either string or URL-object is expected in the url property.\"\n        );\n      case \"range\":\n        rangeTransport = value;\n        continue;\n      case \"worker\":\n        worker = value;\n        continue;\n      case \"data\":\n        // Converting string or array-like data to Uint8Array.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          isNodeJS &&\n          typeof Buffer !== \"undefined\" && // eslint-disable-line no-undef\n          value instanceof Buffer // eslint-disable-line no-undef\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (value instanceof Uint8Array) {\n          break; // Use the data as-is when it's already a Uint8Array.\n        } else if (typeof value === \"string\") {\n          params[key] = stringToBytes(value);\n        } else if (\n          typeof value === \"object\" &&\n          value !== null &&\n          !isNaN(value.length)\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (isArrayBuffer(value)) {\n          params[key] = new Uint8Array(value);\n        } else {\n          throw new Error(\n            \"Invalid PDF binary data: either typed array, \" +\n              \"string, or array-like object is expected in the data property.\"\n          );\n        }\n        continue;\n    }\n    params[key] = value;\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory =\n    params.CMapReaderFactory || DefaultCMapReaderFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n  params.enableXfa = params.enableXfa === true;\n\n  if (\n    typeof params.docBaseUrl !== \"string\" ||\n    isDataScheme(params.docBaseUrl)\n  ) {\n    // Ignore \"data:\"-URLs, since they can't be used to recover valid absolute\n    // URLs anyway. We want to avoid sending them to the worker-thread, since\n    // they contain the *entire* PDF document and can thus be arbitrarily long.\n    params.docBaseUrl = null;\n  }\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace = apiCompatibilityParams.disableFontFace || false;\n  }\n  if (typeof params.ownerDocument === \"undefined\") {\n    params.ownerDocument = globalThis.document;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              contentDispositionFilename: params.contentDispositionFilename,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId - Unique document ID, used in `MessageHandler`.\n * @returns {Promise} A promise that is resolved when the worker ID of the\n *   `MessageHandler` is known.\n * @private\n */\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    return Promise.reject(new Error(\"Worker was destroyed\"));\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n    source.contentDispositionFilename =\n      pdfDataRangeTransport.contentDispositionFilename;\n  }\n  return worker.messageHandler\n    .sendWithPromise(\"GetDocRequest\", {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n      enableXfa: source.enableXfa,\n    })\n    .then(function (workerId) {\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n      return workerId;\n    });\n}\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n *\n * @typedef {Object} PDFDocumentLoadingTask\n * @property {string} docId - Unique identifier for the document loading task.\n * @property {boolean} destroyed - Whether the loading task is destroyed or not.\n * @property {function} [onPassword] - Callback to request a password if a wrong\n *   or no password was provided. The callback receives two parameters: a\n *   function that should be called with the new password, and a reason (see\n *   {@link PasswordResponses}).\n * @property {function} [onProgress] - Callback to be able to monitor the\n *   loading progress of the PDF file (necessary to implement e.g. a loading\n *   bar). The callback receives an {Object} with the properties `loaded`\n *   ({number}) and `total` ({number}) that indicate how many bytes are loaded.\n * @property {function} [onUnsupportedFeature] - Callback for when an\n *   unsupported feature is used in the PDF document. The callback receives an\n *   {@link UNSUPPORTED_FEATURES} argument.\n * @property {Promise<PDFDocumentProxy>} promise - Promise for document loading\n *   task completion.\n * @property {function} destroy - Abort all network requests and destroy\n *   the worker. Returns a promise that is resolved when destruction is\n *   completed.\n */\n\n/**\n * @type {any}\n * @ignore\n */\nconst PDFDocumentLoadingTask = (function PDFDocumentLoadingTaskClosure() {\n  let nextDocumentId = 0;\n\n  /**\n   * The loading task controls the operations required to load a PDF document\n   * (such as network requests) and provides a way to listen for completion,\n   * after which individual pages can be rendered.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFDocumentLoadingTask {\n    constructor() {\n      this._capability = createPromiseCapability();\n      this._transport = null;\n      this._worker = null;\n\n      /**\n       * Unique identifier for the document loading task.\n       * @type {string}\n       */\n      this.docId = \"d\" + nextDocumentId++;\n\n      /**\n       * Whether the loading task is destroyed or not.\n       * @type {boolean}\n       */\n      this.destroyed = false;\n\n      /**\n       * Callback to request a password if a wrong or no password was provided.\n       * The callback receives two parameters: a function that should be called\n       * with the new password, and a reason (see {@link PasswordResponses}).\n       * @type {function}\n       */\n      this.onPassword = null;\n\n      /**\n       * Callback to be able to monitor the loading progress of the PDF file\n       * (necessary to implement e.g. a loading bar). The callback receives\n       * an {Object} with the properties `loaded` ({number}) and `total`\n       * ({number}) that indicate how many bytes are loaded.\n       * @type {function}\n       */\n      this.onProgress = null;\n\n      /**\n       * Callback for when an unsupported feature is used in the PDF document.\n       * The callback receives an {@link UNSUPPORTED_FEATURES} argument.\n       * @type {function}\n       */\n      this.onUnsupportedFeature = null;\n    }\n\n    /**\n     * Promise for document loading task completion.\n     * @type {Promise<PDFDocumentProxy>}\n     */\n    get promise() {\n      return this._capability.promise;\n    }\n\n    /**\n     * @returns {Promise<void>} A promise that is resolved when destruction is\n     *   completed.\n     */\n    destroy() {\n      this.destroyed = true;\n\n      const transportDestroyed = !this._transport\n        ? Promise.resolve()\n        : this._transport.destroy();\n      return transportDestroyed.then(() => {\n        this._transport = null;\n        if (this._worker) {\n          this._worker.destroy();\n          this._worker = null;\n        }\n      });\n    }\n  }\n  return PDFDocumentLoadingTask;\n})();\n\n/**\n * Abstract class to support range requests file loading.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array} initialData\n   * @param {boolean} [progressiveDone]\n   * @param {string} [contentDispositionFilename]\n   */\n  constructor(\n    length,\n    initialData,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return this._transport.annotationStorage;\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {string} A (not guaranteed to be) unique ID to identify a PDF.\n   */\n  get fingerprint() {\n    return this._pdfInfo.fingerprint;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return this._pdfInfo.isPureXfa;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @typedef {Object} RefProxy\n   * @property {number} num\n   * @property {number} gen\n   */\n\n  /**\n   * @param {RefProxy} ref - The page reference.\n   * @returns {Promise<number>} A promise that is resolved with the page index,\n   *   starting from zero, that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any> | null>} A promise that is resolved with all\n   *   information of the given named destination, or `null` when the named\n   *   destination is not present in the PDF file.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} of all the JavaScript strings in the name tree, or `null`\n   *   if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with the JavaScript actions:\n   *     - from the name tree (like getJavaScript);\n   *     - from A or AA entries in the catalog dictionary.\n   *   , or `null` if no JavaScript exists.\n   */\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @typedef {Object} MarkInfo\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\n   * @property {boolean} Marked\n   * @property {boolean} UserProperties\n   * @property {boolean} Suspects\n   */\n\n  /**\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\n   */\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  /**\n   * @returns {Promise<TypedArray>} A promise that is resolved with a\n   *   {TypedArray} that has the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @typedef {Object} PDFDocumentStats\n   * @property {Object<string, boolean>} streamTypes - Used stream types in the\n   *   document (an item is set to true if specific stream ID was used in the\n   *   document).\n   * @property {Object<string, boolean>} fontTypes - Used font types in the\n   *   document (an item is set to true if specific font ID was used in the\n   *   document).\n   */\n\n  /**\n   * @returns {Promise<PDFDocumentStats>} A promise this is resolved with\n   *   current statistics about document structures (see\n   *   {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @param {boolean} [keepLoadedFonts] - Let fonts remain attached to the DOM.\n   *   NOTE: This will increase persistent memory usage, hence don't use this\n   *   option unless absolutely necessary. The default value is `false`.\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are either needed in the viewer and/or\n   *   whose default values may be affected by the `apiCompatibilityParams`.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument() {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      arguments.length > 0\n    ) {\n      deprecated(\"saveDocument no longer accepts any options.\");\n    }\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      this._transport.annotationStorage.size <= 0\n    ) {\n      deprecated(\n        \"saveDocument called while `annotationStorage` is empty, \" +\n          \"please use the getData-method instead.\"\n      );\n    }\n    return this._transport.saveDocument();\n  }\n\n  /**\n   * @returns {Promise<Array<Object> | null>} A promise that is resolved with an\n   *   {Array<Object>} containing /AcroForm field data for the JS sandbox,\n   *   or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  /**\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\n   *   if some /AcroForm fields have JavaScript actions.\n   */\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\n   *   {Array<string>} containing IDs of annotations that have a calculation\n   *   action, or `null` when no such annotations are present in the PDF file.\n   */\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - Replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - Do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n * @property {boolean} [includeMarkedContent] - When true include marked\n *   content items in the items array of TextContent. The default is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem | TextMarkedContent>} items - Array of\n *   {@link TextItem} and {@link TextMarkedContent} objects. TextMarkedContent\n *   items are included when includeMarkedContent is true.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n *\n */\n\n/**\n * Page text marked content part.\n *\n * @typedef {Object} TextMarkedContent\n * @property {string} type - Either 'beginMarkedContent',\n *   'beginMarkedContentProps', or 'endMarkedContent'.\n * @property {string} id - The marked content identifier. Only used for type\n *   'beginMarkedContentProps'.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} intent - Determines the annotations that will be fetched,\n *   can be either 'display' (viewable annotations) or 'print' (printable\n *   annotations). If the parameter is omitted, all annotations are fetched.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display' or 'print'.\n *   The default value is 'display'.\n * @property {boolean} [renderInteractiveForms] - Whether or not interactive\n *   form elements are rendered in the display layer. If so, we do not render\n *   them on the canvas as well. The default value is `false`.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {Object} [imageLayer] - An object that has `beginLayout`,\n *   `endLayout` and `appendImage` functions.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object | string} [background] - Background to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n * @property {boolean} [includeAnnotationStorage] - Render stored interactive\n *   form element data, from the {@link AnnotationStorage}-instance, onto the\n *   canvas itself; useful e.g. for printing. The default value is `false`.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n */\n\n/**\n * Structure tree node. The root node will have a role \"Root\".\n *\n * @typedef {Object} StructTreeNode\n * @property {Array<StructTreeNode | StructTreeContent>} children - Array of\n *   {@link StructTreeNode} and {@link StructTreeContent} objects.\n * @property {string} role - element's role, already mapped if a role map exists\n * in the PDF.\n */\n\n/**\n * Structure tree content.\n *\n * @typedef {Object} StructTreeContent\n * @property {string} type - either \"content\" for page and stream structure\n *   elements or \"object\" for object references.\n * @property {string} id - unique id that will map to the text layer.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._ownerDocument = ownerDocument;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this._intentStates = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {Object} The reference that points to this page. It has `num` and\n   *   `gen` properties.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = null } = {}) {\n    if (!this._annotationsPromise || this._annotationsIntent !== intent) {\n      this._annotationsPromise = this._transport.getAnnotations(\n        this._pageIndex,\n        intent\n      );\n      this._annotationsIntent = intent;\n    }\n    return this._annotationsPromise;\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an\n   *   {Object} with JS actions.\n   */\n  getJSActions() {\n    return (this._jsActionsPromise ||= this._transport.getPageJSActions(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with a fake DOM object (a tree structure where elements\n   *   are {Object} with a name, attributes (class, style, ...), value and\n   *   children, very similar to a HTML DOM tree), or `null` if no XFA exists.\n   */\n  getXfa() {\n    return (this._xfaPromise ||= this._transport.getPageXfa(this._pageIndex));\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    renderInteractiveForms = false,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n    includeAnnotationStorage = false,\n    optionalContentConfigPromise = null,\n  }) {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      arguments[0]?.annotationStorage !== undefined\n    ) {\n      deprecated(\n        \"render no longer accepts an `annotationStorage` option, \" +\n          \"please use the `includeAnnotationStorage`-boolean instead.\"\n      );\n      includeAnnotationStorage ||= !!arguments[0].annotationStorage;\n    }\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(renderingIntent);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(renderingIntent, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance =\n      canvasFactory ||\n      new DefaultCanvasFactory({ ownerDocument: this._ownerDocument });\n    const annotationStorage = includeAnnotationStorage\n      ? this._transport.annotationStorage.serializable\n      : null;\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        renderInteractiveForms: renderInteractiveForms === true,\n        annotationStorage,\n      });\n    }\n\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || renderingIntent === \"print\") {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error,\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      useRequestAnimationFrame: renderingIntent !== \"print\",\n      pdfBug: this._pdfBug,\n    });\n\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents page's operator list.\n   */\n  getOperatorList() {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n\n    const renderingIntent = \"oplist\";\n    let intentState = this._intentStates.get(renderingIntent);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(renderingIntent, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n      });\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n    includeMarkedContent = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n        includeMarkedContent: includeMarkedContent === true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * @returns {Promise<StructTreeNode>} A promise that is resolved with a\n   *   {@link StructTreeNode} object that represents the page's structure tree,\n   *   or `null` when no structure tree is present for the current page.\n   */\n  getStructTree() {\n    return (this._structTreePromise ||= this._transport.getStructTree(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    for (const [intent, intentState] of this._intentStates) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intent === \"oplist\") {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this._annotationsPromise = null;\n    this._jsActionsPromise = null;\n    this._xfaPromise = null;\n    this._structTreePromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup) {\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n\n    this._intentStates.clear();\n    this.objs.clear();\n    this._annotationsPromise = null;\n    this._jsActionsPromise = null;\n    this._xfaPromise = null;\n    this._structTreePromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, intent) {\n    const intentState = this._intentStates.get(intent);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList(args) {\n    assert(\n      args.intent,\n      'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.'\n    );\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      args\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(args.intent);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.'\n    );\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader.cancel(new AbortException(reason?.message));\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [intent, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(intent);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor() {\n    this._listeners = [];\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n      if (cloned.has(value)) {\n        // already cloned the object\n        return cloned.get(value);\n      }\n      let buffer, result;\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n        // We found object with ArrayBuffer (typed array).\n        if (transfers?.includes(buffer)) {\n          result = new value.constructor(\n            buffer,\n            value.byteOffset,\n            value.byteLength\n          );\n        } else {\n          result = new value.constructor(value);\n        }\n        cloned.set(value, result);\n        return result;\n      }\n      if (value instanceof Map) {\n        result = new Map();\n        cloned.set(value, result); // Adding to cache now for cyclic references.\n        for (const [key, val] of value) {\n          result.set(key, cloneValue(val));\n        }\n        return result;\n      }\n      if (value instanceof Set) {\n        result = new Set();\n        cloned.set(value, result); // Adding to cache now for cyclic references.\n        for (const val of value) {\n          result.add(cloneValue(val));\n        }\n        return result;\n      }\n      if (value instanceof URL) {\n        throw new Error(`LoopbackPort.postMessage - cannot clone: ${value}`);\n      }\n      result = Array.isArray(value) ? [] : Object.create(null);\n      cloned.set(value, result); // Adding to cache now for cyclic references.\n      // Cloning all value and object properties, however ignoring properties\n      // defined via getter.\n      for (const i in value) {\n        let desc,\n          p = value;\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n        if (typeof desc.value === \"function\") {\n          if (value.hasOwnProperty?.(i)) {\n            throw new Error(\n              `LoopbackPort.postMessage - cannot clone: ${value[i]}`\n            );\n          }\n          continue;\n        }\n        result[i] = cloneValue(desc.value);\n      }\n      return result;\n    }\n\n    const cloned = new WeakMap();\n    const event = { data: cloneValue(obj) };\n\n    this._deferred.then(() => {\n      for (const listener of this._listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {@link VerbosityLevel} should be used.\n */\n\n/** @type {any} */\nconst PDFWorker = (function PDFWorkerClosure() {\n  const pdfWorkerPorts = new WeakMap();\n  let isWorkerDisabled = false;\n  let fallbackWorkerSrc;\n  let nextFakeWorkerId = 0;\n  let fakeWorkerCapability;\n\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n    // eslint-disable-next-line no-undef\n    if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n      // Workers aren't supported in Node.js, force-disabling them there.\n      isWorkerDisabled = true;\n\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"LIB\")) {\n        fallbackWorkerSrc = \"../pdf.worker.js\";\n      } else {\n        fallbackWorkerSrc = \"./pdf.worker.js\";\n      }\n    } else if (typeof document === \"object\" && \"currentScript\" in document) {\n      const pdfjsFilePath = document.currentScript?.src;\n      if (pdfjsFilePath) {\n        fallbackWorkerSrc = pdfjsFilePath.replace(\n          /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n          \".worker$1$2\"\n        );\n      }\n    }\n  }\n\n  function getWorkerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (typeof fallbackWorkerSrc !== \"undefined\") {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  function getMainThreadWorkerMessageHandler() {\n    let mainWorkerMessageHandler;\n    try {\n      mainWorkerMessageHandler = globalThis.pdfjsWorker?.WorkerMessageHandler;\n    } catch (ex) {\n      /* Ignore errors. */\n    }\n    return mainWorkerMessageHandler || null;\n  }\n\n  // Loads worker code into main thread.\n  function setupFakeWorkerGlobal() {\n    if (fakeWorkerCapability) {\n      return fakeWorkerCapability.promise;\n    }\n    fakeWorkerCapability = createPromiseCapability();\n\n    const loader = async function () {\n      const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        const worker = await import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(getWorkerSrc());\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(getWorkerSrc());\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n    loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n\n    return fakeWorkerCapability.promise;\n  }\n\n  function createCDNWrapper(url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = \"importScripts('\" + url + \"');\";\n    return URL.createObjectURL(new Blob([wrapper]));\n  }\n\n  /**\n   * PDF.js web worker abstraction that controls the instantiation of PDF\n   * documents. Message handlers are used to pass information from the main\n   * thread to the worker thread and vice versa. If the creation of a web\n   * worker is not possible, a \"fake\" worker will be used instead.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFWorker {\n    /**\n     * @param {PDFWorkerParameters} params - Worker initialization parameters.\n     */\n    constructor({\n      name = null,\n      port = null,\n      verbosity = getVerbosityLevel(),\n    } = {}) {\n      if (port && pdfWorkerPorts.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port\");\n      }\n\n      this.name = name;\n      this.destroyed = false;\n      this.postMessageTransfers = true;\n      this.verbosity = verbosity;\n\n      this._readyCapability = createPromiseCapability();\n      this._port = null;\n      this._webWorker = null;\n      this._messageHandler = null;\n\n      if (port) {\n        pdfWorkerPorts.set(port, this);\n        this._initializeFromPort(port);\n        return;\n      }\n      this._initialize();\n    }\n\n    get promise() {\n      return this._readyCapability.promise;\n    }\n\n    get port() {\n      return this._port;\n    }\n\n    get messageHandler() {\n      return this._messageHandler;\n    }\n\n    _initializeFromPort(port) {\n      this._port = port;\n      this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n      this._messageHandler.on(\"ready\", function () {\n        // Ignoring 'ready' event -- MessageHandler shall be already initialized\n        // and ready to accept the messages.\n      });\n      this._readyCapability.resolve();\n    }\n\n    _initialize() {\n      // If worker support isn't disabled explicit and the browser has worker\n      // support, create a new web worker and test if it/the browser fulfills\n      // all requirements to run parts of pdf.js in a web worker.\n      // Right now, the requirement is, that an Uint8Array is still an\n      // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n      if (\n        typeof Worker !== \"undefined\" &&\n        !isWorkerDisabled &&\n        !getMainThreadWorkerMessageHandler()\n      ) {\n        let workerSrc = getWorkerSrc();\n\n        try {\n          // Wraps workerSrc path into blob URL, if the former does not belong\n          // to the same origin.\n          if (\n            typeof PDFJSDev !== \"undefined\" &&\n            PDFJSDev.test(\"GENERIC\") &&\n            !isSameOrigin(window.location.href, workerSrc)\n          ) {\n            workerSrc = createCDNWrapper(\n              new URL(workerSrc, window.location).href\n            );\n          }\n\n          // Some versions of FF can't create a worker on localhost, see:\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n          const worker = new Worker(workerSrc);\n          const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n          const terminateEarly = () => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            messageHandler.destroy();\n            worker.terminate();\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            } else {\n              // Fall back to fake worker if the termination is caused by an\n              // error (e.g. NetworkError / SecurityError).\n              this._setupFakeWorker();\n            }\n          };\n\n          const onWorkerError = () => {\n            if (!this._webWorker) {\n              // Worker failed to initialize due to an error. Clean up and fall\n              // back to the fake worker.\n              terminateEarly();\n            }\n          };\n          worker.addEventListener(\"error\", onWorkerError);\n\n          messageHandler.on(\"test\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            if (data) {\n              // supportTypedArray\n              this._messageHandler = messageHandler;\n              this._port = worker;\n              this._webWorker = worker;\n              if (!data.supportTransfers) {\n                this.postMessageTransfers = false;\n              }\n              this._readyCapability.resolve();\n              // Send global setting, e.g. verbosity level.\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity,\n              });\n            } else {\n              this._setupFakeWorker();\n              messageHandler.destroy();\n              worker.terminate();\n            }\n          });\n\n          messageHandler.on(\"ready\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            try {\n              sendTest();\n            } catch (e) {\n              // We need fallback to a faked worker.\n              this._setupFakeWorker();\n            }\n          });\n\n          const sendTest = () => {\n            const testObj = new Uint8Array([\n              this.postMessageTransfers ? 255 : 0,\n            ]);\n            // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n            // typed array. Also, checking if we can use transfers.\n            try {\n              messageHandler.send(\"test\", testObj, [testObj.buffer]);\n            } catch (ex) {\n              warn(\"Cannot use postMessage transfers.\");\n              testObj[0] = 0;\n              messageHandler.send(\"test\", testObj);\n            }\n          };\n\n          // It might take time for worker to initialize (especially when AMD\n          // loader is used). We will try to send test immediately, and then\n          // when 'ready' message will arrive. The worker shall process only\n          // first received 'test'.\n          sendTest();\n          return;\n        } catch (e) {\n          info(\"The worker has been disabled.\");\n        }\n      }\n      // Either workers are disabled, not supported or have thrown an exception.\n      // Thus, we fallback to a faked worker.\n      this._setupFakeWorker();\n    }\n\n    _setupFakeWorker() {\n      if (!isWorkerDisabled) {\n        warn(\"Setting up fake worker.\");\n        isWorkerDisabled = true;\n      }\n\n      setupFakeWorkerGlobal()\n        .then(WorkerMessageHandler => {\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            return;\n          }\n          const port = new LoopbackPort();\n          this._port = port;\n\n          // All fake workers use the same port, making id unique.\n          const id = \"fake\" + nextFakeWorkerId++;\n\n          // If the main thread is our worker, setup the handling for the\n          // messages -- the main thread sends to it self.\n          const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n          WorkerMessageHandler.setup(workerHandler, port);\n\n          const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n          this._messageHandler = messageHandler;\n          this._readyCapability.resolve();\n          // Send global setting, e.g. verbosity level.\n          messageHandler.send(\"configure\", {\n            verbosity: this.verbosity,\n          });\n        })\n        .catch(reason => {\n          this._readyCapability.reject(\n            new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n          );\n        });\n    }\n\n    /**\n     * Destroys the worker instance.\n     */\n    destroy() {\n      this.destroyed = true;\n      if (this._webWorker) {\n        // We need to terminate only web worker created resource.\n        this._webWorker.terminate();\n        this._webWorker = null;\n      }\n      pdfWorkerPorts.delete(this._port);\n      this._port = null;\n      if (this._messageHandler) {\n        this._messageHandler.destroy();\n        this._messageHandler = null;\n      }\n    }\n\n    /**\n     * @param {PDFWorkerParameters} params - The worker initialization\n     *   parameters.\n     */\n    static fromPort(params) {\n      if (!params || !params.port) {\n        throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n      }\n      if (pdfWorkerPorts.has(params.port)) {\n        return pdfWorkerPorts.get(params.port);\n      }\n      return new PDFWorker(params);\n    }\n\n    static getWorkerSrc() {\n      return getWorkerSrc();\n    }\n  }\n  return PDFWorker;\n})();\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n      ownerDocument: params.ownerDocument,\n    });\n    this._params = params;\n    this.CMapReaderFactory = new params.CMapReaderFactory({\n      baseUrl: params.cMapUrl,\n      isCompressed: params.cMapPacked,\n    });\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    for (const page of this.pageCache) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    }\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // Allow `AnnotationStorage`-related clean-up when destroying the document.\n    if (this.hasOwnProperty(\"annotationStorage\")) {\n      this.annotationStorage.resetModified();\n    }\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this._hasJSActionsPromise = null;\n\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total,\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n      }\n      if (!(reason instanceof Error)) {\n        const msg = \"DocException - expected a valid Error.\";\n        if (\n          typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ) {\n          unreachable(msg);\n        } else {\n          warn(msg);\n        }\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length,\n        });\n      }\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.intent);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (params.pdfBug && globalThis.FontInspector?.enabled) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (imageData?.data?.length > MAX_IMAGE_SIZE_TO_STORE) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n      return undefined;\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total,\n        });\n      }\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n      if (this.destroyed) {\n        sink.error(new Error(\"Worker was destroyed\"));\n        return;\n      }\n      let fetched = false;\n\n      sink.onPull = () => {\n        if (fetched) {\n          sink.close();\n          return;\n        }\n        fetched = true;\n\n        this.CMapReaderFactory.fetch(data)\n          .then(function (builtInCMap) {\n            sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n          })\n          .catch(function (reason) {\n            sink.error(reason);\n          });\n      };\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.ownerDocument,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler\n      .sendWithPromise(\"GetPageIndex\", {\n        ref,\n      })\n      .catch(function (reason) {\n        return Promise.reject(new Error(reason));\n      });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  saveDocument() {\n    return this.messageHandler\n      .sendWithPromise(\"SaveDocument\", {\n        numPages: this._numPages,\n        annotationStorage: this.annotationStorage.serializable,\n        filename: this._fullReader?.filename ?? null,\n      })\n      .finally(() => {\n        this.annotationStorage.resetModified();\n      });\n  }\n\n  getFieldObjects() {\n    return this.messageHandler.sendWithPromise(\"GetFieldObjects\", null);\n  }\n\n  hasJSActions() {\n    return (this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\n      \"HasJSActions\",\n      null\n    ));\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getDocJSActions() {\n    return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex,\n    });\n  }\n\n  getPageXfa(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageXfa\", {\n      pageIndex,\n    });\n  }\n\n  getStructTree(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n      pageIndex,\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader?.filename ?? null,\n          contentLength: this._fullReader?.contentLength ?? null,\n        };\n      });\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  async startCleanup(keepLoadedFonts = false) {\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n    if (this.destroyed) {\n      return; // No need to manually clean-up when destruction has started.\n    }\n    for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n      const page = this.pageCache[i];\n      if (!page) {\n        continue;\n      }\n      const cleanupSuccessful = page.cleanup();\n\n      if (!cleanupSuccessful) {\n        throw new Error(`startCleanup: Page ${i + 1} is currently rendering.`);\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this._hasJSActionsPromise = null;\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      disableFontFace: params.disableFontFace,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj?.resolved || false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nconst InternalRenderTask = (function InternalRenderTaskClosure() {\n  const canvasInRendering = new WeakSet();\n\n  // eslint-disable-next-line no-shadow\n  class InternalRenderTask {\n    constructor({\n      callback,\n      params,\n      objs,\n      commonObjs,\n      operatorList,\n      pageIndex,\n      canvasFactory,\n      useRequestAnimationFrame = false,\n      pdfBug = false,\n    }) {\n      this.callback = callback;\n      this.params = params;\n      this.objs = objs;\n      this.commonObjs = commonObjs;\n      this.operatorListIdx = null;\n      this.operatorList = operatorList;\n      this._pageIndex = pageIndex;\n      this.canvasFactory = canvasFactory;\n      this._pdfBug = pdfBug;\n\n      this.running = false;\n      this.graphicsReadyCallback = null;\n      this.graphicsReady = false;\n      this._useRequestAnimationFrame =\n        useRequestAnimationFrame === true && typeof window !== \"undefined\";\n      this.cancelled = false;\n      this.capability = createPromiseCapability();\n      this.task = new RenderTask(this);\n      // caching this-bound methods\n      this._cancelBound = this.cancel.bind(this);\n      this._continueBound = this._continue.bind(this);\n      this._scheduleNextBound = this._scheduleNext.bind(this);\n      this._nextBound = this._next.bind(this);\n      this._canvas = params.canvasContext.canvas;\n    }\n\n    get completed() {\n      return this.capability.promise.catch(function () {\n        // Ignoring errors, since we only want to know when rendering is\n        // no longer pending.\n      });\n    }\n\n    initializeGraphics({ transparency = false, optionalContentConfig }) {\n      if (this.cancelled) {\n        return;\n      }\n      if (this._canvas) {\n        if (canvasInRendering.has(this._canvas)) {\n          throw new Error(\n            \"Cannot use the same canvas during multiple render() operations. \" +\n              \"Use different canvas or ensure previous operations were \" +\n              \"cancelled or completed.\"\n          );\n        }\n        canvasInRendering.add(this._canvas);\n      }\n\n      if (this._pdfBug && globalThis.StepperManager?.enabled) {\n        this.stepper = globalThis.StepperManager.create(this._pageIndex);\n        this.stepper.init(this.operatorList);\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n      }\n      const { canvasContext, viewport, transform, imageLayer, background } =\n        this.params;\n\n      this.gfx = new CanvasGraphics(\n        canvasContext,\n        this.commonObjs,\n        this.objs,\n        this.canvasFactory,\n        imageLayer,\n        optionalContentConfig\n      );\n      this.gfx.beginDrawing({\n        transform,\n        viewport,\n        transparency,\n        background,\n      });\n      this.operatorListIdx = 0;\n      this.graphicsReady = true;\n      if (this.graphicsReadyCallback) {\n        this.graphicsReadyCallback();\n      }\n    }\n\n    cancel(error = null) {\n      this.running = false;\n      this.cancelled = true;\n      if (this.gfx) {\n        this.gfx.endDrawing();\n      }\n      if (this._canvas) {\n        canvasInRendering.delete(this._canvas);\n      }\n      this.callback(\n        error ||\n          new RenderingCancelledException(\n            `Rendering cancelled, page ${this._pageIndex + 1}`,\n            \"canvas\"\n          )\n      );\n    }\n\n    operatorListChanged() {\n      if (!this.graphicsReady) {\n        if (!this.graphicsReadyCallback) {\n          this.graphicsReadyCallback = this._continueBound;\n        }\n        return;\n      }\n\n      if (this.stepper) {\n        this.stepper.updateOperatorList(this.operatorList);\n      }\n\n      if (this.running) {\n        return;\n      }\n      this._continue();\n    }\n\n    _continue() {\n      this.running = true;\n      if (this.cancelled) {\n        return;\n      }\n      if (this.task.onContinue) {\n        this.task.onContinue(this._scheduleNextBound);\n      } else {\n        this._scheduleNext();\n      }\n    }\n\n    _scheduleNext() {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this._cancelBound);\n        });\n      } else {\n        Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n      }\n    }\n\n    async _next() {\n      if (this.cancelled) {\n        return;\n      }\n      this.operatorListIdx = this.gfx.executeOperatorList(\n        this.operatorList,\n        this.operatorListIdx,\n        this._continueBound,\n        this.stepper\n      );\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n        this.running = false;\n        if (this.operatorList.lastChunk) {\n          this.gfx.endDrawing();\n          if (this._canvas) {\n            canvasInRendering.delete(this._canvas);\n          }\n          this.callback();\n        }\n      }\n    }\n  }\n  return InternalRenderTask;\n})();\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  build,\n  DefaultCanvasFactory,\n  DefaultCMapReaderFactory,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature,\n    ownerDocument = globalThis.document,\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = [];\n    this.styleElement = null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = this._document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    for (const nativeFontFace of this.nativeFontFaces) {\n      this._document.fonts.delete(nativeFontFace);\n    }\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    return shadow(this, \"isFontLoadingAPISupported\", !!this._document?.fonts);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(params) {\n      super(params);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m?.[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (const font of fonts) {\n        names.push(font.loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = this._document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (const name of names) {\n        const span = this._document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = name;\n        div.appendChild(span);\n      }\n      this._document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, () => {\n        this._document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    let nativeFontFace;\n    if (!this.cssFontInfo) {\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\n    } else {\n      const css = {\n        weight: this.cssFontInfo.fontWeight,\n      };\n      if (this.cssFontInfo.italicAngle) {\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n      }\n      nativeFontFace = new FontFace(\n        this.cssFontInfo.fontFamily,\n        this.data,\n        css\n      );\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(this.data);\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    let rule;\n    if (!this.cssFontInfo) {\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n    } else {\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n      if (this.cssFontInfo.italicAngle) {\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n      }\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      this._onUnsupportedFeature({\n        featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n      });\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      const jsBuf = [];\n      for (const current of cmds) {\n        const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n        jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\n        \"c\",\n        \"size\",\n        jsBuf.join(\"\")\n      ));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (const current of cmds) {\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport { BaseCanvasFactory, BaseCMapReaderFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { unreachable } from \"../shared/util.js\";\n\nlet NodeCanvasFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCanvasFactory\");\n  }\n};\n\nlet NodeCMapReaderFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCMapReaderFactory\");\n  }\n};\n\nif ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS) {\n  NodeCanvasFactory = class extends BaseCanvasFactory {\n    create(width, height) {\n      if (width <= 0 || height <= 0) {\n        throw new Error(\"Invalid canvas size\");\n      }\n      const Canvas = __non_webpack_require__(\"canvas\");\n      const canvas = Canvas.createCanvas(width, height);\n      return {\n        canvas,\n        context: canvas.getContext(\"2d\"),\n      };\n    }\n  };\n\n  NodeCMapReaderFactory = class extends BaseCMapReaderFactory {\n    _fetchData(url, compressionType) {\n      return new Promise((resolve, reject) => {\n        const fs = __non_webpack_require__(\"fs\");\n        fs.readFile(url, (error, data) => {\n          if (error || !data) {\n            reject(new Error(error));\n            return;\n          }\n          resolve({ cMapData: new Uint8Array(data), compressionType });\n        });\n      });\n    }\n  };\n}\n\nexport { NodeCanvasFactory, NodeCMapReaderFactory };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  constructor() {\n    this._storage = new Map();\n    this._modified = false;\n\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable effects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists, or return the default value.\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  getValue(key, defaultValue) {\n    const obj = this._storage.get(key);\n    return obj !== undefined ? obj : defaultValue;\n  }\n\n  /**\n   * Set the value for a given key\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} value\n   */\n  setValue(key, value) {\n    const obj = this._storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (obj[entry] !== val) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      this._storage.set(key, value);\n      modified = true;\n    }\n    if (modified) {\n      this._setModified();\n    }\n  }\n\n  getAll() {\n    return this._storage.size > 0 ? objectFromMap(this._storage) : null;\n  }\n\n  get size() {\n    return this._storage.size;\n  }\n\n  /**\n   * @private\n   */\n  _setModified() {\n    if (!this._modified) {\n      this._modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this._modified) {\n      this._modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    return this._storage.size > 0 ? this._storage : null;\n  }\n}\n\nexport { AnnotationStorage };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nconst compatibilityParams = Object.create(null);\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  // Support: Node.js\n  (function checkFontFace() {\n    // Node.js is missing native support for `@font-face`.\n    if (isNodeJS) {\n      compatibilityParams.disableFontFace = true;\n    }\n  })();\n}\nconst apiCompatibilityParams = Object.freeze(compatibilityParams);\n\nexport { apiCompatibilityParams };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { getShadingPattern, TilingPattern } from \"./pattern_helper.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\nconst COMPILE_TYPE3_GLYPHS = true;\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\n// Because of https://bugs.chromium.org/p/chromium/issues/detail?id=1170396\n// some curves aren't rendered correctly.\n// Multiplying lineWidth by this factor should help to have \"correct\"\n// rendering with no artifacts.\n// Once the bug is fixed upstream, we can remove this constant and its use.\nconst LINEWIDTH_SCALE_FACTOR = 1.000001;\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (ctx.mozCurrentTransform) {\n    return;\n  }\n  ctx._originalSave = ctx.save;\n  ctx._originalRestore = ctx.restore;\n  ctx._originalRotate = ctx.rotate;\n  ctx._originalScale = ctx.scale;\n  ctx._originalTranslate = ctx.translate;\n  ctx._originalTransform = ctx.transform;\n  ctx._originalSetTransform = ctx.setTransform;\n  ctx._originalResetTransform = ctx.resetTransform;\n\n  ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n  ctx._transformStack = [];\n\n  try {\n    // The call to getOwnPropertyDescriptor throws an exception in Node.js:\n    // \"TypeError: Method lineWidth called on incompatible receiver\n    //  #<CanvasRenderingContext2D>\".\n    const desc = Object.getOwnPropertyDescriptor(\n      Object.getPrototypeOf(ctx),\n      \"lineWidth\"\n    );\n\n    ctx._setLineWidth = desc.set;\n    ctx._getLineWidth = desc.get;\n\n    Object.defineProperty(ctx, \"lineWidth\", {\n      set: function setLineWidth(width) {\n        this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR);\n      },\n      get: function getLineWidth() {\n        return this._getLineWidth();\n      },\n    });\n  } catch (_) {}\n\n  Object.defineProperty(ctx, \"mozCurrentTransform\", {\n    get: function getCurrentTransform() {\n      return this._transformMatrix;\n    },\n  });\n\n  Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n    get: function getCurrentTransformInverse() {\n      // Calculation done using WolframAlpha:\n      // http://www.wolframalpha.com/input/?\n      //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n      const [a, b, c, d, e, f] = this._transformMatrix;\n      const ad_bc = a * d - b * c;\n      const bc_ad = b * c - a * d;\n\n      return [\n        d / ad_bc,\n        b / bc_ad,\n        c / bc_ad,\n        a / ad_bc,\n        (d * e - c * f) / bc_ad,\n        (b * e - a * f) / ad_bc,\n      ];\n    },\n  });\n\n  ctx.save = function ctxSave() {\n    const old = this._transformMatrix;\n    this._transformStack.push(old);\n    this._transformMatrix = old.slice(0, 6);\n\n    this._originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    const prev = this._transformStack.pop();\n    if (prev) {\n      this._transformMatrix = prev;\n      this._originalRestore();\n    }\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    const m = this._transformMatrix;\n    m[4] = m[0] * x + m[2] * y + m[4];\n    m[5] = m[1] * x + m[3] * y + m[5];\n\n    this._originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    const m = this._transformMatrix;\n    m[0] = m[0] * x;\n    m[1] = m[1] * x;\n    m[2] = m[2] * y;\n    m[3] = m[3] * y;\n\n    this._originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * a + m[2] * b,\n      m[1] * a + m[3] * b,\n      m[0] * c + m[2] * d,\n      m[1] * c + m[3] * d,\n      m[0] * e + m[2] * f + m[4],\n      m[1] * e + m[3] * f + m[5],\n    ];\n\n    ctx._originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    this._transformMatrix = [a, b, c, d, e, f];\n\n    ctx._originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    this._transformMatrix = [1, 0, 0, 1, 0, 0];\n\n    ctx._originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    const cosValue = Math.cos(angle);\n    const sinValue = Math.sin(angle);\n\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * cosValue + m[2] * sinValue,\n      m[1] * cosValue + m[3] * sinValue,\n      m[0] * -sinValue + m[2] * cosValue,\n      m[1] * -sinValue + m[3] * cosValue,\n      m[4],\n      m[5],\n    ];\n\n    this._originalRotate(angle);\n  };\n}\n\nclass CachedCanvases {\n  constructor(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n\n  getCanvas(id, width, height, trackTransform) {\n    let canvasEntry;\n    if (this.cache[id] !== undefined) {\n      canvasEntry = this.cache[id];\n      this.canvasFactory.reset(canvasEntry, width, height);\n      // reset canvas transform for emulated mozCurrentTransform, if needed\n      canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n    } else {\n      canvasEntry = this.canvasFactory.create(width, height);\n      this.cache[id] = canvasEntry;\n    }\n    if (trackTransform) {\n      addContextCurrentTransform(canvasEntry.context);\n    }\n    return canvasEntry;\n  }\n\n  clear() {\n    for (const id in this.cache) {\n      const canvasEntry = this.cache[id];\n      this.canvasFactory.destroy(canvasEntry);\n      delete this.cache[id];\n    }\n  }\n}\n\nfunction compileType3Glyph(imgData) {\n  const POINT_TO_PROCESS_LIMIT = 1000;\n  const POINT_TYPES = new Uint8Array([\n    0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0,\n  ]);\n\n  const width = imgData.width,\n    height = imgData.height,\n    width1 = width + 1;\n  let i, ii, j, j0;\n  const points = new Uint8Array(width1 * (height + 1));\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  const data = new Uint8Array(lineSize * height);\n  let pos = 0;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    const elem = data0[i];\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    const coords = [p % width1, i];\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1, (p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      const o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nclass CanvasExtraState {\n  constructor() {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\n    this.transferMaps = null;\n  }\n\n  clone() {\n    return Object.create(this);\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\n/**\n * @type {any}\n */\nconst CanvasGraphics = (function CanvasGraphicsClosure() {\n  // Defines the time the executeOperatorList is going to be executing\n  // before it stops and shedules a continue of execution.\n  const EXECUTION_TIME = 15;\n  // Defines the number of steps before checking the execution time\n  const EXECUTION_STEPS = 10;\n\n  function putBinaryImageData(ctx, imgData, transferMaps = null) {\n    if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n      ctx.putImageData(imgData, 0, 0);\n      return;\n    }\n\n    // Put the image data to the canvas in chunks, rather than putting the\n    // whole image at once.  This saves JS memory, because the ImageData object\n    // is smaller. It also possibly saves C++ memory within the implementation\n    // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n    // the data passed to putImageData()). |n| shouldn't be too small, however,\n    // because too many putImageData() calls will slow things down.\n    //\n    // Note: as written, if the last chunk is partial, the putImageData() call\n    // will (conceptually) put pixels past the bounds of the canvas.  But\n    // that's ok; any such pixels are ignored.\n\n    const height = imgData.height,\n      width = imgData.width;\n    const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    let srcPos = 0,\n      destPos;\n    const src = imgData.data;\n    const dest = chunkImgData.data;\n    let i, j, thisChunkHeight, elemsInThisChunk;\n\n    let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n    if (transferMaps) {\n      switch (transferMaps.length) {\n        case 1:\n          transferMapRed = transferMaps[0];\n          transferMapGreen = transferMaps[0];\n          transferMapBlue = transferMaps[0];\n          transferMapGray = transferMaps[0];\n          break;\n        case 4:\n          transferMapRed = transferMaps[0];\n          transferMapGreen = transferMaps[1];\n          transferMapBlue = transferMaps[2];\n          transferMapGray = transferMaps[3];\n          break;\n      }\n    }\n\n    // There are multiple forms in which the pixel data can be passed, and\n    // imgData.kind tells us which one this is.\n    if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n      // Grayscale, 1 bit per pixel (i.e. black-and-white).\n      const srcLength = src.byteLength;\n      const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n      const dest32DataLength = dest32.length;\n      const fullSrcDiff = (width + 7) >> 3;\n      let white = 0xffffffff;\n      let black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n      if (transferMapGray) {\n        if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n          [white, black] = [black, white];\n        }\n      }\n\n      for (i = 0; i < totalChunks; i++) {\n        thisChunkHeight =\n          i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        destPos = 0;\n        for (j = 0; j < thisChunkHeight; j++) {\n          const srcDiff = srcLength - srcPos;\n          let k = 0;\n          const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n          const kEndUnrolled = kEnd & ~7;\n          let mask = 0;\n          let srcByte = 0;\n          for (; k < kEndUnrolled; k += 8) {\n            srcByte = src[srcPos++];\n            dest32[destPos++] = srcByte & 128 ? white : black;\n            dest32[destPos++] = srcByte & 64 ? white : black;\n            dest32[destPos++] = srcByte & 32 ? white : black;\n            dest32[destPos++] = srcByte & 16 ? white : black;\n            dest32[destPos++] = srcByte & 8 ? white : black;\n            dest32[destPos++] = srcByte & 4 ? white : black;\n            dest32[destPos++] = srcByte & 2 ? white : black;\n            dest32[destPos++] = srcByte & 1 ? white : black;\n          }\n          for (; k < kEnd; k++) {\n            if (mask === 0) {\n              srcByte = src[srcPos++];\n              mask = 128;\n            }\n\n            dest32[destPos++] = srcByte & mask ? white : black;\n            mask >>= 1;\n          }\n        }\n        // We ran out of input. Make all remaining pixels transparent.\n        while (destPos < dest32DataLength) {\n          dest32[destPos++] = 0;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n      // RGBA, 32-bits per pixel.\n      const hasTransferMaps = !!(\n        transferMapRed ||\n        transferMapGreen ||\n        transferMapBlue\n      );\n\n      j = 0;\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n      for (i = 0; i < fullChunks; i++) {\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        srcPos += elemsInThisChunk;\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < elemsInThisChunk; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, j);\n        j += FULL_CHUNK_HEIGHT;\n      }\n      if (i < totalChunks) {\n        elemsInThisChunk = width * partialChunkHeight * 4;\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < elemsInThisChunk; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, j);\n      }\n    } else if (imgData.kind === ImageKind.RGB_24BPP) {\n      // RGB, 24-bits per pixel.\n      const hasTransferMaps = !!(\n        transferMapRed ||\n        transferMapGreen ||\n        transferMapBlue\n      );\n\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\n      elemsInThisChunk = width * thisChunkHeight;\n      for (i = 0; i < totalChunks; i++) {\n        if (i >= fullChunks) {\n          thisChunkHeight = partialChunkHeight;\n          elemsInThisChunk = width * thisChunkHeight;\n        }\n\n        destPos = 0;\n        for (j = elemsInThisChunk; j--; ) {\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = 255;\n        }\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < destPos; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else {\n      throw new Error(`bad image kind: ${imgData.kind}`);\n    }\n  }\n\n  function putBinaryImageMask(ctx, imgData) {\n    const height = imgData.height,\n      width = imgData.width;\n    const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    let srcPos = 0;\n    const src = imgData.data;\n    const dest = chunkImgData.data;\n\n    for (let i = 0; i < totalChunks; i++) {\n      const thisChunkHeight =\n        i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n      // Expand the mask so it can be used by the canvas.  Any required\n      // inversion has already been handled.\n      let destPos = 3; // alpha component offset\n      for (let j = 0; j < thisChunkHeight; j++) {\n        let elem,\n          mask = 0;\n        for (let k = 0; k < width; k++) {\n          if (!mask) {\n            elem = src[srcPos++];\n            mask = 128;\n          }\n          dest[destPos] = elem & mask ? 0 : 255;\n          destPos += 4;\n          mask >>= 1;\n        }\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  }\n\n  function copyCtxState(sourceCtx, destCtx) {\n    const properties = [\n      \"strokeStyle\",\n      \"fillStyle\",\n      \"fillRule\",\n      \"globalAlpha\",\n      \"lineWidth\",\n      \"lineCap\",\n      \"lineJoin\",\n      \"miterLimit\",\n      \"globalCompositeOperation\",\n      \"font\",\n    ];\n    for (let i = 0, ii = properties.length; i < ii; i++) {\n      const property = properties[i];\n      if (sourceCtx[property] !== undefined) {\n        destCtx[property] = sourceCtx[property];\n      }\n    }\n    if (sourceCtx.setLineDash !== undefined) {\n      destCtx.setLineDash(sourceCtx.getLineDash());\n      destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n    }\n  }\n\n  function resetCtxToDefault(ctx) {\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRule = \"nonzero\";\n    ctx.globalAlpha = 1;\n    ctx.lineWidth = 1;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 10;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.font = \"10px sans-serif\";\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash([]);\n      ctx.lineDashOffset = 0;\n    }\n  }\n\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\n    const length = bytes.length;\n    for (let i = 3; i < length; i += 4) {\n      const alpha = bytes[i];\n      if (alpha === 0) {\n        bytes[i - 3] = r0;\n        bytes[i - 2] = g0;\n        bytes[i - 1] = b0;\n      } else if (alpha < 255) {\n        const alpha_ = 255 - alpha;\n        bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n        bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n        bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n      }\n    }\n  }\n\n  function composeSMaskAlpha(maskData, layerData, transferMap) {\n    const length = maskData.length;\n    const scale = 1 / 255;\n    for (let i = 3; i < length; i += 4) {\n      const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n      layerData[i] = (layerData[i] * alpha * scale) | 0;\n    }\n  }\n\n  function composeSMaskLuminosity(maskData, layerData, transferMap) {\n    const length = maskData.length;\n    for (let i = 3; i < length; i += 4) {\n      const y =\n        maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n        maskData[i - 2] * 152 + // * 0.59 ....\n        maskData[i - 1] * 28; // * 0.11 ....\n      layerData[i] = transferMap\n        ? (layerData[i] * transferMap[y >> 8]) >> 8\n        : (layerData[i] * y) >> 16;\n    }\n  }\n\n  function genericComposeSMask(\n    maskCtx,\n    layerCtx,\n    width,\n    height,\n    subtype,\n    backdrop,\n    transferMap\n  ) {\n    const hasBackdrop = !!backdrop;\n    const r0 = hasBackdrop ? backdrop[0] : 0;\n    const g0 = hasBackdrop ? backdrop[1] : 0;\n    const b0 = hasBackdrop ? backdrop[2] : 0;\n\n    let composeFn;\n    if (subtype === \"Luminosity\") {\n      composeFn = composeSMaskLuminosity;\n    } else {\n      composeFn = composeSMaskAlpha;\n    }\n\n    // processing image in chunks to save memory\n    const PIXELS_TO_PROCESS = 1048576;\n    const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n    for (let row = 0; row < height; row += chunkSize) {\n      const chunkHeight = Math.min(chunkSize, height - row);\n      const maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n      const layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n      if (hasBackdrop) {\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\n      }\n      composeFn(maskData.data, layerData.data, transferMap);\n\n      maskCtx.putImageData(layerData, 0, row);\n    }\n  }\n\n  function composeSMask(ctx, smask, layerCtx) {\n    const mask = smask.canvas;\n    const maskCtx = smask.context;\n\n    ctx.setTransform(\n      smask.scaleX,\n      0,\n      0,\n      smask.scaleY,\n      smask.offsetX,\n      smask.offsetY\n    );\n\n    genericComposeSMask(\n      maskCtx,\n      layerCtx,\n      mask.width,\n      mask.height,\n      smask.subtype,\n      smask.backdrop,\n      smask.transferMap\n    );\n    ctx.drawImage(mask, 0, 0);\n  }\n\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n  const NORMAL_CLIP = {};\n  const EO_CLIP = {};\n\n  // eslint-disable-next-line no-shadow\n  class CanvasGraphics {\n    constructor(\n      canvasCtx,\n      commonObjs,\n      objs,\n      canvasFactory,\n      imageLayer,\n      optionalContentConfig\n    ) {\n      this.ctx = canvasCtx;\n      this.current = new CanvasExtraState();\n      this.stateStack = [];\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n      this.res = null;\n      this.xobjs = null;\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.canvasFactory = canvasFactory;\n      this.imageLayer = imageLayer;\n      this.groupStack = [];\n      this.processingType3 = null;\n      // Patterns are painted relative to the initial page/form transform, see\n      // PDF spec 8.7.2 NOTE 1.\n      this.baseTransform = null;\n      this.baseTransformStack = [];\n      this.groupLevel = 0;\n      this.smaskStack = [];\n      this.smaskCounter = 0;\n      this.tempSMask = null;\n      this.contentVisible = true;\n      this.markedContentStack = [];\n      this.optionalContentConfig = optionalContentConfig;\n      this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n      if (canvasCtx) {\n        // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n        // the transformation must already be set in canvasCtx._transformMatrix.\n        addContextCurrentTransform(canvasCtx);\n      }\n      this._cachedGetSinglePixelWidth = null;\n    }\n\n    beginDrawing({\n      transform,\n      viewport,\n      transparency = false,\n      background = null,\n    }) {\n      // For pdfs that use blend modes we have to clear the canvas else certain\n      // blend modes can look wrong since we'd be blending with a white\n      // backdrop. The problem with a transparent backdrop though is we then\n      // don't get sub pixel anti aliasing on text, creating temporary\n      // transparent canvas when we have blend modes.\n      const width = this.ctx.canvas.width;\n      const height = this.ctx.canvas.height;\n\n      this.ctx.save();\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n      this.ctx.fillRect(0, 0, width, height);\n      this.ctx.restore();\n\n      if (transparency) {\n        const transparentCanvas = this.cachedCanvases.getCanvas(\n          \"transparent\",\n          width,\n          height,\n          true\n        );\n        this.compositeCtx = this.ctx;\n        this.transparentCanvas = transparentCanvas.canvas;\n        this.ctx = transparentCanvas.context;\n        this.ctx.save();\n        // The transform can be applied before rendering, transferring it to\n        // the new canvas.\n        this.ctx.transform.apply(\n          this.ctx,\n          this.compositeCtx.mozCurrentTransform\n        );\n      }\n\n      this.ctx.save();\n      resetCtxToDefault(this.ctx);\n      if (transform) {\n        this.ctx.transform.apply(this.ctx, transform);\n      }\n      this.ctx.transform.apply(this.ctx, viewport.transform);\n\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\n      this._combinedScaleFactor = Math.hypot(\n        this.baseTransform[0],\n        this.baseTransform[2]\n      );\n\n      if (this.imageLayer) {\n        this.imageLayer.beginLayout();\n      }\n    }\n\n    executeOperatorList(\n      operatorList,\n      executionStartIdx,\n      continueCallback,\n      stepper\n    ) {\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      let i = executionStartIdx || 0;\n      const argsArrayLen = argsArray.length;\n\n      // Sometimes the OperatorList to execute is empty.\n      if (argsArrayLen === i) {\n        return i;\n      }\n\n      const chunkOperations =\n        argsArrayLen - i > EXECUTION_STEPS &&\n        typeof continueCallback === \"function\";\n      const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n      let steps = 0;\n\n      const commonObjs = this.commonObjs;\n      const objs = this.objs;\n      let fnId;\n\n      while (true) {\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\n          stepper.breakIt(i, continueCallback);\n          return i;\n        }\n\n        fnId = fnArray[i];\n\n        if (fnId !== OPS.dependency) {\n          this[fnId].apply(this, argsArray[i]);\n        } else {\n          for (const depObjId of argsArray[i]) {\n            const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n            // If the promise isn't resolved yet, add the continueCallback\n            // to the promise and bail out.\n            if (!objsPool.has(depObjId)) {\n              objsPool.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n\n        i++;\n\n        // If the entire operatorList was executed, stop as were done.\n        if (i === argsArrayLen) {\n          return i;\n        }\n\n        // If the execution took longer then a certain amount of time and\n        // `continueCallback` is specified, interrupt the execution.\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\n          if (Date.now() > endTime) {\n            continueCallback();\n            return i;\n          }\n          steps = 0;\n        }\n\n        // If the operatorList isn't executed completely yet OR the execution\n        // time was short enough, do another execution round.\n      }\n    }\n\n    endDrawing() {\n      // Finishing all opened operations such as SMask group painting.\n      while (this.stateStack.length || this.current.activeSMask !== null) {\n        this.restore();\n      }\n\n      this.ctx.restore();\n\n      if (this.transparentCanvas) {\n        this.ctx = this.compositeCtx;\n        this.ctx.save();\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n        this.ctx.drawImage(this.transparentCanvas, 0, 0);\n        this.ctx.restore();\n        this.transparentCanvas = null;\n      }\n\n      this.cachedCanvases.clear();\n\n      if (this.imageLayer) {\n        this.imageLayer.endLayout();\n      }\n    }\n\n    // Graphics state\n    setLineWidth(width) {\n      this.current.lineWidth = width;\n      this.ctx.lineWidth = width;\n    }\n\n    setLineCap(style) {\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.ctx.miterLimit = limit;\n    }\n\n    setDash(dashArray, dashPhase) {\n      const ctx = this.ctx;\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash(dashArray);\n        ctx.lineDashOffset = dashPhase;\n      }\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (let i = 0, ii = states.length; i < ii; i++) {\n        const state = states[i];\n        const key = state[0];\n        const value = state[1];\n\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value[0], value[1]);\n            break;\n          case \"CA\":\n            this.current.strokeAlpha = state[1];\n            break;\n          case \"ca\":\n            this.current.fillAlpha = state[1];\n            this.ctx.globalAlpha = state[1];\n            break;\n          case \"BM\":\n            this.ctx.globalCompositeOperation = value;\n            break;\n          case \"SMask\":\n            if (this.current.activeSMask) {\n              // If SMask is currrenly used, it needs to be suspended or\n              // finished. Suspend only makes sense when at least one save()\n              // was performed and state needs to be reverted on restore().\n              if (\n                this.stateStack.length > 0 &&\n                this.stateStack[this.stateStack.length - 1].activeSMask ===\n                  this.current.activeSMask\n              ) {\n                this.suspendSMaskGroup();\n              } else {\n                this.endSMaskGroup();\n              }\n            }\n            this.current.activeSMask = value ? this.tempSMask : null;\n            if (this.current.activeSMask) {\n              this.beginSMaskGroup();\n            }\n            this.tempSMask = null;\n            break;\n          case \"TR\":\n            this.current.transferMaps = value;\n        }\n      }\n    }\n\n    beginSMaskGroup() {\n      const activeSMask = this.current.activeSMask;\n      const drawnWidth = activeSMask.canvas.width;\n      const drawnHeight = activeSMask.canvas.height;\n      const cacheId = \"smaskGroupAt\" + this.groupLevel;\n      const scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n\n      const currentCtx = this.ctx;\n      const currentTransform = currentCtx.mozCurrentTransform;\n      this.ctx.save();\n\n      const groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    }\n\n    suspendSMaskGroup() {\n      // Similar to endSMaskGroup, the intermediate canvas has to be composed\n      // and future ctx state restored.\n      const groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(this.ctx, this.current.activeSMask, groupCtx);\n      this.ctx.restore();\n      this.ctx.save(); // save is needed since SMask will be resumed.\n      copyCtxState(groupCtx, this.ctx);\n\n      // Saving state for resuming.\n      this.current.resumeSMaskCtx = groupCtx;\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      const deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n\n      // SMask was composed, the results at the groupCtx can be cleared.\n      groupCtx.save();\n      groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n      groupCtx.restore();\n    }\n\n    resumeSMaskGroup() {\n      // Resuming state saved by suspendSMaskGroup. We don't need to restore\n      // any groupCtx state since restore() command (the only caller) will do\n      // that for us. See also beginSMaskGroup.\n      const groupCtx = this.current.resumeSMaskCtx;\n      const currentCtx = this.ctx;\n      this.ctx = groupCtx;\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    }\n\n    endSMaskGroup() {\n      const groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(this.ctx, this.current.activeSMask, groupCtx);\n      this.ctx.restore();\n      copyCtxState(groupCtx, this.ctx);\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      const deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n    }\n\n    save() {\n      this.ctx.save();\n      const old = this.current;\n      this.stateStack.push(old);\n      this.current = old.clone();\n      this.current.resumeSMaskCtx = null;\n    }\n\n    restore() {\n      // SMask was suspended, we just need to resume it.\n      if (this.current.resumeSMaskCtx) {\n        this.resumeSMaskGroup();\n      }\n      // SMask has to be finished once there is no states that are using the\n      // same SMask.\n      if (\n        this.current.activeSMask !== null &&\n        (this.stateStack.length === 0 ||\n          this.stateStack[this.stateStack.length - 1].activeSMask !==\n            this.current.activeSMask)\n      ) {\n        this.endSMaskGroup();\n      }\n\n      if (this.stateStack.length !== 0) {\n        this.current = this.stateStack.pop();\n        this.ctx.restore();\n\n        // Ensure that the clipping path is reset (fixes issue6413.pdf).\n        this.pendingClip = null;\n\n        this._cachedGetSinglePixelWidth = null;\n      } else {\n        // We've finished all the SMask groups, reflect that in our state.\n        this.current.activeSMask = null;\n      }\n    }\n\n    transform(a, b, c, d, e, f) {\n      this.ctx.transform(a, b, c, d, e, f);\n\n      this._cachedGetSinglePixelWidth = null;\n    }\n\n    // Path\n    constructPath(ops, args) {\n      const ctx = this.ctx;\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n        switch (ops[i] | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n\n            const xw = x + width;\n            const yh = y + height;\n            ctx.moveTo(x, y);\n            if (width === 0 || height === 0) {\n              ctx.lineTo(xw, yh);\n            } else {\n              ctx.lineTo(xw, y);\n              ctx.lineTo(xw, yh);\n              ctx.lineTo(x, yh);\n            }\n\n            ctx.closePath();\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.moveTo(x, y);\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.lineTo(x, y);\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            ctx.bezierCurveTo(\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3],\n              x,\n              y\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            ctx.bezierCurveTo(\n              x,\n              y,\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3]\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n            j += 4;\n            break;\n          case OPS.closePath:\n            ctx.closePath();\n            break;\n        }\n      }\n      current.setCurrentPoint(x, y);\n    }\n\n    closePath() {\n      this.ctx.closePath();\n    }\n\n    stroke(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      const ctx = this.ctx;\n      const strokeColor = this.current.strokeColor;\n      // For stroke we want to temporarily change the global alpha to the\n      // stroking alpha.\n      ctx.globalAlpha = this.current.strokeAlpha;\n      if (this.contentVisible) {\n        if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n          const lineWidth = this.getSinglePixelWidth();\n          ctx.save();\n          ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n          // Prevent drawing too thin lines by enforcing a minimum line width.\n          ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n          ctx.stroke();\n          ctx.restore();\n        } else {\n          const lineWidth = this.getSinglePixelWidth();\n          if (lineWidth < 0 && -lineWidth >= this.current.lineWidth) {\n            // The current transform will transform a square pixel into a\n            // parallelogram where both heights are lower than 1 and not equal.\n            ctx.save();\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n            ctx.stroke();\n            ctx.restore();\n          } else {\n            // Prevent drawing too thin lines by enforcing a minimum line width.\n            ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n            ctx.stroke();\n          }\n        }\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n      // Restore the global alpha to the fill alpha\n      ctx.globalAlpha = this.current.fillAlpha;\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    fill(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      const ctx = this.ctx;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n      let needRestore = false;\n\n      if (isPatternFill) {\n        ctx.save();\n        ctx.fillStyle = fillColor.getPattern(ctx, this);\n        needRestore = true;\n      }\n\n      if (this.contentVisible) {\n        if (this.pendingEOFill) {\n          ctx.fill(\"evenodd\");\n          this.pendingEOFill = false;\n        } else {\n          ctx.fill();\n        }\n      }\n\n      if (needRestore) {\n        ctx.restore();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n    }\n\n    eoFill() {\n      this.pendingEOFill = true;\n      this.fill();\n    }\n\n    fillStroke() {\n      this.fill(false);\n      this.stroke(false);\n\n      this.consumePath();\n    }\n\n    eoFillStroke() {\n      this.pendingEOFill = true;\n      this.fillStroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.pendingEOFill = true;\n      this.closePath();\n      this.fillStroke();\n    }\n\n    endPath() {\n      this.consumePath();\n    }\n\n    // Clipping\n    clip() {\n      this.pendingClip = NORMAL_CLIP;\n    }\n\n    eoClip() {\n      this.pendingClip = EO_CLIP;\n    }\n\n    // Text\n    beginText() {\n      this.current.textMatrix = IDENTITY_MATRIX;\n      this.current.textMatrixScale = 1;\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    }\n\n    endText() {\n      const paths = this.pendingTextPaths;\n      const ctx = this.ctx;\n      if (paths === undefined) {\n        ctx.beginPath();\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      for (let i = 0; i < paths.length; i++) {\n        const path = paths[i];\n        ctx.setTransform.apply(ctx, path.transform);\n        ctx.translate(path.x, path.y);\n        path.addToPath(ctx, path.fontSize);\n      }\n      ctx.restore();\n      ctx.clip();\n      ctx.beginPath();\n      delete this.pendingTextPaths;\n    }\n\n    setCharSpacing(spacing) {\n      this.current.charSpacing = spacing;\n    }\n\n    setWordSpacing(spacing) {\n      this.current.wordSpacing = spacing;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setFont(fontRefName, size) {\n      const fontObj = this.commonObjs.get(fontRefName);\n      const current = this.current;\n\n      if (!fontObj) {\n        throw new Error(`Can't find font for ${fontRefName}`);\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      // A valid matrix needs all main diagonal elements to be non-zero\n      // This also ensures we bypass FF bugzilla bug #719844.\n      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n        warn(\"Invalid font matrix for font \" + fontRefName);\n      }\n\n      // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n      // and in some docs this can be negative (inverted x-y axes).\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      this.current.font = fontObj;\n      this.current.fontSize = size;\n\n      if (fontObj.isType3Font) {\n        return; // we don't need ctx.font for Type3 fonts\n      }\n\n      const name = fontObj.loadedName || \"sans-serif\";\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n      const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n      // Some font backends cannot handle fonts below certain size.\n      // Keeping the font at minimal size and using the fontSizeScale to change\n      // the current transformation matrix before the fillText/strokeText.\n      // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n      let browserFontSize = size;\n      if (size < MIN_FONT_SIZE) {\n        browserFontSize = MIN_FONT_SIZE;\n      } else if (size > MAX_FONT_SIZE) {\n        browserFontSize = MAX_FONT_SIZE;\n      }\n      this.current.fontSizeScale = size / browserFontSize;\n\n      this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n    }\n\n    setTextRenderingMode(mode) {\n      this.current.textRenderingMode = mode;\n    }\n\n    setTextRise(rise) {\n      this.current.textRise = rise;\n    }\n\n    moveText(x, y) {\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      this.current.textMatrix = [a, b, c, d, e, f];\n      this.current.textMatrixScale = Math.hypot(a, b);\n\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\n      const ctx = this.ctx;\n      const current = this.current;\n      const font = current.font;\n      const textRenderingMode = current.textRenderingMode;\n      const fontSize = current.fontSize / current.fontSizeScale;\n      const fillStrokeMode =\n        textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      const isAddToPathSet = !!(\n        textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n      );\n      const patternFill = current.patternFill && !font.missingFile;\n\n      let addToPath;\n      if (font.disableFontFace || isAddToPathSet || patternFill) {\n        addToPath = font.getPathGenerator(this.commonObjs, character);\n      }\n\n      if (font.disableFontFace || patternFill) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.beginPath();\n        addToPath(ctx, fontSize);\n        if (patternTransform) {\n          ctx.setTransform.apply(ctx, patternTransform);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fill();\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          if (resetLineWidthToOne) {\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          }\n          ctx.stroke();\n        }\n        ctx.restore();\n      } else {\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fillText(character, x, y);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          if (resetLineWidthToOne) {\n            ctx.save();\n            ctx.moveTo(x, y);\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n            ctx.strokeText(character, 0, 0);\n            ctx.restore();\n          } else {\n            ctx.strokeText(character, x, y);\n          }\n        }\n      }\n\n      if (isAddToPathSet) {\n        const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n        paths.push({\n          transform: ctx.mozCurrentTransform,\n          x,\n          y,\n          fontSize,\n          addToPath,\n        });\n      }\n    }\n\n    get isFontSubpixelAAEnabled() {\n      // Checks if anti-aliasing is enabled when scaled text is painted.\n      // On Windows GDI scaled fonts looks bad.\n      const { context: ctx } = this.cachedCanvases.getCanvas(\n        \"isFontSubpixelAAEnabled\",\n        10,\n        10\n      );\n      ctx.scale(1.5, 1);\n      ctx.fillText(\"I\", 0, 10);\n      const data = ctx.getImageData(0, 0, 10, 10).data;\n      let enabled = false;\n      for (let i = 3; i < data.length; i += 4) {\n        if (data[i] > 0 && data[i] < 255) {\n          enabled = true;\n          break;\n        }\n      }\n      return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      if (font.isType3Font) {\n        return this.showType3Text(glyphs);\n      }\n\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return undefined;\n      }\n\n      const ctx = this.ctx;\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const glyphsLength = glyphs.length;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      const simpleFillText =\n        current.textRenderingMode === TextRenderingMode.FILL &&\n        !font.disableFontFace &&\n        !current.patternFill;\n\n      ctx.save();\n      let patternTransform;\n      if (current.patternFill) {\n        // TODO: Patterns are not applied correctly to text if a non-embedded\n        // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\n        ctx.save();\n        const pattern = current.fillColor.getPattern(ctx, this);\n        patternTransform = ctx.mozCurrentTransform;\n        ctx.restore();\n        ctx.fillStyle = pattern;\n      }\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y + current.textRise);\n\n      if (fontDirection > 0) {\n        ctx.scale(textHScale, -1);\n      } else {\n        ctx.scale(textHScale, 1);\n      }\n\n      let lineWidth = current.lineWidth;\n      let resetLineWidthToOne = false;\n      const scale = current.textMatrixScale;\n      if (scale === 0 || lineWidth === 0) {\n        const fillStrokeMode =\n          current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          this._cachedGetSinglePixelWidth = null;\n          lineWidth = this.getSinglePixelWidth();\n          resetLineWidthToOne = lineWidth < 0;\n        }\n      } else {\n        lineWidth /= scale;\n      }\n\n      if (fontSizeScale !== 1.0) {\n        ctx.scale(fontSizeScale, fontSizeScale);\n        lineWidth /= fontSizeScale;\n      }\n\n      ctx.lineWidth = lineWidth;\n\n      let x = 0,\n        i;\n      for (i = 0; i < glyphsLength; ++i) {\n        const glyph = glyphs[i];\n        if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        let restoreNeeded = false;\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        const accent = glyph.accent;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          const vx =\n            -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (font.remeasure && width > 0) {\n          // Some standard fonts may not have the exact width: rescale per\n          // character if measured width is greater than expected glyph width\n          // and subpixel-aa is enabled, otherwise just center the glyph.\n          const measuredWidth =\n            ((ctx.measureText(character).width * 1000) / fontSize) *\n            fontSizeScale;\n          if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n            const characterScaleX = width / measuredWidth;\n            restoreNeeded = true;\n            ctx.save();\n            ctx.scale(characterScaleX, 1);\n            scaledX /= characterScaleX;\n          } else if (width !== measuredWidth) {\n            scaledX +=\n              (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n          }\n        }\n\n        // Only attempt to draw the glyph if it is actually in the embedded font\n        // file or if there isn't a font file so the fallback font is shown.\n        if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n          if (simpleFillText && !accent) {\n            // common case\n            ctx.fillText(character, scaledX, scaledY);\n          } else {\n            this.paintChar(\n              character,\n              scaledX,\n              scaledY,\n              patternTransform,\n              resetLineWidthToOne\n            );\n            if (accent) {\n              const scaledAccentX =\n                scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n              const scaledAccentY =\n                scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n              this.paintChar(\n                accent.fontChar,\n                scaledAccentX,\n                scaledAccentY,\n                patternTransform,\n                resetLineWidthToOne\n              );\n            }\n          }\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n        x += charWidth;\n\n        if (restoreNeeded) {\n          ctx.restore();\n        }\n      }\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n      ctx.restore();\n      return undefined;\n    }\n\n    showType3Text(glyphs) {\n      // Type3 fonts - each glyph is a \"mini-PDF\"\n      const ctx = this.ctx;\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      const fontDirection = current.fontDirection;\n      const spacingDir = font.vertical ? 1 : -1;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const textHScale = current.textHScale * fontDirection;\n      const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n      const glyphsLength = glyphs.length;\n      const isTextInvisible =\n        current.textRenderingMode === TextRenderingMode.INVISIBLE;\n      let i, glyph, width, spacingLength;\n\n      if (isTextInvisible || fontSize === 0) {\n        return;\n      }\n      this._cachedGetSinglePixelWidth = null;\n\n      ctx.save();\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y);\n\n      ctx.scale(textHScale, fontDirection);\n\n      for (i = 0; i < glyphsLength; ++i) {\n        glyph = glyphs[i];\n        if (isNum(glyph)) {\n          spacingLength = (spacingDir * glyph * fontSize) / 1000;\n          this.ctx.translate(spacingLength, 0);\n          current.x += spacingLength * textHScale;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const operatorList = font.charProcOperatorList[glyph.operatorListId];\n        if (!operatorList) {\n          warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n          continue;\n        }\n        if (this.contentVisible) {\n          this.processingType3 = glyph;\n          this.save();\n          ctx.scale(fontSize, fontSize);\n          ctx.transform.apply(ctx, fontMatrix);\n          this.executeOperatorList(operatorList);\n          this.restore();\n        }\n\n        const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n        width = transformed[0] * fontSize + spacing;\n\n        ctx.translate(width, 0);\n        current.x += width * textHScale;\n      }\n      ctx.restore();\n      this.processingType3 = null;\n    }\n\n    // Type3 fonts\n    setCharWidth(xWidth, yWidth) {\n      // We can safely ignore this since the width should be the same\n      // as the width in the Widths array.\n    }\n\n    setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n      // TODO According to the spec we're also suppose to ignore any operators\n      // that set color or include images while processing this type3 font.\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\n      this.clip();\n      this.endPath();\n    }\n\n    // Color\n    getColorN_Pattern(IR) {\n      let pattern;\n      if (IR[0] === \"TilingPattern\") {\n        const color = IR[1];\n        const baseTransform =\n          this.baseTransform || this.ctx.mozCurrentTransform.slice();\n        const canvasGraphicsFactory = {\n          createCanvasGraphics: ctx => {\n            return new CanvasGraphics(\n              ctx,\n              this.commonObjs,\n              this.objs,\n              this.canvasFactory\n            );\n          },\n        };\n        pattern = new TilingPattern(\n          IR,\n          color,\n          this.ctx,\n          canvasGraphicsFactory,\n          baseTransform\n        );\n      } else {\n        pattern = getShadingPattern(IR);\n      }\n      return pattern;\n    }\n\n    setStrokeColorN() {\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\n    }\n\n    setFillColorN() {\n      this.current.fillColor = this.getColorN_Pattern(arguments);\n      this.current.patternFill = true;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      const color = Util.makeHexColor(r, g, b);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    }\n\n    setFillRGBColor(r, g, b) {\n      const color = Util.makeHexColor(r, g, b);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n      this.current.patternFill = false;\n    }\n\n    shadingFill(patternIR) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n\n      this.save();\n      const pattern = getShadingPattern(patternIR);\n      ctx.fillStyle = pattern.getPattern(ctx, this, true);\n\n      const inv = ctx.mozCurrentTransformInverse;\n      if (inv) {\n        const canvas = ctx.canvas;\n        const width = canvas.width;\n        const height = canvas.height;\n\n        const bl = Util.applyTransform([0, 0], inv);\n        const br = Util.applyTransform([0, height], inv);\n        const ul = Util.applyTransform([width, 0], inv);\n        const ur = Util.applyTransform([width, height], inv);\n\n        const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n      } else {\n        // HACK to draw the gradient onto an infinite rectangle.\n        // PDF gradients are drawn across the entire image while\n        // Canvas only allows gradients to be drawn in a rectangle\n        // The following bug should allow us to remove this.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n      }\n\n      this.restore();\n    }\n\n    // Images\n    beginInlineImage() {\n      unreachable(\"Should not call beginInlineImage\");\n    }\n\n    beginImageData() {\n      unreachable(\"Should not call beginImageData\");\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.save();\n      this.baseTransformStack.push(this.baseTransform);\n\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform.apply(this, matrix);\n      }\n\n      this.baseTransform = this.ctx.mozCurrentTransform;\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n        this.ctx.rect(bbox[0], bbox[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.restore();\n      this.baseTransform = this.baseTransformStack.pop();\n    }\n\n    beginGroup(group) {\n      if (!this.contentVisible) {\n        return;\n      }\n\n      this.save();\n      const currentCtx = this.ctx;\n      // TODO non-isolated groups - according to Rik at adobe non-isolated\n      // group results aren't usually that different and they even have tools\n      // that ignore this setting. Notes from Rik on implementing:\n      // - When you encounter an transparency group, create a new canvas with\n      // the dimensions of the bbox\n      // - copy the content from the previous canvas to the new canvas\n      // - draw as usual\n      // - remove the backdrop alpha:\n      // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n      // value of your transparency group and 'alphaBackdrop' the alpha of the\n      // backdrop\n      // - remove background color:\n      // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n      if (!group.isolated) {\n        info(\"TODO: Support non-isolated groups.\");\n      }\n\n      // TODO knockout - supposedly possible with the clever use of compositing\n      // modes.\n      if (group.knockout) {\n        warn(\"Knockout groups not supported.\");\n      }\n\n      const currentTransform = currentCtx.mozCurrentTransform;\n      if (group.matrix) {\n        currentCtx.transform.apply(currentCtx, group.matrix);\n      }\n      if (!group.bbox) {\n        throw new Error(\"Bounding box is required.\");\n      }\n\n      // Based on the current transform figure out how big the bounding box\n      // will actually be.\n      let bounds = Util.getAxialAlignedBoundingBox(\n        group.bbox,\n        currentCtx.mozCurrentTransform\n      );\n      // Clip the bounding box to the current canvas.\n      const canvasBounds = [\n        0,\n        0,\n        currentCtx.canvas.width,\n        currentCtx.canvas.height,\n      ];\n      bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n      // Use ceil in case we're between sizes so we don't create canvas that is\n      // too small and make the canvas at least 1x1 pixels.\n      const offsetX = Math.floor(bounds[0]);\n      const offsetY = Math.floor(bounds[1]);\n      let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n      let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n      let scaleX = 1,\n        scaleY = 1;\n      if (drawnWidth > MAX_GROUP_SIZE) {\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\n        drawnWidth = MAX_GROUP_SIZE;\n      }\n      if (drawnHeight > MAX_GROUP_SIZE) {\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\n        drawnHeight = MAX_GROUP_SIZE;\n      }\n\n      let cacheId = \"groupAt\" + this.groupLevel;\n      if (group.smask) {\n        // Using two cache entries is case if masks are used one after another.\n        cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n      }\n      const scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n      const groupCtx = scratchCanvas.context;\n\n      // Since we created a new canvas that is just the size of the bounding box\n      // we have to translate the group ctx.\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\n      groupCtx.translate(-offsetX, -offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      if (group.smask) {\n        // Saving state and cached mask to be used in setGState.\n        this.smaskStack.push({\n          canvas: scratchCanvas.canvas,\n          context: groupCtx,\n          offsetX,\n          offsetY,\n          scaleX,\n          scaleY,\n          subtype: group.smask.subtype,\n          backdrop: group.smask.backdrop,\n          transferMap: group.smask.transferMap || null,\n          startTransformInverse: null, // used during suspend operation\n        });\n      } else {\n        // Setup the current ctx so when the group is popped we draw it at the\n        // right location.\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n        currentCtx.translate(offsetX, offsetY);\n        currentCtx.scale(scaleX, scaleY);\n      }\n      // The transparency group inherits all off the current graphics state\n      // except the blend mode, soft mask, and alpha constants.\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n\n      // Resetting mask state, masks will be applied on restore of the group.\n      this.current.activeSMask = null;\n    }\n\n    endGroup(group) {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.groupLevel--;\n      const groupCtx = this.ctx;\n      this.ctx = this.groupStack.pop();\n      // Turn off image smoothing to avoid sub pixel interpolation which can\n      // look kind of blurry for some pdfs.\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\n        this.ctx.imageSmoothingEnabled = false;\n      } else {\n        this.ctx.mozImageSmoothingEnabled = false;\n      }\n      if (group.smask) {\n        this.tempSMask = this.smaskStack.pop();\n      } else {\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      }\n      this.restore();\n    }\n\n    beginAnnotations() {\n      this.save();\n      if (this.baseTransform) {\n        this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n      }\n    }\n\n    endAnnotations() {\n      this.restore();\n    }\n\n    beginAnnotation(rect, transform, matrix) {\n      this.save();\n      resetCtxToDefault(this.ctx);\n      this.current = new CanvasExtraState();\n\n      if (Array.isArray(rect) && rect.length === 4) {\n        const width = rect[2] - rect[0];\n        const height = rect[3] - rect[1];\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n\n      this.transform.apply(this, transform);\n      this.transform.apply(this, matrix);\n    }\n\n    endAnnotation() {\n      this.restore();\n    }\n\n    paintImageMaskXObject(img) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n      const width = img.width,\n        height = img.height;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n\n      const glyph = this.processingType3;\n\n      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n          glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n        } else {\n          glyph.compiled = null;\n        }\n      }\n\n      if (glyph?.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      this.paintInlineImageXObject(maskCanvas.canvas);\n    }\n\n    paintImageMaskXObjectRepeat(\n      imgData,\n      scaleX,\n      skewX = 0,\n      skewY = 0,\n      scaleY,\n      positions\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, imgData);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      const ctx = this.ctx;\n      for (let i = 0, ii = positions.length; i < ii; i += 2) {\n        ctx.save();\n        ctx.transform(\n          scaleX,\n          skewX,\n          skewY,\n          scaleY,\n          positions[i],\n          positions[i + 1]\n        );\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    }\n\n    paintImageMaskXObjectGroup(images) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n      for (let i = 0, ii = images.length; i < ii; i++) {\n        const image = images[i];\n        const width = image.width,\n          height = image.height;\n\n        const maskCanvas = this.cachedCanvases.getCanvas(\n          \"maskCanvas\",\n          width,\n          height\n        );\n        const maskCtx = maskCanvas.context;\n        maskCtx.save();\n\n        putBinaryImageMask(maskCtx, image);\n\n        maskCtx.globalCompositeOperation = \"source-in\";\n\n        maskCtx.fillStyle = isPatternFill\n          ? fillColor.getPattern(maskCtx, this)\n          : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n\n        maskCtx.restore();\n\n        ctx.save();\n        ctx.transform.apply(ctx, image.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    }\n\n    paintImageXObject(objId) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      const width = imgData.width;\n      const height = imgData.height;\n      const map = [];\n      for (let i = 0, ii = positions.length; i < ii; i += 2) {\n        map.push({\n          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n          x: 0,\n          y: 0,\n          w: width,\n          h: height,\n        });\n      }\n      this.paintInlineImageXObjectGroup(imgData, map);\n    }\n\n    paintInlineImageXObject(imgData) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const width = imgData.width;\n      const height = imgData.height;\n      const ctx = this.ctx;\n\n      this.save();\n      // scale the image to the unit square\n      ctx.scale(1 / width, -1 / height);\n\n      const currentTransform = ctx.mozCurrentTransformInverse;\n      let widthScale = Math.max(\n        Math.hypot(currentTransform[0], currentTransform[1]),\n        1\n      );\n      let heightScale = Math.max(\n        Math.hypot(currentTransform[2], currentTransform[3]),\n        1\n      );\n\n      let imgToPaint, tmpCanvas, tmpCtx;\n      // typeof check is needed due to node.js support, see issue #8489\n      if (\n        (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n        !imgData.data\n      ) {\n        imgToPaint = imgData;\n      } else {\n        tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n        tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n        imgToPaint = tmpCanvas.canvas;\n      }\n\n      let paintWidth = width,\n        paintHeight = height;\n      let tmpCanvasId = \"prescale1\";\n      // Vertical or horizontal scaling shall not be more than 2 to not lose the\n      // pixels during drawImage operation, painting on the temporary canvas(es)\n      // that are twice smaller in size.\n      while (\n        (widthScale > 2 && paintWidth > 1) ||\n        (heightScale > 2 && paintHeight > 1)\n      ) {\n        let newWidth = paintWidth,\n          newHeight = paintHeight;\n        if (widthScale > 2 && paintWidth > 1) {\n          newWidth = Math.ceil(paintWidth / 2);\n          widthScale /= paintWidth / newWidth;\n        }\n        if (heightScale > 2 && paintHeight > 1) {\n          newHeight = Math.ceil(paintHeight / 2);\n          heightScale /= paintHeight / newHeight;\n        }\n        tmpCanvas = this.cachedCanvases.getCanvas(\n          tmpCanvasId,\n          newWidth,\n          newHeight\n        );\n        tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\n        tmpCtx.drawImage(\n          imgToPaint,\n          0,\n          0,\n          paintWidth,\n          paintHeight,\n          0,\n          0,\n          newWidth,\n          newHeight\n        );\n        imgToPaint = tmpCanvas.canvas;\n        paintWidth = newWidth;\n        paintHeight = newHeight;\n        tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n      }\n      ctx.drawImage(\n        imgToPaint,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        -height,\n        width,\n        height\n      );\n\n      if (this.imageLayer) {\n        const position = this.getCanvasPosition(0, -height);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: width / currentTransform[0],\n          height: height / currentTransform[3],\n        });\n      }\n      this.restore();\n    }\n\n    paintInlineImageXObjectGroup(imgData, map) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n      const w = imgData.width;\n      const h = imgData.height;\n\n      const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n      for (let i = 0, ii = map.length; i < ii; i++) {\n        const entry = map[i];\n        ctx.save();\n        ctx.transform.apply(ctx, entry.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(\n          tmpCanvas.canvas,\n          entry.x,\n          entry.y,\n          entry.w,\n          entry.h,\n          0,\n          -1,\n          1,\n          1\n        );\n        if (this.imageLayer) {\n          const position = this.getCanvasPosition(entry.x, entry.y);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: w,\n            height: h,\n          });\n        }\n        ctx.restore();\n      }\n    }\n\n    paintSolidColorImageMask() {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.ctx.fillRect(0, 0, 1, 1);\n    }\n\n    // Marked content\n\n    markPoint(tag) {\n      // TODO Marked content.\n    }\n\n    markPointProps(tag, properties) {\n      // TODO Marked content.\n    }\n\n    beginMarkedContent(tag) {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    }\n\n    beginMarkedContentProps(tag, properties) {\n      if (tag === \"OC\") {\n        this.markedContentStack.push({\n          visible: this.optionalContentConfig.isVisible(properties),\n        });\n      } else {\n        this.markedContentStack.push({\n          visible: true,\n        });\n      }\n      this.contentVisible = this.isContentVisible();\n    }\n\n    endMarkedContent() {\n      this.markedContentStack.pop();\n      this.contentVisible = this.isContentVisible();\n    }\n\n    // Compatibility\n\n    beginCompat() {\n      // TODO ignore undefined operators (should we do that anyway?)\n    }\n\n    endCompat() {\n      // TODO stop ignoring undefined operators\n    }\n\n    // Helper functions\n\n    consumePath() {\n      const ctx = this.ctx;\n      if (this.pendingClip) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n        this.pendingClip = null;\n      }\n      ctx.beginPath();\n    }\n\n    getSinglePixelWidth() {\n      if (this._cachedGetSinglePixelWidth === null) {\n        // If transform is [a b] then a pixel (square) is transformed\n        //                 [c d]\n        // into a parallelogram: its area is the abs value of the determinant.\n        // This parallelogram has 2 heights:\n        //  - Area / |col_1|;\n        //  - Area / |col_2|.\n        // so in order to get a height of at least 1, pixel height\n        // must be computed as followed:\n        //  h = max(sqrt(a² + c²) / |det(M)|, sqrt(b² + d²) / |det(M)|).\n        // This is equivalent to:\n        //  h = max(|line_1_inv(M)|, |line_2_inv(M)|)\n        const m = this.ctx.mozCurrentTransform;\n\n        const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n        const sqNorm1 = m[0] ** 2 + m[2] ** 2;\n        const sqNorm2 = m[1] ** 2 + m[3] ** 2;\n        const pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\n        if (\n          sqNorm1 !== sqNorm2 &&\n          this._combinedScaleFactor * pixelHeight > 1\n        ) {\n          // The parallelogram isn't a square and at least one height\n          // is lower than 1 so the resulting line width must be 1\n          // but it cannot be achieved with one scale: when scaling a pixel\n          // we'll get a rectangle (see issue #12295).\n          // For example with matrix [0.001 0, 0, 100], a pixel is transformed\n          // in a rectangle 0.001x100. If we just scale by 1000 (to have a 1)\n          // then we'll get a rectangle 1x1e5 which is wrong.\n          // In this case, we must reset the transform, set linewidth to 1\n          // and then stroke.\n          this._cachedGetSinglePixelWidth = -(\n            this._combinedScaleFactor * pixelHeight\n          );\n        } else if (absDet > Number.EPSILON) {\n          this._cachedGetSinglePixelWidth = pixelHeight;\n        } else {\n          // Matrix is non-invertible.\n          this._cachedGetSinglePixelWidth = 1;\n        }\n      }\n\n      return this._cachedGetSinglePixelWidth;\n    }\n\n    getCanvasPosition(x, y) {\n      const transform = this.ctx.mozCurrentTransform;\n      return [\n        transform[0] * x + transform[2] * y + transform[4],\n        transform[1] * x + transform[3] * y + transform[5],\n      ];\n    }\n\n    isContentVisible() {\n      for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n        if (!this.markedContentStack[i].visible) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  for (const op in OPS) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n\n  return CanvasGraphics;\n})();\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FormatError,\n  info,\n  shadow,\n  unreachable,\n  Util,\n} from \"../shared/util.js\";\n\nlet svgElement;\n\n// TODO: remove this when Firefox ESR supports DOMMatrix.\nfunction createMatrix(matrix) {\n  if (typeof DOMMatrix !== \"undefined\") {\n    return new DOMMatrix(matrix);\n  }\n  if (!svgElement) {\n    svgElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  }\n  return svgElement.createSVGMatrix(matrix);\n}\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nclass BaseShadingPattern {\n  constructor() {\n    if (this.constructor === BaseShadingPattern) {\n      unreachable(\"Cannot initialize BaseShadingPattern.\");\n    }\n  }\n\n  getPattern() {\n    unreachable(\"Abstract method `getPattern` called.\");\n  }\n}\n\nclass RadialAxialShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._type = IR[1];\n    this._bbox = IR[2];\n    this._colorStops = IR[3];\n    this._p0 = IR[4];\n    this._p1 = IR[5];\n    this._r0 = IR[6];\n    this._r1 = IR[7];\n    this._matrix = IR[8];\n  }\n\n  getPattern(ctx, owner, shadingFill) {\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\n      \"pattern\",\n      ctx.canvas.width,\n      ctx.canvas.height,\n      true\n    );\n\n    const tmpCtx = tmpCanvas.context;\n    tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n    tmpCtx.beginPath();\n    tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n\n    if (!shadingFill) {\n      tmpCtx.setTransform.apply(tmpCtx, owner.baseTransform);\n      if (this._matrix) {\n        tmpCtx.transform.apply(tmpCtx, this._matrix);\n      }\n    } else {\n      tmpCtx.setTransform.apply(tmpCtx, ctx.mozCurrentTransform);\n    }\n    applyBoundingBox(tmpCtx, this._bbox);\n\n    let grad;\n    if (this._type === \"axial\") {\n      grad = tmpCtx.createLinearGradient(\n        this._p0[0],\n        this._p0[1],\n        this._p1[0],\n        this._p1[1]\n      );\n    } else if (this._type === \"radial\") {\n      grad = tmpCtx.createRadialGradient(\n        this._p0[0],\n        this._p0[1],\n        this._r0,\n        this._p1[0],\n        this._p1[1],\n        this._r1\n      );\n    }\n\n    for (const colorStop of this._colorStops) {\n      grad.addColorStop(colorStop[0], colorStop[1]);\n    }\n    tmpCtx.fillStyle = grad;\n    tmpCtx.fill();\n\n    const pattern = ctx.createPattern(tmpCanvas.canvas, \"repeat\");\n    pattern.setTransform(createMatrix(ctx.mozCurrentTransformInverse));\n    return pattern;\n  }\n}\n\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n  // Very basic Gouraud-shaded triangle rasterization algorithm.\n  const coords = context.coords,\n    colors = context.colors;\n  const bytes = data.data,\n    rowSize = data.width * 4;\n  let tmp;\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  if (coords[p2 + 1] > coords[p3 + 1]) {\n    tmp = p2;\n    p2 = p3;\n    p3 = tmp;\n    tmp = c2;\n    c2 = c3;\n    c3 = tmp;\n  }\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n  if (y1 >= y3) {\n    return;\n  }\n  const c1r = colors[c1],\n    c1g = colors[c1 + 1],\n    c1b = colors[c1 + 2];\n  const c2r = colors[c2],\n    c2g = colors[c2 + 1],\n    c2b = colors[c2 + 2];\n  const c3r = colors[c3],\n    c3g = colors[c3 + 1],\n    c3b = colors[c3 + 2];\n\n  const minY = Math.round(y1),\n    maxY = Math.round(y3);\n  let xa, car, cag, cab;\n  let xb, cbr, cbg, cbb;\n  for (let y = minY; y <= maxY; y++) {\n    if (y < y2) {\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else if (y1 === y2) {\n        k = 1;\n      } else {\n        k = (y1 - y) / (y1 - y2);\n      }\n      xa = x1 - (x1 - x2) * k;\n      car = c1r - (c1r - c2r) * k;\n      cag = c1g - (c1g - c2g) * k;\n      cab = c1b - (c1b - c2b) * k;\n    } else {\n      let k;\n      if (y > y3) {\n        k = 1;\n      } else if (y2 === y3) {\n        k = 0;\n      } else {\n        k = (y2 - y) / (y2 - y3);\n      }\n      xa = x2 - (x2 - x3) * k;\n      car = c2r - (c2r - c3r) * k;\n      cag = c2g - (c2g - c3g) * k;\n      cab = c2b - (c2b - c3b) * k;\n    }\n\n    let k;\n    if (y < y1) {\n      k = 0;\n    } else if (y > y3) {\n      k = 1;\n    } else {\n      k = (y1 - y) / (y1 - y3);\n    }\n    xb = x1 - (x1 - x3) * k;\n    cbr = c1r - (c1r - c3r) * k;\n    cbg = c1g - (c1g - c3g) * k;\n    cbb = c1b - (c1b - c3b) * k;\n    const x1_ = Math.round(Math.min(xa, xb));\n    const x2_ = Math.round(Math.max(xa, xb));\n    let j = rowSize * y + x1_ * 4;\n    for (let x = x1_; x <= x2_; x++) {\n      k = (xa - x) / (xa - xb);\n      if (k < 0) {\n        k = 0;\n      } else if (k > 1) {\n        k = 1;\n      }\n      bytes[j++] = (car - (car - cbr) * k) | 0;\n      bytes[j++] = (cag - (cag - cbg) * k) | 0;\n      bytes[j++] = (cab - (cab - cbb) * k) | 0;\n      bytes[j++] = 255;\n    }\n  }\n}\n\nfunction drawFigure(data, figure, context) {\n  const ps = figure.coords;\n  const cs = figure.colors;\n  let i, ii;\n  switch (figure.type) {\n    case \"lattice\":\n      const verticesPerRow = figure.verticesPerRow;\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\n      const cols = verticesPerRow - 1;\n      for (i = 0; i < rows; i++) {\n        let q = i * verticesPerRow;\n        for (let j = 0; j < cols; j++, q++) {\n          drawTriangle(\n            data,\n            context,\n            ps[q],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n          drawTriangle(\n            data,\n            context,\n            ps[q + verticesPerRow + 1],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q + verticesPerRow + 1],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n        }\n      }\n      break;\n    case \"triangles\":\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\n        drawTriangle(\n          data,\n          context,\n          ps[i],\n          ps[i + 1],\n          ps[i + 2],\n          cs[i],\n          cs[i + 1],\n          cs[i + 2]\n        );\n      }\n      break;\n    default:\n      throw new Error(\"illegal figure\");\n  }\n}\n\nclass MeshShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._coords = IR[2];\n    this._colors = IR[3];\n    this._figures = IR[4];\n    this._bounds = IR[5];\n    this._matrix = IR[6];\n    this._bbox = IR[7];\n    this._background = IR[8];\n  }\n\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(this._bounds[0]);\n    const offsetY = Math.floor(this._bounds[1]);\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords: this._coords,\n      colors: this._colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    const tmpCanvas = cachedCanvases.getCanvas(\n      \"mesh\",\n      paddedWidth,\n      paddedHeight,\n      false\n    );\n    const tmpCtx = tmpCanvas.context;\n\n    const data = tmpCtx.createImageData(width, height);\n    if (backgroundColor) {\n      const bytes = data.data;\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n        bytes[i] = backgroundColor[0];\n        bytes[i + 1] = backgroundColor[1];\n        bytes[i + 2] = backgroundColor[2];\n        bytes[i + 3] = 255;\n      }\n    }\n    for (const figure of this._figures) {\n      drawFigure(data, figure, context);\n    }\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n    const canvas = tmpCanvas.canvas;\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n\n  getPattern(ctx, owner, shadingFill) {\n    applyBoundingBox(ctx, this._bbox);\n    let scale;\n    if (shadingFill) {\n      scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n    } else {\n      // Obtain scale from matrix and current transformation matrix.\n      scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n      if (this._matrix) {\n        const matrixScale = Util.singularValueDecompose2dScale(this._matrix);\n        scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n      }\n    }\n\n    // Rasterizing on the main thread since sending/queue large canvases\n    // might cause OOM.\n    const temporaryPatternCanvas = this._createMeshCanvas(\n      scale,\n      shadingFill ? null : this._background,\n      owner.cachedCanvases\n    );\n\n    if (!shadingFill) {\n      ctx.setTransform.apply(ctx, owner.baseTransform);\n      if (this._matrix) {\n        ctx.transform.apply(ctx, this._matrix);\n      }\n    }\n\n    ctx.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n  }\n}\n\nclass DummyShadingPattern extends BaseShadingPattern {\n  getPattern() {\n    return \"hotpink\";\n  }\n}\n\nfunction getShadingPattern(IR) {\n  switch (IR[0]) {\n    case \"RadialAxial\":\n      return new RadialAxialShadingPattern(IR);\n    case \"Mesh\":\n      return new MeshShadingPattern(IR);\n    case \"Dummy\":\n      return new DummyShadingPattern();\n  }\n  throw new Error(`Unknown IR type: ${IR[0]}`);\n}\n\nconst PaintType = {\n  COLORED: 1,\n  UNCOLORED: 2,\n};\n\nclass TilingPattern {\n  // 10in @ 300dpi shall be enough.\n  static get MAX_PATTERN_SIZE() {\n    return shadow(this, \"MAX_PATTERN_SIZE\", 3000);\n  }\n\n  constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.ctx = ctx;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n  }\n\n  createPatternCanvas(owner) {\n    const operatorList = this.operatorList;\n    const bbox = this.bbox;\n    const xstep = this.xstep;\n    const ystep = this.ystep;\n    const paintType = this.paintType;\n    const tilingType = this.tilingType;\n    const color = this.color;\n    const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n    info(\"TilingType: \" + tilingType);\n\n    // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n    // described by bbox, and may repeat regularly by shifting the cell by\n    // xstep and ystep.\n    // Because the HTML5 canvas API does not support pattern repetition with\n    // gaps in between, we use the xstep/ystep instead of the bbox's size.\n    //\n    // This has the following consequences (similarly for ystep):\n    //\n    // - If xstep is the same as bbox, then there is no observable difference.\n    //\n    // - If xstep is larger than bbox, then the pattern canvas is partially\n    //   empty: the area bounded by bbox is painted, the outside area is void.\n    //\n    // - If xstep is smaller than bbox, then the pixels between xstep and the\n    //   bbox boundary will be missing. This is INCORRECT behavior.\n    //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n    //   but overlapping cells without common pixels are still valid.\n    //   TODO: Fix the implementation, to allow this scenario to be painted\n    //   correctly.\n\n    const x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3];\n\n    // Obtain scale from matrix and current transformation matrix.\n    const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n    const curMatrixScale = Util.singularValueDecompose2dScale(\n      this.baseTransform\n    );\n    const combinedScale = [\n      matrixScale[0] * curMatrixScale[0],\n      matrixScale[1] * curMatrixScale[1],\n    ];\n\n    // Use width and height values that are as close as possible to the end\n    // result when the pattern is used. Too low value makes the pattern look\n    // blurry. Too large value makes it look too crispy.\n    const dimx = this.getSizeAndScale(\n      xstep,\n      this.ctx.canvas.width,\n      combinedScale[0]\n    );\n    const dimy = this.getSizeAndScale(\n      ystep,\n      this.ctx.canvas.height,\n      combinedScale[1]\n    );\n\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\n      \"pattern\",\n      dimx.size,\n      dimy.size,\n      true\n    );\n    const tmpCtx = tmpCanvas.context;\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n    graphics.groupLevel = owner.groupLevel;\n\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n    graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n    this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n\n    graphics.baseTransform = graphics.ctx.mozCurrentTransform.slice();\n\n    graphics.executeOperatorList(operatorList);\n\n    graphics.endDrawing();\n\n    return {\n      canvas: tmpCanvas.canvas,\n      scaleX: dimx.scale,\n      scaleY: dimy.scale,\n    };\n  }\n\n  getSizeAndScale(step, realOutputSize, scale) {\n    // xstep / ystep may be negative -- normalize.\n    step = Math.abs(step);\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    // Use the destination canvas's size if it is bigger than the hard-coded\n    // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n    // whole canvas.\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n    let size = Math.ceil(step * scale);\n    if (size >= maxSize) {\n      size = maxSize;\n    } else {\n      scale = size / step;\n    }\n    return { scale, size };\n  }\n\n  clipBbox(graphics, bbox, x0, y0, x1, y1) {\n    if (Array.isArray(bbox) && bbox.length === 4) {\n      const bboxWidth = x1 - x0;\n      const bboxHeight = y1 - y0;\n      graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n      graphics.clip();\n      graphics.endPath();\n    }\n  }\n\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\n    const context = graphics.ctx,\n      current = graphics.current;\n    switch (paintType) {\n      case PaintType.COLORED:\n        const ctx = this.ctx;\n        context.fillStyle = ctx.fillStyle;\n        context.strokeStyle = ctx.strokeStyle;\n        current.fillColor = ctx.fillStyle;\n        current.strokeColor = ctx.strokeStyle;\n        break;\n      case PaintType.UNCOLORED:\n        const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\n        context.fillStyle = cssColor;\n        context.strokeStyle = cssColor;\n        // Set color needed by image masks (fixes issues 3226 and 8741).\n        current.fillColor = cssColor;\n        current.strokeColor = cssColor;\n        break;\n      default:\n        throw new FormatError(`Unsupported paint type: ${paintType}`);\n    }\n  }\n\n  getPattern(ctx, owner, shadingFill) {\n    ctx = this.ctx;\n    // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n    let matrix = ctx.mozCurrentTransformInverse;\n    if (!shadingFill) {\n      matrix = Util.transform(matrix, owner.baseTransform);\n      if (this.matrix) {\n        matrix = Util.transform(matrix, this.matrix);\n      }\n    }\n\n    const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n    let domMatrix = createMatrix(matrix);\n    // Rescale and so that the ctx.createPattern call generates a pattern with\n    // the desired size.\n    domMatrix = domMatrix.scale(\n      1 / temporaryPatternCanvas.scaleX,\n      1 / temporaryPatternCanvas.scaleY\n    );\n\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n    pattern.setTransform(domMatrix);\n\n    return pattern;\n  }\n}\n\nexport { getShadingPattern, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  } else {\n    if (typeof reason !== \"object\" || reason === null) {\n      return reason;\n    }\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink,\n        // so when it changes from negative to positive,\n        // set ready property as resolved promise.\n        if (\n          this.streamSinks[streamId].desiredSize <= 0 &&\n          data.desiredSize > 0\n        ) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const { onPull } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onPull && onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(\n          this.streamControllers[streamId],\n          \"enqueue should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(\n          this.streamControllers[streamId],\n          \"close should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(\n          this.streamControllers[streamId],\n          \"error should have stream controller\"\n        );\n        this.streamControllers[streamId].controller.error(\n          wrapReason(data.reason)\n        );\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n        const { onCancel } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        this.streamSinks[streamId].sinkCapability.reject(\n          wrapReason(data.reason)\n        );\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled(\n      [\n        this.streamControllers[streamId].startCall,\n        this.streamControllers[streamId].pullCall,\n        this.streamControllers[streamId].cancelCall,\n      ].map(function (capability) {\n        return capability && capability.promise;\n      })\n    );\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\nclass Metadata {\n  constructor({ parsedData, rawData }) {\n    this._metadataMap = parsedData;\n    this._data = rawData;\n  }\n\n  getRaw() {\n    return this._data;\n  }\n\n  get(name) {\n    return this._metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return objectFromMap(this._metadataMap);\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { objectFromMap, warn } from \"../shared/util.js\";\n\nclass OptionalContentGroup {\n  constructor(name, intent) {\n    this.visible = true;\n    this.name = name;\n    this.intent = intent;\n  }\n}\n\nclass OptionalContentConfig {\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    this._order = null;\n    this._groups = new Map();\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this._order = data.order;\n    for (const group of data.groups) {\n      this._groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this._groups) {\n        group.visible = false;\n      }\n    }\n\n    for (const on of data.on) {\n      this._groups.get(on).visible = true;\n    }\n\n    for (const off of data.off) {\n      this._groups.get(off).visible = false;\n    }\n  }\n\n  _evaluateVisibilityExpression(array) {\n    const length = array.length;\n    if (length < 2) {\n      return true;\n    }\n    const operator = array[0];\n    for (let i = 1; i < length; i++) {\n      const element = array[i];\n      let state;\n      if (Array.isArray(element)) {\n        state = this._evaluateVisibilityExpression(element);\n      } else if (this._groups.has(element)) {\n        state = this._groups.get(element).visible;\n      } else {\n        warn(`Optional content group not found: ${element}`);\n        return true;\n      }\n      switch (operator) {\n        case \"And\":\n          if (!state) {\n            return false;\n          }\n          break;\n        case \"Or\":\n          if (state) {\n            return true;\n          }\n          break;\n        case \"Not\":\n          return !state;\n        default:\n          return true;\n      }\n    }\n    return operator === \"And\";\n  }\n\n  isVisible(group) {\n    if (group.type === \"OCG\") {\n      if (!this._groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this._groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available.\n      if (group.expression) {\n        return this._evaluateVisibilityExpression(group.expression);\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this._groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this._groups.get(id).visible = !!visible;\n  }\n\n  getOrder() {\n    if (!this._groups.size) {\n      return null;\n    }\n    if (this._order) {\n      return this._order.slice();\n    }\n    return Array.from(this._groups.keys());\n  }\n\n  getGroups() {\n    return this._groups.size > 0 ? objectFromMap(this._groups) : null;\n  }\n\n  getGroup(id) {\n    return this._groups.get(id) || null;\n  }\n}\n\nexport { OptionalContentConfig };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n    this._contentDispositionFilename =\n      params.contentDispositionFilename || null;\n\n    const initialData = params.initialData;\n    if (initialData?.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader?.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader?.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone,\n      this._contentDispositionFilename\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(\n    stream,\n    queuedChunks,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = isPdfFile(contentDispositionFilename)\n      ? contentDispositionFilename\n      : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      for (const requestCapability of this._requests) {\n        requestCapability.resolve({ value: undefined, done: true });\n      }\n      this._requests.length = 0;\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  addLinkAttributes,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  LinkTarget,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  assert,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { ColorConverters } from \"../shared/scripting_utils.js\";\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {Object} svgFactory\n * @property {boolean} [enableScripting]\n * @property {boolean} [hasJSActions]\n * @property {Object} [mouseState]\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(\n    parameters,\n    {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false,\n    } = {}\n  ) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._mouseState = parameters.mouseState;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width = width - 2 * data.borderStyle.width;\n        height = height - 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = Util.makeHexColor(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create quadrilaterals from the annotation's quadpoints.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _createQuadrilaterals(ignoreBorder = false) {\n    if (!this.data.quadPoints) {\n      return null;\n    }\n\n    const quadrilaterals = [];\n    const savedRect = this.data.rect;\n    for (const quadPoint of this.data.quadPoints) {\n      this.data.rect = [\n        quadPoint[2].x,\n        quadPoint[2].y,\n        quadPoint[1].x,\n        quadPoint[1].y,\n      ];\n      quadrilaterals.push(this._createContainer(ignoreBorder));\n    }\n    this.data.rect = savedRect;\n    return quadrilaterals;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(trigger, data) {\n    let container = this.container;\n    if (this.quadrilaterals) {\n      trigger = trigger || this.quadrilaterals;\n      container = this.quadrilaterals[0];\n    }\n\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the quadrilaterals of the annotation.\n   *\n   * @private\n   * @param {string} className\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _renderQuadrilaterals(className) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(this.quadrilaterals, \"Missing quadrilaterals during rendering\");\n    }\n\n    for (const quadrilateral of this.quadrilaterals) {\n      quadrilateral.className = className;\n    }\n    return this.quadrilaterals;\n  }\n\n  /**\n   * Render the annotation's HTML element(s).\n   *\n   * @public\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement|Array<HTMLSectionElement>}\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action ||\n      parameters.data.isTooltipOnly ||\n      (parameters.data.actions &&\n        (parameters.data.actions.Action ||\n          parameters.data.actions[\"Mouse Up\"] ||\n          parameters.data.actions[\"Mouse Down\"]))\n    );\n    super(parameters, { isRenderable, createQuadrilaterals: true });\n  }\n\n  render() {\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      addLinkAttributes(link, {\n        url: data.url,\n        target: data.newWindow\n          ? LinkTarget.BLANK\n          : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n    } else if (\n      data.actions &&\n      (data.actions.Action ||\n        data.actions[\"Mouse Up\"] ||\n        data.actions[\"Mouse Down\"]) &&\n      this.enableScripting &&\n      this.hasJSActions\n    ) {\n      this._bindJSAction(link, data);\n    } else {\n      this._bindLink(link, \"\");\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"linkAnnotation\").map(\n        (quadrilateral, index) => {\n          const linkElement = index === 0 ? link : link.cloneNode();\n          quadrilateral.appendChild(linkElement);\n          return quadrilateral;\n        }\n      );\n    }\n\n    this.container.className = \"linkAnnotation\";\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === /* isTooltipOnly = */ \"\") {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n\n  /**\n   * Bind JS actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} data\n   * @memberof LinkAnnotationElement\n   */\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([\n      [\"Action\", \"onclick\"],\n      [\"Mouse Up\", \"onmouseup\"],\n      [\"Mouse Down\", \"onmousedown\"],\n    ]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name,\n          },\n        });\n        return false;\n      };\n    }\n    link.className = \"internalLink\";\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  _getKeyModifier(event) {\n    return (\n      (navigator.platform.includes(\"Win\") && event.ctrlKey) ||\n      (navigator.platform.includes(\"Mac\") && event.metaKey)\n    );\n  }\n\n  _setEventListener(element, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      // Mouse events\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event),\n          },\n        });\n      });\n    } else {\n      // Non mouse event\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: event.target.checked,\n          },\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        this._setEventListener(element, baseName, eventName, getter);\n      }\n    }\n  }\n\n  _dispatchEventFromSandbox(actions, jsEvent) {\n    const setColor = (jsName, styleName, event) => {\n      const color = event.detail[jsName];\n      event.target.style[styleName] = ColorConverters[`${color[0]}_HTML`](\n        color.slice(1)\n      );\n    };\n\n    const commonActions = {\n      display: event => {\n        const hidden = event.detail.display % 2 === 1;\n        event.target.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          hidden,\n          print: event.detail.display === 0 || event.detail.display === 3,\n        });\n      },\n      print: event => {\n        this.annotationStorage.setValue(this.data.id, {\n          print: event.detail.print,\n        });\n      },\n      hidden: event => {\n        event.target.style.visibility = event.detail.hidden\n          ? \"hidden\"\n          : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          hidden: event.detail.hidden,\n        });\n      },\n      focus: event => {\n        setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n      },\n      userName: event => {\n        // tooltip\n        event.target.title = event.detail.userName;\n      },\n      readonly: event => {\n        if (event.detail.readonly) {\n          event.target.setAttribute(\"readonly\", \"\");\n        } else {\n          event.target.removeAttribute(\"readonly\");\n        }\n      },\n      required: event => {\n        if (event.detail.required) {\n          event.target.setAttribute(\"required\", \"\");\n        } else {\n          event.target.removeAttribute(\"required\");\n        }\n      },\n      bgColor: event => {\n        setColor(\"bgColor\", \"backgroundColor\", event);\n      },\n      fillColor: event => {\n        setColor(\"fillColor\", \"backgroundColor\", event);\n      },\n      fgColor: event => {\n        setColor(\"fgColor\", \"color\", event);\n      },\n      textColor: event => {\n        setColor(\"textColor\", \"color\", event);\n      },\n      borderColor: event => {\n        setColor(\"borderColor\", \"borderColor\", event);\n      },\n      strokeColor: event => {\n        setColor(\"strokeColor\", \"borderColor\", event);\n      },\n    };\n\n    for (const name of Object.keys(jsEvent.detail)) {\n      const action = actions[name] || commonActions[name];\n      if (action) {\n        action(jsEvent);\n      }\n    }\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderInteractiveForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, { isRenderable });\n  }\n\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\n    const storage = this.annotationStorage;\n    for (const element of document.getElementsByName(base.name)) {\n      if (element !== base) {\n        element[key] = value;\n        const data = Object.create(null);\n        data[keyInStorage] = value;\n        storage.setValue(element.getAttribute(\"id\"), data);\n      }\n    }\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderInteractiveForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const storedData = storage.getValue(id, {\n        value: this.data.fieldValue,\n        valueAsString: this.data.fieldValue,\n      });\n      const textContent = storedData.valueAsString || storedData.value || \"\";\n      const elementData = {\n        userValue: null,\n        formattedValue: null,\n        beforeInputSelectionRange: null,\n        beforeInputValue: null,\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = textContent;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", textContent);\n      }\n\n      elementData.userValue = textContent;\n      element.setAttribute(\"id\", id);\n\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, { value: event.target.value });\n        this.setPropertyOnSiblings(\n          element,\n          \"value\",\n          event.target.value,\n          \"value\"\n        );\n      });\n\n      let blurListener = event => {\n        if (elementData.formattedValue) {\n          event.target.value = elementData.formattedValue;\n        }\n        // Reset the cursor position to the start of the field (issue 12359).\n        event.target.scrollLeft = 0;\n        elementData.beforeInputSelectionRange = null;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.userValue) {\n            event.target.value = elementData.userValue;\n          }\n        });\n\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\n          const actions = {\n            value(event) {\n              elementData.userValue = event.detail.value || \"\";\n              storage.setValue(id, { value: elementData.userValue.toString() });\n              if (!elementData.formattedValue) {\n                event.target.value = elementData.userValue;\n              }\n            },\n            valueAsString(event) {\n              elementData.formattedValue = event.detail.valueAsString || \"\";\n              if (event.target !== document.activeElement) {\n                // Input hasn't the focus so display formatted string\n                event.target.value = elementData.formattedValue;\n              }\n              storage.setValue(id, {\n                formattedValue: elementData.formattedValue,\n              });\n            },\n            selRange(event) {\n              const [selStart, selEnd] = event.detail.selRange;\n              if (selStart >= 0 && selEnd < event.target.value.length) {\n                event.target.setSelectionRange(selStart, selEnd);\n              }\n            },\n          };\n          this._dispatchEventFromSandbox(actions, jsEvent);\n        });\n\n        // Even if the field hasn't any actions\n        // leaving it can still trigger some actions with Calculate\n        element.addEventListener(\"keydown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          // if the key is one of Escape, Enter or Tab\n          // then the data are committed\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\") {\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          // Save the entered value\n          elementData.userValue = event.target.value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value: event.target.value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd,\n            },\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          if (this._mouseState.isDown) {\n            // Focus out using the mouse: data are committed\n            elementData.userValue = event.target.value;\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: event.target.value,\n                willCommit: true,\n                commitKey: 1,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd,\n              },\n            });\n          }\n          _blurListener(event);\n        });\n        element.addEventListener(\"mousedown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          elementData.beforeInputSelectionRange = null;\n        });\n        element.addEventListener(\"keyup\", event => {\n          // keyup is triggered after input\n          if (event.target.selectionStart === event.target.selectionEnd) {\n            elementData.beforeInputSelectionRange = null;\n          }\n        });\n        element.addEventListener(\"select\", event => {\n          elementData.beforeInputSelectionRange = [\n            event.target.selectionStart,\n            event.target.selectionEnd,\n          ];\n        });\n\n        if (this.data.actions?.Keystroke) {\n          // We should use beforeinput but this\n          // event isn't available in Firefox\n          element.addEventListener(\"input\", event => {\n            let selStart = -1;\n            let selEnd = -1;\n            if (elementData.beforeInputSelectionRange) {\n              [selStart, selEnd] = elementData.beforeInputSelectionRange;\n            }\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: elementData.beforeInputValue,\n                change: event.data,\n                willCommit: false,\n                selStart,\n                selEnd,\n              },\n            });\n          });\n        }\n\n        this._setEventListeners(\n          element,\n          [\n            [\"focus\", \"Focus\"],\n            [\"blur\", \"Blur\"],\n            [\"mousedown\", \"Mouse Down\"],\n            [\"mouseenter\", \"Mouse Enter\"],\n            [\"mouseleave\", \"Mouse Exit\"],\n            [\"mouseup\", \"Mouse Up\"],\n          ],\n          event => event.target.value\n        );\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const { fontSize, fontColor } = this.data.defaultAppearanceData;\n    const style = element.style;\n\n    // TODO: If the font-size is zero, calculate it based on the height and\n    //       width of the element.\n    // Not setting `style.fontSize` will use the default font-size for now.\n    if (fontSize) {\n      style.fontSize = `${fontSize}px`;\n    }\n\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value:\n        data.fieldValue &&\n        ((data.exportValue && data.exportValue === data.fieldValue) ||\n          (!data.exportValue && data.fieldValue !== \"Off\")),\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== \"Off\";\n      storage.setValue(id, { value });\n    }\n\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"checkbox\";\n    element.name = this.data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n\n    element.addEventListener(\"change\", function (event) {\n      const name = event.target.name;\n      for (const checkbox of document.getElementsByName(name)) {\n        if (checkbox !== event.target) {\n          checkbox.checked = false;\n          storage.setValue(\n            checkbox.parentNode.getAttribute(\"data-annotation-id\"),\n            { value: false }\n          );\n        }\n      }\n      storage.setValue(id, { value: event.target.checked });\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            event.target.checked = event.detail.value !== \"Off\";\n            storage.setValue(id, { value: event.target.checked });\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.fieldValue === data.buttonValue,\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== data.buttonValue;\n      storage.setValue(id, { value });\n    }\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n\n    element.addEventListener(\"change\", function (event) {\n      const { target } = event;\n      for (const radio of document.getElementsByName(target.name)) {\n        if (radio !== target) {\n          storage.setValue(radio.getAttribute(\"id\"), { value: false });\n        }\n      }\n      storage.setValue(id, { value: target.checked });\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            const checked = pdfButtonValue === event.detail.value;\n            for (const radio of document.getElementsByName(event.target.name)) {\n              const radioId = radio.getAttribute(\"id\");\n              radio.checked = radioId === id && checked;\n              storage.setValue(radioId, { value: radio.checked });\n            }\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    // For printing/saving we currently only support choice widgets with one\n    // option selection. Therefore, listboxes (#12189) and comboboxes (#12224)\n    // are not properly printed/saved yet, so we only store the first item in\n    // the field value array instead of the entire array. Once support for those\n    // two field types is implemented, we should use the same pattern as the\n    // other interactive widgets where the return value of `getValue`\n    // is used and the full array of field values is stored.\n    storage.getValue(id, {\n      value:\n        this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined,\n    });\n\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n    selectElement.setAttribute(\"id\", id);\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.fieldValue.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    const getValue = (event, isExport) => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const options = event.target.options;\n      if (!event.target.multiple) {\n        return options.selectedIndex === -1\n          ? null\n          : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter\n        .call(options, option => option.selected)\n        .map(option => option[name]);\n    };\n\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return { displayValue: option.textContent, exportValue: option.value };\n      });\n    };\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            const options = selectElement.options;\n            const value = event.detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            Array.prototype.forEach.call(options, option => {\n              option.selected = values.has(option.value);\n            });\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          multipleSelection(event) {\n            selectElement.multiple = true;\n          },\n          remove(event) {\n            const options = selectElement.options;\n            const index = event.detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(\n                options,\n                option => option.selected\n              );\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          clear(event) {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, { value: null, items: [] });\n          },\n          insert(event) {\n            const { index, displayValue, exportValue } = event.detail.insert;\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n            selectElement.insertBefore(\n              optionElement,\n              selectElement.children[index]\n            );\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          items(event) {\n            const { items } = event.detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const { displayValue, exportValue } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.appendChild(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          indices(event) {\n            const indices = new Set(event.detail.indices);\n            const options = event.target.options;\n            Array.prototype.forEach.call(options, (option, i) => {\n              option.selected = indices.has(i);\n            });\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          editable(event) {\n            event.target.disabled = !event.detail.editable;\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(event, /* isExport */ true);\n        const value = getValue(event, /* isExport */ false);\n        storage.setValue(id, { value: exportValue });\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value,\n            changeEx: exportValue,\n            willCommit: true,\n            commitKey: 1,\n            keyDown: false,\n          },\n        });\n      });\n\n      this._setEventListeners(\n        selectElement,\n        [\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n          [\"input\", \"Action\"],\n        ],\n        event => event.target.checked\n      );\n    } else {\n      selectElement.addEventListener(\"input\", function (event) {\n        storage.setValue(id, { value: getValue(event) });\n      });\n    }\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElements = this.layer.querySelectorAll(selector);\n    if (parentElements.length === 0) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: Array.from(parentElements),\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const page = this.page;\n    const rect = Util.normalizeRect([\n      this.data.parentRect[0],\n      page.view[3] - this.data.parentRect[1] + page.view[1],\n      this.data.parentRect[2],\n      page.view[3] - this.data.parentRect[3] + page.view[1],\n    ]);\n    const popupLeft =\n      rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n    const popupTop = rect[1];\n\n    this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n    this.container.style.left = `${popupLeft}px`;\n    this.container.style.top = `${popupTop}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.hidden = true;\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeHexColor(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n    popup.appendChild(contents);\n\n    if (!Array.isArray(this.trigger)) {\n      this.trigger = [this.trigger];\n    }\n\n    // Attach the event listeners to the trigger element.\n    for (const element of this.trigger) {\n      element.addEventListener(\"click\", this._toggle.bind(this));\n      element.addEventListener(\"mouseover\", this._show.bind(this, false));\n      element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    }\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {string} contents\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hidden) {\n      this.hideElement.hidden = false;\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hidden && !this.pinned) {\n      this.hideElement.hidden = true;\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"highlightAnnotation\");\n    }\n\n    this.container.className = \"highlightAnnotation\";\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"underlineAnnotation\");\n    }\n\n    this.container.className = \"underlineAnnotation\";\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"squigglyAnnotation\");\n    }\n\n    this.container.className = \"squigglyAnnotation\";\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n    }\n\n    this.container.className = \"strikeoutAnnotation\";\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      id: stringToPDFString(filename),\n      filename,\n      content,\n    });\n  }\n\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    this.downloadManager?.openOrDownloadData(\n      this.container,\n      this.content,\n      this.filename\n    );\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\n *   The default value is `false`.\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderInteractiveForms: parameters.renderInteractiveForms !== false,\n        svgFactory: new DOMSVGFactory(),\n        annotationStorage:\n          parameters.annotationStorage || new AnnotationStorage(),\n        enableScripting: parameters.enableScripting,\n        hasJSActions: parameters.hasJSActions,\n        mouseState: parameters.mouseState || { isDown: false },\n      });\n      if (element.isRenderable) {\n        const rendered = element.render();\n        if (data.hidden) {\n          rendered.style.visibility = \"hidden\";\n        }\n        if (Array.isArray(rendered)) {\n          for (const renderedElement of rendered) {\n            parameters.div.appendChild(renderedElement);\n          }\n        } else {\n          if (element instanceof PopupAnnotationElement) {\n            // Popup annotation elements should not be on top of other\n            // annotation elements to prevent interfering with mouse events.\n            parameters.div.prepend(rendered);\n          } else {\n            parameters.div.appendChild(rendered);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    for (const data of parameters.annotations) {\n      const elements = parameters.div.querySelectorAll(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (elements) {\n        for (const element of elements) {\n          element.style.transform = transform;\n        }\n      }\n    }\n    parameters.div.hidden = false;\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\n// PDF specifications section 10.3\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_HTML([r, g, b]) {\n    const R = makeColorComp(r);\n    const G = makeColorComp(g);\n    const B = makeColorComp(b);\n    return `#${R}${G}${B}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\n      \"RGB\",\n      1 - Math.min(1, c + k),\n      1 - Math.min(1, m + k),\n      1 - Math.min(1, y + k),\n    ];\n  }\n\n  static CMYK_HTML(components) {\n    return this.RGB_HTML(this.CMYK_RGB(components));\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\n\nexport { ColorConverters };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {import(\"./api\").TextContent} [textContent] - Text content to\n *   render (the object is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {import(\"./display_utils\").PageViewport} viewport - The target\n *   viewport to properly layout the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that are correspond\n *   to the text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *    the `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\n\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\nconst DEFAULT_FONT_SIZE = 30;\nconst DEFAULT_FONT_ASCENT = 0.8;\nconst ascentCache = new Map();\nconst AllWhitespaceRegexp = /^\\s+$/g;\n\nfunction getAscent(fontFamily, ctx) {\n  const cachedAscent = ascentCache.get(fontFamily);\n  if (cachedAscent) {\n    return cachedAscent;\n  }\n\n  ctx.save();\n  ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n  const metrics = ctx.measureText(\"\");\n\n  // Both properties aren't available by default in Firefox.\n  let ascent = metrics.fontBoundingBoxAscent;\n  let descent = Math.abs(metrics.fontBoundingBoxDescent);\n  if (ascent) {\n    ctx.restore();\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  // Try basic heuristic to guess ascent/descent.\n  // Draw a g with baseline at 0,0 and then get the line\n  // number where a pixel has non-null red component (starting\n  // from bottom).\n  ctx.strokeStyle = \"red\";\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"g\", 0, 0);\n  let pixels = ctx.getImageData(\n    0,\n    0,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_SIZE\n  ).data;\n  descent = 0;\n  for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n    if (pixels[i] > 0) {\n      descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  // Draw an A with baseline at 0,DEFAULT_FONT_SIZE and then get the line\n  // number where a pixel has non-null red component (starting\n  // from top).\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n  pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  ascent = 0;\n  for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n    if (pixels[i] > 0) {\n      ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  ctx.restore();\n\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n  return DEFAULT_FONT_ASCENT;\n}\n\nfunction appendText(task, geom, styles, ctx) {\n  // Initialize all used properties to keep the caches monomorphic.\n  const textDiv = document.createElement(\"span\");\n  const textDivProperties = {\n    angle: 0,\n    canvasWidth: 0,\n    hasText: geom.str !== \"\",\n    hasEOL: geom.hasEOL,\n    originalTransform: null,\n    paddingBottom: 0,\n    paddingLeft: 0,\n    paddingRight: 0,\n    paddingTop: 0,\n    scale: 1,\n  };\n\n  task._textDivs.push(textDiv);\n\n  const tx = Util.transform(task._viewport.transform, geom.transform);\n  let angle = Math.atan2(tx[1], tx[0]);\n  const style = styles[geom.fontName];\n  if (style.vertical) {\n    angle += Math.PI / 2;\n  }\n  const fontHeight = Math.hypot(tx[2], tx[3]);\n  const fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\n\n  let left, top;\n  if (angle === 0) {\n    left = tx[4];\n    top = tx[5] - fontAscent;\n  } else {\n    left = tx[4] + fontAscent * Math.sin(angle);\n    top = tx[5] - fontAscent * Math.cos(angle);\n  }\n  // Setting the style properties individually, rather than all at once,\n  // should be OK since the `textDiv` isn't appended to the document yet.\n  textDiv.style.left = `${left}px`;\n  textDiv.style.top = `${top}px`;\n  textDiv.style.fontSize = `${fontHeight}px`;\n  textDiv.style.fontFamily = style.fontFamily;\n\n  // Keeps screen readers from pausing on every new text span.\n  textDiv.setAttribute(\"role\", \"presentation\");\n\n  textDiv.textContent = geom.str;\n  // geom.dir may be 'ttb' for vertical texts.\n  textDiv.dir = geom.dir;\n\n  // `fontName` is only used by the FontInspector, and we only use `dataset`\n  // here to make the font name available in the debugger.\n  if (task._fontInspectorEnabled) {\n    textDiv.dataset.fontName = geom.fontName;\n  }\n  if (angle !== 0) {\n    textDivProperties.angle = angle * (180 / Math.PI);\n  }\n  // We don't bother scaling single-char text divs, because it has very\n  // little effect on text highlighting. This makes scrolling on docs with\n  // lots of such divs a lot faster.\n  let shouldScaleText = false;\n  if (\n    geom.str.length > 1 ||\n    (task._enhanceTextSelection && AllWhitespaceRegexp.test(geom.str))\n  ) {\n    shouldScaleText = true;\n  } else if (geom.transform[0] !== geom.transform[3]) {\n    const absScaleX = Math.abs(geom.transform[0]),\n      absScaleY = Math.abs(geom.transform[3]);\n    // When the horizontal/vertical scaling differs significantly, also scale\n    // even single-char text to improve highlighting (fixes issue11713.pdf).\n    if (\n      absScaleX !== absScaleY &&\n      Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n    ) {\n      shouldScaleText = true;\n    }\n  }\n  if (shouldScaleText) {\n    if (style.vertical) {\n      textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n    } else {\n      textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n    }\n  }\n  task._textDivProperties.set(textDiv, textDivProperties);\n  if (task._textContentStream) {\n    task._layoutText(textDiv);\n  }\n\n  if (task._enhanceTextSelection && textDivProperties.hasText) {\n    let angleCos = 1,\n      angleSin = 0;\n    if (angle !== 0) {\n      angleCos = Math.cos(angle);\n      angleSin = Math.sin(angle);\n    }\n    const divWidth =\n      (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n    const divHeight = fontHeight;\n\n    let m, b;\n    if (angle !== 0) {\n      m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n      b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n    } else {\n      b = [left, top, left + divWidth, top + divHeight];\n    }\n\n    task._bounds.push({\n      left: b[0],\n      top: b[1],\n      right: b[2],\n      bottom: b[3],\n      div: textDiv,\n      size: [divWidth, divHeight],\n      m,\n    });\n  }\n}\n\nfunction render(task) {\n  if (task._canceled) {\n    return;\n  }\n  const textDivs = task._textDivs;\n  const capability = task._capability;\n  const textDivsLength = textDivs.length;\n\n  // No point in rendering many divs as it would make the browser\n  // unusable even after the divs are rendered.\n  if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n    task._renderingDone = true;\n    capability.resolve();\n    return;\n  }\n\n  if (!task._textContentStream) {\n    for (let i = 0; i < textDivsLength; i++) {\n      task._layoutText(textDivs[i]);\n    }\n  }\n\n  task._renderingDone = true;\n  capability.resolve();\n}\n\nfunction findPositiveMin(ts, offset, count) {\n  let result = 0;\n  for (let i = 0; i < count; i++) {\n    const t = ts[offset++];\n    if (t > 0) {\n      result = result ? Math.min(t, result) : t;\n    }\n  }\n  return result;\n}\n\nfunction expand(task) {\n  const bounds = task._bounds;\n  const viewport = task._viewport;\n\n  const expanded = expandBounds(viewport.width, viewport.height, bounds);\n  for (let i = 0; i < expanded.length; i++) {\n    const div = bounds[i].div;\n    const divProperties = task._textDivProperties.get(div);\n    if (divProperties.angle === 0) {\n      divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n      divProperties.paddingTop = bounds[i].top - expanded[i].top;\n      divProperties.paddingRight = expanded[i].right - bounds[i].right;\n      divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n      task._textDivProperties.set(div, divProperties);\n      continue;\n    }\n    // Box is rotated -- trying to find padding so rotated div will not\n    // exceed its expanded bounds.\n    const e = expanded[i],\n      b = bounds[i];\n    const m = b.m,\n      c = m[0],\n      s = m[1];\n    // Finding intersections with expanded box.\n    const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n    const ts = new Float64Array(64);\n    for (let j = 0, jj = points.length; j < jj; j++) {\n      const t = Util.applyTransform(points[j], m);\n      ts[j + 0] = c && (e.left - t[0]) / c;\n      ts[j + 4] = s && (e.top - t[1]) / s;\n      ts[j + 8] = c && (e.right - t[0]) / c;\n      ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n      ts[j + 16] = s && (e.left - t[0]) / -s;\n      ts[j + 20] = c && (e.top - t[1]) / c;\n      ts[j + 24] = s && (e.right - t[0]) / -s;\n      ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n      ts[j + 32] = c && (e.left - t[0]) / -c;\n      ts[j + 36] = s && (e.top - t[1]) / -s;\n      ts[j + 40] = c && (e.right - t[0]) / -c;\n      ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n      ts[j + 48] = s && (e.left - t[0]) / s;\n      ts[j + 52] = c && (e.top - t[1]) / -c;\n      ts[j + 56] = s && (e.right - t[0]) / s;\n      ts[j + 60] = c && (e.bottom - t[1]) / -c;\n    }\n    // Not based on math, but to simplify calculations, using cos and sin\n    // absolute values to not exceed the box (it can but insignificantly).\n    const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n    divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n    divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n    divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n    divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n    task._textDivProperties.set(div, divProperties);\n  }\n}\n\nfunction expandBounds(width, height, boxes) {\n  const bounds = boxes.map(function (box, i) {\n    return {\n      x1: box.left,\n      y1: box.top,\n      x2: box.right,\n      y2: box.bottom,\n      index: i,\n      x1New: undefined,\n      x2New: undefined,\n    };\n  });\n  expandBoundsLTR(width, bounds);\n\n  const expanded = new Array(boxes.length);\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i] = {\n      left: b.x1New,\n      top: 0,\n      right: b.x2New,\n      bottom: 0,\n    };\n  }\n\n  // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n  // array and objects.\n  boxes.map(function (box, i) {\n    const e = expanded[i],\n      b = bounds[i];\n    b.x1 = box.top;\n    b.y1 = width - e.right;\n    b.x2 = box.bottom;\n    b.y2 = width - e.left;\n    b.index = i;\n    b.x1New = undefined;\n    b.x2New = undefined;\n  });\n  expandBoundsLTR(height, bounds);\n\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i].top = b.x1New;\n    expanded[i].bottom = b.x2New;\n  }\n  return expanded;\n}\n\nfunction expandBoundsLTR(width, bounds) {\n  // Sorting by x1 coordinate and walk by the bounds in the same order.\n  bounds.sort(function (a, b) {\n    return a.x1 - b.x1 || a.index - b.index;\n  });\n\n  // First we see on the horizon is a fake boundary.\n  const fakeBoundary = {\n    x1: -Infinity,\n    y1: -Infinity,\n    x2: 0,\n    y2: Infinity,\n    index: -1,\n    x1New: 0,\n    x2New: 0,\n  };\n  const horizon = [\n    {\n      start: -Infinity,\n      end: Infinity,\n      boundary: fakeBoundary,\n    },\n  ];\n\n  for (const boundary of bounds) {\n    // Searching for the affected part of horizon.\n    // TODO red-black tree or simple binary search\n    let i = 0;\n    while (i < horizon.length && horizon[i].end <= boundary.y1) {\n      i++;\n    }\n    let j = horizon.length - 1;\n    while (j >= 0 && horizon[j].start >= boundary.y2) {\n      j--;\n    }\n\n    let horizonPart, affectedBoundary;\n    let q,\n      k,\n      maxXNew = -Infinity;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      let xNew;\n      if (affectedBoundary.x2 > boundary.x1) {\n        // In the middle of the previous element, new x shall be at the\n        // boundary start. Extending if further if the affected boundary\n        // placed on top of the current one.\n        xNew =\n          affectedBoundary.index > boundary.index\n            ? affectedBoundary.x1New\n            : boundary.x1;\n      } else if (affectedBoundary.x2New === undefined) {\n        // We have some space in between, new x in middle will be a fair\n        // choice.\n        xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n      } else {\n        // Affected boundary has x2new set, using it as new x.\n        xNew = affectedBoundary.x2New;\n      }\n      if (xNew > maxXNew) {\n        maxXNew = xNew;\n      }\n    }\n\n    // Set new x1 for current boundary.\n    boundary.x1New = maxXNew;\n\n    // Adjusts new x2 for the affected boundaries.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        // Was not set yet, choosing new x if possible.\n        if (affectedBoundary.x2 > boundary.x1) {\n          // Current and affected boundaries intersect. If affected boundary\n          // is placed on top of the current, shrinking the affected.\n          if (affectedBoundary.index > boundary.index) {\n            affectedBoundary.x2New = affectedBoundary.x2;\n          }\n        } else {\n          affectedBoundary.x2New = maxXNew;\n        }\n      } else if (affectedBoundary.x2New > maxXNew) {\n        // Affected boundary is touching new x, pushing it back.\n        affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n      }\n    }\n\n    // Fixing the horizon.\n    const changedHorizon = [];\n    let lastBoundary = null;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      // Checking which boundary will be visible.\n      const useBoundary =\n        affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n      if (lastBoundary === useBoundary) {\n        // Merging with previous.\n        changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n      } else {\n        changedHorizon.push({\n          start: horizonPart.start,\n          end: horizonPart.end,\n          boundary: useBoundary,\n        });\n        lastBoundary = useBoundary;\n      }\n    }\n    if (horizon[i].start < boundary.y1) {\n      changedHorizon[0].start = boundary.y1;\n      changedHorizon.unshift({\n        start: horizon[i].start,\n        end: boundary.y1,\n        boundary: horizon[i].boundary,\n      });\n    }\n    if (boundary.y2 < horizon[j].end) {\n      changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n      changedHorizon.push({\n        start: boundary.y2,\n        end: horizon[j].end,\n        boundary: horizon[j].boundary,\n      });\n    }\n\n    // Set x2 new of boundary that is no longer visible (see overlapping case\n    // above).\n    // TODO more efficient, e.g. via reference counting.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New !== undefined) {\n        continue;\n      }\n      let used = false;\n      for (\n        k = i - 1;\n        !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n        k--\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (\n        k = j + 1;\n        !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n        k++\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (k = 0; !used && k < changedHorizon.length; k++) {\n        used = changedHorizon[k].boundary === affectedBoundary;\n      }\n      if (!used) {\n        affectedBoundary.x2New = maxXNew;\n      }\n    }\n\n    Array.prototype.splice.apply(\n      horizon,\n      [i, j - i + 1].concat(changedHorizon)\n    );\n  }\n\n  // Set new x2 for all unset boundaries.\n  for (const horizonPart of horizon) {\n    const affectedBoundary = horizonPart.boundary;\n    if (affectedBoundary.x2New === undefined) {\n      affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n    }\n  }\n}\n\nclass TextLayerRenderTask {\n  constructor({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._document = container.ownerDocument;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        /* Avoid \"Uncaught promise\" messages in the console. */\n      });\n  }\n\n  /**\n   * Promise for textLayer rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Cancel rendering of the textLayer.\n   */\n  cancel() {\n    this._canceled = true;\n    if (this._reader) {\n      this._reader.cancel(new AbortException(\"TextLayer task cancelled.\"));\n      this._reader = null;\n    }\n    if (this._renderTimer !== null) {\n      clearTimeout(this._renderTimer);\n      this._renderTimer = null;\n    }\n    this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n  }\n\n  /**\n   * @private\n   */\n  _processItems(items, styleCache) {\n    for (let i = 0, len = items.length; i < len; i++) {\n      if (items[i].str === undefined) {\n        if (\n          items[i].type === \"beginMarkedContentProps\" ||\n          items[i].type === \"beginMarkedContent\"\n        ) {\n          const parent = this._container;\n          this._container = document.createElement(\"span\");\n          this._container.classList.add(\"markedContent\");\n          if (items[i].id !== null) {\n            this._container.setAttribute(\"id\", `${items[i].id}`);\n          }\n          parent.appendChild(this._container);\n        } else if (items[i].type === \"endMarkedContent\") {\n          this._container = this._container.parentNode;\n        }\n        continue;\n      }\n      this._textContentItemsStr.push(items[i].str);\n      appendText(this, items[i], styleCache, this._layoutTextCtx);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _layoutText(textDiv) {\n    const textDivProperties = this._textDivProperties.get(textDiv);\n\n    let transform = \"\";\n    if (textDivProperties.canvasWidth !== 0 && textDivProperties.hasText) {\n      const { fontSize, fontFamily } = textDiv.style;\n\n      // Only build font string and set to context if different from last.\n      if (\n        fontSize !== this._layoutTextLastFontSize ||\n        fontFamily !== this._layoutTextLastFontFamily\n      ) {\n        this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n        this._layoutTextLastFontSize = fontSize;\n        this._layoutTextLastFontFamily = fontFamily;\n      }\n      // Only measure the width for multi-char text divs, see `appendText`.\n      const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n      if (width > 0) {\n        textDivProperties.scale = textDivProperties.canvasWidth / width;\n        transform = `scaleX(${textDivProperties.scale})`;\n      }\n    }\n    if (textDivProperties.angle !== 0) {\n      transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n    }\n    if (transform.length > 0) {\n      if (this._enhanceTextSelection) {\n        textDivProperties.originalTransform = transform;\n      }\n      textDiv.style.transform = transform;\n    }\n\n    if (textDivProperties.hasText) {\n      this._container.appendChild(textDiv);\n    }\n    if (textDivProperties.hasEOL) {\n      const br = document.createElement(\"br\");\n      br.setAttribute(\"role\", \"presentation\");\n      this._container.appendChild(br);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _render(timeout = 0) {\n    const capability = createPromiseCapability();\n    let styleCache = Object.create(null);\n\n    // The temporary canvas is used to measure text length in the DOM.\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.height = canvas.width = DEFAULT_FONT_SIZE;\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n    this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n    if (this._textContent) {\n      const textItems = this._textContent.items;\n      const textStyles = this._textContent.styles;\n      this._processItems(textItems, textStyles);\n      capability.resolve();\n    } else if (this._textContentStream) {\n      const pump = () => {\n        this._reader.read().then(({ value, done }) => {\n          if (done) {\n            capability.resolve();\n            return;\n          }\n\n          Object.assign(styleCache, value.styles);\n          this._processItems(value.items, styleCache);\n          pump();\n        }, capability.reject);\n      };\n\n      this._reader = this._textContentStream.getReader();\n      pump();\n    } else {\n      throw new Error(\n        'Neither \"textContent\" nor \"textContentStream\"' +\n          \" parameters specified.\"\n      );\n    }\n\n    capability.promise.then(() => {\n      styleCache = null;\n      if (!timeout) {\n        // Render right away\n        render(this);\n      } else {\n        // Schedule\n        this._renderTimer = setTimeout(() => {\n          render(this);\n          this._renderTimer = null;\n        }, timeout);\n      }\n    }, this._capability.reject);\n  }\n\n  /**\n   * @param {boolean} [expandDivs]\n   */\n  expandTextDivs(expandDivs = false) {\n    if (!this._enhanceTextSelection || !this._renderingDone) {\n      return;\n    }\n    if (this._bounds !== null) {\n      expand(this);\n      this._bounds = null;\n    }\n    const transformBuf = [],\n      paddingBuf = [];\n\n    for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n      const div = this._textDivs[i];\n      const divProps = this._textDivProperties.get(div);\n\n      if (!divProps.hasText) {\n        continue;\n      }\n      if (expandDivs) {\n        transformBuf.length = 0;\n        paddingBuf.length = 0;\n\n        if (divProps.originalTransform) {\n          transformBuf.push(divProps.originalTransform);\n        }\n        if (divProps.paddingTop > 0) {\n          paddingBuf.push(`${divProps.paddingTop}px`);\n          transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingRight > 0) {\n          paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingBottom > 0) {\n          paddingBuf.push(`${divProps.paddingBottom}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingLeft > 0) {\n          paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n          transformBuf.push(\n            `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n          );\n        } else {\n          paddingBuf.push(0);\n        }\n\n        div.style.padding = paddingBuf.join(\" \");\n        if (transformBuf.length) {\n          div.style.transform = transformBuf.join(\" \");\n        }\n      } else {\n        div.style.padding = null;\n        div.style.transform = divProps.originalTransform;\n      }\n    }\n  }\n}\n\n/**\n * @param {TextLayerRenderParameters} renderParameters\n * @returns {TextLayerRenderTask}\n */\nfunction renderTextLayer(renderParameters) {\n  const task = new TextLayerRenderTask({\n    textContent: renderParameters.textContent,\n    textContentStream: renderParameters.textContentStream,\n    container: renderParameters.container,\n    viewport: renderParameters.viewport,\n    textDivs: renderParameters.textDivs,\n    textContentItemsStr: renderParameters.textContentItemsStr,\n    enhanceTextSelection: renderParameters.enhanceTextSelection,\n  });\n  task._render(renderParameters.timeout);\n  return task;\n}\n\nexport { renderTextLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\n\n/** @type {any} */\nlet SVGGraphics = class {\n  constructor() {\n    unreachable(\"Not implemented: SVGGraphics\");\n  }\n};\n\nif (\n  typeof PDFJSDev === \"undefined\" ||\n  PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    function deflateSync(literals) {\n      if (!isNodeJS) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n      }\n      try {\n        // NOTE: This implementation is far from perfect, but already way better\n        // than not applying any compression.\n        //\n        // A better algorithm will try to choose a good predictor/filter and\n        // then choose a suitable zlib compression strategy (e.g. 3,Z_RLE).\n        //\n        // Node v0.11.12 zlib.deflateSync is introduced (and returns a Buffer).\n        // Node v3.0.0   Buffer inherits from Uint8Array.\n        // Node v8.0.0   zlib.deflateSync accepts Uint8Array as input.\n        let input;\n        // eslint-disable-next-line no-undef\n        if (parseInt(process.versions.node) >= 8) {\n          input = literals;\n        } else {\n          // eslint-disable-next-line no-undef\n          input = Buffer.from(literals);\n        }\n        const output = __non_webpack_require__(\"zlib\").deflateSync(input, {\n          level: 9,\n        });\n        return output instanceof Uint8Array ? output : new Uint8Array(output);\n      } catch (e) {\n        warn(\n          \"Not compressing PNG because zlib.deflateSync is unavailable: \" + e\n        );\n      }\n\n      return deflateSyncUncompressed(literals);\n    }\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  SVGGraphics = class {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.hypot(a, b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement?.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeHexColor(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeHexColor(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0] = Util.applyTransform([x0, y0], matrix);\n      const [tx1, ty1] = Util.applyTransform([x1, y1], matrix);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeHexColor(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        for (const prev of this.extraStack) {\n          prev.clipGroup = null;\n        }\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass XfaLayer {\n  static setupStorage(html, fieldId, element, storage) {\n    const storedData = storage.getValue(fieldId, { value: null });\n    switch (element.name) {\n      case \"textarea\":\n        html.textContent = storedData.value !== null ? storedData.value : \"\";\n        html.addEventListener(\"input\", event => {\n          storage.setValue(fieldId, { value: event.target.value });\n        });\n        break;\n      case \"input\":\n        if (storedData.value !== null) {\n          html.setAttribute(\"value\", storedData.value);\n        }\n        if (element.attributes.type === \"radio\") {\n          html.addEventListener(\"change\", event => {\n            const { target } = event;\n            for (const radio of document.getElementsByName(target.name)) {\n              if (radio !== target) {\n                const id = radio.id;\n                storage.setValue(id.split(\"-\")[0], { value: false });\n              }\n            }\n            storage.setValue(fieldId, { value: target.checked });\n          });\n        } else {\n          html.addEventListener(\"input\", event => {\n            storage.setValue(fieldId, { value: event.target.value });\n          });\n        }\n        break;\n      case \"select\":\n        if (storedData.value !== null) {\n          for (const option of element.children) {\n            if (option.attributes.value === storedData.value) {\n              option.attributes.selected = true;\n            }\n          }\n        }\n        html.addEventListener(\"input\", event => {\n          const options = event.target.options;\n          const value =\n            options.selectedIndex === -1\n              ? null\n              : options[options.selectedIndex].value;\n          storage.setValue(fieldId, { value });\n        });\n        break;\n    }\n  }\n\n  static setAttributes(html, element, storage) {\n    const { attributes } = element;\n    for (const [key, value] of Object.entries(attributes)) {\n      if (value === null || value === undefined || key === \"fieldId\") {\n        continue;\n      }\n\n      if (key !== \"style\") {\n        if (key === \"textContent\") {\n          html.textContent = value;\n        } else {\n          html.setAttribute(key, value);\n        }\n      } else {\n        Object.assign(html.style, value);\n      }\n    }\n\n    // Set the value after the others to be sure overwrite\n    // any other values.\n    if (storage && attributes.fieldId !== undefined) {\n      this.setupStorage(html, attributes.fieldId, element, storage);\n    }\n  }\n\n  static render(parameters) {\n    const storage = parameters.annotationStorage;\n    const root = parameters.xfa;\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      this.setAttributes(rootHtml, root);\n    }\n    const stack = [[root, -1, rootHtml]];\n\n    const rootDiv = parameters.div;\n    rootDiv.appendChild(rootHtml);\n    const coeffs = parameters.viewport.transform.join(\",\");\n    rootDiv.style.transform = `matrix(${coeffs})`;\n\n    // Set defaults.\n    rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n\n    while (stack.length > 0) {\n      const [parent, i, html] = stack[stack.length - 1];\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n\n      const child = parent.children[++stack[stack.length - 1][1]];\n      if (child === null) {\n        continue;\n      }\n\n      const { name } = child;\n      if (name === \"#text\") {\n        html.appendChild(document.createTextNode(child.value));\n        continue;\n      }\n\n      const childHtml = document.createElement(name);\n      html.appendChild(childHtml);\n      if (child.attributes) {\n        this.setAttributes(childHtml, child, storage);\n      }\n\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        childHtml.appendChild(document.createTextNode(child.value));\n      }\n    }\n  }\n\n  /**\n   * Update the xfa layer.\n   *\n   * @public\n   * @param {XfaLayerParameters} parameters\n   * @memberof XfaLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\n\nexport { XfaLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const { allowRangeRequests, suggestedLength } =\n        validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (isPdfFile(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    `Unexpected server response (${status}) while retrieving PDF \"${url}\".`,\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringToBytes } from \"../shared/util.js\";\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(value);\n        value = decoder.decode(buffer);\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || {};\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = {\n      xhr,\n    });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    if (pendingRequest.onProgress) {\n      pendingRequest.onProgress(evt);\n    }\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const { allowRangeRequests, suggestedLength } =\n      validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: this._manager.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(args) {\n    if (args) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: args.chunk, done: false });\n      } else {\n        this._cachedChunks.push(args.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  _onError(status) {\n    const url = this._url;\n    const exception = createResponseStatusError(status, url);\n    this._storedError = exception;\n    this._headersReceivedCapability.reject(exception);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(exception);\n    }\n    this._requests.length = 0;\n    this._cachedChunks.length = 0;\n  }\n\n  _onProgress(data) {\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: data.loaded,\n        total: data.lengthComputable ? data.total : this._contentLength,\n      });\n    }\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    if (this.onClosed) {\n      this.onClosed(this);\n    }\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._close();\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({\n        loaded: evt.loaded,\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController?.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const { allowRangeRequests, suggestedLength } =\n          validateRangeRequestCapabilities({\n            getResponseHeader,\n            isHttp: this._stream.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange,\n          });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(reason => {\n        if (reason?.name === \"AbortError\") {\n          return;\n        }\n        throw reason;\n      });\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable sort-exports/sort-exports */\n\nimport {\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  isFetchSupported,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport {\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { apiCompatibilityParams } from \"./display/api_compatibility.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\nimport { XfaLayer } from \"./display/xfa_layer.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n  setPDFNetworkStreamFactory(params => {\n    return streamsPromise.then(streams => {\n      const [{ PDFNetworkStream }, { PDFFetchStream }] = streams;\n      if (isFetchSupported() && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  });\n} else if (PDFJSDev.test(\"GENERIC\")) {\n  const { isNodeJS } = require(\"./shared/is_node.js\");\n  if (isNodeJS) {\n    const PDFNodeStream = require(\"./display/node_stream.js\").PDFNodeStream;\n    setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n    let PDFFetchStream;\n    if (isFetchSupported()) {\n      PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n    }\n    setPDFNetworkStreamFactory(params => {\n      if (PDFFetchStream && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n} else if (PDFJSDev.test(\"CHROME\")) {\n  const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n  let PDFFetchStream;\n  const isChromeWithFetchCredentials = function () {\n    // fetch does not include credentials until Chrome 61.0.3138.0 and later.\n    // https://chromium.googlesource.com/chromium/src/+/2e231cf052ca5e68e22baf0008ac9e5e29121707\n    try {\n      // Indexed properties on window are read-only in Chrome 61.0.3151.0+\n      // https://chromium.googlesource.com/chromium/src.git/+/58ab4a971b06dec13e4edf9de8382ca6847f6190\n      window[999] = 123; // should throw. Note: JS strict mode MUST be enabled.\n      delete window[999];\n      return false;\n    } catch (e) {\n      return true;\n    }\n  };\n  if (isFetchSupported() && isChromeWithFetchCredentials()) {\n    PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n  }\n  setPDFNetworkStreamFactory(params => {\n    if (PDFFetchStream && isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n}\n\nexport {\n  // From \"./display/display_utils.js\":\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  isPdfFile,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n  // From \"./display/api.js\":\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  version,\n  // From \"./shared/util.js\":\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  // From \"./display/annotation_layer.js\":\n  AnnotationLayer,\n  // From \"./display/api_compatibility.js\":\n  apiCompatibilityParams,\n  // From \"./display/worker_options.js\":\n  GlobalWorkerOptions,\n  // From \"./display/text_layer.js\":\n  renderTextLayer,\n  // From \"./display/svg.js\":\n  SVGGraphics,\n  // From \"./display/xfa_layer.js\":\n  XfaLayer,\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}