{"ast":null,"code":"export const NotificationAction = {\n  showNotification: 'show_notification',\n  clearNotification: 'clear_notification',\n  notificationsMounted: 'notifications_mounted'\n};","map":{"version":3,"sources":["../../../../src/components/Notifications/types.ts"],"names":[],"mappings":"AAwDA,OAAO,MAAM,kBAAkB,GAAG;AAChC,EAAA,gBAAgB,EAAE,mBADc;AAEhC,EAAA,iBAAiB,EAAE,oBAFa;AAGhC,EAAA,oBAAoB,EAAE;AAHU,CAA3B","sourcesContent":["import * as React from 'react';\nimport { EventManager } from '../../utils/eventManager';\n\nexport interface NotificationOption {\n  /**\n   * Gives the notification a unique identifier.\n   */\n  id?: string;\n  /**\n   * Sets the type of the notification.\n   */\n  type?: NotificationType;\n  /**\n   * Determines the position of the notification.\n   */\n  position?: NotificationsPosition;\n  /**\n   * Event fired when the notification is closed.\n   */\n  onClose?(): void;\n  /**\n   * Optionally provides a custom way for rendering an action control.\n   */\n  actionRenderer?(): React.ReactChild;\n  /**\n   * Sets the title of the notification message.\n   */\n  title?: string;\n  /**\n   * Automatically closes the notification after some milliseconds.\n   */\n  autoClose?: false | number;\n  /**\n   * Optionally sets the event manager to use.\n   */\n  events?: EventManager;\n}\n\nexport interface NotificationProps {\n  /**\n   * Event fired when the notification is closed.\n   */\n  onClose?(): void;\n}\n\nexport type NotificationsPosition =\n  | 'top-left'\n  | 'top-right'\n  | 'top-center'\n  | 'bottom-left'\n  | 'bottom-right'\n  | 'bottom-center'\n  | 'relative';\n\nexport type NotificationType = 'info' | 'success' | 'warning' | 'error' | 'none';\n\nexport const NotificationAction = {\n  showNotification: 'show_notification',\n  clearNotification: 'clear_notification',\n  notificationsMounted: 'notifications_mounted',\n};\n\nexport type NotificationContent =\n  | JSX.Element\n  | React.ReactElement<NotificationProps>\n  | string\n  | number\n  | ((props: NotificationProps) => React.ReactChild);\n\nexport interface NotificationOptions {\n  content: NotificationContent;\n  options?: NotificationOption;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}