{"ast":null,"code":"import _classCallCheck from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  color: \", \";\\n  \", \";\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  span {\\n    margin-left: \", \";\\n  }\\n  &:hover {\\n    color: \", \";\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  position: static;\\n  white-space: nowrap;\\n\\n  ul {\\n    background: \", \";\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  margin-right: \", \";\\n  &:last-child {\\n    margin-right: 0;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport * as colors from '../../colors';\nimport onClickOutside from 'react-onclickoutside';\nimport styled, { themed } from '../../utils/styled';\nimport { Icon } from '../Icon';\nimport { InteractiveList } from '../InteractiveList';\nimport { distance } from '../../distance';\nimport { Flyout } from '../Flyout';\nimport { getFontStyle } from '../../textStyles';\nvar RootContainer = styled.div(_templateObject(), distance.xlarge);\nvar StyledInteractiveList = styled(InteractiveList)(_templateObject2(), themed(function (props) {\n  return props.theme.ui1;\n}));\nvar DropdownButton = styled.div(_templateObject3(), function (props) {\n  return props.open ? colors.cyan : colors.grey2;\n}, function (_ref) {\n  var menuSize = _ref.menuSize;\n  return getFontStyle({\n    size: menuSize\n  });\n}, distance.small, colors.cyan);\n\nvar DropdownMenuInt = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(DropdownMenuInt, _React$PureComponent);\n\n  var _super = _createSuper(DropdownMenuInt);\n\n  function DropdownMenuInt(props) {\n    var _this;\n\n    _classCallCheck(this, DropdownMenuInt);\n\n    _this = _super.call(this, props);\n\n    _this.handleClickOutside = function () {\n      _this.container && _this.state.open && _this.toggleOpen();\n    };\n\n    _this.setContainer = function (el) {\n      _this.container = el;\n    };\n\n    _this.handleKeyDown = function (e) {\n      switch (e.keyCode) {\n        case 32\n        /* space */\n        :\n        case 13\n        /* enter */\n        :\n        case 40\n        /* down */\n        :\n          _this.toggleOpen();\n\n          break;\n      }\n    };\n\n    _this.handleButtonMouseDown = function (e) {\n      _this.toggleOpen();\n\n      e.preventDefault();\n    };\n\n    _this.handleBlur = function () {\n      _this.toggleOpen(false);\n    };\n\n    _this.handleChange = function (e) {\n      var _this$props = _this.props,\n          onChange = _this$props.onChange,\n          keepOpen = _this$props.keepOpen;\n\n      if (typeof onChange === 'function') {\n        onChange({\n          indices: e.value\n        });\n      }\n\n      if (!keepOpen) {\n        _this.toggleOpen(false);\n      }\n    };\n\n    _this.state = {\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(DropdownMenuInt, [{\n    key: \"toggleOpen\",\n    value: function toggleOpen(force) {\n      var _this2 = this;\n\n      var open = this.state.open;\n      var _this$props2 = this.props,\n          items = _this$props2.items,\n          onToggle = _this$props2.onToggle;\n      var newState = force ? force : !open;\n      this.setState({\n        open: newState && !!items.length\n      }, function () {\n        if (typeof onToggle === 'function') {\n          onToggle({\n            open: _this2.state.open\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          _a$items = _a.items,\n          items = _a$items === void 0 ? [] : _a$items,\n          _a$text = _a.text,\n          text = _a$text === void 0 ? '' : _a$text,\n          icon = _a.icon,\n          _0 = _a.onChange,\n          _a$menuSize = _a.menuSize,\n          menuSize = _a$menuSize === void 0 ? 'normal' : _a$menuSize,\n          _a$iconSize = _a.iconSize,\n          iconSize = _a$iconSize === void 0 ? 1 : _a$iconSize,\n          rest = __rest(_a, [\"items\", \"text\", \"icon\", \"onChange\", \"menuSize\", \"iconSize\"]);\n\n      var open = this.state.open;\n      return React.createElement(RootContainer, {\n        ref: this.setContainer\n      }, React.createElement(Flyout, {\n        open: open,\n        noGutter: true,\n        content: React.createElement(StyledInteractiveList, {\n          borderless: true,\n          open: open,\n          data: items,\n          autoFocus: true,\n          onBlur: this.handleBlur,\n          onChange: this.handleChange\n        })\n      }, React.createElement(DropdownButton, Object.assign({\n        tabIndex: 0,\n        onKeyDown: this.handleKeyDown,\n        onMouseDown: this.handleButtonMouseDown,\n        open: open,\n        menuSize: menuSize\n      }, rest), icon && React.createElement(Icon, {\n        name: icon,\n        size: iconSize\n      }), React.createElement(\"span\", null, text))));\n    }\n  }]);\n\n  return DropdownMenuInt;\n}(React.PureComponent);\n\nDropdownMenuInt.inner = {\n  get RootContainer() {\n    return RootContainer;\n  },\n\n  get Flyout() {\n    return Flyout;\n  },\n\n  get DropdownButton() {\n    return DropdownButton;\n  },\n\n  get Icon() {\n    return Icon;\n  }\n\n};\n/**\n * A dropdown menu for displaying menu items.\n */\n\nexport var DropdownMenu = onClickOutside(DropdownMenuInt);\nDropdownMenu.displayName = 'DropdownMenu';","map":{"version":3,"sources":["../../../../src/components/DropdownMenu/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as colors from '../../colors';\nimport onClickOutside, { AdditionalProps } from 'react-onclickoutside';\nimport styled, { themed } from '../../utils/styled';\nimport { Icon, IconName } from '../Icon';\nimport { InteractiveList, InteractiveListItem, InteractiveListChangeEvent } from '../InteractiveList';\nimport { StandardProps } from '../../common';\nimport { KeyCodes } from '../../utils/keyCodes';\nimport { distance } from '../../distance';\nimport { Flyout } from '../Flyout';\nimport { FontSize, getFontStyle } from '../../textStyles';\nexport interface DropdownMenuChangeEvent {\n    /**\n     * The indices of the items that have been selected.\n     */\n    indices: Array<number>;\n}\nexport interface DropdownMenuToggleEvent {\n    /**\n     * The menu is currently closed or opened.\n     */\n    open: boolean;\n}\nexport interface DropdownMenuProps extends StandardProps {\n    /**\n     * The text to display.\n     */\n    text?: string;\n    /**\n     * The optional icon (name) to use.\n     */\n    icon?: IconName;\n    /**\n     * The items of the menu.\n     */\n    items: Array<InteractiveListItem>;\n    /**\n     * Defines the size of the menu.\n     * @default 'normal\n     */\n    menuSize?: FontSize;\n    /**\n     * Should the menu be kept open when losing focus.\n     */\n    keepOpen?: boolean;\n    /**\n     * Event fired when the selected item changes.\n     */\n    onChange?(e: DropdownMenuChangeEvent): void;\n    /**\n     * The icon size to use.\n     */\n    iconSize?: number | string;\n    /**\n     * Event fired when menu opened | closed.\n     */\n    onToggle?(e: DropdownMenuToggleEvent): void;\n    /**\n     * @ignore\n     */\n    children?: void;\n}\nexport interface DropdownMenuState {\n    open: boolean;\n}\ninterface DropdownButtonProps {\n    open: boolean;\n    menuSize: FontSize;\n}\nconst RootContainer = styled.div `\n  position: relative;\n  margin-right: ${distance.xlarge};\n  &:last-child {\n    margin-right: 0;\n  }\n`;\nconst StyledInteractiveList = styled(InteractiveList) `\n  position: static;\n  white-space: nowrap;\n\n  ul {\n    background: ${themed(props => props.theme.ui1)};\n  }\n`;\nconst DropdownButton = styled.div<DropdownButtonProps> `\n  color: ${props => (props.open ? colors.cyan : colors.grey2)};\n  ${({ menuSize }) => getFontStyle({ size: menuSize })};\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  span {\n    margin-left: ${distance.small};\n  }\n  &:hover {\n    color: ${colors.cyan};\n  }\n`;\nclass DropdownMenuInt extends React.PureComponent<DropdownMenuProps, DropdownMenuState> {\n    private container: HTMLDivElement | null;\n    constructor(props: DropdownMenuProps) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n    }\n    handleClickOutside = () => {\n        this.container && this.state.open && this.toggleOpen();\n    };\n    private setContainer = (el: HTMLDivElement) => {\n        this.container = el;\n    };\n    private handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n        switch (e.keyCode) {\n            case KeyCodes.space:\n            case KeyCodes.enter:\n            case KeyCodes.down:\n                this.toggleOpen();\n                break;\n        }\n    };\n    private handleButtonMouseDown = (e: React.MouseEvent<HTMLDivElement> | React.KeyboardEvent<HTMLDivElement>) => {\n        this.toggleOpen();\n        e.preventDefault();\n    };\n    private toggleOpen(force?: boolean) {\n        const { open } = this.state;\n        const { items, onToggle } = this.props;\n        const newState = force ? force : !open;\n        this.setState({\n            open: newState && !!items.length,\n        }, () => {\n            if (typeof onToggle === 'function') {\n                onToggle({\n                    open: this.state.open,\n                });\n            }\n        });\n    }\n    private handleBlur = () => {\n        this.toggleOpen(false);\n    };\n    private handleChange = (e: InteractiveListChangeEvent) => {\n        const { onChange, keepOpen } = this.props;\n        if (typeof onChange === 'function') {\n            onChange({\n                indices: e.value,\n            });\n        }\n        if (!keepOpen) {\n            this.toggleOpen(false);\n        }\n    };\n    render() {\n        const { items = [], text = '', icon, onChange: _0, menuSize = 'normal' as FontSize, iconSize = 1, ...rest } = this.props;\n        const { open } = this.state;\n        return (<RootContainer ref={this.setContainer}>\n        <Flyout open={open} noGutter content={<StyledInteractiveList borderless open={open} data={items} autoFocus onBlur={this.handleBlur} onChange={this.handleChange}/>}>\n          <DropdownButton tabIndex={0} onKeyDown={this.handleKeyDown} onMouseDown={this.handleButtonMouseDown} open={open} menuSize={menuSize} {...rest}>\n            {icon && <Icon name={icon} size={iconSize}/>}\n            <span>{text}</span>\n          </DropdownButton>\n        </Flyout>\n      </RootContainer>);\n    }\n    static inner = {\n        get RootContainer() { return RootContainer as typeof RootContainer; },\n        get Flyout() { return Flyout as typeof Flyout; },\n        get DropdownButton() { return DropdownButton as typeof DropdownButton; },\n        get Icon() { return Icon as typeof Icon; }\n    };\n}\n/**\n * A dropdown menu for displaying menu items.\n */\nexport const DropdownMenu: React.ComponentClass<DropdownMenuProps & AdditionalProps> = onClickOutside(DropdownMenuInt);\nDropdownMenu.displayName = 'DropdownMenu';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}