{"ast":null,"code":"import _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \";\\n  position: absolute;\\n  top: 50%;\\n  transform: translateY(-50%);\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \";\\n  position: relative;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n        width: 100%;\\n        margin: \", \" 0;\\n      \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n      box-sizing: border-box;\\n      outline: none;\\n      border-radius: 0;\\n      margin: \", \";\\n      &:first-of-type {\\n        margin-left: 0;\\n      }\\n      &:last-of-type {\\n        margin-right: 0;\\n      }\\n      border: \", \";\\n      background-color: \", \";\\n      color: \", \";\\n      font-family: \", \";\\n      \", \";\\n      padding: \", \";\\n      display: \", \";\\n      cursor: \", \";\\n      \", \";\\n      \", \";\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  &:hover {\\n    background-color: \", \";\\n    border: \", \";\\n    color: \", \";\\n  }\\n  &:focus {\\n    background-color: \", \";\\n    border: \", \";\\n    color: \", \";\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport styled, { themed, css } from '../../utils/styled';\nimport { Anchor } from '../Anchor';\nimport { Icon } from '../Icon';\nimport { distance } from '../../distance';\nimport { displayUpTo } from '../../utils/';\nimport { getFontSize } from '../../textStyles';\n\nfunction getThemeSettings(theme, buttonStyle) {\n  switch (buttonStyle) {\n    default:\n    case 'primary':\n      return theme.buttonPrimary;\n\n    case 'secondary':\n      return theme.buttonSecondary;\n  }\n}\n\nfunction getButtonFontStyle(themeSettings) {\n  var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'medium';\n\n  switch (size) {\n    default:\n    case 'medium':\n      return \"\\n        line-height: \".concat(themeSettings.lineHeightMedium, \";\\n        \").concat(getFontSize('medium'), \";\\n      \");\n\n    case 'small':\n      return \"\\n        line-height: \".concat(themeSettings.lineHeightSmall, \";\\n        \").concat(getFontSize('small'), \";\\n      \");\n  }\n}\n\nfunction getIconSize(size) {\n  switch (size) {\n    default:\n    case 'medium':\n      return '22px';\n\n    case 'small':\n      return '16px';\n  }\n}\n\nfunction getButtonPadding(size) {\n  switch (size) {\n    default:\n    case 'medium':\n      return \"9px \".concat(distance.medium, \" 7px\");\n\n    case 'small':\n      return \"5px \".concat(distance.small, \" 3px\");\n  }\n}\n\nvar PseudoButtonStyle = function PseudoButtonStyle(colorTheme) {\n  return css(_templateObject(), colorTheme.hoverBackground, colorTheme.hoverBorder, colorTheme.hoverText, colorTheme.focusBackground, colorTheme.focusBorder, colorTheme.focusText);\n};\n\nvar AnchorInt = Object.assign(function (_a) {\n  var buttonStyle = _a.buttonStyle,\n      props = __rest(_a, [\"buttonStyle\"]);\n\n  return React.createElement(Anchor, Object.assign({}, props));\n}, {\n  inner: {\n    get Anchor() {\n      return Anchor;\n    }\n\n  }\n});\nvar StyledButton = styled(AnchorInt)(themed(function (props) {\n  var themeSettings = getThemeSettings(props.theme, props.buttonStyle);\n  return css(_templateObject2(), distance.small, props.disabled ? \"\".concat(themeSettings.disabledBorder) : \"\".concat(themeSettings.border), props.disabled ? themeSettings.disabledBackground : themeSettings.background, props.disabled ? themeSettings.disabledText : themeSettings.text, props.theme.fontFamily, getButtonFontStyle(themeSettings, props.size), getButtonPadding(props.size), props.block ? 'block' : 'inline-block', props.disabled ? 'not-allowed' : 'pointer', !props.disabled ? PseudoButtonStyle(themeSettings) : '', !props.disableMobileFullWidth && displayUpTo('medium')(_templateObject3(), distance.small));\n}));\nvar DefaultWrapper = styled.div(_templateObject4());\nvar WithIconWrapper = styled('div')(_templateObject5(), function (props) {\n  return props.theme.buttonIconPosition === 'left' ? \"padding-left: \".concat(distance.xlarge) : \"padding-right: \".concat(distance.xlarge);\n});\nvar StyledIcon = styled(Icon)(_templateObject6(), function (props) {\n  return props.theme.buttonIconPosition === 'left' ? 'left: 0' : 'right: 0';\n});\n/**\n * The button component renders a simple button optionally with an icon.\n */\n\nexport var Button = Object.assign(function (_a) {\n  var children = _a.children,\n      icon = _a.icon,\n      size = _a.size,\n      theme = _a.theme,\n      rest = __rest(_a, [\"children\", \"icon\", \"size\", \"theme\"]);\n\n  var Wrapper = icon ? WithIconWrapper : DefaultWrapper;\n  return React.createElement(StyledButton, Object.assign({\n    tagName: \"button\",\n    theme: theme,\n    size: size\n  }, rest), React.createElement(Wrapper, {\n    theme: theme\n  }, children, icon && React.createElement(StyledIcon, {\n    name: icon,\n    theme: theme,\n    size: getIconSize(size)\n  })));\n}, {\n  inner: {\n    get StyledButton() {\n      return StyledButton;\n    },\n\n    get StyledIcon() {\n      return StyledIcon;\n    }\n\n  }\n});\nButton.displayName = 'Button';","map":{"version":3,"sources":["../../../../src/components/Button/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled, { themed, css } from '../../utils/styled';\nimport { StandardProps, ButtonThemeSettings, PreciseFullTheme } from '../../common';\nimport { Anchor, AnchorProps } from '../Anchor';\nimport { IconName, Icon, IconProps } from '../Icon';\nimport { distance } from '../../distance';\nimport { displayUpTo } from '../../utils/';\nimport { getFontSize } from '../../textStyles';\n/**\n * Button style name.\n */\nexport type ButtonStyle = 'primary' | 'secondary';\n/**\n * Button type.\n */\nexport type ButtonType = 'submit' | 'reset' | 'button';\n/**\n * Button size.\n */\nexport type ButtonSize = 'small' | 'medium';\nexport interface ButtonProps extends AnchorProps {\n    /**\n     * Sets the button as active.\n     * @default false\n     */\n    active?: boolean;\n    /**\n     * Sets the button as a block.\n     * @default false\n     */\n    block?: boolean;\n    /**\n     * Sets the button style type. By default primary.\n     * @default primary\n     */\n    buttonStyle?: ButtonStyle;\n    /**\n     * Sets the button type. By default \"submit\".\n     * @see [W3C](https://www.w3.org/TR/2011/WD-html5-20110525/the-button-element.html#attr-button-type)\n     */\n    type?: ButtonType;\n    /**\n     * Sets the button size. By default medium.\n     * @default medium\n     */\n    size?: ButtonSize;\n    /**\n     * The name of the icon to display. By default no icon is display.\n     */\n    icon?: IconName;\n    /**\n     * Disables changing the width of the button to 100% for mobile screens (narrower than 980px)\n     * @default false\n     */\n    disableMobileFullWidth?: boolean;\n}\nexport interface StyledButtonProps extends AnchorProps {\n    block?: boolean;\n    buttonStyle?: ButtonStyle;\n    size?: ButtonSize;\n    disableMobileFullWidth?: boolean;\n}\nexport interface IconWrapperProps extends StandardProps {\n}\nfunction getThemeSettings(theme: PreciseFullTheme, buttonStyle?: ButtonStyle) {\n    switch (buttonStyle) {\n        default:\n        case 'primary':\n            return theme.buttonPrimary;\n        case 'secondary':\n            return theme.buttonSecondary;\n    }\n}\nfunction getButtonFontStyle(themeSettings: ButtonThemeSettings, size: ButtonSize = 'medium') {\n    switch (size) {\n        default:\n        case 'medium':\n            return `\n        line-height: ${themeSettings.lineHeightMedium};\n        ${getFontSize('medium')};\n      `;\n        case 'small':\n            return `\n        line-height: ${themeSettings.lineHeightSmall};\n        ${getFontSize('small')};\n      `;\n    }\n}\nfunction getIconSize(size?: ButtonSize) {\n    switch (size) {\n        default:\n        case 'medium':\n            return '22px';\n        case 'small':\n            return '16px';\n    }\n}\nfunction getButtonPadding(size?: ButtonSize) {\n    switch (size) {\n        default:\n        case 'medium':\n            return `9px ${distance.medium} 7px`;\n        case 'small':\n            return `5px ${distance.small} 3px`;\n    }\n}\nconst PseudoButtonStyle = (colorTheme: ButtonThemeSettings) => css `\n  &:hover {\n    background-color: ${colorTheme.hoverBackground};\n    border: ${colorTheme.hoverBorder};\n    color: ${colorTheme.hoverText};\n  }\n  &:focus {\n    background-color: ${colorTheme.focusBackground};\n    border: ${colorTheme.focusBorder};\n    color: ${colorTheme.focusText};\n  }\n`;\nconst AnchorInt = Object.assign(((({ buttonStyle, ...props }) => <Anchor {...props}/>) as React.SFC<StyledButtonProps>), { inner: {\n        get Anchor() { return Anchor as typeof Anchor; }\n    } });\nconst StyledButton = styled(AnchorInt)<StyledButtonProps>(themed(props => {\n    const themeSettings = getThemeSettings(props.theme, props.buttonStyle);\n    return css `\n      box-sizing: border-box;\n      outline: none;\n      border-radius: 0;\n      margin: ${distance.small};\n      &:first-of-type {\n        margin-left: 0;\n      }\n      &:last-of-type {\n        margin-right: 0;\n      }\n      border: ${props.disabled ? `${themeSettings.disabledBorder}` : `${themeSettings.border}`};\n      background-color: ${props.disabled ? themeSettings.disabledBackground : themeSettings.background};\n      color: ${props.disabled ? themeSettings.disabledText : themeSettings.text};\n      font-family: ${props.theme.fontFamily};\n      ${getButtonFontStyle(themeSettings, props.size)};\n      padding: ${getButtonPadding(props.size)};\n      display: ${props.block ? 'block' : 'inline-block'};\n      cursor: ${props.disabled ? 'not-allowed' : 'pointer'};\n      ${!props.disabled ? PseudoButtonStyle(themeSettings) : ''};\n      ${!props.disableMobileFullWidth &&\n        displayUpTo('medium') `\n        width: 100%;\n        margin: ${distance.small} 0;\n      `};\n    `;\n}));\nconst DefaultWrapper = styled.div ``;\nconst WithIconWrapper = styled('div')<IconWrapperProps> `\n  ${props => props.theme.buttonIconPosition === 'left'\n    ? `padding-left: ${distance.xlarge}`\n    : `padding-right: ${distance.xlarge}`};\n  position: relative;\n`;\nconst StyledIcon = styled(Icon)<IconWrapperProps & IconProps> `\n  ${props => (props.theme.buttonIconPosition === 'left' ? 'left: 0' : 'right: 0')};\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n`;\n/**\n * The button component renders a simple button optionally with an icon.\n */\nexport const Button = Object.assign(((({ children, icon, size, theme, ...rest }) => {\n    const Wrapper = icon ? WithIconWrapper : DefaultWrapper;\n    return (<StyledButton tagName=\"button\" theme={theme} size={size} {...rest}>\n      <Wrapper theme={theme}>\n        {children}\n        {icon && <StyledIcon name={icon} theme={theme} size={getIconSize(size)}/>}\n      </Wrapper>\n    </StyledButton>);\n}) as React.FC<ButtonProps>), { inner: {\n        get StyledButton() { return StyledButton as typeof StyledButton; },\n        get StyledIcon() { return StyledIcon as typeof StyledIcon; }\n    } });\nButton.displayName = 'Button';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}