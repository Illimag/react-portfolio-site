{"ast":null,"code":"import * as React from 'react';\nimport styled, { themed } from '../../utils/styled';\nimport { distance } from '../../distance';\nimport { getFontStyle } from '../../textStyles';\nconst StyledCardBody = styled.div`\n  box-sizing: border-box;\n  position: relative;\n  flex: 1 1 auto;\n  padding: ${distance.medium} ${distance.small} ${distance.medium};\n  height: 100%;\n\n  p {\n    ${getFontStyle({\n  size: 'small'\n})}\n\n    font-family: ${themed(props => props.theme.fontFamily || 'inherit')};\n    margin: 0;\n  }\n`;\n/**\n * Represents a simple re-usable card body container.\n */\n\nexport const CardBody = Object.assign(props => React.createElement(StyledCardBody, Object.assign({}, props)), {\n  inner: {\n    get StyledCardBody() {\n      return StyledCardBody;\n    }\n\n  }\n});\nCardBody.displayName = 'CardBody';","map":{"version":3,"sources":["../../../../src/components/CardBody/index.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,IAAiB,MAAjB,QAA+B,oBAA/B;AAEA,SAAS,QAAT,QAAyB,gBAAzB;AACA,SAAS,YAAT,QAA6B,kBAA7B;AAOA,MAAM,cAAc,GAAG,MAAM,CAAC,GAAI;;;;aAIrB,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,MAAM;;;;MAI3D,YAAY,CAAC;AAAE,EAAA,IAAI,EAAE;AAAR,CAAD,CAAmB;;mBAElB,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,KAAN,CAAY,UAAZ,IAA0B,SAApC,CAA8C;;;CAVvE;AAcA;;;;AAGA,OAAO,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAP,CAAgB,KAAK,IAAI,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,CAAf,CAAzB,EAAqF;AAAE,EAAA,KAAK,EAAE;AAC9G,QAAI,cAAJ,GAAkB;AAAK,aAAO,cAAP;AAAiD;;AADsC;AAAT,CAArF,CAAjB;AAGP,QAAQ,CAAC,WAAT,GAAuB,UAAvB","sourcesContent":["import * as React from 'react';\nimport styled, { themed } from '../../utils/styled';\nimport { StandardProps } from '../../common';\nimport { distance } from '../../distance';\nimport { getFontStyle } from '../../textStyles';\nexport interface CardBodyProps extends StandardProps {\n    /**\n     * Content for the body.\n     */\n    children?: React.ReactNode;\n}\nconst StyledCardBody = styled.div `\n  box-sizing: border-box;\n  position: relative;\n  flex: 1 1 auto;\n  padding: ${distance.medium} ${distance.small} ${distance.medium};\n  height: 100%;\n\n  p {\n    ${getFontStyle({ size: 'small' })}\n\n    font-family: ${themed(props => props.theme.fontFamily || 'inherit')};\n    margin: 0;\n  }\n`;\n/**\n * Represents a simple re-usable card body container.\n */\nexport const CardBody = Object.assign(((props => <StyledCardBody {...props}/>) as React.SFC<CardBodyProps>), { inner: {\n        get StyledCardBody() { return StyledCardBody as typeof StyledCardBody; }\n    } });\nCardBody.displayName = 'CardBody';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}