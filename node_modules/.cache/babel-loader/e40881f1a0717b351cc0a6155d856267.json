{"ast":null,"code":"import _slicedToArray from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { withResponsive } from '../../hoc/withResponsive';\nimport { Container, Content, Header, Headers, OverflowItems } from './ContentSwitch.part';\nimport { OverflowMenu } from '../OverflowMenu';\nimport { Icon } from '../Icon';\nvar defaultOrientation = 'horizontal';\nvar overflowButtonWidth = 50;\nvar ContentSwitchInt = Object.assign(function (_a) {\n  var _a$orientation = _a.orientation,\n      orientation = _a$orientation === void 0 ? defaultOrientation : _a$orientation,\n      children = _a.children,\n      theme = _a.theme,\n      headers = _a.headers,\n      activeIndex = _a.activeIndex,\n      onSelect = _a.onSelect,\n      rest = __rest(_a, [\"orientation\", \"children\", \"theme\", \"headers\", \"activeIndex\", \"onSelect\"]);\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      overflowItems = _React$useState2[0],\n      setOverflowItems = _React$useState2[1];\n\n  var containerRef = React.createRef();\n  var headerRef = React.createRef();\n  React.useLayoutEffect(function () {\n    if (headerRef.current && containerRef.current && orientation === 'horizontal') {\n      var containerWidth = containerRef.current.offsetWidth;\n      var headerNodesWidth = Array.from(headerRef.current.childNodes).map(function (node) {\n        return node.offsetWidth;\n      });\n      var headersUlWidth = headerNodesWidth.reduce(function (acc, cur) {\n        return acc += cur;\n      }, 0);\n\n      if (headersUlWidth > containerWidth) {\n        var _overflowItems = [];\n        var visibleItemsWidth = overflowButtonWidth;\n        headerNodesWidth.forEach(function (nodeWidth, index) {\n          visibleItemsWidth += nodeWidth;\n\n          if (visibleItemsWidth > containerWidth) {\n            _overflowItems.push(headers[index]);\n          }\n        });\n        setOverflowItems(_overflowItems);\n      }\n    }\n\n    return function () {\n      return setOverflowItems([]);\n    };\n  }, [headerRef.current, containerRef.current, orientation]);\n  return React.createElement(Container, Object.assign({\n    theme: theme\n  }, rest, {\n    ref: containerRef\n  }), React.createElement(Headers, {\n    theme: theme,\n    orientation: orientation,\n    ref: headerRef\n  }, headers.slice(0, headers.length - overflowItems.length).map(function (element, index) {\n    return React.createElement(Header, {\n      theme: theme,\n      key: \"head-\".concat(index),\n      active: index === activeIndex,\n      onClick: function onClick() {\n        return onSelect(index);\n      },\n      orientation: orientation\n    }, element);\n  }), overflowItems.length > 0 && React.createElement(OverflowMenu, {\n    key: \"overflowButton\",\n    items: overflowItems.map(function (element, index, _ref) {\n      var length = _ref.length;\n      return React.createElement(OverflowItems, {\n        onClick: function onClick() {\n          return onSelect(headers.length - length + index);\n        }\n      }, element);\n    }),\n    button: React.createElement(Header, null, React.createElement(Icon, {\n      name: \"MoreVert\"\n    }))\n  })), React.createElement(Content, {\n    theme: theme\n  }, children));\n}, {\n  inner: {\n    get Container() {\n      return Container;\n    },\n\n    get Headers() {\n      return Headers;\n    },\n\n    get Header() {\n      return Header;\n    },\n\n    get OverflowMenu() {\n      return OverflowMenu;\n    },\n\n    get Content() {\n      return Content;\n    }\n\n  }\n});\nexport var ResponsiveSwitchPanel = withResponsive(ContentSwitchInt);","map":{"version":3,"sources":["../../../../src/components/ContentSwitch/ResponsiveSwitchPanel.part.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { withResponsive } from '../../hoc/withResponsive';\nimport { Container, Content, Header, Headers, OverflowItems } from './ContentSwitch.part';\nimport { ContentSwitchOrientation, ContentSwitchPropsInt } from './ContentSwitchTypes.part';\nimport { OverflowMenu } from '../OverflowMenu';\nimport { Icon } from '../Icon';\nconst defaultOrientation: ContentSwitchOrientation = 'horizontal';\nconst overflowButtonWidth = 50;\nconst ContentSwitchInt = Object.assign(((({ orientation = defaultOrientation, children, theme, headers, activeIndex, onSelect, ...rest }) => {\n    const [overflowItems, setOverflowItems] = React.useState<typeof headers>([]);\n    const containerRef = React.createRef<HTMLDivElement>();\n    const headerRef = React.createRef<HTMLUListElement>();\n    React.useLayoutEffect(() => {\n        if (headerRef.current && containerRef.current && orientation === 'horizontal') {\n            const { offsetWidth: containerWidth } = containerRef.current;\n            const headerNodesWidth = Array.from(headerRef.current.childNodes).map((node: HTMLLIElement) => node.offsetWidth);\n            const headersUlWidth = headerNodesWidth.reduce((acc, cur) => (acc += cur), 0);\n            if (headersUlWidth > containerWidth) {\n                const overflowItems: typeof headers = [];\n                let visibleItemsWidth = overflowButtonWidth;\n                headerNodesWidth.forEach((nodeWidth, index) => {\n                    visibleItemsWidth += nodeWidth;\n                    if (visibleItemsWidth > containerWidth) {\n                        overflowItems.push(headers[index]);\n                    }\n                });\n                setOverflowItems(overflowItems);\n            }\n        }\n        return () => setOverflowItems([]);\n    }, [headerRef.current, containerRef.current, orientation]);\n    return (<Container theme={theme} {...rest} ref={containerRef}>\n      <Headers theme={theme} orientation={orientation} ref={headerRef}>\n        {headers.slice(0, headers.length - overflowItems.length).map((element, index) => (<Header theme={theme} key={`head-${index}`} active={index === activeIndex} onClick={() => onSelect(index)} orientation={orientation}>\n            {element}\n          </Header>))}\n        {overflowItems.length > 0 && (<OverflowMenu key=\"overflowButton\" items={overflowItems.map((element, index, { length }) => (<OverflowItems onClick={() => onSelect(headers.length - length + index)}>{element}</OverflowItems>))} button={<Header>\n                <Icon name=\"MoreVert\"/>\n              </Header>}/>)}\n      </Headers>\n      <Content theme={theme}>{children}</Content>\n    </Container>);\n}) as React.FC<ContentSwitchPropsInt>), { inner: {\n        get Container() { return Container as typeof Container; },\n        get Headers() { return Headers as typeof Headers; },\n        get Header() { return Header as typeof Header; },\n        get OverflowMenu() { return OverflowMenu as typeof OverflowMenu; },\n        get Content() { return Content as typeof Content; }\n    } });\nexport interface ResponsiveContentSwitchProps extends React.FC<ContentSwitchPropsInt> {\n    (props: ContentSwitchPropsInt & {\n        children?: React.ReactNode;\n    }, context?: any): JSX.Element;\n}\nexport const ResponsiveSwitchPanel: ResponsiveContentSwitchProps = withResponsive(ContentSwitchInt) as any;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}