{"ast":null,"code":"import pdfjs from '@bundled-es-modules/pdfjs-dist';\nimport React, { useRef, useImperativeHandle, useState, useEffect } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nvar Pdf = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var file = _ref.file,\n      onDocumentLoadSuccess = _ref.onDocumentLoadSuccess,\n      onDocumentLoadFail = _ref.onDocumentLoadFail,\n      onPageLoadSuccess = _ref.onPageLoadSuccess,\n      onPageLoadFail = _ref.onPageLoadFail,\n      onPageRenderSuccess = _ref.onPageRenderSuccess,\n      onPageRenderFail = _ref.onPageRenderFail,\n      page = _ref.page,\n      scale = _ref.scale,\n      rotate = _ref.rotate,\n      cMapUrl = _ref.cMapUrl,\n      cMapPacked = _ref.cMapPacked,\n      workerSrc = _ref.workerSrc,\n      withCredentials = _ref.withCredentials,\n      children = _ref.children,\n      canvasProps = _objectWithoutPropertiesLoose(_ref, [\"file\", \"onDocumentLoadSuccess\", \"onDocumentLoadFail\", \"onPageLoadSuccess\", \"onPageLoadFail\", \"onPageRenderSuccess\", \"onPageRenderFail\", \"page\", \"scale\", \"rotate\", \"cMapUrl\", \"cMapPacked\", \"workerSrc\", \"withCredentials\", \"children\"]);\n\n  var canvasRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return canvasRef.current;\n  });\n  var pdfData = usePdf({\n    canvasRef: canvasRef,\n    file: file,\n    onDocumentLoadSuccess: onDocumentLoadSuccess,\n    onDocumentLoadFail: onDocumentLoadFail,\n    onPageLoadSuccess: onPageLoadSuccess,\n    onPageLoadFail: onPageLoadFail,\n    onPageRenderSuccess: onPageRenderSuccess,\n    onPageRenderFail: onPageRenderFail,\n    page: page,\n    scale: scale,\n    rotate: rotate,\n    cMapUrl: cMapUrl,\n    cMapPacked: cMapPacked,\n    workerSrc: workerSrc,\n    withCredentials: withCredentials\n  });\n  var canvas = React.createElement(\"canvas\", Object.assign({}, canvasProps, {\n    ref: canvasRef\n  }));\n\n  if (isFunction(children)) {\n    return children(_extends({\n      canvas: canvas\n    }, pdfData));\n  }\n\n  return canvas;\n});\n\nvar usePdf = function usePdf(_ref2) {\n  var canvasRef = _ref2.canvasRef,\n      file = _ref2.file,\n      onDocumentLoadSuccess = _ref2.onDocumentLoadSuccess,\n      onDocumentLoadFail = _ref2.onDocumentLoadFail,\n      onPageLoadSuccess = _ref2.onPageLoadSuccess,\n      onPageLoadFail = _ref2.onPageLoadFail,\n      onPageRenderSuccess = _ref2.onPageRenderSuccess,\n      onPageRenderFail = _ref2.onPageRenderFail,\n      _ref2$scale = _ref2.scale,\n      scale = _ref2$scale === void 0 ? 1 : _ref2$scale,\n      _ref2$rotate = _ref2.rotate,\n      rotate = _ref2$rotate === void 0 ? 0 : _ref2$rotate,\n      _ref2$page = _ref2.page,\n      page = _ref2$page === void 0 ? 1 : _ref2$page,\n      cMapUrl = _ref2.cMapUrl,\n      cMapPacked = _ref2.cMapPacked,\n      _ref2$workerSrc = _ref2.workerSrc,\n      workerSrc = _ref2$workerSrc === void 0 ? \"//cdnjs.cloudflare.com/ajax/libs/pdf.js/\" + pdfjs.version + \"/pdf.worker.js\" : _ref2$workerSrc,\n      _ref2$withCredentials = _ref2.withCredentials,\n      withCredentials = _ref2$withCredentials === void 0 ? false : _ref2$withCredentials;\n\n  var _useState = useState(),\n      pdfDocument = _useState[0],\n      setPdfDocument = _useState[1];\n\n  var _useState2 = useState(),\n      pdfPage = _useState2[0],\n      setPdfPage = _useState2[1];\n\n  var renderTask = useRef(null);\n  var onDocumentLoadSuccessRef = useRef(onDocumentLoadSuccess);\n  var onDocumentLoadFailRef = useRef(onDocumentLoadFail);\n  var onPageLoadSuccessRef = useRef(onPageLoadSuccess);\n  var onPageLoadFailRef = useRef(onPageLoadFail);\n  var onPageRenderSuccessRef = useRef(onPageRenderSuccess);\n  var onPageRenderFailRef = useRef(onPageRenderFail); // assign callbacks to refs to avoid redrawing\n\n  useEffect(function () {\n    onDocumentLoadSuccessRef.current = onDocumentLoadSuccess;\n  }, [onDocumentLoadSuccess]);\n  useEffect(function () {\n    onDocumentLoadFailRef.current = onDocumentLoadFail;\n  }, [onDocumentLoadFail]);\n  useEffect(function () {\n    onPageLoadSuccessRef.current = onPageLoadSuccess;\n  }, [onPageLoadSuccess]);\n  useEffect(function () {\n    onPageLoadFailRef.current = onPageLoadFail;\n  }, [onPageLoadFail]);\n  useEffect(function () {\n    onPageRenderSuccessRef.current = onPageRenderSuccess;\n  }, [onPageRenderSuccess]);\n  useEffect(function () {\n    onPageRenderFailRef.current = onPageRenderFail;\n  }, [onPageRenderFail]);\n  useEffect(function () {\n    pdfjs.GlobalWorkerOptions.workerSrc = workerSrc;\n  }, [workerSrc]);\n  useEffect(function () {\n    var config = {\n      url: file,\n      withCredentials: withCredentials\n    };\n\n    if (cMapUrl) {\n      config.cMapUrl = cMapUrl;\n      config.cMapPacked = cMapPacked;\n    }\n\n    pdfjs.getDocument(config).promise.then(function (loadedPdfDocument) {\n      setPdfDocument(loadedPdfDocument);\n\n      if (isFunction(onDocumentLoadSuccessRef.current)) {\n        onDocumentLoadSuccessRef.current(loadedPdfDocument);\n      }\n    }, function () {\n      if (isFunction(onDocumentLoadFailRef.current)) {\n        onDocumentLoadFailRef.current();\n      }\n    });\n  }, [file, withCredentials, cMapUrl, cMapPacked]);\n  useEffect(function () {\n    // draw a page of the pdf\n    var drawPDF = function drawPDF(page) {\n      // Because this page's rotation option overwrites pdf default rotation value,\n      // calculating page rotation option value from pdf default and this component prop rotate.\n      var rotation = rotate === 0 ? page.rotate : page.rotate + rotate;\n      var dpRatio = window.devicePixelRatio;\n      var adjustedScale = scale * dpRatio;\n      var viewport = page.getViewport({\n        scale: adjustedScale,\n        rotation: rotation\n      });\n      var canvasEl = canvasRef.current;\n\n      if (!canvasEl) {\n        return;\n      }\n\n      var canvasContext = canvasEl.getContext('2d');\n\n      if (!canvasContext) {\n        return;\n      }\n\n      canvasEl.style.width = viewport.width / dpRatio + \"px\";\n      canvasEl.style.height = viewport.height / dpRatio + \"px\";\n      canvasEl.height = viewport.height;\n      canvasEl.width = viewport.width; // if previous render isn't done yet, we cancel it\n\n      if (renderTask.current) {\n        renderTask.current.cancel();\n        return;\n      }\n\n      renderTask.current = page.render({\n        canvasContext: canvasContext,\n        viewport: viewport\n      });\n      return renderTask.current.promise.then(function () {\n        renderTask.current = null;\n\n        if (isFunction(onPageRenderSuccessRef.current)) {\n          onPageRenderSuccessRef.current(page);\n        }\n      }, function (err) {\n        renderTask.current = null; // @ts-ignore typings are outdated\n\n        if (err && err.name === 'RenderingCancelledException') {\n          drawPDF(page);\n        } else if (isFunction(onPageRenderFailRef.current)) {\n          onPageRenderFailRef.current();\n        }\n      });\n    };\n\n    if (pdfDocument) {\n      pdfDocument.getPage(page).then(function (loadedPdfPage) {\n        setPdfPage(loadedPdfPage);\n\n        if (isFunction(onPageLoadSuccessRef.current)) {\n          onPageLoadSuccessRef.current(loadedPdfPage);\n        }\n\n        drawPDF(loadedPdfPage);\n      }, function () {\n        if (isFunction(onPageLoadFailRef.current)) {\n          onPageLoadFailRef.current();\n        }\n      });\n    }\n  }, [canvasRef, page, pdfDocument, rotate, scale]);\n  return {\n    pdfDocument: pdfDocument,\n    pdfPage: pdfPage\n  };\n};\n\nexport default Pdf;\nexport { usePdf };","map":{"version":3,"sources":["../src/index.tsx"],"names":["Pdf","React","file","onDocumentLoadSuccess","onDocumentLoadFail","onPageLoadSuccess","onPageLoadFail","onPageRenderSuccess","onPageRenderFail","page","scale","rotate","cMapUrl","cMapPacked","workerSrc","withCredentials","children","canvasProps","canvasRef","useRef","useImperativeHandle","pdfData","usePdf","canvas","ref","isFunction","pdfjs","version","pdfDocument","setPdfDocument","useState","pdfPage","setPdfPage","renderTask","onDocumentLoadSuccessRef","onDocumentLoadFailRef","onPageLoadSuccessRef","onPageLoadFailRef","onPageRenderSuccessRef","onPageRenderFailRef","useEffect","config","url","drawPDF","rotation","dpRatio","window","adjustedScale","viewport","canvasEl","canvasContext","err"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,SAAA,UAAA,CAAA,KAAA,EAAA;AACE,SAAO,OAAA,KAAA,KAAP,UAAA;AACD;;AAWD,IAAMA,GAAG,GAAA,aAAGC,KAAK,CAALA,UAAAA,CACV,UAAA,IAAA,EAAA,GAAA,EAAA;MAEIC,IAAAA,GAAAA,IAAAA,CAAAA,I;MACAC,qBAAAA,GAAAA,IAAAA,CAAAA,qB;MACAC,kBAAAA,GAAAA,IAAAA,CAAAA,kB;MACAC,iBAAAA,GAAAA,IAAAA,CAAAA,iB;MACAC,cAAAA,GAAAA,IAAAA,CAAAA,c;MACAC,mBAAAA,GAAAA,IAAAA,CAAAA,mB;MACAC,gBAAAA,GAAAA,IAAAA,CAAAA,gB;MACAC,IAAAA,GAAAA,IAAAA,CAAAA,I;MACAC,KAAAA,GAAAA,IAAAA,CAAAA,K;MACAC,MAAAA,GAAAA,IAAAA,CAAAA,M;MACAC,OAAAA,GAAAA,IAAAA,CAAAA,O;MACAC,UAAAA,GAAAA,IAAAA,CAAAA,U;MACAC,SAAAA,GAAAA,IAAAA,CAAAA,S;MACAC,eAAAA,GAAAA,IAAAA,CAAAA,e;MACAC,QAAAA,GAAAA,IAAAA,CAAAA,Q;MACGC,WAAAA,GAAAA,6BAAAA,CAAAA,IAAAA,EAAAA,CAAAA,MAAAA,EAAAA,uBAAAA,EAAAA,oBAAAA,EAAAA,mBAAAA,EAAAA,gBAAAA,EAAAA,qBAAAA,EAAAA,kBAAAA,EAAAA,MAAAA,EAAAA,OAAAA,EAAAA,QAAAA,EAAAA,SAAAA,EAAAA,YAAAA,EAAAA,WAAAA,EAAAA,iBAAAA,EAAAA,UAAAA,CAAAA,C;;AAIL,MAAMC,SAAS,GAAGC,MAAM,CAAxB,IAAwB,CAAxB;AACAC,EAAAA,mBAAmB,CAAA,GAAA,EAAM,YAAA;AAAA,WAAMF,SAAS,CAAf,OAAA;AAAzBE,GAAmB,CAAnBA;AAEA,MAAMC,OAAO,GAAGC,MAAM,CAAC;AACrBJ,IAAAA,SAAS,EADY,SAAA;AAErBhB,IAAAA,IAAI,EAFiB,IAAA;AAGrBC,IAAAA,qBAAqB,EAHA,qBAAA;AAIrBC,IAAAA,kBAAkB,EAJG,kBAAA;AAKrBC,IAAAA,iBAAiB,EALI,iBAAA;AAMrBC,IAAAA,cAAc,EANO,cAAA;AAOrBC,IAAAA,mBAAmB,EAPE,mBAAA;AAQrBC,IAAAA,gBAAgB,EARK,gBAAA;AASrBC,IAAAA,IAAI,EATiB,IAAA;AAUrBC,IAAAA,KAAK,EAVgB,KAAA;AAWrBC,IAAAA,MAAM,EAXe,MAAA;AAYrBC,IAAAA,OAAO,EAZc,OAAA;AAarBC,IAAAA,UAAU,EAbW,UAAA;AAcrBC,IAAAA,SAAS,EAdY,SAAA;AAerBC,IAAAA,eAAe,EAAfA;AAfqB,GAAD,CAAtB;AAkBA,MAAMQ,MAAM,GAAG,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAYN,WAAZ,EAAYA;AAAaO,IAAAA,GAAG,EAAEN;AAAlBD,GAAZ,CAAA,CAAf;;AAEA,MAAIQ,UAAU,CAAd,QAAc,CAAd,EAA0B;AACxB,WAAOT,QAAQ,CAAA,QAAA,CAAA;AAAGO,MAAAA,MAAM,EAANA;AAAH,KAAA,EAAf,OAAe,CAAA,CAAf;AACD;;AAED,SAAA,MAAA;AAjDJ,CAAYtB,CAAZ;;IA4EaqB,MAAM,GAAG,SAATA,MAAS,CAAA,KAAA,EAAA;MACpBJ,SAAAA,GAAAA,KAAAA,CAAAA,S;MACAhB,IAAAA,GAAAA,KAAAA,CAAAA,I;MACAC,qBAAAA,GAAAA,KAAAA,CAAAA,qB;MACAC,kBAAAA,GAAAA,KAAAA,CAAAA,kB;MACAC,iBAAAA,GAAAA,KAAAA,CAAAA,iB;MACAC,cAAAA,GAAAA,KAAAA,CAAAA,c;MACAC,mBAAAA,GAAAA,KAAAA,CAAAA,mB;MACAC,gBAAAA,GAAAA,KAAAA,CAAAA,gB;0BACAE,K;MAAAA,KAAAA,GAAAA,WAAAA,KAAAA,KAAAA,CAAAA,GAAQ,CAARA,GAAQ,W;2BACRC,M;MAAAA,MAAAA,GAAAA,YAAAA,KAAAA,KAAAA,CAAAA,GAAS,CAATA,GAAS,Y;yBACTF,I;MAAAA,IAAAA,GAAAA,UAAAA,KAAAA,KAAAA,CAAAA,GAAO,CAAPA,GAAO,U;MACPG,OAAAA,GAAAA,KAAAA,CAAAA,O;MACAC,UAAAA,GAAAA,KAAAA,CAAAA,U;8BACAC,S;MAAAA,SAAAA,GAAAA,eAAAA,KAAAA,KAAAA,CAAAA,GAAAA,6CAAuDY,KAAK,CAACC,OAA7Db,GAA6Da,gBAA7Db,GAA6Da,e;oCAC7DZ,e;MAAAA,eAAAA,GAAAA,qBAAAA,KAAAA,KAAAA,CAAAA,GAAkB,KAAlBA,GAAkB,qB;;kBAEoBe,QAAQ,E;MAAvCF,WAAAA,GAAAA,SAAAA,CAAAA,CAAAA,C;MAAaC,cAAAA,GAAAA,SAAAA,CAAAA,CAAAA,C;;mBACUC,QAAQ,E;MAA/BC,OAAAA,GAAAA,UAAAA,CAAAA,CAAAA,C;MAASC,UAAAA,GAAAA,UAAAA,CAAAA,CAAAA,C;;AAChB,MAAMC,UAAU,GAAGd,MAAM,CAAzB,IAAyB,CAAzB;AACA,MAAMe,wBAAwB,GAAGf,MAAM,CAAvC,qBAAuC,CAAvC;AACA,MAAMgB,qBAAqB,GAAGhB,MAAM,CAApC,kBAAoC,CAApC;AACA,MAAMiB,oBAAoB,GAAGjB,MAAM,CAAnC,iBAAmC,CAAnC;AACA,MAAMkB,iBAAiB,GAAGlB,MAAM,CAAhC,cAAgC,CAAhC;AACA,MAAMmB,sBAAsB,GAAGnB,MAAM,CAArC,mBAAqC,CAArC;AACA,MAAMoB,mBAAmB,GAAGpB,MAAM,CAAlC,gBAAkC,CAAlC,CAzBoB,CAyBpB;;AAGAqB,EAAAA,SAAS,CAAC,YAAA;AACRN,IAAAA,wBAAwB,CAAxBA,OAAAA,GAAAA,qBAAAA;AADO,GAAA,EAEN,CAFHM,qBAEG,CAFM,CAATA;AAIAA,EAAAA,SAAS,CAAC,YAAA;AACRL,IAAAA,qBAAqB,CAArBA,OAAAA,GAAAA,kBAAAA;AADO,GAAA,EAEN,CAFHK,kBAEG,CAFM,CAATA;AAIAA,EAAAA,SAAS,CAAC,YAAA;AACRJ,IAAAA,oBAAoB,CAApBA,OAAAA,GAAAA,iBAAAA;AADO,GAAA,EAEN,CAFHI,iBAEG,CAFM,CAATA;AAIAA,EAAAA,SAAS,CAAC,YAAA;AACRH,IAAAA,iBAAiB,CAAjBA,OAAAA,GAAAA,cAAAA;AADO,GAAA,EAEN,CAFHG,cAEG,CAFM,CAATA;AAIAA,EAAAA,SAAS,CAAC,YAAA;AACRF,IAAAA,sBAAsB,CAAtBA,OAAAA,GAAAA,mBAAAA;AADO,GAAA,EAEN,CAFHE,mBAEG,CAFM,CAATA;AAIAA,EAAAA,SAAS,CAAC,YAAA;AACRD,IAAAA,mBAAmB,CAAnBA,OAAAA,GAAAA,gBAAAA;AADO,GAAA,EAEN,CAFHC,gBAEG,CAFM,CAATA;AAIAA,EAAAA,SAAS,CAAC,YAAA;AACRd,IAAAA,KAAK,CAALA,mBAAAA,CAAAA,SAAAA,GAAAA,SAAAA;AADO,GAAA,EAEN,CAFHc,SAEG,CAFM,CAATA;AAIAA,EAAAA,SAAS,CAAC,YAAA;AACR,QAAMC,MAAM,GAAoB;AAAEC,MAAAA,GAAG,EAAL,IAAA;AAAa3B,MAAAA,eAAe,EAAfA;AAAb,KAAhC;;AACA,QAAA,OAAA,EAAa;AACX0B,MAAAA,MAAM,CAANA,OAAAA,GAAAA,OAAAA;AACAA,MAAAA,MAAM,CAANA,UAAAA,GAAAA,UAAAA;AACD;;AACDf,IAAAA,KAAK,CAALA,WAAAA,CAAAA,MAAAA,EAAAA,OAAAA,CAAAA,IAAAA,CACE,UAAA,iBAAA,EAAiB;AACfG,MAAAA,cAAc,CAAdA,iBAAc,CAAdA;;AAEA,UAAIJ,UAAU,CAACS,wBAAwB,CAAvC,OAAc,CAAd,EAAkD;AAChDA,QAAAA,wBAAwB,CAAxBA,OAAAA,CAAAA,iBAAAA;AACD;AANLR,KAAAA,EAQE,YAAA;AACE,UAAID,UAAU,CAACU,qBAAqB,CAApC,OAAc,CAAd,EAA+C;AAC7CA,QAAAA,qBAAqB,CAArBA,OAAAA;AACD;AAXLT,KAAAA;AANO,GAAA,EAoBN,CAAA,IAAA,EAAA,eAAA,EAAA,OAAA,EApBHc,UAoBG,CApBM,CAATA;AAsBAA,EAAAA,SAAS,CAAC,YAAA;AACR;AACA,QAAMG,OAAO,GAAG,SAAVA,OAAU,CAAA,IAAA,EAAA;AACd;AACA;AACA,UAAMC,QAAQ,GAAGjC,MAAM,KAANA,CAAAA,GAAeF,IAAI,CAAnBE,MAAAA,GAA6BF,IAAI,CAAJA,MAAAA,GAA9C,MAAA;AACA,UAAMoC,OAAO,GAAGC,MAAM,CAAtB,gBAAA;AACA,UAAMC,aAAa,GAAGrC,KAAK,GAA3B,OAAA;AACA,UAAMsC,QAAQ,GAAG,IAAI,CAAJ,WAAA,CAAiB;AAAEtC,QAAAA,KAAK,EAAP,aAAA;AAAwBkC,QAAAA,QAAQ,EAARA;AAAxB,OAAjB,CAAjB;AACA,UAAMK,QAAQ,GAAG/B,SAAS,CAA1B,OAAA;;AACA,UAAI,CAAJ,QAAA,EAAe;AACb;AACD;;AAED,UAAMgC,aAAa,GAAGD,QAAQ,CAARA,UAAAA,CAAtB,IAAsBA,CAAtB;;AACA,UAAI,CAAJ,aAAA,EAAoB;AAClB;AACD;;AAEDA,MAAAA,QAAQ,CAARA,KAAAA,CAAAA,KAAAA,GAA0BD,QAAQ,CAARA,KAAAA,GAA1BC,OAA0BD,GAA1BC,IAAAA;AACAA,MAAAA,QAAQ,CAARA,KAAAA,CAAAA,MAAAA,GAA2BD,QAAQ,CAARA,MAAAA,GAA3BC,OAA2BD,GAA3BC,IAAAA;AACAA,MAAAA,QAAQ,CAARA,MAAAA,GAAkBD,QAAQ,CAA1BC,MAAAA;AACAA,MAAAA,QAAQ,CAARA,KAAAA,GAAiBD,QAAQ,CAAzBC,KAAAA,CApBc,CAoBdA;;AAGA,UAAIhB,UAAU,CAAd,OAAA,EAAwB;AACtBA,QAAAA,UAAU,CAAVA,OAAAA,CAAAA,MAAAA;AACA;AACD;;AAEDA,MAAAA,UAAU,CAAVA,OAAAA,GAAqB,IAAI,CAAJ,MAAA,CAAY;AAC/BiB,QAAAA,aAAa,EADkB,aAAA;AAE/BF,QAAAA,QAAQ,EAARA;AAF+B,OAAZ,CAArBf;AAKA,aAAO,UAAU,CAAV,OAAA,CAAA,OAAA,CAAA,IAAA,CACL,YAAA;AACEA,QAAAA,UAAU,CAAVA,OAAAA,GAAAA,IAAAA;;AAEA,YAAIR,UAAU,CAACa,sBAAsB,CAArC,OAAc,CAAd,EAAgD;AAC9CA,UAAAA,sBAAsB,CAAtBA,OAAAA,CAAAA,IAAAA;AACD;AANE,OAAA,EAQL,UAAA,GAAA,EAAG;AACDL,QAAAA,UAAU,CAAVA,OAAAA,GAAAA,IAAAA,CADC,CACDA;;AAGA,YAAIkB,GAAG,IAAIA,GAAG,CAAHA,IAAAA,KAAX,6BAAA,EAAuD;AACrDR,UAAAA,OAAO,CAAPA,IAAO,CAAPA;AADF,SAAA,MAEO,IAAIlB,UAAU,CAACc,mBAAmB,CAAlC,OAAc,CAAd,EAA6C;AAClDA,UAAAA,mBAAmB,CAAnBA,OAAAA;AACD;AAhBL,OAAO,CAAP;AAjCF,KAAA;;AAsDA,QAAA,WAAA,EAAiB;AACfX,MAAAA,WAAW,CAAXA,OAAAA,CAAAA,IAAAA,EAAAA,IAAAA,CACE,UAAA,aAAA,EAAa;AACXI,QAAAA,UAAU,CAAVA,aAAU,CAAVA;;AAEA,YAAIP,UAAU,CAACW,oBAAoB,CAAnC,OAAc,CAAd,EAA8C;AAC5CA,UAAAA,oBAAoB,CAApBA,OAAAA,CAAAA,aAAAA;AACD;;AAEDO,QAAAA,OAAO,CAAPA,aAAO,CAAPA;AARJf,OAAAA,EAUE,YAAA;AACE,YAAIH,UAAU,CAACY,iBAAiB,CAAhC,OAAc,CAAd,EAA2C;AACzCA,UAAAA,iBAAiB,CAAjBA,OAAAA;AACD;AAbLT,OAAAA;AAgBD;AAzEM,GAAA,EA0EN,CAAA,SAAA,EAAA,IAAA,EAAA,WAAA,EAAA,MAAA,EA1EHY,KA0EG,CA1EM,CAATA;AA4EA,SAAO;AAAEZ,IAAAA,WAAW,EAAb,WAAA;AAAeG,IAAAA,OAAO,EAAPA;AAAf,GAAP;AACD,C","sourcesContent":["import pdfjs from '@bundled-es-modules/pdfjs-dist';\r\nimport React, { useState, useEffect, useRef, useImperativeHandle } from 'react';\r\n\r\nfunction isFunction(value: any): value is Function {\r\n  return typeof value === 'function';\r\n}\r\n\r\ntype ComponentRenderProps = HookReturnValues & {\r\n  canvas: React.ReactElement;\r\n};\r\n\r\ntype ComponentProps = Omit<HookProps, 'canvasRef'> &\r\n  React.CanvasHTMLAttributes<HTMLCanvasElement> & {\r\n    children?: (renderProps: ComponentRenderProps) => React.ReactElement;\r\n  };\r\n\r\nconst Pdf = React.forwardRef<HTMLCanvasElement | null, ComponentProps>(\r\n  (\r\n    {\r\n      file,\r\n      onDocumentLoadSuccess,\r\n      onDocumentLoadFail,\r\n      onPageLoadSuccess,\r\n      onPageLoadFail,\r\n      onPageRenderSuccess,\r\n      onPageRenderFail,\r\n      page,\r\n      scale,\r\n      rotate,\r\n      cMapUrl,\r\n      cMapPacked,\r\n      workerSrc,\r\n      withCredentials,\r\n      children,\r\n      ...canvasProps\r\n    },\r\n    ref\r\n  ) => {\r\n    const canvasRef = useRef<HTMLCanvasElement>(null);\r\n    useImperativeHandle(ref, () => canvasRef.current);\r\n\r\n    const pdfData = usePdf({\r\n      canvasRef,\r\n      file,\r\n      onDocumentLoadSuccess,\r\n      onDocumentLoadFail,\r\n      onPageLoadSuccess,\r\n      onPageLoadFail,\r\n      onPageRenderSuccess,\r\n      onPageRenderFail,\r\n      page,\r\n      scale,\r\n      rotate,\r\n      cMapUrl,\r\n      cMapPacked,\r\n      workerSrc,\r\n      withCredentials,\r\n    });\r\n\r\n    const canvas = <canvas {...canvasProps} ref={canvasRef} />;\r\n\r\n    if (isFunction(children)) {\r\n      return children({ canvas, ...pdfData });\r\n    }\r\n\r\n    return canvas;\r\n  }\r\n);\r\n\r\ntype HookProps = {\r\n  canvasRef: React.RefObject<HTMLCanvasElement | null>;\r\n  file: string;\r\n  onDocumentLoadSuccess?: (document: pdfjs.PDFDocumentProxy) => void;\r\n  onDocumentLoadFail?: () => void;\r\n  onPageLoadSuccess?: (page: pdfjs.PDFPageProxy) => void;\r\n  onPageLoadFail?: () => void;\r\n  onPageRenderSuccess?: (page: pdfjs.PDFPageProxy) => void;\r\n  onPageRenderFail?: () => void;\r\n  scale?: number;\r\n  rotate?: number;\r\n  page?: number;\r\n  cMapUrl?: string;\r\n  cMapPacked?: boolean;\r\n  workerSrc?: string;\r\n  withCredentials?: boolean;\r\n};\r\n\r\ntype HookReturnValues = {\r\n  pdfDocument: pdfjs.PDFDocumentProxy | undefined;\r\n  pdfPage: pdfjs.PDFPageProxy | undefined;\r\n};\r\n\r\nexport const usePdf = ({\r\n  canvasRef,\r\n  file,\r\n  onDocumentLoadSuccess,\r\n  onDocumentLoadFail,\r\n  onPageLoadSuccess,\r\n  onPageLoadFail,\r\n  onPageRenderSuccess,\r\n  onPageRenderFail,\r\n  scale = 1,\r\n  rotate = 0,\r\n  page = 1,\r\n  cMapUrl,\r\n  cMapPacked,\r\n  workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`,\r\n  withCredentials = false,\r\n}: HookProps): HookReturnValues => {\r\n  const [pdfDocument, setPdfDocument] = useState<pdfjs.PDFDocumentProxy>();\r\n  const [pdfPage, setPdfPage] = useState<pdfjs.PDFPageProxy>();\r\n  const renderTask = useRef<pdfjs.PDFRenderTask | null>(null);\r\n  const onDocumentLoadSuccessRef = useRef(onDocumentLoadSuccess);\r\n  const onDocumentLoadFailRef = useRef(onDocumentLoadFail);\r\n  const onPageLoadSuccessRef = useRef(onPageLoadSuccess);\r\n  const onPageLoadFailRef = useRef(onPageLoadFail);\r\n  const onPageRenderSuccessRef = useRef(onPageRenderSuccess);\r\n  const onPageRenderFailRef = useRef(onPageRenderFail);\r\n\r\n  // assign callbacks to refs to avoid redrawing\r\n  useEffect(() => {\r\n    onDocumentLoadSuccessRef.current = onDocumentLoadSuccess;\r\n  }, [onDocumentLoadSuccess]);\r\n\r\n  useEffect(() => {\r\n    onDocumentLoadFailRef.current = onDocumentLoadFail;\r\n  }, [onDocumentLoadFail]);\r\n\r\n  useEffect(() => {\r\n    onPageLoadSuccessRef.current = onPageLoadSuccess;\r\n  }, [onPageLoadSuccess]);\r\n\r\n  useEffect(() => {\r\n    onPageLoadFailRef.current = onPageLoadFail;\r\n  }, [onPageLoadFail]);\r\n\r\n  useEffect(() => {\r\n    onPageRenderSuccessRef.current = onPageRenderSuccess;\r\n  }, [onPageRenderSuccess]);\r\n\r\n  useEffect(() => {\r\n    onPageRenderFailRef.current = onPageRenderFail;\r\n  }, [onPageRenderFail]);\r\n\r\n  useEffect(() => {\r\n    pdfjs.GlobalWorkerOptions.workerSrc = workerSrc;\r\n  }, [workerSrc]);\r\n\r\n  useEffect(() => {\r\n    const config: pdfjs.PDFSource = { url: file, withCredentials };\r\n    if (cMapUrl) {\r\n      config.cMapUrl = cMapUrl;\r\n      config.cMapPacked = cMapPacked;\r\n    }\r\n    pdfjs.getDocument(config).promise.then(\r\n      loadedPdfDocument => {\r\n        setPdfDocument(loadedPdfDocument);\r\n\r\n        if (isFunction(onDocumentLoadSuccessRef.current)) {\r\n          onDocumentLoadSuccessRef.current(loadedPdfDocument);\r\n        }\r\n      },\r\n      () => {\r\n        if (isFunction(onDocumentLoadFailRef.current)) {\r\n          onDocumentLoadFailRef.current();\r\n        }\r\n      }\r\n    );\r\n  }, [file, withCredentials, cMapUrl, cMapPacked]);\r\n\r\n  useEffect(() => {\r\n    // draw a page of the pdf\r\n    const drawPDF = (page: pdfjs.PDFPageProxy) => {\r\n      // Because this page's rotation option overwrites pdf default rotation value,\r\n      // calculating page rotation option value from pdf default and this component prop rotate.\r\n      const rotation = rotate === 0 ? page.rotate : page.rotate + rotate;\r\n      const dpRatio = window.devicePixelRatio;\r\n      const adjustedScale = scale * dpRatio;\r\n      const viewport = page.getViewport({ scale: adjustedScale, rotation });\r\n      const canvasEl = canvasRef.current;\r\n      if (!canvasEl) {\r\n        return;\r\n      }\r\n\r\n      const canvasContext = canvasEl.getContext('2d');\r\n      if (!canvasContext) {\r\n        return;\r\n      }\r\n\r\n      canvasEl.style.width = `${viewport.width / dpRatio}px`;\r\n      canvasEl.style.height = `${viewport.height / dpRatio}px`;\r\n      canvasEl.height = viewport.height;\r\n      canvasEl.width = viewport.width;\r\n\r\n      // if previous render isn't done yet, we cancel it\r\n      if (renderTask.current) {\r\n        renderTask.current.cancel();\r\n        return;\r\n      }\r\n\r\n      renderTask.current = page.render({\r\n        canvasContext,\r\n        viewport,\r\n      });\r\n\r\n      return renderTask.current.promise.then(\r\n        () => {\r\n          renderTask.current = null;\r\n\r\n          if (isFunction(onPageRenderSuccessRef.current)) {\r\n            onPageRenderSuccessRef.current(page);\r\n          }\r\n        },\r\n        err => {\r\n          renderTask.current = null;\r\n\r\n          // @ts-ignore typings are outdated\r\n          if (err && err.name === 'RenderingCancelledException') {\r\n            drawPDF(page);\r\n          } else if (isFunction(onPageRenderFailRef.current)) {\r\n            onPageRenderFailRef.current();\r\n          }\r\n        }\r\n      );\r\n    };\r\n\r\n    if (pdfDocument) {\r\n      pdfDocument.getPage(page).then(\r\n        loadedPdfPage => {\r\n          setPdfPage(loadedPdfPage);\r\n\r\n          if (isFunction(onPageLoadSuccessRef.current)) {\r\n            onPageLoadSuccessRef.current(loadedPdfPage);\r\n          }\r\n\r\n          drawPDF(loadedPdfPage);\r\n        },\r\n        () => {\r\n          if (isFunction(onPageLoadFailRef.current)) {\r\n            onPageLoadFailRef.current();\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }, [canvasRef, page, pdfDocument, rotate, scale]);\r\n\r\n  return { pdfDocument, pdfPage };\r\n};\r\n\r\nexport default Pdf;\r\n"]},"metadata":{},"sourceType":"module"}