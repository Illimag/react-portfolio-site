{"ast":null,"code":"import * as React from 'react';\nimport styled from '../../utils/styled';\nimport { Container } from '../Container';\nimport { Icon } from '../Icon';\nimport { SelectButton } from '../SelectButton';\nimport { cyan, grey1 } from '../../colors';\nimport { distance } from '../../distance';\nimport { getFontStyle } from '../../textStyles';\nconst StyledContainer = styled(Container)`\n  width: auto;\n`;\nconst PageControlsStyled = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n`;\nconst ChangePage = styled.button`\n  ${getFontStyle({\n  size: 'xLarge'\n})}\n  position: relative;\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n  outline: none;\n  display: flex;\n  background: transparent;\n  border: none;\n  align-items: center;\n  padding: ${distance.small};\n  margin: 0 ${distance.small};\n  color: ${props => !props.disabled ? cyan : grey1};\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n    width: 1px;\n    background: #dfe3e6;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    height: 100%;\n  }\n  &:after {\n    right: 0;\n    left: auto;\n  }\n  &:last-child {\n    margin-right: 0;\n    &:after {\n      display: none;\n    }\n  }\n`;\nexport const PageControls = Object.assign(({\n  children,\n  current,\n  total,\n  changeToPrevious,\n  changeToNext,\n  changeToSelect,\n  pages\n}) => React.createElement(PageControlsStyled, null, React.createElement(StyledContainer, null, children), React.createElement(ChangePage, {\n  disabled: current <= 0,\n  onClick: changeToPrevious,\n  type: \"button\"\n}, React.createElement(Icon, {\n  name: \"KeyboardArrowLeft\"\n})), React.createElement(SelectButton, {\n  data: pages,\n  value: `${current + 1}`,\n  onChange: changeToSelect\n}), React.createElement(ChangePage, {\n  disabled: current >= total - 1,\n  onClick: changeToNext,\n  type: \"button\"\n}, React.createElement(Icon, {\n  name: \"KeyboardArrowRight\"\n}))), {\n  inner: {\n    get PageControlsStyled() {\n      return PageControlsStyled;\n    },\n\n    get StyledContainer() {\n      return StyledContainer;\n    },\n\n    get ChangePage() {\n      return ChangePage;\n    },\n\n    get Icon() {\n      return Icon;\n    },\n\n    get SelectButton() {\n      return SelectButton;\n    }\n\n  }\n});","map":{"version":3,"sources":["../../../../src/components/PaginationBar/PageControls.part.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,oBAAnB;AACA,SAAS,SAAT,QAA0B,cAA1B;AACA,SAAS,IAAT,QAAqB,SAArB;AACA,SAAS,YAAT,QAAsD,iBAAtD;AACA,SAAS,IAAT,EAAe,KAAf,QAA4B,cAA5B;AACA,SAAS,QAAT,QAAyB,gBAAzB;AACA,SAAS,YAAT,QAA6B,kBAA7B;AAYA,MAAM,eAAe,GAAG,MAAM,CAAC,SAAD,CAAY;;CAA1C;AAGA,MAAM,kBAAkB,GAAG,MAAM,CAAC,GAAI;;;;CAAtC;AAKA,MAAM,UAAU,GAAG,MAAM,CAAC,MAAwB;IAC9C,YAAY,CAAC;AAAE,EAAA,IAAI,EAAE;AAAR,CAAD,CAAoB;;YAExB,KAAK,IAAK,KAAK,CAAC,QAAN,GAAiB,aAAjB,GAAiC,SAAU;;;;;;aAMpD,QAAQ,CAAC,KAAK;cACb,QAAQ,CAAC,KAAK;WACjB,KAAK,IAAK,CAAC,KAAK,CAAC,QAAP,GAAkB,IAAlB,GAAyB,KAAM;;;;;;;;;;;;;;;;;;;;;;CAXpD;AAkCA,OAAO,MAAM,YAAY,GAAG,MAAM,CAAC,MAAP,CAAgB,CAAC;AAAE,EAAA,QAAF;AAAY,EAAA,OAAZ;AAAqB,EAAA,KAArB;AAA4B,EAAA,gBAA5B;AAA8C,EAAA,YAA9C;AAA4D,EAAA,cAA5D;AAA4E,EAAA;AAA5E,CAAD,KAA2F,KAAA,CAAA,aAAA,CAAC,kBAAD,EAAmB,IAAnB,EACnI,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB,IAAhB,EAAkB,QAAlB,CADmI,EAEnI,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AAAC,EAAA,QAAQ,EAAE,OAAO,IAAI,CAAtB;AAAyB,EAAA,OAAO,EAAE,gBAAlC;AAAoD,EAAA,IAAI,EAAC;AAAzD,CAAX,EACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,EAAA,IAAI,EAAC;AAAN,CAAL,CADF,CAFmI,EAKnI,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa;AAAC,EAAA,IAAI,EAAE,KAAP;AAAc,EAAA,KAAK,EAAE,GAAG,OAAO,GAAG,CAAC,EAAnC;AAAuC,EAAA,QAAQ,EAAE;AAAjD,CAAb,CALmI,EAMnI,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AAAC,EAAA,QAAQ,EAAE,OAAO,IAAI,KAAK,GAAG,CAA9B;AAAiC,EAAA,OAAO,EAAE,YAA1C;AAAwD,EAAA,IAAI,EAAC;AAA7D,CAAX,EACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,EAAA,IAAI,EAAC;AAAN,CAAL,CADF,CANmI,CAA3G,EASgC;AAAE,EAAA,KAAK,EAAE;AAC7D,QAAI,kBAAJ,GAAsB;AAAK,aAAO,kBAAP;AAAyD,KADvB;;AAE7D,QAAI,eAAJ,GAAmB;AAAK,aAAO,eAAP;AAAmD,KAFd;;AAG7D,QAAI,UAAJ,GAAc;AAAK,aAAO,UAAP;AAAyC,KAHC;;AAI7D,QAAI,IAAJ,GAAQ;AAAK,aAAO,IAAP;AAA6B,KAJmB;;AAK7D,QAAI,YAAJ,GAAgB;AAAK,aAAO,YAAP;AAA6C;;AALL;AAAT,CAThC,CAArB","sourcesContent":["import * as React from 'react';\nimport styled from '../../utils/styled';\nimport { Container } from '../Container';\nimport { Icon } from '../Icon';\nimport { SelectButton, SelectButtonChangeEvent } from '../SelectButton';\nimport { cyan, grey1 } from '../../colors';\nimport { distance } from '../../distance';\nimport { getFontStyle } from '../../textStyles';\nexport interface ChangePageProps {\n    disabled: boolean;\n}\nexport interface PageControlsProps {\n    current: number;\n    total: number;\n    changeToPrevious?(): void;\n    changeToNext?(): void;\n    changeToSelect?(props: SelectButtonChangeEvent): void;\n    pages: Array<string>;\n}\nconst StyledContainer = styled(Container) `\n  width: auto;\n`;\nconst PageControlsStyled = styled.div `\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n`;\nconst ChangePage = styled.button<ChangePageProps> `\n  ${getFontStyle({ size: 'xLarge' })}\n  position: relative;\n  cursor: ${props => (props.disabled ? 'not-allowed' : 'pointer')};\n  outline: none;\n  display: flex;\n  background: transparent;\n  border: none;\n  align-items: center;\n  padding: ${distance.small};\n  margin: 0 ${distance.small};\n  color: ${props => (!props.disabled ? cyan : grey1)};\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n    width: 1px;\n    background: #dfe3e6;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    height: 100%;\n  }\n  &:after {\n    right: 0;\n    left: auto;\n  }\n  &:last-child {\n    margin-right: 0;\n    &:after {\n      display: none;\n    }\n  }\n`;\nexport const PageControls = Object.assign(((({ children, current, total, changeToPrevious, changeToNext, changeToSelect, pages, }) => (<PageControlsStyled>\n    <StyledContainer>{children}</StyledContainer>\n    <ChangePage disabled={current <= 0} onClick={changeToPrevious} type=\"button\">\n      <Icon name=\"KeyboardArrowLeft\"/>\n    </ChangePage>\n    <SelectButton data={pages} value={`${current + 1}`} onChange={changeToSelect}/>\n    <ChangePage disabled={current >= total - 1} onClick={changeToNext} type=\"button\">\n      <Icon name=\"KeyboardArrowRight\"/>\n    </ChangePage>\n  </PageControlsStyled>)) as React.SFC<PageControlsProps>), { inner: {\n        get PageControlsStyled() { return PageControlsStyled as typeof PageControlsStyled; },\n        get StyledContainer() { return StyledContainer as typeof StyledContainer; },\n        get ChangePage() { return ChangePage as typeof ChangePage; },\n        get Icon() { return Icon as typeof Icon; },\n        get SelectButton() { return SelectButton as typeof SelectButton; }\n    } });\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}