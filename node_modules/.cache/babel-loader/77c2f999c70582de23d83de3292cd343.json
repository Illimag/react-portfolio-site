{"ast":null,"code":"import _classCallCheck from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  width: fit-content;\\n  display: inline-block;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport styled from '../../utils/styled';\nimport { Flyout } from '../Flyout';\nimport { tuna, white } from '../../colors';\nimport { remCalc } from '../../utils/remCalc';\nvar TooltipContainer = styled.div(_templateObject());\nexport var Tooltip = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tooltip, _React$Component);\n\n  var _super = _createSuper(Tooltip);\n\n  function Tooltip(props) {\n    var _this;\n\n    _classCallCheck(this, Tooltip);\n\n    _this = _super.call(this, props);\n\n    _this.setTargetRef = function (el) {\n      _this.targetContainer = el;\n    };\n\n    _this.onMouseOver = function () {\n      if (!_this.state.controlled) {\n        _this.setOpen(true);\n      }\n    };\n\n    _this.onMouseOut = function () {\n      if (!_this.state.controlled) {\n        _this.setOpen(false);\n      }\n    };\n\n    _this.state = {\n      controlled: props.open !== undefined,\n      open: props.open || false,\n      targetRect: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        width: 0,\n        height: 0\n      },\n      dirtyFlag: false\n    };\n    return _this;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateMeasurements();\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (this.state.controlled && nextProps.open !== undefined) {\n        this.setOpen(nextProps.open);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var dirtyFlag = this.state.dirtyFlag;\n\n      if (dirtyFlag) {\n        this.updateMeasurements();\n        this.setState({\n          dirtyFlag: false\n        });\n      }\n    }\n  }, {\n    key: \"updateMeasurements\",\n    value: function updateMeasurements() {\n      if (this.targetContainer) {\n        var targetRect = this.targetContainer.getBoundingClientRect();\n        this.setState({\n          targetRect: targetRect\n        });\n      }\n    }\n  }, {\n    key: \"setOpen\",\n    value: function setOpen(open) {\n      var onChange = this.props.onChange;\n\n      if (typeof onChange === 'function') {\n        onChange({\n          open: open\n        });\n      }\n\n      this.setState({\n        open: open,\n        dirtyFlag: open === true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          _0 = _a.open,\n          theme = _a.theme,\n          props = __rest(_a, [\"open\", \"theme\"]);\n\n      var open = this.state.open;\n      var tooltipFlyoutTheme = Object.assign({\n        flyout: {\n          background: tuna,\n          textColor: white,\n          fontSize: remCalc('14px'),\n          maxWidth: '250px'\n        }\n      }, theme);\n      return React.createElement(TooltipContainer, {\n        ref: this.setTargetRef,\n        onFocus: this.onMouseOver,\n        onBlur: this.onMouseOut,\n        onMouseOver: this.onMouseOver,\n        onMouseOut: this.onMouseOut\n      }, React.createElement(Flyout, Object.assign({}, props, {\n        open: open,\n        theme: tooltipFlyoutTheme\n      })));\n    }\n  }]);\n\n  return Tooltip;\n}(React.Component);\nTooltip.inner = {\n  get TooltipContainer() {\n    return TooltipContainer;\n  },\n\n  get Flyout() {\n    return Flyout;\n  }\n\n};","map":{"version":3,"sources":["../../../../src/components/Tooltip/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from '../../utils/styled';\nimport { TooltipProps } from './Tooltip.types.part';\nimport { Flyout } from '../Flyout';\nimport { tuna, white } from '../../colors';\nimport { remCalc } from '../../utils/remCalc';\nexport { TooltipPosition, TooltipChangeEvent, TooltipProps } from './Tooltip.types.part';\nconst TooltipContainer = styled.div `\n  position: relative;\n  width: fit-content;\n  display: inline-block;\n`;\nexport interface TooltipState {\n    controlled: boolean;\n    targetRect: ClientRect;\n    dirtyFlag: boolean;\n    open: boolean;\n}\nexport class Tooltip extends React.Component<TooltipProps, TooltipState> {\n    private targetContainer: HTMLDivElement | null;\n    constructor(props: TooltipProps) {\n        super(props);\n        this.state = {\n            controlled: props.open !== undefined,\n            open: props.open || false,\n            targetRect: { top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0 },\n            dirtyFlag: false,\n        };\n    }\n    componentDidMount() {\n        this.updateMeasurements();\n    }\n    UNSAFE_componentWillReceiveProps(nextProps: TooltipProps) {\n        if (this.state.controlled && nextProps.open !== undefined) {\n            this.setOpen(nextProps.open);\n        }\n    }\n    componentDidUpdate() {\n        const { dirtyFlag } = this.state;\n        if (dirtyFlag) {\n            this.updateMeasurements();\n            this.setState({\n                dirtyFlag: false,\n            });\n        }\n    }\n    private updateMeasurements() {\n        if (this.targetContainer) {\n            const targetRect = this.targetContainer.getBoundingClientRect();\n            this.setState({\n                targetRect,\n            });\n        }\n    }\n    private setTargetRef = (el: HTMLDivElement | null) => {\n        this.targetContainer = el;\n    };\n    private setOpen(open: boolean) {\n        const { onChange } = this.props;\n        if (typeof onChange === 'function') {\n            onChange({ open });\n        }\n        this.setState({\n            open,\n            dirtyFlag: open === true,\n        });\n    }\n    private onMouseOver = () => {\n        if (!this.state.controlled) {\n            this.setOpen(true);\n        }\n    };\n    private onMouseOut = () => {\n        if (!this.state.controlled) {\n            this.setOpen(false);\n        }\n    };\n    render() {\n        const { open: _0, theme, ...props } = this.props;\n        const { open } = this.state;\n        const tooltipFlyoutTheme = {\n            flyout: { background: tuna, textColor: white, fontSize: remCalc('14px'), maxWidth: '250px' },\n            ...theme,\n        };\n        return (<TooltipContainer ref={this.setTargetRef} onFocus={this.onMouseOver} onBlur={this.onMouseOut} onMouseOver={this.onMouseOver} onMouseOut={this.onMouseOut}>\n        <Flyout {...props} open={open} theme={tooltipFlyoutTheme}/>\n      </TooltipContainer>);\n    }\n    static inner = {\n        get TooltipContainer() { return TooltipContainer as typeof TooltipContainer; },\n        get Flyout() { return Flyout as typeof Flyout; }\n    };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}