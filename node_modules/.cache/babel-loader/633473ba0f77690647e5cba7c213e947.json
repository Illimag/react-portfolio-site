{"ast":null,"code":"import _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: \", \";\\n  color: \", \";\\n  \", \";\\n  margin-bottom: -1px;\\n  padding: \", \";\\n  position: relative;\\n  text-decoration: none;\\n\\n  &:last-child {\\n    margin-bottom: 0;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  border: 1px solid rgba(0, 0, 0, 0.125);\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport styled, { themed, css } from '../../utils/styled';\nimport { remCalc } from '../../utils/remCalc';\nvar Bordered = css(_templateObject());\nvar StyledListItem = styled('li')(_templateObject2(), themed(function (props) {\n  return props.theme.ui1;\n}), themed(function (props) {\n  return props.active ? props.theme.primary : props.theme.text6;\n}), function (props) {\n  return props.border ? Bordered : '';\n}, function (props) {\n  return props.disablePadding ? '0' : remCalc(['12', '20']);\n});\nexport var ListItem = Object.assign(function (_a) {\n  var _a$border = _a.border,\n      border = _a$border === void 0 ? true : _a$border,\n      props = __rest(_a, [\"border\"]);\n\n  return React.createElement(StyledListItem, Object.assign({}, props, {\n    border: border\n  }));\n}, {\n  inner: {\n    get StyledListItem() {\n      return StyledListItem;\n    }\n\n  }\n});\nListItem.displayName = 'ListItem';","map":{"version":3,"sources":["../../../../src/components/ListItem/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,IAAiB,MAAjB,EAAyB,GAAzB,QAAoC,oBAApC;AAEA,SAAS,OAAT,QAAwB,qBAAxB;AAmBA,IAAM,QAAQ,GAAG,GAAH,mBAAd;AAGA,IAAM,cAAc,GAAG,MAAM,CAAC,IAAD,CAAT,qBACE,MAAM,CAAC,UAAA,KAAK;AAAA,SAAI,KAAK,CAAC,KAAN,CAAY,GAAhB;AAAA,CAAN,CADR,EAET,MAAM,CAAC,UAAA,KAAK;AAAA,SAAK,KAAK,CAAC,MAAN,GAAe,KAAK,CAAC,KAAN,CAAY,OAA3B,GAAqC,KAAK,CAAC,KAAN,CAAY,KAAtD;AAAA,CAAN,CAFG,EAGhB,UAAA,KAAK;AAAA,SAAK,KAAK,CAAC,MAAN,GAAe,QAAf,GAA0B,EAA/B;AAAA,CAHW,EAKP,UAAA,KAAK;AAAA,SAAK,KAAK,CAAC,cAAN,GAAuB,GAAvB,GAA6B,OAAO,CAAC,CAAC,IAAD,EAAO,IAAP,CAAD,CAAzC;AAAA,CALE,CAApB;AAaA,OAAO,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAP,CAAgB,UAAC,EAAD,EAAgC;AAAA,kBAAhB,EAAgB,CAA7B,MAA6B;AAAA,MAA7B,MAA6B,0BAApB,IAAoB;AAAA,MAAd,KAAc,GAAd,MAAA,CAAA,EAAA,EAAA,CAAA,QAAA,CAAA,CAAc;;AAAC,SAAC,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,IAAA,MAAM,EAAE;AAAV,GAAV,CAAf,CAAD;AAA8C,CAA/F,EAA+H;AAAE,EAAA,KAAK,EAAE;AACxJ,QAAI,cAAJ,GAAkB;AAAK,aAAO,cAAP;AAAiD;;AADgF;AAAT,CAA/H,CAAjB;AAGP,QAAQ,CAAC,WAAT,GAAuB,UAAvB","sourcesContent":["import * as React from 'react';\nimport styled, { themed, css } from '../../utils/styled';\nimport { StandardProps } from '../../common';\nimport { remCalc } from '../../utils/remCalc';\nexport interface ListItemProps extends StandardProps {\n    /**\n     * Whether the button is active.\n     */\n    active?: boolean;\n    /**\n     * The content of the component.\n     */\n    children?: React.ReactNode;\n    /**\n     * If `true`, padding will be removed from the list.\n     */\n    disablePadding?: boolean;\n    /**\n     * If `true`, a border is added around the list item. Default is true.\n     */\n    border?: boolean;\n}\nconst Bordered = css `\n  border: 1px solid rgba(0, 0, 0, 0.125);\n`;\nconst StyledListItem = styled('li')<ListItemProps> `\n  background-color: ${themed(props => props.theme.ui1)};\n  color: ${themed(props => (props.active ? props.theme.primary : props.theme.text6))};\n  ${props => (props.border ? Bordered : '')};\n  margin-bottom: -1px;\n  padding: ${props => (props.disablePadding ? '0' : remCalc(['12', '20']))};\n  position: relative;\n  text-decoration: none;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\nexport const ListItem = Object.assign(((({ border = true, ...props }) => (<StyledListItem {...props} border={border}/>)) as React.SFC<ListItemProps>), { inner: {\n        get StyledListItem() { return StyledListItem as typeof StyledListItem; }\n    } });\nListItem.displayName = 'ListItem';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}