{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport * as React from 'react';\nimport memoize from 'memoize-one';\nimport styled, { themed, css } from '../../utils/styled';\nimport { sortObjectList } from '../../utils/sort';\nimport { distance } from '../../distance';\nimport { defaultCellRenderer, StyledTableHead, StyledTableHeaderRow, StyledTableHeader, StyledTableRow, StyledTableFoot, defaultBodyRenderer, getColumns, getDefaultHeaderCellRenderer, handleDataClickedEvent } from './TableShared.part';\nimport { getFontStyle } from '../../textStyles';\nconst StyledTable = styled.table(themed(({\n  theme,\n  borderless,\n  condensed\n}) => css`\n    ${getFontStyle({\n  size: 'small',\n  lineHeight: 'xSmall'\n})}\n\n    table-layout: ${theme.tableLayout};\n    border-collapse: collapse;\n    width: 100%;\n    color: ${theme.text6};\n    border: ${borderless ? 'none' : theme.tableBorder};\n\n    > thead > tr > th,\n    > tbody > tr > td {\n      padding: ${condensed ? `${distance.small} ${distance.large}` : theme.tableHeadPadding};\n\n      &:not(:last-child) {\n        padding-right: 0;\n      }\n    }\n    `));\nconst StyledTableBody = styled.tbody``;\nconst TableHost = Object.assign(_a => {\n  var {\n    head,\n    foot,\n    theme,\n    children\n  } = _a,\n      props = __rest(_a, [\"head\", \"foot\", \"theme\", \"children\"]);\n\n  return React.createElement(StyledTable, Object.assign({\n    theme: theme\n  }, props), head, React.createElement(StyledTableBody, {\n    theme: theme\n  }, children), foot);\n}, {\n  inner: {\n    get StyledTable() {\n      return StyledTable;\n    },\n\n    get StyledTableBody() {\n      return StyledTableBody;\n    }\n\n  }\n});\nconst HiddenCell = styled.td`\n  display: none;\n`;\nconst StyledTableCell = styled.td`\n  text-align: left;\n`;\nconst StyledPlaceholderCell = styled(StyledTableCell)`\n  text-align: center;\n`;\n\nfunction defaultRowKeyGetter({\n  key\n}) {\n  return key;\n}\n\nfunction normalizeSortBy(sortBy) {\n  if (!sortBy) {\n    return undefined;\n  }\n\n  if (typeof sortBy === 'string') {\n    if (sortBy[0] === '-') {\n      return {\n        columnKey: sortBy.substr(1),\n        order: 'descending'\n      };\n    } else {\n      return {\n        columnKey: sortBy,\n        order: 'ascending'\n      };\n    }\n  }\n\n  return {\n    columnKey: sortBy.columnKey,\n    order: sortBy.order || 'ascending'\n  };\n}\n\nexport class TableBasic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getIndices = memoize((data, grouping, sorting) => sorting ? sortObjectList(data, sorting.columnKey, sorting.order, grouping) : sortObjectList(data, undefined, undefined, grouping));\n\n    this.defaultHeadRenderer = ({\n      columns,\n      sortBy,\n      keys\n    }) => {\n      const {\n        onSort\n      } = this.props;\n      const defaultHeaderCellRenderer = getDefaultHeaderCellRenderer((columnKey, order) => {\n        this.setState({\n          sorting: {\n            columnKey,\n            order\n          }\n        }, () => {\n          if (typeof onSort === 'function') {\n            onSort({\n              column: keys.indexOf(columnKey),\n              key: columnKey,\n              order\n            });\n          }\n        });\n      });\n      const {\n        indexed,\n        theme,\n        headerCellRenderer = defaultHeaderCellRenderer\n      } = this.props;\n      return React.createElement(StyledTableHead, {\n        theme: theme\n      }, React.createElement(StyledTableHeaderRow, {\n        theme: theme\n      }, indexed && React.createElement(StyledTableHeader, {\n        onClick: e => this.headerClicked(e, -1, '#'),\n        theme: theme\n      }, headerCellRenderer({\n        column: -1,\n        key: '',\n        row: -1,\n        value: '#',\n        render: defaultHeaderCellRenderer\n      })), keys.map((key, cell) => {\n        const column = columns[key];\n        const hidden = typeof column !== 'string' && column.hidden;\n\n        if (!hidden) {\n          const name = typeof column === 'string' ? column : column.header;\n          const width = typeof column === 'string' ? undefined : column.width;\n          const sortable = this.isSortable(key, columns);\n          const direction = sortable && sortBy && (sortBy.columnKey !== key ? undefined : sortBy.order);\n          return React.createElement(StyledTableHeader, {\n            sortable: sortable,\n            width: width,\n            key: key,\n            onClick: e => this.headerClicked(e, cell, key),\n            theme: theme\n          }, headerCellRenderer({\n            column: cell,\n            key,\n            row: -1,\n            sorting: direction,\n            value: name,\n            render: defaultHeaderCellRenderer\n          }));\n        }\n\n        return React.createElement(HiddenCell, {\n          key: key\n        });\n      })));\n    };\n\n    this.defaultFootRenderer = ({\n      columns,\n      keys,\n      sortBy\n    }) => {\n      const {\n        indexed,\n        theme,\n        footerCellRenderer = defaultCellRenderer\n      } = this.props;\n      return React.createElement(StyledTableFoot, {\n        theme: theme\n      }, React.createElement(StyledTableRow, {\n        theme: theme\n      }, indexed && React.createElement(StyledTableCell, {\n        onClick: e => this.footerClicked(e, -1, '#'),\n        theme: theme\n      }, footerCellRenderer({\n        column: -1,\n        key: '',\n        row: -1,\n        value: '',\n        render: defaultCellRenderer\n      })), keys.map((key, i) => {\n        const column = columns[key];\n        const sortable = this.isSortable(key, columns);\n        const direction = sortable && sortBy && (sortBy.columnKey !== key ? undefined : sortBy.order);\n        const hidden = typeof column !== 'string' && column.hidden;\n\n        if (!hidden) {\n          const name = typeof column === 'string' ? undefined : column.footer;\n          return React.createElement(StyledTableCell, {\n            key: key,\n            theme: theme,\n            onClick: e => this.footerClicked(e, i, key)\n          }, footerCellRenderer({\n            column: i,\n            key,\n            row: -1,\n            value: name,\n            sorting: direction,\n            render: defaultCellRenderer\n          }));\n        }\n\n        return React.createElement(HiddenCell, {\n          key: key\n        });\n      })));\n    };\n\n    this.defaultRowRenderer = ({\n      cells,\n      index\n    }) => {\n      const {\n        theme\n      } = this.props;\n      return React.createElement(StyledTableRow, {\n        key: index,\n        theme: theme\n      }, cells);\n    };\n\n    this.state = {\n      controlledSorting: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const controlledSorting = props.sortBy !== undefined || state.controlledSorting;\n\n    if (controlledSorting) {\n      return {\n        sorting: normalizeSortBy(props.sortBy),\n        controlledSorting\n      };\n    }\n\n    return state;\n  }\n\n  isSortable(key, cols) {\n    const {\n      sortBy\n    } = this.props;\n    const col = cols[key];\n    return !sortBy && (!col || typeof col !== 'string' && col.sortable);\n  }\n\n  headerClicked(e, column, key) {\n    const {\n      onHeaderClick,\n      onSort,\n      data = [],\n      columns\n    } = this.props;\n    e.preventDefault();\n\n    if (typeof onHeaderClick === 'function') {\n      onHeaderClick({\n        column,\n        key,\n        row: -1\n      });\n    } else if (this.isSortable(key, getColumns(data, columns))) {\n      this.setState(({\n        sorting\n      }) => {\n        const isAscending = sorting && sorting.order === 'descending' && sorting.columnKey === key;\n        const order = sorting && sorting.columnKey === key ? 'descending' : 'ascending';\n        let newSortingValue = undefined;\n\n        if (!isAscending && column !== -1) {\n          newSortingValue = {\n            columnKey: key,\n            order\n          };\n        }\n\n        return {\n          sorting: newSortingValue\n        };\n      }, () => {\n        if (typeof onSort === 'function') {\n          onSort({\n            column,\n            key,\n            order: this.state.sorting && this.state.sorting.order\n          });\n        }\n      });\n    }\n  }\n\n  footerClicked(e, column, key) {\n    e.preventDefault();\n    const {\n      onFooterClick\n    } = this.props;\n\n    if (typeof onFooterClick === 'function') {\n      onFooterClick({\n        column,\n        key,\n        row: -1\n      });\n    }\n  }\n\n  renderCells(keys, rowIndex) {\n    const {\n      data = [],\n      cellRenderer = defaultCellRenderer,\n      indexed,\n      theme,\n      columns,\n      onDataClick\n    } = this.props;\n    const cols = getColumns(data, columns);\n    const row = data[rowIndex];\n    const cells = keys.map((key, cell) => {\n      const column = cols[key];\n      const hidden = typeof column !== 'string' && column.hidden;\n\n      if (!hidden) {\n        return React.createElement(StyledTableCell, {\n          key: key,\n          onClick: handleDataClickedEvent({\n            row: rowIndex,\n            column: cell,\n            key,\n            data: row\n          }, onDataClick),\n          theme: theme\n        }, cellRenderer({\n          column: cell,\n          key,\n          data: row,\n          row: rowIndex,\n          value: row[key],\n          render: defaultCellRenderer\n        }));\n      }\n\n      return React.createElement(HiddenCell, {\n        key: key\n      });\n    });\n\n    if (indexed) {\n      cells.unshift(React.createElement(StyledTableCell, {\n        key: \"index#\",\n        onClick: handleDataClickedEvent({\n          row: rowIndex,\n          column: -1,\n          key: '__indexed',\n          data: row\n        }, onDataClick),\n        theme: theme\n      }, rowIndex + 1));\n    }\n\n    return cells;\n  }\n\n  renderRows(keys) {\n    const {\n      data,\n      groupBy,\n      indexed,\n      placeholder,\n      rowRenderer = this.defaultRowRenderer,\n      getRowKey = defaultRowKeyGetter,\n      theme\n    } = this.props;\n    const indices = this.getIndices(data, groupBy, this.state.sorting);\n    const cols = keys.length + (indexed ? 1 : 0);\n    const state = {};\n\n    if (indices.length === 0) {\n      return placeholder ? [React.createElement(StyledTableRow, {\n        theme: theme,\n        key: \"placeholder\"\n      }, React.createElement(StyledPlaceholderCell, {\n        colSpan: cols,\n        theme: theme\n      }, placeholder))] : [];\n    } else {\n      return indices.map(index => {\n        const cells = this.renderCells(keys, index);\n        const renderData = {\n          theme,\n          index,\n          cells,\n          data: data[index],\n          key: index.toString(),\n          state\n        };\n        renderData.key = getRowKey(renderData);\n        return rowRenderer(renderData);\n      });\n    }\n  }\n\n  renderHead(keys) {\n    const {\n      headRenderer = this.defaultHeadRenderer,\n      groupBy,\n      data = [],\n      columns\n    } = this.props;\n    const {\n      sorting\n    } = this.state;\n    return headRenderer({\n      columns: getColumns(data, columns),\n      sortBy: sorting,\n      groupBy,\n      data,\n      keys\n    });\n  }\n\n  renderFoot(keys) {\n    const {\n      footRenderer = this.defaultFootRenderer,\n      groupBy,\n      data = [],\n      columns\n    } = this.props;\n    const {\n      sorting\n    } = this.state;\n    return footRenderer({\n      columns: getColumns(data, columns),\n      sortBy: sorting,\n      groupBy,\n      data,\n      keys\n    });\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      data = [],\n      columns,\n      noHeader,\n      theme,\n      bodyRenderer = defaultBodyRenderer,\n      cellRenderer: _1,\n      indexed: _2,\n      sortBy: _3,\n      onDataClick: _4,\n      onFooterClick: _5,\n      onHeaderClick: _6,\n      placeholder: _7,\n      columns: _8,\n      groupBy: _9,\n      headRenderer: _10,\n      footRenderer: _11,\n      headerCellRenderer: _12,\n      footerCellRenderer: _13,\n      onSort: _14\n    } = _a,\n          props = __rest(_a, [\"data\", \"columns\", \"noHeader\", \"theme\", \"bodyRenderer\", \"cellRenderer\", \"indexed\", \"sortBy\", \"onDataClick\", \"onFooterClick\", \"onHeaderClick\", \"placeholder\", \"columns\", \"groupBy\", \"headRenderer\", \"footRenderer\", \"headerCellRenderer\", \"footerCellRenderer\", \"onSort\"]);\n\n    const cols = getColumns(data, columns);\n    const keys = Object.keys(cols);\n    const showFooter = keys.filter(key => {\n      const col = cols[key];\n      return typeof col === 'object' && !!col.footer && !col.hidden;\n    }).length > 0;\n    const rows = this.renderRows(keys);\n    return bodyRenderer({\n      table: TableHost,\n      props: Object.assign({\n        theme,\n        head: !noHeader && this.renderHead(keys),\n        foot: showFooter && this.renderFoot(keys)\n      }, props),\n      rows,\n      mode: 'table'\n    });\n  }\n\n}\nTableBasic.inner = {\n  get StyledTableHead() {\n    return StyledTableHead;\n  },\n\n  get StyledTableHeaderRow() {\n    return StyledTableHeaderRow;\n  },\n\n  get StyledTableHeader() {\n    return StyledTableHeader;\n  },\n\n  get HiddenCell() {\n    return HiddenCell;\n  },\n\n  get StyledTableFoot() {\n    return StyledTableFoot;\n  },\n\n  get StyledTableRow() {\n    return StyledTableRow;\n  },\n\n  get StyledTableCell() {\n    return StyledTableCell;\n  },\n\n  get StyledPlaceholderCell() {\n    return StyledPlaceholderCell;\n  }\n\n};","map":{"version":3,"sources":["../../../../src/components/Table/TableBasic.part.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport memoize from 'memoize-one';\nimport styled, { themed, css } from '../../utils/styled';\nimport { sortObjectList } from '../../utils/sort';\nimport { distance } from '../../distance';\nimport { RefProps, StandardProps } from '../../common';\nimport { TableRowEvent, TableProps, TableSorting, TableColumns, TableSectionRenderEvent } from './Table.types.part';\nimport { defaultCellRenderer, StyledTableHead, StyledTableHeaderRow, StyledTableHeader, StyledTableRow, StyledTableFoot, defaultBodyRenderer, getColumns, getDefaultHeaderCellRenderer, handleDataClickedEvent, } from './TableShared.part';\nimport { getFontStyle } from '../../textStyles';\nexport interface TableBasicState {\n    sorting?: TableSorting;\n    controlledSorting: boolean;\n}\ninterface StyledTableProps {\n    condensed?: boolean;\n    borderless?: boolean;\n}\nconst StyledTable = styled.table<StyledTableProps>(themed(({ theme, borderless, condensed }) => css `\n    ${getFontStyle({ size: 'small', lineHeight: 'xSmall' })}\n\n    table-layout: ${theme.tableLayout};\n    border-collapse: collapse;\n    width: 100%;\n    color: ${theme.text6};\n    border: ${borderless ? 'none' : theme.tableBorder};\n\n    > thead > tr > th,\n    > tbody > tr > td {\n      padding: ${condensed ? `${distance.small} ${distance.large}` : theme.tableHeadPadding};\n\n      &:not(:last-child) {\n        padding-right: 0;\n      }\n    }\n    `));\nconst StyledTableBody = styled.tbody ``;\ninterface TableHostProps extends StandardProps {\n    head: React.ReactNode;\n    foot: React.ReactNode;\n}\nconst TableHost = Object.assign(((({ head, foot, theme, children, ...props }) => (<StyledTable theme={theme} {...props}>\n    {head}\n    <StyledTableBody theme={theme}>{children}</StyledTableBody>\n    {foot}\n  </StyledTable>)) as React.SFC<TableHostProps>), { inner: {\n        get StyledTable() { return StyledTable as typeof StyledTable; },\n        get StyledTableBody() { return StyledTableBody as typeof StyledTableBody; }\n    } });\nconst HiddenCell = styled.td `\n  display: none;\n`;\nconst StyledTableCell = styled.td `\n  text-align: left;\n`;\nconst StyledPlaceholderCell = styled(StyledTableCell) `\n  text-align: center;\n`;\nfunction defaultRowKeyGetter<T>({ key }: TableRowEvent<T>) {\n    return key;\n}\nfunction normalizeSortBy(sortBy?: TableSorting | string): TableSorting | undefined {\n    if (!sortBy) {\n        return undefined;\n    }\n    if (typeof sortBy === 'string') {\n        if (sortBy[0] === '-') {\n            return {\n                columnKey: sortBy.substr(1),\n                order: 'descending',\n            };\n        }\n        else {\n            return {\n                columnKey: sortBy,\n                order: 'ascending',\n            };\n        }\n    }\n    return {\n        columnKey: sortBy.columnKey,\n        order: sortBy.order || 'ascending',\n    };\n}\nexport class TableBasic<T> extends React.Component<TableProps<T> & RefProps, TableBasicState> {\n    constructor(props: TableProps<T> & RefProps) {\n        super(props);\n        this.state = {\n            controlledSorting: false,\n        };\n    }\n    static getDerivedStateFromProps(props: TableProps<any>, state: TableBasicState) {\n        const controlledSorting = props.sortBy !== undefined || state.controlledSorting;\n        if (controlledSorting) {\n            return {\n                sorting: normalizeSortBy(props.sortBy),\n                controlledSorting,\n            };\n        }\n        return state;\n    }\n    private getIndices = memoize((data: Array<T>, grouping?: keyof T, sorting?: TableSorting) => sorting\n        ? sortObjectList(data, sorting.columnKey as keyof T, sorting.order, grouping)\n        : sortObjectList(data, undefined, undefined, grouping));\n    private isSortable(key: string, cols: TableColumns) {\n        const { sortBy } = this.props;\n        const col = cols[key];\n        return !sortBy && (!col || (typeof col !== 'string' && col.sortable));\n    }\n    private headerClicked(e: React.MouseEvent<HTMLTableCellElement>, column: number, key: string) {\n        const { onHeaderClick, onSort, data = [], columns } = this.props;\n        e.preventDefault();\n        if (typeof onHeaderClick === 'function') {\n            onHeaderClick({\n                column,\n                key,\n                row: -1,\n            });\n        }\n        else if (this.isSortable(key, getColumns(data, columns))) {\n            this.setState(({ sorting }) => {\n                const isAscending = sorting && sorting.order === 'descending' && sorting.columnKey === key;\n                const order = sorting && sorting.columnKey === key ? 'descending' : 'ascending';\n                let newSortingValue: TableSorting | undefined = undefined;\n                if (!isAscending && column !== -1) {\n                    newSortingValue = {\n                        columnKey: key,\n                        order,\n                    };\n                }\n                return { sorting: newSortingValue };\n            }, () => {\n                if (typeof onSort === 'function') {\n                    onSort({\n                        column,\n                        key,\n                        order: this.state.sorting && this.state.sorting.order,\n                    });\n                }\n            });\n        }\n    }\n    private footerClicked(e: React.MouseEvent<HTMLTableCellElement>, column: number, key: string) {\n        e.preventDefault();\n        const { onFooterClick } = this.props;\n        if (typeof onFooterClick === 'function') {\n            onFooterClick({\n                column,\n                key,\n                row: -1,\n            });\n        }\n    }\n    private defaultHeadRenderer = ({ columns, sortBy, keys }: TableSectionRenderEvent<T>) => {\n        const { onSort } = this.props;\n        const defaultHeaderCellRenderer = getDefaultHeaderCellRenderer((columnKey, order) => {\n            this.setState({\n                sorting: {\n                    columnKey,\n                    order,\n                },\n            }, () => {\n                if (typeof onSort === 'function') {\n                    onSort({\n                        column: keys.indexOf(columnKey),\n                        key: columnKey,\n                        order,\n                    });\n                }\n            });\n        });\n        const { indexed, theme, headerCellRenderer = defaultHeaderCellRenderer } = this.props;\n        return (<StyledTableHead theme={theme}>\n        <StyledTableHeaderRow theme={theme}>\n          {indexed && (<StyledTableHeader onClick={e => this.headerClicked(e, -1, '#')} theme={theme}>\n              {headerCellRenderer({\n            column: -1,\n            key: '',\n            row: -1,\n            value: '#',\n            render: defaultHeaderCellRenderer,\n        })}\n            </StyledTableHeader>)}\n          {keys.map((key, cell) => {\n            const column = columns[key];\n            const hidden = typeof column !== 'string' && column.hidden;\n            if (!hidden) {\n                const name = typeof column === 'string' ? column : column.header;\n                const width = typeof column === 'string' ? undefined : column.width;\n                const sortable = this.isSortable(key, columns);\n                const direction = sortable && sortBy && (sortBy.columnKey !== key ? undefined : sortBy.order);\n                return (<StyledTableHeader sortable={sortable} width={width} key={key} onClick={e => this.headerClicked(e, cell, key)} theme={theme}>\n                  {headerCellRenderer({\n                    column: cell,\n                    key,\n                    row: -1,\n                    sorting: direction,\n                    value: name,\n                    render: defaultHeaderCellRenderer,\n                })}\n                </StyledTableHeader>);\n            }\n            return <HiddenCell key={key}/>;\n        })}\n        </StyledTableHeaderRow>\n      </StyledTableHead>);\n    };\n    private defaultFootRenderer = ({ columns, keys, sortBy }: TableSectionRenderEvent<T>) => {\n        const { indexed, theme, footerCellRenderer = defaultCellRenderer } = this.props;\n        return (<StyledTableFoot theme={theme}>\n        <StyledTableRow theme={theme}>\n          {indexed && (<StyledTableCell onClick={e => this.footerClicked(e, -1, '#')} theme={theme}>\n              {footerCellRenderer({\n            column: -1,\n            key: '',\n            row: -1,\n            value: '',\n            render: defaultCellRenderer,\n        })}\n            </StyledTableCell>)}\n          {keys.map((key, i) => {\n            const column = columns[key];\n            const sortable = this.isSortable(key, columns);\n            const direction = sortable && sortBy && (sortBy.columnKey !== key ? undefined : sortBy.order);\n            const hidden = typeof column !== 'string' && column.hidden;\n            if (!hidden) {\n                const name = typeof column === 'string' ? undefined : column.footer;\n                return (<StyledTableCell key={key} theme={theme} onClick={e => this.footerClicked(e, i, key)}>\n                  {footerCellRenderer({\n                    column: i,\n                    key,\n                    row: -1,\n                    value: name,\n                    sorting: direction,\n                    render: defaultCellRenderer,\n                })}\n                </StyledTableCell>);\n            }\n            return <HiddenCell key={key}/>;\n        })}\n        </StyledTableRow>\n      </StyledTableFoot>);\n    };\n    private defaultRowRenderer = ({ cells, index }: TableRowEvent<T>) => {\n        const { theme } = this.props;\n        return (<StyledTableRow key={index} theme={theme}>\n        {cells}\n      </StyledTableRow>);\n    };\n    private renderCells(keys: Array<string>, rowIndex: number) {\n        const { data = [], cellRenderer = defaultCellRenderer, indexed, theme, columns, onDataClick } = this.props;\n        const cols = getColumns(data, columns);\n        const row = data[rowIndex];\n        const cells = keys.map((key, cell) => {\n            const column = cols[key];\n            const hidden = typeof column !== 'string' && column.hidden;\n            if (!hidden) {\n                return (<StyledTableCell key={key} onClick={handleDataClickedEvent({ row: rowIndex, column: cell, key, data: row }, onDataClick)} theme={theme}>\n            {cellRenderer({\n                    column: cell,\n                    key,\n                    data: row,\n                    row: rowIndex,\n                    value: row[key],\n                    render: defaultCellRenderer,\n                })}\n          </StyledTableCell>);\n            }\n            return <HiddenCell key={key}/>;\n        });\n        if (indexed) {\n            cells.unshift(<StyledTableCell key=\"index#\" onClick={handleDataClickedEvent({ row: rowIndex, column: -1, key: '__indexed', data: row }, onDataClick)} theme={theme}>\n          {rowIndex + 1}\n        </StyledTableCell>);\n        }\n        return cells;\n    }\n    private renderRows(keys: Array<string>) {\n        const { data, groupBy, indexed, placeholder, rowRenderer = this.defaultRowRenderer, getRowKey = defaultRowKeyGetter, theme, } = this.props;\n        const indices = this.getIndices(data, groupBy, this.state.sorting);\n        const cols = keys.length + (indexed ? 1 : 0);\n        const state = {};\n        if (indices.length === 0) {\n            return placeholder\n                ? [\n                    <StyledTableRow theme={theme} key=\"placeholder\">\n              <StyledPlaceholderCell colSpan={cols} theme={theme}>\n                {placeholder}\n              </StyledPlaceholderCell>\n            </StyledTableRow>,\n                ]\n                : [];\n        }\n        else {\n            return indices.map(index => {\n                const cells = this.renderCells(keys, index);\n                const renderData = { theme, index, cells, data: data[index], key: index.toString(), state };\n                renderData.key = getRowKey(renderData);\n                return rowRenderer(renderData);\n            });\n        }\n    }\n    private renderHead(keys: Array<string>) {\n        const { headRenderer = this.defaultHeadRenderer, groupBy, data = [], columns } = this.props;\n        const { sorting } = this.state;\n        return headRenderer({\n            columns: getColumns(data, columns),\n            sortBy: sorting,\n            groupBy,\n            data,\n            keys,\n        });\n    }\n    private renderFoot(keys: Array<string>) {\n        const { footRenderer = this.defaultFootRenderer, groupBy, data = [], columns } = this.props;\n        const { sorting } = this.state;\n        return footRenderer({\n            columns: getColumns(data, columns),\n            sortBy: sorting,\n            groupBy,\n            data,\n            keys,\n        });\n    }\n    render() {\n        const { data = [], columns, noHeader, theme, bodyRenderer = defaultBodyRenderer, cellRenderer: _1, indexed: _2, sortBy: _3, onDataClick: _4, onFooterClick: _5, onHeaderClick: _6, placeholder: _7, columns: _8, groupBy: _9, headRenderer: _10, footRenderer: _11, headerCellRenderer: _12, footerCellRenderer: _13, onSort: _14, ...props } = this.props;\n        const cols = getColumns(data, columns);\n        const keys = Object.keys(cols);\n        const showFooter = keys.filter(key => {\n            const col = cols[key];\n            return typeof col === 'object' && !!col.footer && !col.hidden;\n        }).length > 0;\n        const rows = this.renderRows(keys);\n        return bodyRenderer({\n            table: TableHost,\n            props: {\n                theme,\n                head: !noHeader && this.renderHead(keys),\n                foot: showFooter && this.renderFoot(keys),\n                ...props,\n            },\n            rows,\n            mode: 'table',\n        });\n    }\n    static inner = {\n        get StyledTableHead() { return StyledTableHead as typeof StyledTableHead; },\n        get StyledTableHeaderRow() { return StyledTableHeaderRow as typeof StyledTableHeaderRow; },\n        get StyledTableHeader() { return StyledTableHeader as typeof StyledTableHeader; },\n        get HiddenCell() { return HiddenCell as typeof HiddenCell; },\n        get StyledTableFoot() { return StyledTableFoot as typeof StyledTableFoot; },\n        get StyledTableRow() { return StyledTableRow as typeof StyledTableRow; },\n        get StyledTableCell() { return StyledTableCell as typeof StyledTableCell; },\n        get StyledPlaceholderCell() { return StyledPlaceholderCell as typeof StyledPlaceholderCell; }\n    };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}