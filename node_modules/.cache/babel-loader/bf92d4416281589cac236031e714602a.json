{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setParallaxStyles = setParallaxStyles;\nexports.resetStyles = resetStyles;\n\nvar _getParallaxOffsets2 = require(\"./getParallaxOffsets\");\n/**\n * Takes a parallax element and set the styles based on the\n * offsets and percent the element has moved though the viewport.\n * @param {object} element\n * @param {number} percentMoved\n */\n\n\nfunction setParallaxStyles(elInner, offsets, percentMoved) {\n  // Get the parallax X and Y offsets\n  var _getParallaxOffsets = (0, _getParallaxOffsets2.getParallaxOffsets)(offsets, percentMoved),\n      _getParallaxOffsets$x = _getParallaxOffsets.x,\n      xv = _getParallaxOffsets$x.value,\n      xu = _getParallaxOffsets$x.unit,\n      _getParallaxOffsets$y = _getParallaxOffsets.y,\n      yv = _getParallaxOffsets$y.value,\n      yu = _getParallaxOffsets$y.unit; // Apply styles\n\n\n  elInner.style.transform = \"translate3d(\".concat(xv).concat(xu, \", \").concat(yv).concat(yu, \", 0)\");\n}\n/**\n * Takes a parallax element and removes parallax offset styles.\n * @param {object} element\n */\n\n\nfunction resetStyles(element) {\n  var el = element.elInner;\n  el.style.transform = '';\n}","map":{"version":3,"sources":["/mnt/c/Users/jaemn/Desktop/react-portfolio-site/node_modules/react-scroll-parallax/cjs/helpers/elementStyles.js"],"names":["Object","defineProperty","exports","value","setParallaxStyles","resetStyles","_getParallaxOffsets2","require","elInner","offsets","percentMoved","_getParallaxOffsets","getParallaxOffsets","_getParallaxOffsets$x","x","xv","xu","unit","_getParallaxOffsets$y","y","yv","yu","style","transform","concat","element","el"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B;AACAF,OAAO,CAACG,WAAR,GAAsBA,WAAtB;;AAEA,IAAIC,oBAAoB,GAAGC,OAAO,CAAC,sBAAD,CAAlC;AAEA;;;;;;;;AAMA,SAASH,iBAAT,CAA2BI,OAA3B,EAAoCC,OAApC,EAA6CC,YAA7C,EAA2D;AACzD;AACA,MAAIC,mBAAmB,GAAG,CAAC,GAAGL,oBAAoB,CAACM,kBAAzB,EAA6CH,OAA7C,EAAsDC,YAAtD,CAA1B;AAAA,MACIG,qBAAqB,GAAGF,mBAAmB,CAACG,CADhD;AAAA,MAEIC,EAAE,GAAGF,qBAAqB,CAACV,KAF/B;AAAA,MAGIa,EAAE,GAAGH,qBAAqB,CAACI,IAH/B;AAAA,MAIIC,qBAAqB,GAAGP,mBAAmB,CAACQ,CAJhD;AAAA,MAKIC,EAAE,GAAGF,qBAAqB,CAACf,KAL/B;AAAA,MAMIkB,EAAE,GAAGH,qBAAqB,CAACD,IAN/B,CAFyD,CAQpB;;;AAGrCT,EAAAA,OAAO,CAACc,KAAR,CAAcC,SAAd,GAA0B,eAAeC,MAAf,CAAsBT,EAAtB,EAA0BS,MAA1B,CAAiCR,EAAjC,EAAqC,IAArC,EAA2CQ,MAA3C,CAAkDJ,EAAlD,EAAsDI,MAAtD,CAA6DH,EAA7D,EAAiE,MAAjE,CAA1B;AACD;AACD;;;;;;AAMA,SAAShB,WAAT,CAAqBoB,OAArB,EAA8B;AAC5B,MAAIC,EAAE,GAAGD,OAAO,CAACjB,OAAjB;AACAkB,EAAAA,EAAE,CAACJ,KAAH,CAASC,SAAT,GAAqB,EAArB;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setParallaxStyles = setParallaxStyles;\nexports.resetStyles = resetStyles;\n\nvar _getParallaxOffsets2 = require(\"./getParallaxOffsets\");\n\n/**\n * Takes a parallax element and set the styles based on the\n * offsets and percent the element has moved though the viewport.\n * @param {object} element\n * @param {number} percentMoved\n */\nfunction setParallaxStyles(elInner, offsets, percentMoved) {\n  // Get the parallax X and Y offsets\n  var _getParallaxOffsets = (0, _getParallaxOffsets2.getParallaxOffsets)(offsets, percentMoved),\n      _getParallaxOffsets$x = _getParallaxOffsets.x,\n      xv = _getParallaxOffsets$x.value,\n      xu = _getParallaxOffsets$x.unit,\n      _getParallaxOffsets$y = _getParallaxOffsets.y,\n      yv = _getParallaxOffsets$y.value,\n      yu = _getParallaxOffsets$y.unit; // Apply styles\n\n\n  elInner.style.transform = \"translate3d(\".concat(xv).concat(xu, \", \").concat(yv).concat(yu, \", 0)\");\n}\n/**\n * Takes a parallax element and removes parallax offset styles.\n * @param {object} element\n */\n\n\nfunction resetStyles(element) {\n  var el = element.elInner;\n  el.style.transform = '';\n}"]},"metadata":{},"sourceType":"script"}