{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport * as React from 'react';\nimport ReactDatePicker from 'react-datepicker';\nimport enGB from 'date-fns/esm/locale/en-GB';\nimport { PaddedContainer } from '../PaddedContainer';\nimport { Icon } from '../Icon';\nimport styled, { themed } from '../../utils/styled';\nimport { distance, distancePx } from '../../distance';\nimport { getFontStyle, getFontWeight } from '../../textStyles';\nimport { IncreaseDecrease } from '../IncreaseDecrease';\nimport { greenNeon } from '../../colors';\nconst defaultWeekDays = ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun'];\nconst defaultMonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nfunction patchLocale(locale, inputWeekDays = defaultWeekDays, months = defaultMonths) {\n  // in react-datepicker week starts from Sunday, not from Monday\n  const weekDays = [...inputWeekDays.slice(-1), ...inputWeekDays.slice(0, -1)];\n  return Object.assign({}, locale, {\n    localize: Object.assign({\n      ordinalNumber() {},\n\n      era() {},\n\n      quarter() {},\n\n      dayPeriod() {}\n\n    }, locale.localize, {\n      month: month => months[month],\n      day: day => weekDays[day]\n    }),\n    match: Object.assign({\n      ordinalNumber() {},\n\n      era() {},\n\n      quarter() {},\n\n      dayPeriod() {}\n\n    }, locale.match, {\n      month: month => months.indexOf(month),\n      day: day => weekDays.indexOf(day)\n    })\n  });\n}\n\nconst Arrow = styled.button`\n  ${getFontStyle({\n  size: 'medium'\n})}\n\n  background-color: transparent;\n  padding: 0;\n  border: none;\n\n  align-self: start;\n  cursor: pointer;\n  > i {\n    vertical-align: middle;\n  }\n`;\nconst Row = styled.div`\n  margin-bottom: ${distance.medium};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\nconst HeaderDateContainer = styled.div`\n  ${getFontWeight('medium')}\n`;\nconst StyledIncreaseDecrease = styled(IncreaseDecrease)`\n  margin-left: ${distance.xsmall};\n`;\nconst itemSize = '40px';\nconst ReactDatePickerContainer = styled.div(themed(({\n  theme: {\n    ui0,\n    ui1,\n    ui3,\n    ui4\n  }\n}) => `\n    .react-datepicker {\n      background-color: ${ui1};\n      border: 1px solid ${ui4};\n      display: inline-block;\n      position: relative;\n    }\n\n    .react-datepicker--time-only {\n      .react-datepicker__time-container {\n        border-left: 0;\n      }\n\n      .react-datepicker__time {\n        border-radius: 0.3rem;\n      }\n\n      .react-datepicker__time-box {\n        border-radius: 0.3rem;\n      }\n    }\n\n    .react-datepicker__triangle {\n      display: none;\n    }\n\n    .react-datepicker-popper {\n      z-index: 9999;\n    }\n\n    .react-datepicker__header {\n      text-align: center;\n      position: relative;\n\n      &--time {\n        padding-top: 20px;\n        padding-bottom: 10px;\n        padding-left: 5px;\n        padding-right: 5px;\n      }\n    }\n\n    .react-datepicker__current-month,\n    .react-datepicker-time__header,\n    .react-datepicker-year-header {\n      margin-top: 0;\n      ${getFontWeight('bold')}\n    }\n\n    .react-datepicker-year-header {\n      line-height: ${itemSize};\n    }\n\n    .react-datepicker-time__header {\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      overflow: hidden;\n    }\n\n    .react-datepicker__month-container {\n      float: left;\n      padding: 0 ${distance.medium};\n    }\n\n    .react-datepicker__time-container {\n      float: right;\n      border-left: 1px solid ${ui4};\n      width: 90px;\n\n      .react-datepicker__time {\n        position: relative;\n        background: ${ui1};\n\n        .react-datepicker__time-box {\n          width: 100%;\n          overflow-x: hidden;\n          margin: 0;\n          text-align: center;\n          ul.react-datepicker__time-list {\n            list-style: none;\n            margin: 0;\n            height: calc(195px + (#{${itemSize}} / 2));\n            overflow-y: scroll;\n            padding-right: 0px;\n            padding-left: 0px;\n            width: 100%;\n            box-sizing: content-box;\n\n            li.react-datepicker__time-list-item {\n              height: ${itemSize};\n              line-height: ${itemSize};\n              &:hover {\n                cursor: pointer;\n                background-color: ${ui4};\n              }\n              &--selected {\n                background-color: ${ui0};\n                color: white;\n                font-weight: bold;\n                &:hover {\n                  background-color: ${ui0};\n                }\n              }\n              &--disabled {\n                color: ${ui4};\n                background: repeating-linear-gradient(-45deg, ${ui3} 2px, ${ui1} 2px, ${ui1} 4px, ${ui3} 4px, ${ui3} 6px);\n                background-size: 41px 41px;\n\n                &:hover {\n                  cursor: default;\n                  background-color: transparent;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    .react-datepicker__week-number {\n      color: ${ui4};\n      display: inline-block;\n      width: ${itemSize};\n      line-height: ${itemSize};\n      text-align: center;\n      margin: 0;\n      &.react-datepicker__week-number--clickable {\n        cursor: pointer;\n        &:hover {\n          background-color: ${ui4};\n        }\n      }\n    }\n\n    .react-datepicker__day-names,\n    .react-datepicker__week {\n      white-space: nowrap;\n      margin-bottom: ${distancePx.large / 2}px;\n    }\n\n    .react-datepicker__day-name,\n    .react-datepicker__day,\n    .react-datepicker__time-name {\n      display: inline-block;\n      width: ${itemSize};\n      line-height: ${itemSize};\n      text-align: center;\n      margin: 0;\n    }\n\n    .react-datepicker__day,\n    .react-datepicker__month-text {\n      cursor: pointer;\n      text-align: center;\n\n      &:hover {\n        background-color: ${ui4};\n      }\n\n      &:focus {\n        border: 1px solid ${ui0};\n        outline: none;\n      }\n\n      &--today {\n        color: ${ui0};\n      }\n\n      &--highlighted {\n        border-radius: 0;\n        background-color: ${greenNeon};\n\n        &:hover {\n          background-color: darken(${greenNeon}, 5%);\n        }\n\n        &-custom-1 {\n          color: magenta;\n        }\n\n        &-custom-2 {\n          color: green;\n        }\n      }\n\n      &--selected {\n        background-color: ${ui0};\n        color: ${ui1};\n\n        &:hover {\n          background-color: darken(${ui0}, 5%);\n        }\n      }\n\n      &--in-selecting-range,\n      &--in-range {\n        background-color: ${ui3};\n      }\n\n      &--range-start,\n      &--range-end,\n      &--selecting-range-start {\n        color: ${ui1};\n        background-color: ${ui0};\n      }\n\n      &--disabled {\n        cursor: default;\n        color: ${ui4};\n        background: repeating-linear-gradient(-45deg, ${ui3} 2px, ${ui1} 2px, ${ui1} 4px, ${ui3} 4px, ${ui3} 6px);\n\n        &:hover {\n          background-color: transparent;\n        }\n      }\n    }\n\n    .react-datepicker__month-text {\n      &.react-datepicker__month--selected {\n        background-color: ${ui0};\n        color: ${ui1};\n      }\n      &:hover {\n        background-color: ${ui4};\n      }\n    }\n\n    .react-datepicker__input-container {\n      position: relative;\n    }\n\n    .react-datepicker__day-name {\n      text-transform: uppercase;\n      line-height: 1;\n    }\n\n    .react-datepicker__day--outside-month {\n      color: ${ui4};\n    }\n\n    .react-datepicker__day--keyboard-selected {\n      border: 1px solid ${ui0};\n      box-sizing: border-box;\n      width: ${itemSize};\n      height: ${itemSize};\n    }\n  `));\n\nconst getHeaderRender = ({\n  months = defaultMonths\n}) => ({\n  date,\n  increaseMonth,\n  decreaseMonth,\n  changeYear\n}) => {\n  const monthName = months[date.getMonth()];\n  const year = date.getFullYear();\n  return React.createElement(PaddedContainer, {\n    gutter: \"medium\"\n  }, React.createElement(Row, null, React.createElement(Arrow, {\n    onClick: decreaseMonth,\n    type: \"button\"\n  }, React.createElement(Icon, {\n    name: \"KeyboardArrowLeft\",\n    size: 2\n  })), React.createElement(HeaderDateContainer, null, monthName, \" \", year, React.createElement(StyledIncreaseDecrease, {\n    onIncrease: () => changeYear(year + 1),\n    onDecrease: () => changeYear(year - 1)\n  })), React.createElement(Arrow, {\n    onClick: increaseMonth,\n    type: \"button\"\n  }, React.createElement(Icon, {\n    name: \"KeyboardArrowRight\",\n    size: 2\n  }))));\n};\n\nexport const CustomReactDatepicker = Object.assign(_a => {\n  var {\n    months,\n    weekDays,\n    showMonthYearPicker\n  } = _a,\n      props = __rest(_a, [\"months\", \"weekDays\", \"showMonthYearPicker\"]);\n\n  return React.createElement(ReactDatePickerContainer, null, React.createElement(ReactDatePicker, Object.assign({\n    locale: patchLocale(enGB, weekDays, months),\n    renderCustomHeader: getHeaderRender({\n      months\n    }),\n    showMonthYearPicker: showMonthYearPicker\n  }, props)));\n}, {\n  inner: {\n    get ReactDatePickerContainer() {\n      return ReactDatePickerContainer;\n    },\n\n    get ReactDatePicker() {\n      return ReactDatePicker;\n    }\n\n  }\n});","map":{"version":3,"sources":["../../../../src/components/DateField/CustomReactDatepicker.part.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker';\nimport enGB from 'date-fns/esm/locale/en-GB';\nimport { Locale } from 'date-fns';\nimport { PaddedContainer } from '../PaddedContainer';\nimport { Icon } from '../Icon';\nimport styled, { themed } from '../../utils/styled';\nimport { distance, distancePx } from '../../distance';\nimport { getFontStyle, getFontWeight } from '../../textStyles';\nimport { IncreaseDecrease } from '../IncreaseDecrease';\nimport { greenNeon } from '../../colors';\nconst defaultWeekDays = ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun'];\nconst defaultMonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nfunction patchLocale(locale: Locale, inputWeekDays = defaultWeekDays, months = defaultMonths): Locale {\n    // in react-datepicker week starts from Sunday, not from Monday\n    const weekDays = [...inputWeekDays.slice(-1), ...inputWeekDays.slice(0, -1)];\n    return {\n        ...locale,\n        localize: {\n            ordinalNumber() { },\n            era() { },\n            quarter() { },\n            dayPeriod() { },\n            ...locale.localize,\n            month: (month: number) => months[month],\n            day: (day: number) => weekDays[day],\n        },\n        match: {\n            ordinalNumber() { },\n            era() { },\n            quarter() { },\n            dayPeriod() { },\n            ...locale.match,\n            month: (month: string) => months.indexOf(month),\n            day: (day: string) => weekDays.indexOf(day),\n        },\n    };\n}\nconst Arrow = styled.button `\n  ${getFontStyle({ size: 'medium' })}\n\n  background-color: transparent;\n  padding: 0;\n  border: none;\n\n  align-self: start;\n  cursor: pointer;\n  > i {\n    vertical-align: middle;\n  }\n`;\nconst Row = styled.div `\n  margin-bottom: ${distance.medium};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\nconst HeaderDateContainer = styled.div `\n  ${getFontWeight('medium')}\n`;\nconst StyledIncreaseDecrease = styled(IncreaseDecrease) `\n  margin-left: ${distance.xsmall};\n`;\nconst itemSize = '40px';\nconst ReactDatePickerContainer = styled.div(themed(({ theme: { ui0, ui1, ui3, ui4 } }) => `\n    .react-datepicker {\n      background-color: ${ui1};\n      border: 1px solid ${ui4};\n      display: inline-block;\n      position: relative;\n    }\n\n    .react-datepicker--time-only {\n      .react-datepicker__time-container {\n        border-left: 0;\n      }\n\n      .react-datepicker__time {\n        border-radius: 0.3rem;\n      }\n\n      .react-datepicker__time-box {\n        border-radius: 0.3rem;\n      }\n    }\n\n    .react-datepicker__triangle {\n      display: none;\n    }\n\n    .react-datepicker-popper {\n      z-index: 9999;\n    }\n\n    .react-datepicker__header {\n      text-align: center;\n      position: relative;\n\n      &--time {\n        padding-top: 20px;\n        padding-bottom: 10px;\n        padding-left: 5px;\n        padding-right: 5px;\n      }\n    }\n\n    .react-datepicker__current-month,\n    .react-datepicker-time__header,\n    .react-datepicker-year-header {\n      margin-top: 0;\n      ${getFontWeight('bold')}\n    }\n\n    .react-datepicker-year-header {\n      line-height: ${itemSize};\n    }\n\n    .react-datepicker-time__header {\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      overflow: hidden;\n    }\n\n    .react-datepicker__month-container {\n      float: left;\n      padding: 0 ${distance.medium};\n    }\n\n    .react-datepicker__time-container {\n      float: right;\n      border-left: 1px solid ${ui4};\n      width: 90px;\n\n      .react-datepicker__time {\n        position: relative;\n        background: ${ui1};\n\n        .react-datepicker__time-box {\n          width: 100%;\n          overflow-x: hidden;\n          margin: 0;\n          text-align: center;\n          ul.react-datepicker__time-list {\n            list-style: none;\n            margin: 0;\n            height: calc(195px + (#{${itemSize}} / 2));\n            overflow-y: scroll;\n            padding-right: 0px;\n            padding-left: 0px;\n            width: 100%;\n            box-sizing: content-box;\n\n            li.react-datepicker__time-list-item {\n              height: ${itemSize};\n              line-height: ${itemSize};\n              &:hover {\n                cursor: pointer;\n                background-color: ${ui4};\n              }\n              &--selected {\n                background-color: ${ui0};\n                color: white;\n                font-weight: bold;\n                &:hover {\n                  background-color: ${ui0};\n                }\n              }\n              &--disabled {\n                color: ${ui4};\n                background: repeating-linear-gradient(-45deg, ${ui3} 2px, ${ui1} 2px, ${ui1} 4px, ${ui3} 4px, ${ui3} 6px);\n                background-size: 41px 41px;\n\n                &:hover {\n                  cursor: default;\n                  background-color: transparent;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    .react-datepicker__week-number {\n      color: ${ui4};\n      display: inline-block;\n      width: ${itemSize};\n      line-height: ${itemSize};\n      text-align: center;\n      margin: 0;\n      &.react-datepicker__week-number--clickable {\n        cursor: pointer;\n        &:hover {\n          background-color: ${ui4};\n        }\n      }\n    }\n\n    .react-datepicker__day-names,\n    .react-datepicker__week {\n      white-space: nowrap;\n      margin-bottom: ${distancePx.large / 2}px;\n    }\n\n    .react-datepicker__day-name,\n    .react-datepicker__day,\n    .react-datepicker__time-name {\n      display: inline-block;\n      width: ${itemSize};\n      line-height: ${itemSize};\n      text-align: center;\n      margin: 0;\n    }\n\n    .react-datepicker__day,\n    .react-datepicker__month-text {\n      cursor: pointer;\n      text-align: center;\n\n      &:hover {\n        background-color: ${ui4};\n      }\n\n      &:focus {\n        border: 1px solid ${ui0};\n        outline: none;\n      }\n\n      &--today {\n        color: ${ui0};\n      }\n\n      &--highlighted {\n        border-radius: 0;\n        background-color: ${greenNeon};\n\n        &:hover {\n          background-color: darken(${greenNeon}, 5%);\n        }\n\n        &-custom-1 {\n          color: magenta;\n        }\n\n        &-custom-2 {\n          color: green;\n        }\n      }\n\n      &--selected {\n        background-color: ${ui0};\n        color: ${ui1};\n\n        &:hover {\n          background-color: darken(${ui0}, 5%);\n        }\n      }\n\n      &--in-selecting-range,\n      &--in-range {\n        background-color: ${ui3};\n      }\n\n      &--range-start,\n      &--range-end,\n      &--selecting-range-start {\n        color: ${ui1};\n        background-color: ${ui0};\n      }\n\n      &--disabled {\n        cursor: default;\n        color: ${ui4};\n        background: repeating-linear-gradient(-45deg, ${ui3} 2px, ${ui1} 2px, ${ui1} 4px, ${ui3} 4px, ${ui3} 6px);\n\n        &:hover {\n          background-color: transparent;\n        }\n      }\n    }\n\n    .react-datepicker__month-text {\n      &.react-datepicker__month--selected {\n        background-color: ${ui0};\n        color: ${ui1};\n      }\n      &:hover {\n        background-color: ${ui4};\n      }\n    }\n\n    .react-datepicker__input-container {\n      position: relative;\n    }\n\n    .react-datepicker__day-name {\n      text-transform: uppercase;\n      line-height: 1;\n    }\n\n    .react-datepicker__day--outside-month {\n      color: ${ui4};\n    }\n\n    .react-datepicker__day--keyboard-selected {\n      border: 1px solid ${ui0};\n      box-sizing: border-box;\n      width: ${itemSize};\n      height: ${itemSize};\n    }\n  `));\nconst getHeaderRender = ({ months = defaultMonths, }: {\n    months: CustomReactDatepickerProps['months'];\n}): ReactDatePickerProps['renderCustomHeader'] => ({ date, increaseMonth, decreaseMonth, changeYear }) => {\n    const monthName = months[date.getMonth()];\n    const year = date.getFullYear();\n    return (<PaddedContainer gutter=\"medium\">\n      <Row>\n        <Arrow onClick={decreaseMonth} type=\"button\">\n          <Icon name=\"KeyboardArrowLeft\" size={2}/>\n        </Arrow>\n        <HeaderDateContainer>\n          {monthName} {year}\n          <StyledIncreaseDecrease onIncrease={() => changeYear(year + 1)} onDecrease={() => changeYear(year - 1)}/>\n        </HeaderDateContainer>\n        <Arrow onClick={increaseMonth} type=\"button\">\n          <Icon name=\"KeyboardArrowRight\" size={2}/>\n        </Arrow>\n      </Row>\n    </PaddedContainer>);\n};\nexport interface CustomReactDatepickerProps extends ReactDatePickerProps {\n    months?: Array<string>;\n    weekDays?: Array<string>;\n}\nexport const CustomReactDatepicker = Object.assign(((({ months, weekDays, showMonthYearPicker, ...props }) => (<ReactDatePickerContainer>\n    <ReactDatePicker locale={patchLocale(enGB, weekDays, months)} renderCustomHeader={getHeaderRender({ months })} showMonthYearPicker={showMonthYearPicker} {...props}/>\n  </ReactDatePickerContainer>)) as React.FC<CustomReactDatepickerProps>), { inner: {\n        get ReactDatePickerContainer() { return ReactDatePickerContainer as typeof ReactDatePickerContainer; },\n        get ReactDatePicker() { return ReactDatePicker as typeof ReactDatePicker; }\n    } });\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}