{"ast":null,"code":"import { getStatus } from '../FileUploaderDetails/helpers';\nvar uploadId = 0;\n\nfunction pad(value) {\n  if (value < 10) {\n    return \"00\".concat(~~value);\n  } else if (value < 100) {\n    return \"0\".concat(~~value);\n  } else if (value < 1000) {\n    return \"\".concat(~~value);\n  } else {\n    return \"\".concat(~~value % 1000);\n  }\n}\n\nexport function generateId() {\n  return \"\".concat(pad(Math.random() * 1000), \"-\").concat(pad(Math.random() * 1000), \"-\").concat(pad(uploadId++));\n}\nexport function getSimpleStatus(file) {\n  var status = getStatus(file);\n\n  switch (status) {\n    case 'error':\n    case 'canceled':\n      return 'canceled';\n\n    case 'progress':\n    case 'scanning':\n      return 'active';\n  }\n\n  return 'complete';\n}","map":{"version":3,"sources":["../../../../src/components/FileUploader/helpers.ts"],"names":[],"mappings":"AACA,SAAS,SAAT,QAA0B,gCAA1B;AAEA,IAAI,QAAQ,GAAG,CAAf;;AAEA,SAAS,GAAT,CAAa,KAAb,EAA0B;AACxB,MAAI,KAAK,GAAG,EAAZ,EAAgB;AACd,uBAAY,CAAC,CAAC,KAAd;AACD,GAFD,MAEO,IAAI,KAAK,GAAG,GAAZ,EAAiB;AACtB,sBAAW,CAAC,CAAC,KAAb;AACD,GAFM,MAEA,IAAI,KAAK,GAAG,IAAZ,EAAkB;AACvB,qBAAU,CAAC,CAAC,KAAZ;AACD,GAFM,MAEA;AACL,qBAAU,CAAC,CAAC,KAAF,GAAU,IAApB;AACD;AACF;;AAED,OAAM,SAAU,UAAV,GAAoB;AACxB,mBAAU,GAAG,CAAC,IAAI,CAAC,MAAL,KAAgB,IAAjB,CAAb,cAAuC,GAAG,CAAC,IAAI,CAAC,MAAL,KAAgB,IAAjB,CAA1C,cAAoE,GAAG,CAAC,QAAQ,EAAT,CAAvE;AACD;AAED,OAAM,SAAU,eAAV,CAA0B,IAA1B,EAA4C;AAChD,MAAM,MAAM,GAAG,SAAS,CAAC,IAAD,CAAxB;;AAEA,UAAQ,MAAR;AACE,SAAK,OAAL;AACA,SAAK,UAAL;AACE,aAAO,UAAP;;AACF,SAAK,UAAL;AACA,SAAK,UAAL;AACE,aAAO,QAAP;AANJ;;AASA,SAAO,UAAP;AACD","sourcesContent":["import { FileProgress } from '../FileUploaderDetails';\nimport { getStatus } from '../FileUploaderDetails/helpers';\n\nlet uploadId = 0;\n\nfunction pad(value: number) {\n  if (value < 10) {\n    return `00${~~value}`;\n  } else if (value < 100) {\n    return `0${~~value}`;\n  } else if (value < 1000) {\n    return `${~~value}`;\n  } else {\n    return `${~~value % 1000}`;\n  }\n}\n\nexport function generateId() {\n  return `${pad(Math.random() * 1000)}-${pad(Math.random() * 1000)}-${pad(uploadId++)}`;\n}\n\nexport function getSimpleStatus(file: FileProgress) {\n  const status = getStatus(file);\n\n  switch (status) {\n    case 'error':\n    case 'canceled':\n      return 'canceled';\n    case 'progress':\n    case 'scanning':\n      return 'active';\n  }\n\n  return 'complete';\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}