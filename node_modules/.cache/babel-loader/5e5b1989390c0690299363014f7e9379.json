{"ast":null,"code":"import * as React from 'react';\nimport { purpleRed } from '../../colors';\nimport { Icon } from '../Icon';\nimport { IconLink } from '../IconLink';\nimport { StyledIconContainer } from '../../quarks';\nexport const InputIcon = Object.assign(({\n  disabled,\n  clearable,\n  hasValue,\n  error,\n  theme,\n  defaultIcon,\n  onClear,\n  onClick\n}) => !disabled && clearable && hasValue ? React.createElement(StyledIconContainer, {\n  onClick: () => {\n    onClear && onClear();\n    onClick && onClick();\n  }\n}, React.createElement(IconLink, {\n  icon: \"Close\"\n})) : error ? React.createElement(StyledIconContainer, {\n  onClick: onClick\n}, React.createElement(Icon, {\n  name: \"Error\",\n  color: theme ? theme.inputError : purpleRed,\n  size: \"22px\"\n})) : defaultIcon ? React.createElement(StyledIconContainer, {\n  onClick: onClick\n}, defaultIcon) : //tslint:disable-next-line\nnull, {\n  inner: {\n    get StyledIconContainer() {\n      return StyledIconContainer;\n    },\n\n    get IconLink() {\n      return IconLink;\n    },\n\n    get Icon() {\n      return Icon;\n    }\n\n  }\n});","map":{"version":3,"sources":["../../../../src/components/InputIcon/index.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAS,SAAT,QAA0B,cAA1B;AACA,SAAS,IAAT,QAAqB,SAArB;AACA,SAAS,QAAT,QAAyB,aAAzB;AACA,SAAS,mBAAT,QAAoC,cAApC;AAWA,OAAO,MAAM,SAAS,GAAG,MAAM,CAAC,MAAP,CAAgB,CAAC;AAAE,EAAA,QAAF;AAAY,EAAA,SAAZ;AAAuB,EAAA,QAAvB;AAAiC,EAAA,KAAjC;AAAwC,EAAA,KAAxC;AAA+C,EAAA,WAA/C;AAA4D,EAAA,OAA5D;AAAqE,EAAA;AAArE,CAAD,KAAqF,CAAC,QAAD,IAAa,SAAb,IAA0B,QAA1B,GAAsC,KAAA,CAAA,aAAA,CAAC,mBAAD,EAAoB;AAAC,EAAA,OAAO,EAAE,MAAK;AACnM,IAAA,OAAO,IAAI,OAAO,EAAlB;AACA,IAAA,OAAO,IAAI,OAAO,EAAlB;AACH;AAHuL,CAApB,EAI9J,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AAAC,EAAA,IAAI,EAAC;AAAN,CAAT,CAJ8J,CAAtC,GAKhG,KAAK,GAAI,KAAA,CAAA,aAAA,CAAC,mBAAD,EAAoB;AAAC,EAAA,OAAO,EAAE;AAAV,CAApB,EACjC,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,EAAA,IAAI,EAAC,OAAN;AAAc,EAAA,KAAK,EAAE,KAAK,GAAG,KAAK,CAAC,UAAT,GAAsB,SAAhD;AAA2D,EAAA,IAAI,EAAC;AAAhE,CAAL,CADiC,CAAJ,GAEL,WAAW,GAAI,KAAA,CAAA,aAAA,CAAC,mBAAD,EAAoB;AAAC,EAAA,OAAO,EAAE;AAAV,CAApB,EAAwC,WAAxC,CAAJ,GAAkF;AACvH,IARqB,EAQgB;AAAE,EAAA,KAAK,EAAE;AAC1C,QAAI,mBAAJ,GAAuB;AAAK,aAAO,mBAAP;AAA2D,KAD7C;;AAE1C,QAAI,QAAJ,GAAY;AAAK,aAAO,QAAP;AAAqC,KAFZ;;AAG1C,QAAI,IAAJ,GAAQ;AAAK,aAAO,IAAP;AAA6B;;AAHA;AAAT,CARhB,CAAlB","sourcesContent":["import * as React from 'react';\nimport { PreciseTheme } from '../../common';\nimport { purpleRed } from '../../colors';\nimport { Icon } from '../Icon';\nimport { IconLink } from '../IconLink';\nimport { StyledIconContainer } from '../../quarks';\nexport interface InputIconProps {\n    disabled?: boolean;\n    clearable?: boolean;\n    error?: React.ReactChild;\n    hasValue?: boolean;\n    theme?: PreciseTheme;\n    defaultIcon?: React.ReactChild;\n    onClear?(): void;\n    onClick?(): void;\n}\nexport const InputIcon = Object.assign(((({ disabled, clearable, hasValue, error, theme, defaultIcon, onClear, onClick, }) => !disabled && clearable && hasValue ? (<StyledIconContainer onClick={() => {\n    onClear && onClear();\n    onClick && onClick();\n}}>\n      <IconLink icon=\"Close\"/>\n    </StyledIconContainer>) : error ? (<StyledIconContainer onClick={onClick}>\n      <Icon name=\"Error\" color={theme ? theme.inputError : purpleRed} size=\"22px\"/>\n    </StyledIconContainer>) : defaultIcon ? (<StyledIconContainer onClick={onClick}>{defaultIcon}</StyledIconContainer>) : //tslint:disable-next-line\n    null) as React.SFC<InputIconProps>), { inner: {\n        get StyledIconContainer() { return StyledIconContainer as typeof StyledIconContainer; },\n        get IconLink() { return IconLink as typeof IconLink; },\n        get Icon() { return Icon as typeof Icon; }\n    } });\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}