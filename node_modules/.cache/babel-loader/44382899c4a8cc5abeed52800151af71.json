{"ast":null,"code":"import _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 0 \", \";\\n  color: \", \";\\n  font-size: inherit;\\n  &:after {\\n    content: '/';\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n  \\n  color: \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport styled, { themed } from '../../utils/styled';\nimport { Breadcrumb } from '../Breadcrumb';\nimport { dark } from '../../colors';\nimport { distance } from '../../distance';\nimport { OverflowMenu } from '../OverflowMenu';\nimport { getFontStyle } from '../../textStyles';\nvar BreadcrumbContainer = styled.div(_templateObject(), getFontStyle({\n  size: 'small'\n}), themed(function (props) {\n  return props.theme.ui8;\n}));\nvar BreadcrumbSeparator = styled.span(_templateObject2(), distance.medium, dark);\n\nfunction collapse(items, target, size) {\n  items[target] = React.createElement(OverflowMenu, {\n    items: items.splice(target, 1 + items.length - size, ''),\n    button: React.createElement(Breadcrumb, {\n      title: \"...\",\n      href: \"#\"\n    })\n  });\n}\n\nfunction insertSeparators(items) {\n  for (var i = items.length; i-- > 1;) {\n    items.splice(i, 0, React.createElement(BreadcrumbSeparator, null));\n  }\n}\n/**\n * Display a list of Breadcrumb elements with optional grouping.\n */\n\n\nexport var Breadcrumbs = Object.assign(function (_a) {\n  var _a$size = _a.size,\n      size = _a$size === void 0 ? 5 : _a$size,\n      children = _a.children,\n      props = __rest(_a, [\"size\", \"children\"]);\n\n  var displayElements = [];\n  var count = Math.max(size, 1);\n  React.Children.forEach(children, function (child) {\n    if (child) {\n      displayElements.push(child);\n    }\n  });\n\n  if (displayElements.length > count) {\n    collapse(displayElements, +(count > 2), count);\n  }\n\n  insertSeparators(displayElements);\n  return React.createElement(BreadcrumbContainer, Object.assign({}, props), displayElements.map(function (element, i) {\n    return React.createElement(\"span\", {\n      key: i\n    }, element);\n  }));\n}, {\n  inner: {\n    get BreadcrumbContainer() {\n      return BreadcrumbContainer;\n    }\n\n  }\n});\nBreadcrumbs.displayName = 'Breadcrumbs';","map":{"version":3,"sources":["../../../../src/components/Breadcrumbs/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled, { themed } from '../../utils/styled';\nimport { Breadcrumb } from '../Breadcrumb';\nimport { dark } from '../../colors';\nimport { StandardProps } from '../../common';\nimport { distance } from '../../distance';\nimport { OverflowMenu } from '../OverflowMenu';\nimport { getFontStyle } from '../../textStyles';\nconst BreadcrumbContainer = styled.div `\n  ${getFontStyle({ size: 'small' })}\n  \n  color: ${themed(props => props.theme.ui8)};\n`;\nconst BreadcrumbSeparator = styled.span `\n  padding: 0 ${distance.medium};\n  color: ${dark};\n  font-size: inherit;\n  &:after {\n    content: '/';\n  }\n`;\nexport interface BreadcrumbsProps extends StandardProps {\n    /**\n     * The maximum number of elements. By default, set to 5.\n     * @default 5\n     */\n    size?: number;\n    /**\n     * The breadcrumb items to display.\n     */\n    children?: React.ReactNode;\n}\nfunction collapse(items: Array<React.ReactChild>, target: number, size: number) {\n    items[target] = (<OverflowMenu items={items.splice(target, 1 + items.length - size, '')} button={<Breadcrumb title=\"...\" href=\"#\"/>}/>);\n}\nfunction insertSeparators(items: Array<React.ReactChild>) {\n    for (let i = items.length; i-- > 1;) {\n        items.splice(i, 0, <BreadcrumbSeparator />);\n    }\n}\n/**\n * Display a list of Breadcrumb elements with optional grouping.\n */\nexport const Breadcrumbs = Object.assign(((({ size = 5, children, ...props }) => {\n    const displayElements: Array<React.ReactChild> = [];\n    const count = Math.max(size, 1);\n    React.Children.forEach(children, child => {\n        if (child) {\n            displayElements.push(child as React.ReactChild);\n        }\n    });\n    if (displayElements.length > count) {\n        collapse(displayElements, +(count > 2), count);\n    }\n    insertSeparators(displayElements);\n    return (<BreadcrumbContainer {...props}>\n      {displayElements.map((element, i) => (<span key={i}>{element}</span>))}\n    </BreadcrumbContainer>);\n}) as React.SFC<BreadcrumbsProps>), { inner: {\n        get BreadcrumbContainer() { return BreadcrumbContainer as typeof BreadcrumbContainer; }\n    } });\nBreadcrumbs.displayName = 'Breadcrumbs';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}