{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/jaemn/Desktop/N_DRIVE/git/react-portfolio-site/src/components/blog/blog.js\";\nimport React from 'react';\nimport './blog.css';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Highlight from 'react-highlight.js';\nexport const Blog = () =>\n/*#__PURE__*/\n\n/* Start of JSX Fragment*/\nReact.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Jumbotron, {\n  fluid: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(Container, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}, \"Fluid jumbotron\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}, \"This is a modified jumbotron that occupies the entire horizontal space of its parent.\"))), /*#__PURE__*/React.createElement(Jumbotron, {\n  fluid: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(Container, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }\n}, \"Fluid jumbotron\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }\n}, \"This is a modified jumbotron that occupies the entire horizontal space of its parent.\"))), /*#__PURE__*/React.createElement(Jumbotron, {\n  fluid: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 1\n  }\n}, /*#__PURE__*/React.createElement(Container, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }\n}, \"The 17,576 Names of God\"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }\n}, \"\\\"In the Short short story 'The Nine Billion Names of God', author Arthur C. Clarke writes about a group of monks who are determined to figure out the names of God. They have devised a phonetic alphabet and have written down various combinations of sounds, but they can work only so fast. So, they hire a computer company to install a system that can quickly create 9 billion permutations of the sounds, one of which is likely to be the Name of God. The idea is that, after God's name is known, the world will end. It's a charming story, all the more so because desktop computers can now also calculate the name of God, as long as you properly code them with the monk's alphabet, write the program, and then sit and wait for the output to compile. The following program uses three nested loops to generate every possible 3-letter combination using the common English alphabet. This example isn't sufficient to produce the Name of God, so the world doesn't end when you run the program.\\\" Here is the program that does 17,576 of the 9 billion:\"), /*#__PURE__*/React.createElement(Highlight, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }\n}, content))))\n/* End of JSX Fragment*/\n;","map":{"version":3,"sources":["/mnt/c/Users/jaemn/Desktop/N_DRIVE/git/react-portfolio-site/src/components/blog/blog.js"],"names":["React","Container","Jumbotron","Highlight","Blog","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA,OAAO,MAAMC,IAAI,GAAG;AAAA;;AAChB;AACA,uDAEJ,oBAAC,SAAD;AAAW,EAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FAFF,CADF,CAFI,eAYJ,oBAAC,SAAD;AAAW,EAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FAFF,CADF,CAZI,eAsBJ,oBAAC,SAAD;AAAW,EAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,whCAFF,eAWE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACDC,OADC,CAXF,CADF,CAtBI;AA0CE;AA5CC","sourcesContent":["import React from 'react';\r\nimport './blog.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Highlight from 'react-highlight.js';\r\n\r\nexport const Blog = () => (\r\n    /* Start of JSX Fragment*/ \r\n    <>\r\n\r\n<Jumbotron fluid>\r\n  <Container>\r\n    <h1>Fluid jumbotron</h1>\r\n    <p>\r\n      This is a modified jumbotron that occupies the entire horizontal space of\r\n      its parent.\r\n    </p>\r\n  </Container>\r\n</Jumbotron>\r\n\r\n<Jumbotron fluid>\r\n  <Container>\r\n    <h1>Fluid jumbotron</h1>\r\n    <p>\r\n      This is a modified jumbotron that occupies the entire horizontal space of\r\n      its parent.\r\n    </p>\r\n  </Container>\r\n</Jumbotron>\r\n\r\n<Jumbotron fluid>\r\n  <Container>\r\n    <h1>The 17,576 Names of God</h1>\r\n    <p>\r\n    \"In the Short short story 'The Nine Billion Names of God', author Arthur C. Clarke writes about a group of monks who are determined to figure out the names of God. They have devised a phonetic alphabet and have written down various combinations of sounds, but they can work only so fast. So, they hire a computer company to install a system that can quickly create 9 billion permutations of the sounds, one of which is likely to be the Name of God. The idea is that, after God's name is known, the world will end.\r\n\r\nIt's a charming story, all the more so because desktop computers can now also calculate the name of God, as long as you properly code them with the monk's alphabet, write the program, and then sit and wait for the output to compile.\r\n\r\nThe following program uses three nested loops to generate every possible 3-letter combination using the common English alphabet. This example isn't sufficient to produce the Name of God, so the world doesn't end when you run the program.\"\r\n\r\nHere is the program that does 17,576 of the 9 billion:\r\n    </p>\r\n    <Highlight>\r\n  {content}\r\n</Highlight>\r\n\r\n  </Container>\r\n</Jumbotron>\r\n\r\n</>\r\n      /* End of JSX Fragment*/\r\n)"]},"metadata":{},"sourceType":"module"}