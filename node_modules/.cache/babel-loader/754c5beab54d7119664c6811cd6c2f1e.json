{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport * as React from 'react';\nimport styled from '../../utils/styled';\nimport { StackPanel } from '../StackPanel';\nimport { Anchor } from '../Anchor';\nimport { Icon } from '../Icon';\nimport { cyan, black, grey2 } from '../../colors';\nimport { distance } from '../../distance';\nimport { multiply } from '../../utils/multiply';\nimport { getFontStyle } from '../../textStyles';\nconst HeaderStackPanel = styled(StackPanel)`\n  align-items: center;\n  justify-content: space-between;\n  flex-shrink: 0;\n`;\nconst StyledNavBar = styled(HeaderStackPanel)`\n  padding-top: ${distance.xlarge};\n  margin-bottom: ${distance.xxxlarge};\n  flex-wrap: wrap;\n`;\nconst StyledMenuLink = styled.a`\n  ${getFontStyle({\n  size: 'xxLarge'\n})}\n\n  position: relative;\n\n  cursor: pointer;\n  color: ${black};\n  text-decoration: none;\n  display: flex;\n  margin-left: ${distance.medium};\n  align-items: center;\n  i {\n    vertical-align: text-bottom;\n  }\n  span {\n    margin-left: ${distance.small};\n  }\n  &:hover {\n    color: ${cyan};\n  }\n`;\nconst StyledMenu = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: right;\n  max-height: 0;\n  overflow: hidden;\n  &.open {\n    max-height: 500px;\n  }\n`;\nconst StyledMenuItems = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style-type: none;\n  width: 100%;\n`;\nconst StyledMenuItem = styled.li`\n  ${getFontStyle({\n  size: 'medium'\n})}\n\n  margin: ${distance.small} 0;\n\n  text-align: right;\n  & a {\n    text-decoration: none;\n    color: ${grey2};\n  }\n  & a:hover {\n    color: ${cyan};\n  }\n`;\nconst StyledLogoLink = styled(Anchor)`\n  margin-left: ${distance.xlarge};\n  margin-right: ${distance.medium};\n  height: 57px;\n`;\nconst StyledLinks = styled.div`\n  margin-right: auto;\n  margin-left: ${multiply(distance.xxxlarge, 2)};\n`;\nconst StyledLead = styled.div`\n  ${getFontStyle({\n  size: 'xxLarge'\n})}\n\n  margin-right: ${distance.medium};\n`;\nconst StyledPin = styled.div`\n  ${getFontStyle({\n  size: 'xxLarge'\n})}\n  \n  margin-left: ${distance.medium};\n`;\nconst breakPoint = 780;\n\nfunction isFullMode(width) {\n  return width > breakPoint;\n}\n\nconst DesktopHeader = Object.assign(({\n  leads,\n  pins\n}) => React.createElement(React.Fragment, null, React.createElement(StyledLinks, null, leads.map(item => React.createElement(StyledLead, {\n  key: item.id\n}, item.content))), React.createElement(HeaderStackPanel, null, pins.map(item => React.createElement(StyledPin, {\n  key: item.id\n}, item.content)))), {\n  inner: {\n    get StyledLinks() {\n      return StyledLinks;\n    },\n\n    get StyledLead() {\n      return StyledLead;\n    },\n\n    get HeaderStackPanel() {\n      return HeaderStackPanel;\n    },\n\n    get StyledPin() {\n      return StyledPin;\n    }\n\n  }\n});\nconst MobileHeader = Object.assign(({\n  entries,\n  onToggle,\n  open\n}) => React.createElement(React.Fragment, null, React.createElement(HeaderStackPanel, null, React.createElement(StyledMenuLink, {\n  onClick: onToggle\n}, React.createElement(Icon, {\n  name: open ? 'Close' : 'Menu'\n}))), React.createElement(StyledMenu, {\n  onClick: onToggle,\n  className: open ? 'open' : ''\n}, React.createElement(StyledMenuItems, null, entries.map(item => React.createElement(StyledMenuItem, {\n  key: item.id\n}, item.content))))), {\n  inner: {\n    get HeaderStackPanel() {\n      return HeaderStackPanel;\n    },\n\n    get StyledMenuLink() {\n      return StyledMenuLink;\n    },\n\n    get Icon() {\n      return Icon;\n    },\n\n    get StyledMenu() {\n      return StyledMenu;\n    },\n\n    get StyledMenuItems() {\n      return StyledMenuItems;\n    },\n\n    get StyledMenuItem() {\n      return StyledMenuItem;\n    }\n\n  }\n});\n/**\n * A simple navigation bar that is responsive by nature.\n */\n\nexport class NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      const {\n        onToggle\n      } = this.props;\n      const {\n        open,\n        controlledOpen\n      } = this.state;\n\n      if (!controlledOpen) {\n        this.setState({\n          open: !open\n        });\n      }\n\n      if (typeof onToggle === 'function') {\n        onToggle({\n          shouldOpen: !open\n        });\n      }\n    };\n\n    this.state = {\n      controlledMode: props.mode !== undefined,\n      controlledOpen: props.open !== undefined,\n      open: !!props.open,\n      mode: props.mode\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.state.controlledMode) {\n      this.setState({\n        mode: nextProps.mode\n      });\n    }\n\n    if (this.state.controlledOpen) {\n      this.setState({\n        open: !!nextProps.open\n      });\n    }\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      logo,\n      hidden,\n      items,\n      mode: _0,\n      children\n    } = _a,\n          rest = __rest(_a, [\"logo\", \"hidden\", \"items\", \"mode\", \"children\"]);\n\n    const {\n      mode,\n      open\n    } = this.state;\n    return React.createElement(StyledNavBar, Object.assign({}, rest), logo && (typeof logo === 'string' ? React.createElement(StyledLogoLink, {\n      to: \"/\"\n    }, React.createElement(\"img\", {\n      src: logo,\n      width: 57,\n      height: 57\n    })) : logo), children, !hidden && (mode === 'full' ? React.createElement(DesktopHeader, {\n      leads: items.filter(item => item.display === 'lead'),\n      pins: items.filter(item => item.display === 'pin')\n    }) : mode === 'hamburger' ? React.createElement(MobileHeader, {\n      entries: items.filter(item => !item.display || item.display === 'mobile'),\n      open: open,\n      onToggle: this.toggle\n    }) : false));\n  }\n\n}\nNavBar.inner = {\n  get StyledNavBar() {\n    return StyledNavBar;\n  },\n\n  get StyledLogoLink() {\n    return StyledLogoLink;\n  },\n\n  get DesktopHeader() {\n    return DesktopHeader;\n  },\n\n  get MobileHeader() {\n    return MobileHeader;\n  }\n\n};","map":{"version":3,"sources":["../../../../src/components/NavBar/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled, { css } from '../../utils/styled';\nimport { StackPanel } from '../StackPanel';\nimport { Anchor } from '../Anchor';\nimport { Icon } from '../Icon';\nimport { cyan, black, grey2 } from '../../colors';\nimport { distance } from '../../distance';\nimport { multiply } from '../../utils/multiply';\nimport { getFontStyle } from '../../textStyles';\nimport { displayTo } from '../../utils/displayTo';\nimport { remCalc } from '../../utils/remCalc';\nexport interface NavBarItem {\n    content: React.ReactNode;\n    display?: 'mobile' | 'pin' | 'lead';\n    id: string;\n}\nexport interface NavBarToggleEvent {\n    shouldOpen: boolean;\n}\nexport interface NavBarProps {\n    /**\n     * Sets component display mode. By default automatic mode is used,\n     * which depends on the component's width.\n     */\n    mode?: 'hamburger' | 'full';\n    /**\n     * The optional logo to define. Either a string or a React element.\n     * A string is interpreted as an image URL, which will displayed in\n     * an 57x57 large image inside a link component.\n     */\n    logo?: React.ReactChild;\n    /**\n     * Determines if the menu is opened or closed. If the value is set the\n     * control goes into controlled mode. Omitting this value will trigger\n     * the managed mode.\n     */\n    open?: boolean;\n    /**\n     * Event emitted once the hamburger menu should be toggled.\n     */\n    onToggle?(e: NavBarToggleEvent): void;\n    /**\n     * Option to hide the standard menu and only display the logo, if available.\n     * @default false\n     */\n    hidden?: boolean;\n    /**\n     * The menu items to show.\n     */\n    items: Array<NavBarItem>;\n    /**\n     * Optional additional content to place inside the nav bar container.\n     */\n    children?: React.ReactNode;\n}\nexport interface NavBarState {\n    controlledMode: boolean;\n    controlledOpen: boolean;\n    open: boolean;\n    mode: 'hamburger' | 'full' | undefined;\n}\nconst HeaderStackPanel = styled(StackPanel) `\n  align-items: center;\n  justify-content: space-between;\n  flex-shrink: 0;\n`;\nconst StyledNavBar = styled(HeaderStackPanel) `\n  padding-top: ${distance.xlarge};\n  margin-bottom: ${distance.xxxlarge};\n  flex-wrap: wrap;\n`;\nconst StyledMenuLink = styled.a `\n  ${getFontStyle({ size: 'xxLarge' })}\n\n  position: relative;\n\n  cursor: pointer;\n  color: ${black};\n  text-decoration: none;\n  display: flex;\n  margin-left: ${distance.medium};\n  align-items: center;\n  i {\n    vertical-align: text-bottom;\n  }\n  span {\n    margin-left: ${distance.small};\n  }\n  &:hover {\n    color: ${cyan};\n  }\n`;\nconst StyledMenu = styled.div `\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: right;\n  max-height: 0;\n  overflow: hidden;\n  &.open {\n    max-height: 500px;\n  }\n`;\nconst StyledMenuItems = styled.ul `\n  padding: 0;\n  margin: 0;\n  list-style-type: none;\n  width: 100%;\n`;\nconst StyledMenuItem = styled.li `\n  ${getFontStyle({ size: 'medium' })}\n\n  margin: ${distance.small} 0;\n\n  text-align: right;\n  & a {\n    text-decoration: none;\n    color: ${grey2};\n  }\n  & a:hover {\n    color: ${cyan};\n  }\n`;\nconst StyledLogoLink = styled(Anchor) `\n  margin-left: ${distance.xlarge};\n  margin-right: ${distance.medium};\n  height: 57px;\n`;\nconst StyledLinks = styled.div `\n  margin-right: auto;\n  margin-left: ${multiply(distance.xxxlarge, 2)};\n`;\nconst StyledLead = styled.div `\n  ${getFontStyle({ size: 'xxLarge' })}\n\n  margin-right: ${distance.medium};\n`;\nconst StyledPin = styled.div `\n  ${getFontStyle({ size: 'xxLarge' })}\n  \n  margin-left: ${distance.medium};\n`;\nconst breakPoint = 780;\nfunction isFullMode(width: number) {\n    return width > breakPoint;\n}\ninterface DesktopHeaderProps {\n    leads: Array<NavBarItem>;\n    pins: Array<NavBarItem>;\n}\nconst DesktopHeader = Object.assign(((({ leads, pins }) => (<>\n    <StyledLinks>\n      {leads.map(item => (<StyledLead key={item.id}>{item.content}</StyledLead>))}\n    </StyledLinks>\n    <HeaderStackPanel>\n      {pins.map(item => (<StyledPin key={item.id}>{item.content}</StyledPin>))}\n    </HeaderStackPanel>\n  </>)) as React.SFC<DesktopHeaderProps>), { inner: {\n        get StyledLinks() { return StyledLinks as typeof StyledLinks; },\n        get StyledLead() { return StyledLead as typeof StyledLead; },\n        get HeaderStackPanel() { return HeaderStackPanel as typeof HeaderStackPanel; },\n        get StyledPin() { return StyledPin as typeof StyledPin; }\n    } });\ninterface MobileHeaderProps {\n    entries: Array<NavBarItem>;\n    onToggle(): void;\n    open: boolean;\n}\nconst MobileHeader = Object.assign(((({ entries, onToggle, open }) => (<>\n    <HeaderStackPanel>\n      <StyledMenuLink onClick={onToggle}>\n        <Icon name={open ? 'Close' : 'Menu'}/>\n      </StyledMenuLink>\n    </HeaderStackPanel>\n    <StyledMenu onClick={onToggle} className={open ? 'open' : ''}>\n      <StyledMenuItems>\n        {entries.map(item => (<StyledMenuItem key={item.id}>{item.content}</StyledMenuItem>))}\n      </StyledMenuItems>\n    </StyledMenu>\n  </>)) as React.SFC<MobileHeaderProps>), { inner: {\n        get HeaderStackPanel() { return HeaderStackPanel as typeof HeaderStackPanel; },\n        get StyledMenuLink() { return StyledMenuLink as typeof StyledMenuLink; },\n        get Icon() { return Icon as typeof Icon; },\n        get StyledMenu() { return StyledMenu as typeof StyledMenu; },\n        get StyledMenuItems() { return StyledMenuItems as typeof StyledMenuItems; },\n        get StyledMenuItem() { return StyledMenuItem as typeof StyledMenuItem; }\n    } });\n/**\n * A simple navigation bar that is responsive by nature.\n */\nexport class NavBar extends React.Component<NavBarProps, NavBarState> {\n    constructor(props: NavBarProps) {\n        super(props);\n        this.state = {\n            controlledMode: props.mode !== undefined,\n            controlledOpen: props.open !== undefined,\n            open: !!props.open,\n            mode: props.mode,\n        };\n    }\n    UNSAFE_componentWillReceiveProps(nextProps: NavBarProps) {\n        if (this.state.controlledMode) {\n            this.setState({\n                mode: nextProps.mode,\n            });\n        }\n        if (this.state.controlledOpen) {\n            this.setState({\n                open: !!nextProps.open,\n            });\n        }\n    }\n    private toggle = () => {\n        const { onToggle } = this.props;\n        const { open, controlledOpen } = this.state;\n        if (!controlledOpen) {\n            this.setState({\n                open: !open,\n            });\n        }\n        if (typeof onToggle === 'function') {\n            onToggle({\n                shouldOpen: !open,\n            });\n        }\n    };\n    render() {\n        const { logo, hidden, items, mode: _0, children, ...rest } = this.props;\n        const { mode, open } = this.state;\n        return (<StyledNavBar {...rest}>\n        {logo &&\n            (typeof logo === 'string' ? (<StyledLogoLink to=\"/\">\n              <img src={logo} width={57} height={57}/>\n            </StyledLogoLink>) : (logo))}\n        {children}\n        {!hidden &&\n            (mode === 'full' ? (<DesktopHeader leads={items.filter(item => item.display === 'lead')} pins={items.filter(item => item.display === 'pin')}/>) : mode === 'hamburger' ? (<MobileHeader entries={items.filter(item => !item.display || item.display === 'mobile')} open={open} onToggle={this.toggle}/>) : (false))}\n      </StyledNavBar>);\n    }\n    static inner = {\n        get StyledNavBar() { return StyledNavBar as typeof StyledNavBar; },\n        get StyledLogoLink() { return StyledLogoLink as typeof StyledLogoLink; },\n        get DesktopHeader() { return DesktopHeader as typeof DesktopHeader; },\n        get MobileHeader() { return MobileHeader as typeof MobileHeader; }\n    };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}