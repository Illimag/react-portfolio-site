{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport * as React from 'react';\nimport styled from '../../utils/styled';\nimport { getPropLabel } from '../../utils/labels';\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from '../Modal';\nimport { StatusTable } from './StatusTable.part';\nimport { IconLink } from '../IconLink';\nconst StyledModalBody = styled(ModalBody)`\n  max-height: 480px;\n  overflow: auto;\n`;\nconst StyledModal = styled(Modal)`\n  max-width: 600px;\n`;\nexport class UploaderProgressDetails extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.cancelAll = () => {\n      const {\n        files,\n        onCancel\n      } = this.props;\n      onCancel({\n        files\n      });\n    };\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      open,\n      files,\n      onCancel,\n      onDelete,\n      onHide,\n      progressValue\n    } = _a,\n          props = __rest(_a, [\"open\", \"files\", \"onCancel\", \"onDelete\", \"onHide\", \"progressValue\"]);\n\n    const completed = progressValue >= 100;\n    return React.createElement(StyledModal, Object.assign({\n      open: open,\n      onClose: onHide\n    }, props), React.createElement(ModalHeader, {\n      title: getPropLabel(props, 'uploadModalTitleLabel')\n    }), React.createElement(StyledModalBody, null, React.createElement(StatusTable, Object.assign({}, props, {\n      onCancel: onCancel,\n      onDelete: onDelete,\n      files: files\n    }))), !completed && React.createElement(ModalFooter, null, React.createElement(IconLink, {\n      onClick: this.cancelAll,\n      icon: \"Close\"\n    }, getPropLabel(props, 'cancelAllLabel'))));\n  }\n\n}\nUploaderProgressDetails.inner = {\n  get StyledModal() {\n    return StyledModal;\n  },\n\n  get ModalHeader() {\n    return ModalHeader;\n  },\n\n  get StyledModalBody() {\n    return StyledModalBody;\n  },\n\n  get StatusTable() {\n    return StatusTable;\n  },\n\n  get ModalFooter() {\n    return ModalFooter;\n  },\n\n  get IconLink() {\n    return IconLink;\n  }\n\n};","map":{"version":3,"sources":["../../../../src/components/FileUploaderDetails/UploaderProgressDetails.part.tsx"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,oBAAnB;AACA,SAAS,YAAT,QAA0D,oBAA1D;AACA,SAAS,KAAT,EAAgB,SAAhB,EAA2B,WAA3B,EAAwC,WAAxC,QAA2D,UAA3D;AAEA,SAAS,WAAT,QAA4B,oBAA5B;AACA,SAAS,QAAT,QAAyB,aAAzB;AACA,MAAM,eAAe,GAAG,MAAM,CAAC,SAAD,CAAY;;;CAA1C;AAIA,MAAM,WAAW,GAAG,MAAM,CAAC,KAAD,CAAQ;;CAAlC;AA6BA,OAAM,MAAO,uBAAP,SAAuC,KAAK,CAAC,SAA7C,CAAoF;AAA1F,EAAA,WAAA,GAAA;;;AACY,SAAA,SAAA,GAAY,MAAK;AACrB,YAAM;AAAE,QAAA,KAAF;AAAS,QAAA;AAAT,UAAsB,KAAK,KAAjC;AACA,MAAA,QAAQ,CAAC;AACL,QAAA;AADK,OAAD,CAAR;AAGH,KALO;AA6BX;;AAvBG,EAAA,MAAM,GAAA;AACF,UAAM,EAAA,GAAA,KAAA,KAAN;AAAA,UAAM;AAAE,MAAA,IAAF;AAAQ,MAAA,KAAR;AAAe,MAAA,QAAf;AAAyB,MAAA,QAAzB;AAAmC,MAAA,MAAnC;AAA2C,MAAA;AAA3C,QAAwD,EAA9D;AAAA,UAAgE,KAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,UAAA,EAAA,UAAA,EAAA,QAAA,EAAA,eAAA,CAAA,CAAhE;;AACA,UAAM,SAAS,GAAG,aAAa,IAAI,GAAnC;AACA,WAAQ,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY,MAAA,CAAA,MAAA,CAAA;AAAC,MAAA,IAAI,EAAE,IAAP;AAAa,MAAA,OAAO,EAAE;AAAtB,KAAA,EAAkC,KAAlC,CAAZ,EACR,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY;AAAC,MAAA,KAAK,EAAE,YAAY,CAAC,KAAD,EAAQ,uBAAR;AAApB,KAAZ,CADQ,EAER,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB,IAAhB,EACE,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,MAAA,QAAQ,EAAE,QAAZ;AAAsB,MAAA,QAAQ,EAAE,QAAhC;AAA0C,MAAA,KAAK,EAAE;AAAjD,KAAV,CAAZ,CADF,CAFQ,EAKP,CAAC,SAAD,IAAe,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY,IAAZ,EACZ,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AAAC,MAAA,OAAO,EAAE,KAAK,SAAf;AAA0B,MAAA,IAAI,EAAC;AAA/B,KAAT,EACG,YAAY,CAAC,KAAD,EAAQ,gBAAR,CADf,CADY,CALR,CAAR;AAWH;;AArBqF;AAsB/E,uBAAA,CAAA,KAAA,GAAQ;AACX,MAAI,WAAJ,GAAe;AAAK,WAAO,WAAP;AAA2C,GADpD;;AAEX,MAAI,WAAJ,GAAe;AAAK,WAAO,WAAP;AAA2C,GAFpD;;AAGX,MAAI,eAAJ,GAAmB;AAAK,WAAO,eAAP;AAAmD,GAHhE;;AAIX,MAAI,WAAJ,GAAe;AAAK,WAAO,WAAP;AAA2C,GAJpD;;AAKX,MAAI,WAAJ,GAAe;AAAK,WAAO,WAAP;AAA2C,GALpD;;AAMX,MAAI,QAAJ,GAAY;AAAK,WAAO,QAAP;AAAqC;;AAN3C,CAAR","sourcesContent":["import * as React from 'react';\nimport styled from '../../utils/styled';\nimport { getPropLabel, UploadProgressDetailsLabels } from '../../utils/labels';\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from '../Modal';\nimport { FileProgress, FileUploaderDetailsEvent } from './FileUploaderDetails.types.part';\nimport { StatusTable } from './StatusTable.part';\nimport { IconLink } from '../IconLink';\nconst StyledModalBody = styled(ModalBody) `\n  max-height: 480px;\n  overflow: auto;\n`;\nconst StyledModal = styled(Modal) `\n  max-width: 600px;\n`;\nexport interface UploaderProgressDetailsProps extends UploadProgressDetailsLabels {\n    /**\n     * Determines if the details are shown or not.\n     */\n    open?: boolean;\n    /**\n     * Uploading files with progress value.\n     */\n    files: Array<FileProgress>;\n    /**\n     * Event emitted when upload canceled for individual or all files.\n     */\n    onCancel(e: FileUploaderDetailsEvent<FileProgress>): void;\n    /**\n     * Event emitted when upload deleted for individual or all files.\n     */\n    onDelete(e: FileUploaderDetailsEvent<FileProgress>): void;\n    /**\n     * Event emitted when details should be hidden.\n     */\n    onHide(): void;\n    /**\n     * The total progress from 0 to 100.\n     */\n    progressValue: number;\n}\nexport class UploaderProgressDetails extends React.Component<UploaderProgressDetailsProps> {\n    private cancelAll = () => {\n        const { files, onCancel } = this.props;\n        onCancel({\n            files,\n        });\n    };\n    render() {\n        const { open, files, onCancel, onDelete, onHide, progressValue, ...props } = this.props;\n        const completed = progressValue >= 100;\n        return (<StyledModal open={open} onClose={onHide} {...props}>\n        <ModalHeader title={getPropLabel(props, 'uploadModalTitleLabel')}/>\n        <StyledModalBody>\n          <StatusTable {...props} onCancel={onCancel} onDelete={onDelete} files={files}/>\n        </StyledModalBody>\n        {!completed && (<ModalFooter>\n            <IconLink onClick={this.cancelAll} icon=\"Close\">\n              {getPropLabel(props, 'cancelAllLabel')}\n            </IconLink>\n          </ModalFooter>)}\n      </StyledModal>);\n    }\n    static inner = {\n        get StyledModal() { return StyledModal as typeof StyledModal; },\n        get ModalHeader() { return ModalHeader as typeof ModalHeader; },\n        get StyledModalBody() { return StyledModalBody as typeof StyledModalBody; },\n        get StatusTable() { return StatusTable as typeof StatusTable; },\n        get ModalFooter() { return ModalFooter as typeof ModalFooter; },\n        get IconLink() { return IconLink as typeof IconLink; }\n    };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}