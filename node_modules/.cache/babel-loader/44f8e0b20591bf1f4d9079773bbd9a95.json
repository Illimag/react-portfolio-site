{"ast":null,"code":"import _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n\\n  position: absolute;\\n  top: \", \";\\n  right: \", \";\\n  background-color: \", \";\\n  padding: 0;\\n  border: none;\\n  align-self: start;\\n  cursor: pointer;\\n  color: \", \";\\n  opacity: 0.2;\\n  transition: opacity 0.2s ease-out;\\n\\n  &:hover {\\n    opacity: 0.5;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport * as colors from '../../colors';\nimport styled from '../../utils/styled';\nimport { distance } from '../../distance';\nimport { Icon } from '../Icon';\nimport { getFontStyle } from '../../textStyles';\nvar StyledCloseButton = styled.a(_templateObject(), getFontStyle({\n  size: 'medium'\n}), distance.medium, distance.medium, colors.transparent, colors.black);\n/**\n * A simple close button as used in Modal dialogs.\n */\n\nexport var CloseButton = Object.assign(function (props) {\n  return React.createElement(StyledCloseButton, Object.assign({}, props), React.createElement(Icon, {\n    name: \"Close\",\n    size: 1.1\n  }));\n}, {\n  inner: {\n    get StyledCloseButton() {\n      return StyledCloseButton;\n    },\n\n    get Icon() {\n      return Icon;\n    }\n\n  }\n});\nCloseButton.displayName = 'CloseButton';","map":{"version":3,"sources":["../../../../src/components/CloseButton/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAK,MAAZ,MAAwB,cAAxB;AACA,OAAO,MAAP,MAAmB,oBAAnB;AACA,SAAS,QAAT,QAAyB,gBAAzB;AACA,SAAS,IAAT,QAAqB,SAArB;AACA,SAAS,YAAT,QAA6B,kBAA7B;AACA,IAAM,iBAAiB,GAAG,MAAM,CAAC,CAAV,oBACnB,YAAY,CAAC;AAAE,EAAA,IAAI,EAAE;AAAR,CAAD,CADO,EAId,QAAQ,CAAC,MAJK,EAKZ,QAAQ,CAAC,MALG,EAMD,MAAM,CAAC,WANN,EAWZ,MAAM,CAAC,KAXK,CAAvB;AAmBA;;;;AAGA,OAAO,IAAM,WAAW,GAAG,MAAM,CAAC,MAAP,CAAgB,UAAA,KAAK;AAAA,SAAK,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAkB,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,CAAlB,EACjD,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,IAAA,IAAI,EAAC,OAAN;AAAc,IAAA,IAAI,EAAE;AAApB,GAAL,CADiD,CAAL;AAAA,CAArB,EAEsD;AAAE,EAAA,KAAK,EAAE;AAClF,QAAI,iBAAJ,GAAqB;AAAK,aAAO,iBAAP;AAAuD,KADC;;AAElF,QAAI,IAAJ,GAAQ;AAAK,aAAO,IAAP;AAA6B;;AAFwC;AAAT,CAFtD,CAApB;AAMP,WAAW,CAAC,WAAZ,GAA0B,aAA1B","sourcesContent":["import * as React from 'react';\nimport * as colors from '../../colors';\nimport styled from '../../utils/styled';\nimport { distance } from '../../distance';\nimport { Icon } from '../Icon';\nimport { getFontStyle } from '../../textStyles';\nconst StyledCloseButton = styled.a `\n  ${getFontStyle({ size: 'medium' })}\n\n  position: absolute;\n  top: ${distance.medium};\n  right: ${distance.medium};\n  background-color: ${colors.transparent};\n  padding: 0;\n  border: none;\n  align-self: start;\n  cursor: pointer;\n  color: ${colors.black};\n  opacity: 0.2;\n  transition: opacity 0.2s ease-out;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n/**\n * A simple close button as used in Modal dialogs.\n */\nexport const CloseButton = Object.assign(((props => (<StyledCloseButton {...props}>\n    <Icon name=\"Close\" size={1.1}/>\n  </StyledCloseButton>)) as React.SFC<React.HTMLAttributes<HTMLAnchorElement>>), { inner: {\n        get StyledCloseButton() { return StyledCloseButton as typeof StyledCloseButton; },\n        get Icon() { return Icon as typeof Icon; }\n    } });\nCloseButton.displayName = 'CloseButton';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}