{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport * as React from 'react';\nimport styled, { themed } from '../../utils/styled';\nimport { remCalc } from '../../utils/remCalc';\nimport { Blocker } from '../Blocker';\nimport { CloseButton } from '../CloseButton';\nimport { distance } from '../../distance';\nimport { getFontStyle } from '../../textStyles';\nconst StyledMobileDropdownWrapper = styled.div`\n  padding: ${distance.medium};\n  box-sizing: border-box;\n  height: 100%;\n  overflow-y: auto;\n  background: ${themed(props => props.theme.ui1)};\n`;\nconst StyledMobileWrapper = styled.div`\n  box-sizing: border-box;\n  margin: 0;\n`;\nconst StyledLabel = styled.div`\n  ${getFontStyle({\n  size: 'small'\n})}\n\n  color: ${themed(({\n  theme\n}) => theme.ui0)};\n  padding-bottom: ${distance.medium};\n  min-height: ${remCalc('14px')};\n`;\nexport class WindowPopup extends React.Component {\n  render() {\n    const _a = this.props,\n          {\n      children,\n      label\n    } = _a,\n          props = __rest(_a, [\"children\", \"label\"]);\n\n    return React.createElement(Blocker, Object.assign({}, props), React.createElement(StyledMobileDropdownWrapper, {\n      theme: props.theme,\n      tabIndex: 0\n    }, React.createElement(StyledLabel, null, label), React.createElement(CloseButton, {\n      onClick: props.onClose\n    }), React.createElement(StyledMobileWrapper, null, children)));\n  }\n\n}\nWindowPopup.inner = {\n  get Blocker() {\n    return Blocker;\n  },\n\n  get StyledMobileDropdownWrapper() {\n    return StyledMobileDropdownWrapper;\n  },\n\n  get StyledLabel() {\n    return StyledLabel;\n  },\n\n  get CloseButton() {\n    return CloseButton;\n  },\n\n  get StyledMobileWrapper() {\n    return StyledMobileWrapper;\n  }\n\n};","map":{"version":3,"sources":["../../../../src/components/WindowPopup/index.tsx"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,IAAiB,MAAjB,QAA+B,oBAA/B;AACA,SAAS,OAAT,QAAwB,qBAAxB;AAEA,SAAS,OAAT,QAAsC,YAAtC;AACA,SAAS,WAAT,QAA4B,gBAA5B;AACA,SAAS,QAAT,QAAyB,gBAAzB;AACA,SAAS,YAAT,QAA6B,kBAA7B;AACA,MAAM,2BAA2B,GAAG,MAAM,CAAC,GAAI;aAClC,QAAQ,CAAC,MAAM;;;;gBAIZ,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,KAAN,CAAY,GAAtB,CAA0B;CALhD;AAOA,MAAM,mBAAmB,GAAG,MAAM,CAAC,GAAI;;;CAAvC;AAIA,MAAM,WAAW,GAAG,MAAM,CAAC,GAAI;IAC3B,YAAY,CAAC;AAAE,EAAA,IAAI,EAAE;AAAR,CAAD,CAAmB;;WAExB,MAAM,CAAC,CAAC;AAAE,EAAA;AAAF,CAAD,KAAe,KAAK,CAAC,GAAtB,CAA0B;oBACvB,QAAQ,CAAC,MAAM;gBACnB,OAAO,CAAC,MAAD,CAAQ;CAL/B;AAUA,OAAM,MAAO,WAAP,SAA2B,KAAK,CAAC,SAAjC,CAA4D;AAC9D,EAAA,MAAM,GAAA;AACF,UAAM,EAAA,GAAA,KAAA,KAAN;AAAA,UAAM;AAAE,MAAA,QAAF;AAAY,MAAA;AAAZ,QAAiB,EAAvB;AAAA,UAAyB,KAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,UAAA,EAAA,OAAA,CAAA,CAAzB;;AACA,WAAQ,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,CAAR,EACR,KAAA,CAAA,aAAA,CAAC,2BAAD,EAA4B;AAAC,MAAA,KAAK,EAAE,KAAK,CAAC,KAAd;AAAqB,MAAA,QAAQ,EAAE;AAA/B,KAA5B,EACE,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY,IAAZ,EAAc,KAAd,CADF,EAEE,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY;AAAC,MAAA,OAAO,EAAE,KAAK,CAAC;AAAhB,KAAZ,CAFF,EAGE,KAAA,CAAA,aAAA,CAAC,mBAAD,EAAoB,IAApB,EAAsB,QAAtB,CAHF,CADQ,CAAR;AAOH;;AAV6D;AAWvD,WAAA,CAAA,KAAA,GAAQ;AACX,MAAI,OAAJ,GAAW;AAAK,WAAO,OAAP;AAAmC,GADxC;;AAEX,MAAI,2BAAJ,GAA+B;AAAK,WAAO,2BAAP;AAA2E,GAFpG;;AAGX,MAAI,WAAJ,GAAe;AAAK,WAAO,WAAP;AAA2C,GAHpD;;AAIX,MAAI,WAAJ,GAAe;AAAK,WAAO,WAAP;AAA2C,GAJpD;;AAKX,MAAI,mBAAJ,GAAuB;AAAK,WAAO,mBAAP;AAA2D;;AAL5E,CAAR","sourcesContent":["import * as React from 'react';\nimport styled, { themed } from '../../utils/styled';\nimport { remCalc } from '../../utils/remCalc';\nimport { StandardProps } from '../../common';\nimport { Blocker, BlockerProps } from '../Blocker';\nimport { CloseButton } from '../CloseButton';\nimport { distance } from '../../distance';\nimport { getFontStyle } from '../../textStyles';\nconst StyledMobileDropdownWrapper = styled.div `\n  padding: ${distance.medium};\n  box-sizing: border-box;\n  height: 100%;\n  overflow-y: auto;\n  background: ${themed(props => props.theme.ui1)};\n`;\nconst StyledMobileWrapper = styled.div `\n  box-sizing: border-box;\n  margin: 0;\n`;\nconst StyledLabel = styled.div `\n  ${getFontStyle({ size: 'small' })}\n\n  color: ${themed(({ theme }) => theme.ui0)};\n  padding-bottom: ${distance.medium};\n  min-height: ${remCalc('14px')};\n`;\nexport interface WindowPopupProps extends StandardProps, BlockerProps {\n    label?: React.ReactNode;\n}\nexport class WindowPopup extends React.Component<WindowPopupProps> {\n    render() {\n        const { children, label, ...props } = this.props;\n        return (<Blocker {...props}>\n        <StyledMobileDropdownWrapper theme={props.theme} tabIndex={0}>\n          <StyledLabel>{label}</StyledLabel>\n          <CloseButton onClick={props.onClose}/>\n          <StyledMobileWrapper>{children}</StyledMobileWrapper>\n        </StyledMobileDropdownWrapper>\n      </Blocker>);\n    }\n    static inner = {\n        get Blocker() { return Blocker as typeof Blocker; },\n        get StyledMobileDropdownWrapper() { return StyledMobileDropdownWrapper as typeof StyledMobileDropdownWrapper; },\n        get StyledLabel() { return StyledLabel as typeof StyledLabel; },\n        get CloseButton() { return CloseButton as typeof CloseButton; },\n        get StyledMobileWrapper() { return StyledMobileWrapper as typeof StyledMobileWrapper; }\n    };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}