{"ast":null,"code":"import _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \";\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: block;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding-left: \", \";\\n  display: inline-block;\\n  cursor: inherit;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport styled, { css } from '../../utils/styled';\nimport { distance } from '../../distance';\nvar AttachedLabel = css(_templateObject(), distance.small);\nvar BlockLabel = css(_templateObject2());\nvar Styledlabel = styled.label(_templateObject3(), function (props) {\n  return props.attached ? AttachedLabel : BlockLabel;\n});\n/**\n * The label component displays an input or general label.\n */\n\nexport var Label = Object.assign(function (_a) {\n  var toolTip = _a.toolTip,\n      props = __rest(_a, [\"toolTip\"]);\n\n  return React.createElement(Styledlabel, Object.assign({\n    title: toolTip\n  }, props));\n}, {\n  inner: {\n    get Styledlabel() {\n      return Styledlabel;\n    }\n\n  }\n});\nLabel.displayName = 'Label';","map":{"version":3,"sources":["../../../../src/components/Label/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,IAAiB,GAAjB,QAA4B,oBAA5B;AAEA,SAAS,QAAT,QAAyB,gBAAzB;AAeA,IAAM,aAAa,GAAG,GAAH,oBACD,QAAQ,CAAC,KADR,CAAnB;AAKA,IAAM,UAAU,GAAG,GAAH,oBAAhB;AAGA,IAAM,WAAW,GAAG,MAAM,CAAC,KAAV,qBACb,UAAA,KAAK;AAAA,SAAK,KAAK,CAAC,QAAN,GAAiB,aAAjB,GAAiC,UAAtC;AAAA,CADQ,CAAjB;AAGA;;;;AAGA,OAAO,IAAM,KAAK,GAAG,MAAM,CAAC,MAAP,CAAgB,UAAC,EAAD,EAA0B;AAAzB,MAAE,OAAF,GAAS,EAAT,CAAE,OAAF;AAAA,MAAW,KAAX,GAAW,MAAA,CAAA,EAAA,EAAA,CAAA,SAAA,CAAA,CAAX;;AAA0B,SAAA,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY,MAAA,CAAA,MAAA,CAAA;AAAC,IAAA,KAAK,EAAE;AAAR,GAAA,EAAqB,KAArB,CAAZ,CAAA;AAAyC,CAApF,EAAiH;AAAE,EAAA,KAAK,EAAE;AACvI,QAAI,WAAJ,GAAe;AAAK,aAAO,WAAP;AAA2C;;AADwE;AAAT,CAAjH,CAAd;AAGP,KAAK,CAAC,WAAN,GAAoB,OAApB","sourcesContent":["import * as React from 'react';\nimport styled, { css } from '../../utils/styled';\nimport { StandardProps } from '../../common';\nimport { distance } from '../../distance';\nexport interface LabelProps extends StandardProps {\n    /**\n     * The content of the label.\n     */\n    children?: React.ReactNode;\n    /**\n     * The displayed tooltip, if any.\n     */\n    toolTip?: string;\n    /**\n     * Sets the label into an attached mode.\n     */\n    attached?: boolean;\n}\nconst AttachedLabel = css `\n  padding-left: ${distance.small};\n  display: inline-block;\n  cursor: inherit;\n`;\nconst BlockLabel = css `\n  display: block;\n`;\nconst Styledlabel = styled.label<LabelProps> `\n  ${props => (props.attached ? AttachedLabel : BlockLabel)};\n`;\n/**\n * The label component displays an input or general label.\n */\nexport const Label = Object.assign(((({ toolTip, ...props }) => <Styledlabel title={toolTip} {...props}/>) as React.SFC<LabelProps>), { inner: {\n        get Styledlabel() { return Styledlabel as typeof Styledlabel; }\n    } });\nLabel.displayName = 'Label';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}