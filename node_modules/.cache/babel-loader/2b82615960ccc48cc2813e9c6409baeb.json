{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { DropdownContainer, SlideDownTabs, TabItem, TabContent } from './DropdownPanel.part';\n/**\n * Represents the mobile layout used for a tab control.\n */\n\nexport var DropdownPanel = Object.assign(function (_a) {\n  var theme = _a.theme,\n      data = _a.data,\n      children = _a.children,\n      props = __rest(_a, [\"theme\", \"data\", \"children\"]);\n\n  var pages = [];\n  var slideDownTabHeaders = [];\n  var selectedIndex = -1;\n  data.forEach(function (item, index) {\n    var element = item.element;\n\n    if (element && React.isValidElement(element)) {\n      var header = element.props.header;\n      var active = item.active;\n\n      if (active) {\n        selectedIndex = index;\n      }\n\n      pages.push(React.createElement(TabItem, {\n        theme: theme,\n        key: \"item-\".concat(index),\n        active: active\n      }, element));\n      slideDownTabHeaders.push({\n        key: \"\".concat(index),\n        content: header,\n        type: 'item'\n      });\n    }\n  });\n  return React.createElement(DropdownContainer, Object.assign({\n    theme: theme\n  }, props), React.createElement(SlideDownTabs, {\n    data: slideDownTabHeaders,\n    selectedIndex: selectedIndex,\n    onChange: function onChange(index) {\n      var item = data[index];\n      item && item.onSelect();\n    }\n  }), React.createElement(TabContent, {\n    theme: theme\n  }, pages));\n}, {\n  inner: {\n    get TabItem() {\n      return TabItem;\n    },\n\n    get DropdownContainer() {\n      return DropdownContainer;\n    },\n\n    get SlideDownTabs() {\n      return SlideDownTabs;\n    },\n\n    get TabContent() {\n      return TabContent;\n    }\n\n  }\n});\nDropdownPanel.displayName = 'DropdownPanel';","map":{"version":3,"sources":["../../../../src/components/DropdownPanel/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAIA,SAAS,iBAAT,EAA2C,aAA3C,EAA0D,OAA1D,EAAmE,UAAnE,QAAqF,sBAArF;AAWA;;;;AAGA,OAAO,IAAM,aAAa,GAAG,MAAM,CAAC,MAAP,CAAgB,UAAC,EAAD,EAAwC;AAAA,MAArC,KAAqC,GAAhB,EAAgB,CAArC,KAAqC;AAAA,MAA9B,IAA8B,GAAhB,EAAgB,CAA9B,IAA8B;AAAA,MAAxB,QAAwB,GAAhB,EAAgB,CAAxB,QAAwB;AAAA,MAAd,KAAc,GAAd,MAAA,CAAA,EAAA,EAAA,CAAA,OAAA,EAAA,MAAA,EAAA,UAAA,CAAA,CAAc;;AACjF,MAAM,KAAK,GAA4B,EAAvC;AACA,MAAM,mBAAmB,GAAyB,EAAlD;AACA,MAAI,aAAa,GAAG,CAAC,CAArB;AACA,EAAA,IAAI,CAAC,OAAL,CAAa,UAAC,IAAD,EAAO,KAAP,EAAgB;AACzB,QAAM,OAAO,GAAG,IAAI,CAAC,OAArB;;AACA,QAAI,OAAO,IAAI,KAAK,CAAC,cAAN,CAAqB,OAArB,CAAf,EAA8C;AAAA,UAClC,MADkC,GACvB,OAAO,CAAC,KADe,CAClC,MADkC;AAE1C,UAAM,MAAM,GAAG,IAAI,CAAC,MAApB;;AACA,UAAI,MAAJ,EAAY;AACR,QAAA,aAAa,GAAG,KAAhB;AACH;;AACD,MAAA,KAAK,CAAC,IAAN,CAAW,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ;AAAC,QAAA,KAAK,EAAE,KAAR;AAAe,QAAA,GAAG,iBAAU,KAAV,CAAlB;AAAqC,QAAA,MAAM,EAAE;AAA7C,OAAR,EACZ,OADY,CAAX;AAGA,MAAA,mBAAmB,CAAC,IAApB,CAAyB;AACrB,QAAA,GAAG,YAAK,KAAL,CADkB;AAErB,QAAA,OAAO,EAAE,MAFY;AAGrB,QAAA,IAAI,EAAE;AAHe,OAAzB;AAKH;AACJ,GAjBD;AAkBA,SAAQ,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAkB,MAAA,CAAA,MAAA,CAAA;AAAC,IAAA,KAAK,EAAE;AAAR,GAAA,EAAmB,KAAnB,CAAlB,EACN,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc;AAAC,IAAA,IAAI,EAAE,mBAAP;AAA4B,IAAA,aAAa,EAAE,aAA3C;AAA0D,IAAA,QAAQ,EAAE,kBAAA,KAAK,EAAG;AACxF,UAAM,IAAI,GAAG,IAAI,CAAC,KAAD,CAAjB;AACA,MAAA,IAAI,IAAI,IAAI,CAAC,QAAL,EAAR;AACH;AAHe,GAAd,CADM,EAKN,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AAAC,IAAA,KAAK,EAAE;AAAR,GAAX,EAA2B,KAA3B,CALM,CAAR;AAOH,CA7B4B,EA6BS;AAAE,EAAA,KAAK,EAAE;AACvC,QAAI,OAAJ,GAAW;AAAK,aAAO,OAAP;AAAmC,KADZ;;AAEvC,QAAI,iBAAJ,GAAqB;AAAK,aAAO,iBAAP;AAAuD,KAF1C;;AAGvC,QAAI,aAAJ,GAAiB;AAAK,aAAO,aAAP;AAA+C,KAH9B;;AAIvC,QAAI,UAAJ,GAAc;AAAK,aAAO,UAAP;AAAyC;;AAJrB;AAAT,CA7BT,CAAtB;AAmCP,aAAa,CAAC,WAAd,GAA4B,eAA5B","sourcesContent":["import * as React from 'react';\nimport { StandardProps } from '../../common';\nimport { TabControlItem } from '../TabControl';\nimport { TabPageProps } from '../TabPage';\nimport { DropdownContainer, TabHeaderItem, SlideDownTabs, TabItem, TabContent } from './DropdownPanel.part';\nexport interface DropdownPanelProps extends StandardProps {\n    /**\n     * The tab items that should be shown.\n     */\n    data: Array<TabControlItem>;\n    /**\n     * @ignore\n     */\n    children?: void;\n}\n/**\n * Represents the mobile layout used for a tab control.\n */\nexport const DropdownPanel = Object.assign(((({ theme, data, children, ...props }) => {\n    const pages: Array<React.ReactChild> = [];\n    const slideDownTabHeaders: Array<TabHeaderItem> = [];\n    let selectedIndex = -1;\n    data.forEach((item, index) => {\n        const element = item.element as React.ReactElement<TabPageProps>;\n        if (element && React.isValidElement(element)) {\n            const { header } = element.props;\n            const active = item.active;\n            if (active) {\n                selectedIndex = index;\n            }\n            pages.push(<TabItem theme={theme} key={`item-${index}`} active={active}>\n          {element}\n        </TabItem>);\n            slideDownTabHeaders.push({\n                key: `${index}`,\n                content: header,\n                type: 'item',\n            });\n        }\n    });\n    return (<DropdownContainer theme={theme} {...props}>\n      <SlideDownTabs data={slideDownTabHeaders} selectedIndex={selectedIndex} onChange={index => {\n        const item = data[index];\n        item && item.onSelect();\n    }}/>\n      <TabContent theme={theme}>{pages}</TabContent>\n    </DropdownContainer>);\n}) as React.SFC<DropdownPanelProps>), { inner: {\n        get TabItem() { return TabItem as typeof TabItem; },\n        get DropdownContainer() { return DropdownContainer as typeof DropdownContainer; },\n        get SlideDownTabs() { return SlideDownTabs as typeof SlideDownTabs; },\n        get TabContent() { return TabContent as typeof TabContent; }\n    } });\nDropdownPanel.displayName = 'DropdownPanel';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}