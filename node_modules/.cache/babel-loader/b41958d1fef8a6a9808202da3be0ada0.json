{"ast":null,"code":"import * as React from 'react';\nimport styled, { themed, css } from '../../utils/styled';\nimport { getFontStyle } from '../../textStyles';\nimport { IncreaseDecrease } from '../IncreaseDecrease';\nimport { distance } from '../../distance';\nconst StyledIncreaseDecrease = styled(IncreaseDecrease)`\n  margin-left: ${distance.xsmall};\n`;\nconst HeaderLabel = styled.div`\n  font-size: 0;\n  white-space: nowrap;\n\n  > span {\n    ${getFontStyle({\n  size: 'small'\n})}\n\n    display: inline-block;\n    vertical-align: middle;\n  }\n`;\nexport const StyledTableHead = styled.thead`\n  ${getFontStyle({\n  weight: 'bold'\n})}\n  \n  color: ${themed(({\n  theme\n}) => theme.text6 || theme.text1)};\n`;\nexport const StyledTableFoot = styled.tfoot`\n  ${getFontStyle({\n  size: 'xSmall'\n})}\n`;\nexport const StyledTableHeaderRow = styled.tr``;\nexport const StyledTableRow = styled.tr(themed(({\n  theme: {\n    ui3,\n    ui4,\n    text1\n  }\n}) => css`\n      border-bottom: 1px solid ${ui4};\n      color: ${text1};\n\n      &:hover {\n        background: ${ui3};\n      }\n    `));\nexport const StyledTableHeader = styled('th')`\n  text-align: left;\n  border-bottom: 1px solid ${themed(({\n  theme\n}) => theme.ui5)};\n  cursor: ${({\n  sortable\n}) => sortable ? 'pointer' : 'default'};\n  box-sizing: border-box;\n  ${({\n  width\n}) => width && `width: ${width}` || ''};\n`;\nexport const getDefaultHeaderCellRenderer = sort => ({\n  value,\n  sorting,\n  column,\n  key\n}) => {\n  if (column !== -1) {\n    return React.createElement(HeaderLabel, null, React.createElement(\"span\", null, value), sorting !== false && React.createElement(StyledIncreaseDecrease, {\n      value: sorting ? sorting === 'descending' ? 'decrease' : 'increase' : undefined,\n      onIncrease: e => {\n        e.stopPropagation();\n        sort(key, 'ascending');\n      },\n      onDecrease: e => {\n        e.stopPropagation();\n        sort(key, 'descending');\n      }\n    }));\n  }\n\n  return value;\n};\nexport function defaultCellRenderer({\n  value\n}) {\n  switch (typeof value) {\n    case 'boolean':\n    case 'number':\n    case 'string':\n      return value.toString();\n\n    case 'object':\n      if (value) {\n        return value.toString();\n      }\n\n      break;\n  }\n\n  return '';\n}\nexport function defaultBodyRenderer(e) {\n  const TableBody = e.table;\n  return React.createElement(TableBody, Object.assign({}, e.props), e.rows);\n}\nexport function getColumns(data, columns) {\n  return columns || Object.keys(data[0] || {}).reduce((columns, key) => {\n    columns[key] = {\n      header: key,\n      sortable: true\n    };\n    return columns;\n  }, {});\n}\nexport function handleDataClickedEvent(tableCellEvent, handler) {\n  return e => {\n    e.preventDefault();\n    const {\n      row,\n      column,\n      key,\n      data\n    } = tableCellEvent;\n\n    if (typeof handler === 'function') {\n      handler(Object.assign({}, tableCellEvent, {\n        value: data && (column === -1 ? row + 1 : data[key])\n      }));\n    }\n  };\n}","map":{"version":3,"sources":["../../../../src/components/Table/TableShared.part.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { TableBodyRenderEvent, Column, TableColumns, TableCellRenderEvent, TableCellEvent, TableProps, } from './Table.types.part';\nimport styled, { themed, css } from '../../utils/styled';\nimport { getFontStyle } from '../../textStyles';\nimport { IncreaseDecrease } from '../IncreaseDecrease';\nimport { distance } from '../../distance';\nconst StyledIncreaseDecrease = styled(IncreaseDecrease) `\n  margin-left: ${distance.xsmall};\n`;\nconst HeaderLabel = styled.div `\n  font-size: 0;\n  white-space: nowrap;\n\n  > span {\n    ${getFontStyle({ size: 'small' })}\n\n    display: inline-block;\n    vertical-align: middle;\n  }\n`;\nexport const StyledTableHead = styled.thead `\n  ${getFontStyle({ weight: 'bold' })}\n  \n  color: ${themed(({ theme }) => theme.text6 || theme.text1)};\n`;\nexport const StyledTableFoot = styled.tfoot `\n  ${getFontStyle({ size: 'xSmall' })}\n`;\nexport const StyledTableHeaderRow = styled.tr ``;\nexport const StyledTableRow = styled.tr(themed(({ theme: { ui3, ui4, text1 } }) => css `\n      border-bottom: 1px solid ${ui4};\n      color: ${text1};\n\n      &:hover {\n        background: ${ui3};\n      }\n    `));\nexport interface TableHeaderProps {\n    sortable?: boolean;\n    width?: string;\n}\nexport const StyledTableHeader = styled('th')<TableHeaderProps> `\n  text-align: left;\n  border-bottom: 1px solid ${themed(({ theme }) => theme.ui5)};\n  cursor: ${({ sortable }) => (sortable ? 'pointer' : 'default')};\n  box-sizing: border-box;\n  ${({ width }) => (width && `width: ${width}`) || ''};\n`;\nexport const getDefaultHeaderCellRenderer = (sort: (key: string, order: 'ascending' | 'descending') => void) => <T extends {}>({ value, sorting, column, key, }: TableCellRenderEvent<T>): React.ReactNode => {\n    if (column !== -1) {\n        return (<HeaderLabel>\n        <span>{value}</span>\n        {sorting !== false && (<StyledIncreaseDecrease value={sorting ? (sorting === 'descending' ? 'decrease' : 'increase') : undefined} onIncrease={e => {\n            e.stopPropagation();\n            sort(key, 'ascending');\n        }} onDecrease={e => {\n            e.stopPropagation();\n            sort(key, 'descending');\n        }}/>)}\n      </HeaderLabel>);\n    }\n    return value;\n};\nexport function defaultCellRenderer<T>({ value }: TableCellRenderEvent<T>): React.ReactNode {\n    switch (typeof value) {\n        case 'boolean':\n        case 'number':\n        case 'string':\n            return value.toString();\n        case 'object':\n            if (value) {\n                return value.toString();\n            }\n            break;\n    }\n    return '';\n}\nexport function defaultBodyRenderer(e: TableBodyRenderEvent) {\n    const TableBody = e.table;\n    return <TableBody {...e.props}>{e.rows}</TableBody>;\n}\nexport function getColumns<T>(data: Array<T>, columns?: TableColumns) {\n    return (columns ||\n        Object.keys(data[0] || {}).reduce<{\n            [key: string]: Column;\n        }>((columns, key) => {\n            columns[key] = {\n                header: key,\n                sortable: true,\n            };\n            return columns;\n        }, {}));\n}\nexport function handleDataClickedEvent<T>(tableCellEvent: TableCellEvent<T>, handler?: TableProps<T>['onDataClick']) {\n    return <E extends HTMLElement = HTMLElement>(e: React.MouseEvent<E>) => {\n        e.preventDefault();\n        const { row, column, key, data } = tableCellEvent;\n        if (typeof handler === 'function') {\n            handler({\n                ...tableCellEvent,\n                value: data && (column === -1 ? row + 1 : data[key]),\n            });\n        }\n    };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}