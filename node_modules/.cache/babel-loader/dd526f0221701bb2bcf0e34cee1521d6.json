{"ast":null,"code":"import _classCallCheck from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n\\n  position: absolute;\\n  bottom: 8px;\\n  right: 8px;\\n\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  z-index: 2;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  cursor: pointer;\\n  position: relative;\\n  display: inline-block;\\n  width: 96px;\\n  height: 96px;\\n  padding: 8px;\\n  overflow: hidden;\\n  margin: 10px !important;\\n  user-select: none;\\n  color: \", \";\\n  background: \", \";\\n  \", \";\\n\\n  &:hover {\\n    \", \";\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport * as colors from '../../colors';\nimport styled from '../../utils/styled';\nimport { RadioButton } from '../RadioButton';\nimport { StyledTileIcon } from '../../quarks/StyledTileIcon';\nimport { getFontStyle } from '../../textStyles';\nvar Tile = styled(RadioButton)(_templateObject(), colors.black, colors.grey7, function (props) {\n  return props.checked ? \"outline: \".concat(colors.cyan, \" solid 4px;\") : '';\n}, function (props) {\n  return !props.checked ? \"outline: rgba(29, 29, 29, 0.1) solid 4px;\" : '';\n});\nvar TileTitle = styled.span(_templateObject2(), getFontStyle({\n  size: 'small',\n  weight: 'medium'\n}));\nexport var MetroRadioTile = /*#__PURE__*/function (_React$Component) {\n  _inherits(MetroRadioTile, _React$Component);\n\n  var _super = _createSuper(MetroRadioTile);\n\n  function MetroRadioTile(props) {\n    var _this;\n\n    _classCallCheck(this, MetroRadioTile);\n\n    _this = _super.call(this, props);\n\n    _this.change = function (e) {\n      var onChange = _this.props.onChange;\n\n      if (!_this.state.controlled) {\n        _this.setState({\n          checked: e.value\n        });\n      }\n\n      if (typeof onChange === 'function') {\n        onChange(e);\n      }\n    };\n\n    _this.state = {\n      controlled: props.value !== undefined,\n      checked: props.value || props.defaultValue || false\n    };\n    return _this;\n  }\n\n  _createClass(MetroRadioTile, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(props) {\n      if (this.state.controlled) {\n        this.setState({\n          checked: props.value || false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          image = _a.image,\n          title = _a.title,\n          props = __rest(_a, [\"image\", \"title\"]);\n\n      var checked = this.state.checked;\n      return React.createElement(Tile, Object.assign({\n        onChange: this.change,\n        checked: checked\n      }, props), image && React.createElement(StyledTileIcon, {\n        src: image,\n        width: \"50px\",\n        height: \"50px\"\n      }), title && React.createElement(TileTitle, null, title));\n    }\n  }]);\n\n  return MetroRadioTile;\n}(React.Component);\nMetroRadioTile.inner = {\n  get Tile() {\n    return Tile;\n  },\n\n  get StyledTileIcon() {\n    return StyledTileIcon;\n  },\n\n  get TileTitle() {\n    return TileTitle;\n  }\n\n};","map":{"version":3,"sources":["../../../../src/components/MetroRadioTile/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as colors from '../../colors';\nimport styled from '../../utils/styled';\nimport { RadioButton, RadioButtonChangeEvent, RadioButtonProps } from '../RadioButton';\nimport { StyledTileIcon } from '../../quarks/StyledTileIcon';\nimport { getFontStyle } from '../../textStyles';\nconst Tile = styled(RadioButton)<{\n    checked: boolean;\n}> `\n  cursor: pointer;\n  position: relative;\n  display: inline-block;\n  width: 96px;\n  height: 96px;\n  padding: 8px;\n  overflow: hidden;\n  margin: 10px !important;\n  user-select: none;\n  color: ${colors.black};\n  background: ${colors.grey7};\n  ${props => (props.checked ? `outline: ${colors.cyan} solid 4px;` : '')};\n\n  &:hover {\n    ${props => (!props.checked ? `outline: rgba(29, 29, 29, 0.1) solid 4px;` : '')};\n  }\n`;\nconst TileTitle = styled.span `\n  ${getFontStyle({ size: 'small', weight: 'medium' })}\n\n  position: absolute;\n  bottom: 8px;\n  right: 8px;\n\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  z-index: 2;\n`;\nexport interface MetroRadioTileProps extends RadioButtonProps {\n    /**\n     * The source URL of an icon, if used. The icon is scaled to max. 50px of the tile.\n     */\n    image?: string;\n    /**\n     * The title of the tile, if anything.\n     */\n    title?: string;\n}\nexport interface MetroRadioTileState {\n    checked: boolean;\n    controlled: boolean;\n}\nexport class MetroRadioTile extends React.Component<MetroRadioTileProps, MetroRadioTileState> {\n    constructor(props: MetroRadioTileProps) {\n        super(props);\n        this.state = {\n            controlled: props.value !== undefined,\n            checked: props.value || props.defaultValue || false,\n        };\n    }\n    UNSAFE_componentWillReceiveProps(props: MetroRadioTileProps) {\n        if (this.state.controlled) {\n            this.setState({\n                checked: props.value || false,\n            });\n        }\n    }\n    private change = (e: RadioButtonChangeEvent) => {\n        const { onChange } = this.props;\n        if (!this.state.controlled) {\n            this.setState({\n                checked: e.value,\n            });\n        }\n        if (typeof onChange === 'function') {\n            onChange(e);\n        }\n    };\n    render() {\n        const { image, title, ...props } = this.props;\n        const { checked } = this.state;\n        return (<Tile onChange={this.change} checked={checked} {...props}>\n        {image && <StyledTileIcon src={image} width=\"50px\" height=\"50px\"/>}\n        {title && <TileTitle>{title}</TileTitle>}\n      </Tile>);\n    }\n    static inner = {\n        get Tile() { return Tile as typeof Tile; },\n        get StyledTileIcon() { return StyledTileIcon as typeof StyledTileIcon; },\n        get TileTitle() { return TileTitle as typeof TileTitle; }\n    };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}