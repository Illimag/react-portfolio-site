{"ast":null,"code":"import _classCallCheck from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n\\n  display: flex;\\n  align-items: center;\\n  padding: \", \";\\n  color: \", \";\\n  background: \", \";\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  ::-ms-clear { display: none; }\\n\\n  white-space: pre-wrap;\\n  word-break: break-word;\\n\\n  \", \"\\n  color: \", \";\\n  border-radius: 0;\\n  font-family: inherit;\\n  padding: \", \";\\n  box-sizing: border-box;\\n  box-shadow: none;\\n  resize: \", \";\\n  margin: 0;\\n  width: 100%;\\n  cursor: \", \";\\n  border: none;\\n  border-bottom: 1px solid\\n    \", \";\\n  background: \", \";\\n\\n  &::placeholder {\\n    color: \", \";\\n    opacity: \", \";\\n    transition: inherit;\\n  }\\n\\n  &:focus {\\n    outline: none;\\n\\n    &::placeholder {\\n      opacity: 1;\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport styled, { themed } from '../../utils/styled';\nimport { StackPanel } from '../StackPanel';\nimport { purpleRed } from '../../colors';\nimport { InputIcon } from '../InputIcon';\nimport { withFormContext } from '../../hoc/withFormContext';\nimport { showInputInfo } from '../../utils/input';\nimport { distance } from '../../distance';\nimport { StyledInputRow, StyledInput, StyledInputBox, getTextFieldBorderType } from '../../quarks';\nimport { getFontSize } from '../../textStyles';\nvar TextFieldContainer = styled.div(_templateObject());\nvar TextFieldWrapper = styled(StackPanel)(_templateObject2());\nvar TextFieldArea = styled.textarea(_templateObject3(), getFontSize('medium'), themed(function (_ref) {\n  var theme = _ref.theme,\n      disabled = _ref.disabled;\n  return disabled ? theme.text3 : theme.text2;\n}), function (props) {\n  return props.labelShown ? \"\".concat(distance.large, \" \").concat(distance.medium, \" \").concat(distance.small) : distance.medium;\n}, function (props) {\n  return props.resizable || 'none';\n}, function (props) {\n  return props.disabled ? 'not-allowed' : 'auto';\n}, themed(function (_ref2) {\n  var theme = _ref2.theme,\n      border = _ref2.border;\n  return border === 3\n  /* error */\n  ? purpleRed : theme.ui4;\n}), themed(function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.ui2;\n}), themed(function (_ref4) {\n  var theme = _ref4.theme,\n      disabled = _ref4.disabled;\n  return disabled ? theme.text3 : theme.text2;\n}), function (props) {\n  return props.labelShown ? '0' : '1';\n});\nvar TextFieldElement = styled.div(_templateObject4(), getFontSize('medium'), distance.medium, themed(function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.text2;\n}), themed(function (_ref6) {\n  var theme = _ref6.theme;\n  return theme.ui3;\n}));\n\nvar TextFieldInt = /*#__PURE__*/function (_React$Component) {\n  _inherits(TextFieldInt, _React$Component);\n\n  var _super = _createSuper(TextFieldInt);\n\n  function TextFieldInt(props) {\n    var _this;\n\n    _classCallCheck(this, TextFieldInt);\n\n    _this = _super.call(this, props);\n\n    _this.changeValue = function (e) {\n      _this.updateValue(e.target.value, e);\n    };\n\n    _this.changeHeight = function () {\n      var resizable = _this.props.resizable;\n      var element = _this._element;\n\n      if (resizable === 'auto' && element) {\n        element.style.height = '1px';\n        element.style.height = \"\".concat(element.scrollHeight, \"px\");\n      }\n    };\n\n    _this.setTextFieldNode = function (node) {\n      _this._element = node;\n      var inputRef = _this.props.inputRef;\n\n      if (typeof inputRef === 'function') {\n        inputRef(node);\n      }\n    };\n\n    _this.setFocus = function () {\n      var onFocus = _this.props.onFocus;\n\n      _this.setState({\n        focused: true\n      }, onFocus);\n    };\n\n    _this.unsetFocus = function () {\n      var onBlur = _this.props.onBlur;\n\n      _this.setState({\n        focused: false\n      }, onBlur);\n    };\n\n    _this.handleReset = function () {\n      var onClear = _this.props.onClear;\n\n      _this.updateValue('');\n\n      if (typeof onClear === 'function') {\n        onClear();\n      }\n    };\n\n    _this.state = {\n      focused: false,\n      reveal: false,\n      controlled: props.value !== undefined,\n      value: props.value || props.defaultValue || '',\n      error: props.error\n    };\n    return _this;\n  }\n\n  _createClass(TextFieldInt, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(_ref7) {\n      var _ref7$value = _ref7.value,\n          value = _ref7$value === void 0 ? '' : _ref7$value,\n          error = _ref7.error;\n\n      if (this.state.controlled) {\n        this.setState({\n          value: value\n        });\n      }\n\n      this.setState({\n        error: error\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.changeHeight();\n      var form = this.props.form;\n      var controlled = this.state.controlled;\n\n      if (!controlled && form) {\n        form.subscribe(this);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var form = this.props.form;\n      var controlled = this.state.controlled;\n\n      if (!controlled && form) {\n        form.unsubscribe(this);\n      }\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value, e) {\n      var _this$props = this.props,\n          onChange = _this$props.onChange,\n          _this$props$name = _this$props.name,\n          name = _this$props$name === void 0 ? '' : _this$props$name,\n          form = _this$props.form;\n\n      if (!this.state.controlled) {\n        if (form) {\n          form.change({\n            name: name,\n            value: value\n          });\n        } else {\n          this.setState({\n            value: value\n          });\n        }\n      }\n\n      if (typeof onChange === 'function') {\n        onChange({\n          value: value,\n          originalEvent: e\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _a = this.props,\n          theme = _a.theme,\n          borderless = _a.borderless,\n          prefix = _a.prefix,\n          suffix = _a.suffix,\n          multiline = _a.multiline,\n          _a$resizable = _a.resizable,\n          resizable = _a$resizable === void 0 ? false : _a$resizable,\n          disabled = _a.disabled,\n          placeholder = _a.placeholder,\n          info = _a.info,\n          label = _a.label,\n          clearable = _a.clearable,\n          onClear = _a.onClear,\n          icon = _a.icon,\n          _0 = _a.onChange,\n          _1 = _a.defaultValue,\n          _2 = _a.value,\n          _3 = _a.form,\n          _4 = _a.onFocus,\n          _5 = _a.onBlur,\n          _6 = _a.inputRef,\n          _7 = _a.onInput,\n          rest = __rest(_a, [\"theme\", \"borderless\", \"prefix\", \"suffix\", \"multiline\", \"resizable\", \"disabled\", \"placeholder\", \"info\", \"label\", \"clearable\", \"onClear\", \"icon\", \"onChange\", \"defaultValue\", \"value\", \"form\", \"onFocus\", \"onBlur\", \"inputRef\", \"onInput\"]);\n\n      var _this$state = this.state,\n          focused = _this$state.focused,\n          value = _this$state.value,\n          error = _this$state.error;\n      var rows = typeof multiline === 'number' ? multiline : undefined;\n      var border = getTextFieldBorderType(borderless, !!error, focused);\n      var hasValue = !!value;\n      var input = rows !== undefined || multiline ? React.createElement(TextFieldArea, Object.assign({\n        ref: this.setTextFieldNode,\n        onInput: this.changeHeight,\n        border: border,\n        rows: rows,\n        resizable: typeof resizable === 'string' ? resizable : resizable ? 'auto' : undefined,\n        disabled: disabled,\n        labelShown: label !== undefined,\n        placeholder: placeholder,\n        onFocus: this.setFocus,\n        onBlur: this.unsetFocus,\n        value: value,\n        onChange: this.changeValue\n      }, rest)) : React.createElement(StyledInput, Object.assign({\n        ref: function ref(el) {\n          return _this2.setTextFieldNode(el);\n        },\n        theme: theme,\n        disabled: disabled,\n        labelShown: label !== undefined,\n        placeholder: placeholder,\n        onFocus: this.setFocus,\n        onBlur: this.unsetFocus,\n        value: value,\n        onChange: this.changeValue\n      }, rest));\n      var textFieldWrapper = React.createElement(StyledInputRow, {\n        error: !!error,\n        focused: focused,\n        hasValue: hasValue,\n        label: label,\n        placeholder: placeholder,\n        multiline: rows !== undefined || multiline !== undefined\n      }, input);\n      return React.createElement(TextFieldContainer, null, rows !== undefined || multiline ? textFieldWrapper : React.createElement(TextFieldWrapper, null, prefix && React.createElement(TextFieldElement, null, prefix), React.createElement(StyledInputBox, {\n        border: border,\n        disabled: disabled,\n        focused: focused,\n        hasValue: hasValue\n      }, textFieldWrapper, React.createElement(InputIcon, {\n        disabled: disabled,\n        defaultIcon: icon,\n        theme: theme,\n        error: error,\n        hasValue: hasValue,\n        clearable: clearable,\n        onClear: this.handleReset,\n        onClick: function onClick() {\n          return _this2._element && _this2._element.focus();\n        }\n      })), suffix && React.createElement(TextFieldElement, null, suffix)), showInputInfo(error, info));\n    }\n  }]);\n\n  return TextFieldInt;\n}(React.Component);\n\nTextFieldInt.inner = {\n  get TextFieldArea() {\n    return TextFieldArea;\n  },\n\n  get StyledInput() {\n    return StyledInput;\n  },\n\n  get StyledInputRow() {\n    return StyledInputRow;\n  },\n\n  get TextFieldContainer() {\n    return TextFieldContainer;\n  },\n\n  get TextFieldWrapper() {\n    return TextFieldWrapper;\n  },\n\n  get TextFieldElement() {\n    return TextFieldElement;\n  },\n\n  get StyledInputBox() {\n    return StyledInputBox;\n  },\n\n  get InputIcon() {\n    return InputIcon;\n  }\n\n};\n/**\n * A text field for custom user input.\n */\n\nexport var TextField = withFormContext(TextFieldInt);\nTextField.displayName = 'TextField';","map":{"version":3,"sources":["../../../../src/components/TextField/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled, { themed } from '../../utils/styled';\nimport { StackPanel } from '../StackPanel';\nimport { purpleRed } from '../../colors';\nimport { InputIcon } from '../InputIcon';\nimport { InputChangeEvent, TextInputProps } from '../../common';\nimport { FormContextProps, withFormContext } from '../../hoc/withFormContext';\nimport { showInputInfo } from '../../utils/input';\nimport { distance } from '../../distance';\nimport { StyledInputRow, StyledInput, TextFieldBorderType, StyledInputBox, getTextFieldBorderType } from '../../quarks';\nimport { getFontSize } from '../../textStyles';\nexport type TextFieldChangeEvent = InputChangeEvent<string>;\ntype TextFieldInputNodeType = HTMLTextAreaElement | HTMLInputElement;\nexport interface TextFieldProps extends TextInputProps {\n    /**\n     * Allows multi-line input from the user. Either a boolean\n     * or a number specifying the amount of rows to show.\n     * @default false\n     */\n    multiline?: boolean | number;\n    /**\n     * Allows resizing the text field if being used as a multi-line input.\n     * @default false\n     */\n    resizable?: boolean | 'auto' | 'vertical' | 'horizontal';\n    /**\n     * Shows a clearing icon which resets the input to an empty string.\n     * @default false\n     */\n    clearable?: boolean;\n    /**\n     * Event emitted when the clear button was pressed. Will always be fired after\n     * the onChange event, i.e., after the value was set / proposed.\n     */\n    onClear?(): void;\n    /**\n     * Gets the reference to the underlying input or textarea element.\n     * @ignore\n     */\n    inputRef?(instance: HTMLElement | null): void;\n    /**\n     * @ignore\n     */\n    children?: void;\n}\nexport interface TextFieldState {\n    controlled: boolean;\n    focused: boolean;\n    reveal: boolean;\n    value: string;\n    error?: React.ReactChild;\n}\ninterface TextFieldAreaProps {\n    border: TextFieldBorderType;\n    disabled?: boolean;\n    resizable?: string;\n    labelShown: boolean;\n}\nconst TextFieldContainer = styled.div `\n  position: relative;\n`;\nconst TextFieldWrapper = styled(StackPanel) `\n  display: flex;\n`;\nconst TextFieldArea = styled.textarea<TextFieldAreaProps> `\n  ::-ms-clear { display: none; }\n\n  white-space: pre-wrap;\n  word-break: break-word;\n\n  ${getFontSize('medium')}\n  color: ${themed(({ theme, disabled }) => (disabled ? theme.text3 : theme.text2))};\n  border-radius: 0;\n  font-family: inherit;\n  padding: ${props => (props.labelShown ? `${distance.large} ${distance.medium} ${distance.small}` : distance.medium)};\n  box-sizing: border-box;\n  box-shadow: none;\n  resize: ${props => props.resizable || 'none'};\n  margin: 0;\n  width: 100%;\n  cursor: ${props => (props.disabled ? 'not-allowed' : 'auto')};\n  border: none;\n  border-bottom: 1px solid\n    ${themed(({ theme, border }) => (border === TextFieldBorderType.error ? purpleRed : theme.ui4))};\n  background: ${themed(({ theme }) => theme.ui2)};\n\n  &::placeholder {\n    color: ${themed(({ theme, disabled }) => (disabled ? theme.text3 : theme.text2))};\n    opacity: ${props => (props.labelShown ? '0' : '1')};\n    transition: inherit;\n  }\n\n  &:focus {\n    outline: none;\n\n    &::placeholder {\n      opacity: 1;\n    }\n  }\n`;\nconst TextFieldElement = styled.div `\n  ${getFontSize('medium')}\n\n  display: flex;\n  align-items: center;\n  padding: ${distance.medium};\n  color: ${themed(({ theme }) => theme.text2)};\n  background: ${themed(({ theme }) => theme.ui3)};\n`;\nclass TextFieldInt extends React.Component<TextFieldProps & FormContextProps, TextFieldState> {\n    private _element: TextFieldInputNodeType | null;\n    constructor(props: TextFieldProps) {\n        super(props);\n        this.state = {\n            focused: false,\n            reveal: false,\n            controlled: props.value !== undefined,\n            value: props.value || props.defaultValue || '',\n            error: props.error,\n        };\n    }\n    UNSAFE_componentWillReceiveProps({ value = '', error }: TextFieldProps) {\n        if (this.state.controlled) {\n            this.setState({ value });\n        }\n        this.setState({ error });\n    }\n    componentDidMount() {\n        this.changeHeight();\n        const { form } = this.props;\n        const { controlled } = this.state;\n        if (!controlled && form) {\n            form.subscribe(this);\n        }\n    }\n    componentWillUnmount() {\n        const { form } = this.props;\n        const { controlled } = this.state;\n        if (!controlled && form) {\n            form.unsubscribe(this);\n        }\n    }\n    private changeValue = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n        this.updateValue(e.target.value, e);\n    };\n    private updateValue(value: string, e?: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const { onChange, name = '', form } = this.props;\n        if (!this.state.controlled) {\n            if (form) {\n                form.change({\n                    name,\n                    value,\n                });\n            }\n            else {\n                this.setState({\n                    value,\n                });\n            }\n        }\n        if (typeof onChange === 'function') {\n            onChange({\n                value,\n                originalEvent: e,\n            });\n        }\n    }\n    private changeHeight = () => {\n        const { resizable } = this.props;\n        const element = this._element;\n        if (resizable === 'auto' && element) {\n            element.style.height = '1px';\n            element.style.height = `${element.scrollHeight}px`;\n        }\n    };\n    private setTextFieldNode = (node: TextFieldInputNodeType | null) => {\n        this._element = node;\n        const { inputRef } = this.props;\n        if (typeof inputRef === 'function') {\n            inputRef(node);\n        }\n    };\n    private setFocus = () => {\n        const { onFocus } = this.props;\n        this.setState({\n            focused: true,\n        }, onFocus);\n    };\n    private unsetFocus = () => {\n        const { onBlur } = this.props;\n        this.setState({\n            focused: false,\n        }, onBlur);\n    };\n    private handleReset = () => {\n        const { onClear } = this.props;\n        this.updateValue('');\n        if (typeof onClear === 'function') {\n            onClear();\n        }\n    };\n    render() {\n        const { theme, borderless, prefix, suffix, multiline, resizable = false, disabled, placeholder, info, label, clearable, onClear, icon, onChange: _0, defaultValue: _1, value: _2, form: _3, onFocus: _4, onBlur: _5, inputRef: _6, onInput: _7, ...rest } = this.props;\n        const { focused, value, error } = this.state;\n        const rows = typeof multiline === 'number' ? multiline : undefined;\n        const border = getTextFieldBorderType(borderless, !!error, focused);\n        const hasValue = !!value;\n        const input = rows !== undefined || multiline ? (<TextFieldArea ref={this.setTextFieldNode} onInput={this.changeHeight} border={border} rows={rows} resizable={typeof resizable === 'string' ? resizable : resizable ? 'auto' : undefined} disabled={disabled} labelShown={label !== undefined} placeholder={placeholder} onFocus={this.setFocus} onBlur={this.unsetFocus} value={value} onChange={this.changeValue} {...rest}/>) : (<StyledInput ref={el => this.setTextFieldNode(el as TextFieldInputNodeType)} theme={theme} disabled={disabled} labelShown={label !== undefined} placeholder={placeholder} onFocus={this.setFocus} onBlur={this.unsetFocus} value={value} onChange={this.changeValue} {...rest}/>);\n        const textFieldWrapper = (<StyledInputRow error={!!error} focused={focused} hasValue={hasValue} label={label} placeholder={placeholder} multiline={rows !== undefined || multiline !== undefined}>\n        {input}\n      </StyledInputRow>);\n        return (<TextFieldContainer>\n        {rows !== undefined || multiline ? (textFieldWrapper) : (<TextFieldWrapper>\n            {prefix && <TextFieldElement>{prefix}</TextFieldElement>}\n            <StyledInputBox border={border} disabled={disabled} focused={focused} hasValue={hasValue}>\n              {textFieldWrapper}\n              <InputIcon disabled={disabled} defaultIcon={icon} theme={theme} error={error} hasValue={hasValue} clearable={clearable} onClear={this.handleReset} onClick={() => this._element && this._element.focus()}/>\n            </StyledInputBox>\n            {suffix && <TextFieldElement>{suffix}</TextFieldElement>}\n          </TextFieldWrapper>)}\n        {showInputInfo(error, info)}\n      </TextFieldContainer>);\n    }\n    static inner = {\n        get TextFieldArea() { return TextFieldArea as typeof TextFieldArea; },\n        get StyledInput() { return StyledInput as typeof StyledInput; },\n        get StyledInputRow() { return StyledInputRow as typeof StyledInputRow; },\n        get TextFieldContainer() { return TextFieldContainer as typeof TextFieldContainer; },\n        get TextFieldWrapper() { return TextFieldWrapper as typeof TextFieldWrapper; },\n        get TextFieldElement() { return TextFieldElement as typeof TextFieldElement; },\n        get StyledInputBox() { return StyledInputBox as typeof StyledInputBox; },\n        get InputIcon() { return InputIcon as typeof InputIcon; }\n    };\n}\n/**\n * A text field for custom user input.\n */\nexport const TextField = withFormContext(TextFieldInt);\nTextField.displayName = 'TextField';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}