{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport * as React from 'react';\nimport styled, { themed, css } from '../../utils/styled';\nimport { showInputInfo } from '../../utils/input';\nimport { StyledFileImagePreview, StyledFileItem, StyledFileList } from '../../quarks';\nimport { withFormContext } from '../../hoc/withFormContext';\nimport { Icon } from '../Icon';\nimport { IconLink } from '../IconLink';\nimport { Spinner } from '../Spinner';\nimport { distance } from '../../distance';\n\nfunction getFiles(target, files = []) {\n  target.push(...files);\n  return target;\n}\n\nconst StyledDropzone = styled.div(themed(({\n  disabled,\n  active,\n  theme\n}) => css`\n      width: 100%;\n      height: 100%;\n      min-height: 150px;\n      margin: 0 auto;\n      padding: ${distance.medium};\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n      align-items: center;\n      color: ${disabled ? theme.textDisabled : theme.text3};\n      background-repeat: no-repeat;\n      background-position: center;\n      background-size: contain;\n      background-color: ${disabled ? theme.ui3 : active ? theme.ui2 : theme.ui1};\n      border: 1px ${disabled ? `solid ${theme.ui1}` : `dashed ${active ? theme.ui0 : theme.ui4}`};\n      cursor: ${disabled ? 'no-drop' : 'pointer'};\n      box-sizing: border-box;\n    `));\nconst DropzoneLabel = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  flex: 1;\n  pointer-events: none;\n`;\nconst StyledLabel = styled.span`\n  display: table-cell;\n  vertical-align: middle;\n  text-align: center;\n`;\nconst StyledAction = styled.div`\n  margin-top: ${distance.small};\n  visibility: ${props => props.active || props.disabled ? 'hidden' : 'visible'};\n`;\nconst FileInput = styled.input`\n  display: none;\n`;\nconst Remove = styled.div`\n  cursor: pointer;\n  line-height: 1;\n`;\n\nclass DropzoneInt extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addFileEntries = files => {\n      const {\n        multiple,\n        form,\n        name = ''\n      } = this.props;\n\n      if (!this.state.controlled) {\n        if (form) {\n          form.change({\n            name,\n            value: multiple ? [...this.state.value, ...files] : files\n          });\n        } else {\n          this.setState(prevState => ({\n            value: multiple ? [...prevState.value, ...files] : files,\n            previews: []\n          }), () => this.notifyChanges(this.state.value));\n        }\n      } else {\n        this.notifyChanges(multiple ? [...this.state.value, ...files] : files);\n      }\n    };\n\n    this.onDragOver = e => {\n      e.preventDefault();\n    };\n\n    this.onDragEnter = () => {\n      this.setState({\n        over: true\n      });\n    };\n\n    this.onDragLeave = () => {\n      this.setState({\n        over: false\n      });\n    };\n\n    this.onOpenAction = () => {\n      const {\n        onOpen\n      } = this.props;\n      let open = true;\n\n      if (typeof onOpen === 'function') {\n        onOpen({\n          preventDefault() {\n            open = false;\n          }\n\n        });\n      }\n\n      return open;\n    };\n\n    this.onDrop = ev => {\n      ev.preventDefault();\n      this.setState({\n        over: false\n      });\n      const acceptFiles = this.onOpenAction();\n\n      if (!this.props.disabled && acceptFiles) {\n        const droppedFiles = getFiles([], ev.dataTransfer.files);\n        const files = this.props.multiple ? droppedFiles : [droppedFiles[0]];\n        this.addFileEntries(files);\n      }\n    };\n\n    this.onClick = ev => {\n      const files = getFiles([], ev.target.files);\n\n      if (files) {\n        this.addFileEntries(files);\n      }\n\n      ev.preventDefault();\n    };\n\n    this.setInputRef = el => {\n      this.fileInput = el;\n    };\n\n    this.openFilePicker = () => {\n      const open = this.onOpenAction();\n\n      if (open && this.fileInput) {\n        this.fileInput.click();\n      }\n    };\n\n    const value = props.value || props.defaultValue || [];\n    this.state = {\n      over: false,\n      controlled: props.value !== undefined,\n      value,\n      previews: [],\n      error: props.error\n    };\n  }\n\n  componentDidMount() {\n    const {\n      form\n    } = this.props;\n    const {\n      controlled\n    } = this.state;\n\n    if (!controlled && form) {\n      form.subscribe(this);\n    }\n  }\n\n  componentWillUnmount() {\n    const {\n      form\n    } = this.props;\n    const {\n      controlled\n    } = this.state;\n\n    if (!controlled && form) {\n      form.unsubscribe(this);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(e) {\n    const {\n      controlled,\n      value\n    } = this.state;\n\n    if (controlled && e.value && value !== e.value) {\n      this.setState(() => ({\n        value: e.value || [],\n        previews: [],\n        error: e.error\n      }));\n    }\n  }\n\n  removeFileEntry(f) {\n    const {\n      form,\n      name = ''\n    } = this.props;\n\n    if (!this.state.controlled) {\n      if (form) {\n        form.change({\n          name,\n          value: this.state.value.filter(file => f !== file)\n        });\n      } else {\n        this.setState(prevState => ({\n          value: prevState.value.filter(file => f !== file),\n          previews: prevState.previews.filter(preview => preview.file !== f)\n        }), () => this.notifyChanges(this.state.value));\n      }\n    } else {\n      const files = this.state.value.filter(file => f !== file);\n      this.notifyChanges(files);\n    }\n  }\n\n  notifyChanges(files) {\n    const {\n      onChange\n    } = this.props;\n\n    if (typeof onChange === 'function') {\n      onChange({\n        value: files\n      });\n    }\n  }\n\n  renderItem(f) {\n    return React.createElement(StyledFileItem, {\n      key: f.name,\n      name: f.name\n    }, React.createElement(Remove, {\n      onClick: () => this.removeFileEntry(f)\n    }, React.createElement(Icon, {\n      name: \"RemoveCircle\",\n      size: 1\n    })));\n  }\n\n  renderPreview(f) {\n    const preview = this.state.previews.filter(preview => preview.file === f)[0];\n\n    if (f.size > 1000000 || !f.type.match(/image/)) {\n      return this.renderItem(f);\n    }\n\n    if (preview) {\n      return React.createElement(StyledFileImagePreview, {\n        key: f.name,\n        src: preview.data\n      }, React.createElement(Remove, {\n        onClick: () => this.removeFileEntry(f)\n      }, React.createElement(Icon, {\n        name: \"RemoveCircle\",\n        size: 1\n      })));\n    }\n\n    const reader = new FileReader();\n\n    reader.onload = (file => () => {\n      const result = reader.result;\n      typeof result === 'string' && this.setState(prevState => ({\n        previews: [...prevState.previews, {\n          file,\n          data: result\n        }]\n      }));\n    })(f);\n\n    reader.readAsDataURL(f);\n    return React.createElement(StyledFileImagePreview, {\n      key: f.name\n    }, React.createElement(Spinner, {\n      size: \"small\"\n    }));\n  }\n\n  render() {\n    const {\n      value,\n      over,\n      error\n    } = this.state;\n\n    const _a = this.props,\n          {\n      message = 'Drop files here to upload',\n      multiple,\n      info,\n      icon = 'FileDownload',\n      theme,\n      value: _0,\n      defaultValue: _1,\n      disabled,\n      onChange: _2,\n      preview: _3,\n      onInput: _5,\n      children\n    } = _a,\n          props = __rest(_a, [\"message\", \"multiple\", \"info\", \"icon\", \"theme\", \"value\", \"defaultValue\", \"disabled\", \"onChange\", \"preview\", \"onInput\", \"children\"]);\n\n    return React.createElement(\"div\", Object.assign({}, props), React.createElement(StyledDropzone, {\n      active: over,\n      disabled: disabled,\n      onDrop: this.onDrop,\n      onDragOver: this.onDragOver,\n      onDragLeave: this.onDragLeave,\n      onDragEnter: this.onDragEnter,\n      onClick: this.openFilePicker\n    }, React.createElement(DropzoneLabel, null, React.createElement(Icon, {\n      name: icon,\n      size: 2\n    }), React.createElement(StyledLabel, null, message, React.createElement(FileInput, {\n      disabled: disabled,\n      ref: this.setInputRef,\n      type: \"file\",\n      multiple: multiple,\n      value: \"\",\n      onChange: this.onClick\n    }), React.createElement(StyledAction, {\n      active: over,\n      disabled: disabled\n    }, React.createElement(IconLink, {\n      icon: \"Add\"\n    }, children))))), value && value.length > 0 && React.createElement(StyledFileList, null, value.map(file => this.props.preview ? this.renderPreview(file) : this.renderItem(file))), showInputInfo(error, info));\n  }\n\n}\n\nDropzoneInt.inner = {\n  get StyledFileItem() {\n    return StyledFileItem;\n  },\n\n  get Remove() {\n    return Remove;\n  },\n\n  get Icon() {\n    return Icon;\n  },\n\n  get StyledFileImagePreview() {\n    return StyledFileImagePreview;\n  },\n\n  get Spinner() {\n    return Spinner;\n  },\n\n  get StyledDropzone() {\n    return StyledDropzone;\n  },\n\n  get DropzoneLabel() {\n    return DropzoneLabel;\n  },\n\n  get StyledLabel() {\n    return StyledLabel;\n  },\n\n  get FileInput() {\n    return FileInput;\n  },\n\n  get StyledAction() {\n    return StyledAction;\n  },\n\n  get IconLink() {\n    return IconLink;\n  },\n\n  get StyledFileList() {\n    return StyledFileList;\n  }\n\n};\nexport const Dropzone = withFormContext(DropzoneInt);\nDropzone.displayName = 'Dropzone';","map":{"version":3,"sources":["../../../../src/components/Dropzone/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled, { themed, css } from '../../utils/styled';\nimport { showInputInfo } from '../../utils/input';\nimport { FileImagePreview, StyledFileImagePreview, StyledFileItem, StyledFileList } from '../../quarks';\nimport { FormContextProps, withFormContext } from '../../hoc/withFormContext';\nimport { Icon, IconName } from '../Icon';\nimport { InputChangeEvent, InputProps } from '../../common';\nimport { FileSelectOpenEvent } from '../FileSelect';\nimport { IconLink } from '../IconLink';\nimport { Spinner } from '../Spinner';\nimport { distance } from '../../distance';\nexport type DropzoneOpenEvent = FileSelectOpenEvent;\nexport type DropzoneChangeEvent = InputChangeEvent<Array<File>>;\nexport interface DropzoneProps extends InputProps<Array<File>> {\n    /**\n     * Show preview instead of file list.\n     */\n    preview?: boolean;\n    /**\n     * Allow adding multiple files.\n     */\n    multiple?: boolean;\n    /**\n     * Optionally chooses an icon to display.\n     * @default \"FileDownload\"\n     */\n    icon?: IconName;\n    /**\n     * Event fired when the file picker should be opened.\n     */\n    onOpen?(e: DropzoneOpenEvent): void;\n    /**\n     * Message for dragging files to show on drop area.\n     * @default \"Drop files here to upload\"\n     */\n    message?: string;\n}\nfunction getFiles(target: Array<File>, files: any = []) {\n    target.push(...files);\n    return target;\n}\nexport interface DropzoneState {\n    value: Array<File>;\n    error?: React.ReactChild;\n    controlled: boolean;\n    over: boolean;\n    previews: Array<FileImagePreview>;\n}\ninterface StyledDropzoneProps extends React.HTMLAttributes<HTMLDivElement> {\n    active: boolean;\n    disabled?: boolean;\n}\nconst StyledDropzone = styled.div<StyledDropzoneProps>(themed(({ disabled, active, theme }) => css `\n      width: 100%;\n      height: 100%;\n      min-height: 150px;\n      margin: 0 auto;\n      padding: ${distance.medium};\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n      align-items: center;\n      color: ${disabled ? theme.textDisabled : theme.text3};\n      background-repeat: no-repeat;\n      background-position: center;\n      background-size: contain;\n      background-color: ${disabled ? theme.ui3 : active ? theme.ui2 : theme.ui1};\n      border: 1px ${disabled ? `solid ${theme.ui1}` : `dashed ${active ? theme.ui0 : theme.ui4}`};\n      cursor: ${disabled ? 'no-drop' : 'pointer'};\n      box-sizing: border-box;\n    `));\nconst DropzoneLabel = styled.div `\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  flex: 1;\n  pointer-events: none;\n`;\nconst StyledLabel = styled.span `\n  display: table-cell;\n  vertical-align: middle;\n  text-align: center;\n`;\ninterface StyledActionProps {\n    active: boolean;\n    disabled?: boolean;\n}\nconst StyledAction = styled.div<StyledActionProps> `\n  margin-top: ${distance.small};\n  visibility: ${props => (props.active || props.disabled ? 'hidden' : 'visible')};\n`;\nconst FileInput = styled.input `\n  display: none;\n`;\nconst Remove = styled.div `\n  cursor: pointer;\n  line-height: 1;\n`;\nclass DropzoneInt extends React.Component<DropzoneProps & FormContextProps, DropzoneState> {\n    private fileInput: HTMLInputElement | null;\n    constructor(props: DropzoneProps) {\n        super(props);\n        const value = props.value || props.defaultValue || [];\n        this.state = {\n            over: false,\n            controlled: props.value !== undefined,\n            value,\n            previews: [],\n            error: props.error,\n        };\n    }\n    componentDidMount() {\n        const { form } = this.props;\n        const { controlled } = this.state;\n        if (!controlled && form) {\n            form.subscribe(this);\n        }\n    }\n    componentWillUnmount() {\n        const { form } = this.props;\n        const { controlled } = this.state;\n        if (!controlled && form) {\n            form.unsubscribe(this);\n        }\n    }\n    UNSAFE_componentWillReceiveProps(e: DropzoneProps) {\n        const { controlled, value } = this.state;\n        if (controlled && e.value && value !== e.value) {\n            this.setState(() => ({\n                value: e.value || [],\n                previews: [],\n                error: e.error,\n            }));\n        }\n    }\n    private addFileEntries = (files: Array<File>) => {\n        const { multiple, form, name = '' } = this.props;\n        if (!this.state.controlled) {\n            if (form) {\n                form.change({\n                    name,\n                    value: multiple ? [...this.state.value, ...files] : files,\n                });\n            }\n            else {\n                this.setState(prevState => ({\n                    value: multiple ? [...prevState.value, ...files] : files,\n                    previews: [],\n                }), () => this.notifyChanges(this.state.value));\n            }\n        }\n        else {\n            this.notifyChanges(multiple ? [...this.state.value, ...files] : files);\n        }\n    };\n    private onDragOver = (e: React.DragEvent) => {\n        e.preventDefault();\n    };\n    private onDragEnter = () => {\n        this.setState({ over: true });\n    };\n    private onDragLeave = () => {\n        this.setState({ over: false });\n    };\n    private onOpenAction = () => {\n        const { onOpen } = this.props;\n        let open = true;\n        if (typeof onOpen === 'function') {\n            onOpen({\n                preventDefault() {\n                    open = false;\n                },\n            });\n        }\n        return open;\n    };\n    private onDrop = (ev: React.DragEvent) => {\n        ev.preventDefault();\n        this.setState({ over: false });\n        const acceptFiles = this.onOpenAction();\n        if (!this.props.disabled && acceptFiles) {\n            const droppedFiles = getFiles([], ev.dataTransfer.files);\n            const files = this.props.multiple ? droppedFiles : [droppedFiles[0]];\n            this.addFileEntries(files);\n        }\n    };\n    private onClick = (ev: React.ChangeEvent<HTMLInputElement>) => {\n        const files = getFiles([], ev.target.files);\n        if (files) {\n            this.addFileEntries(files);\n        }\n        ev.preventDefault();\n    };\n    private setInputRef = (el: HTMLInputElement) => {\n        this.fileInput = el;\n    };\n    private openFilePicker = () => {\n        const open = this.onOpenAction();\n        if (open && this.fileInput) {\n            this.fileInput.click();\n        }\n    };\n    private removeFileEntry(f: File) {\n        const { form, name = '' } = this.props;\n        if (!this.state.controlled) {\n            if (form) {\n                form.change({\n                    name,\n                    value: this.state.value.filter(file => f !== file),\n                });\n            }\n            else {\n                this.setState(prevState => ({\n                    value: prevState.value.filter(file => f !== file),\n                    previews: prevState.previews.filter(preview => preview.file !== f),\n                }), () => this.notifyChanges(this.state.value));\n            }\n        }\n        else {\n            const files = this.state.value.filter(file => f !== file);\n            this.notifyChanges(files);\n        }\n    }\n    private notifyChanges(files: Array<File>) {\n        const { onChange } = this.props;\n        if (typeof onChange === 'function') {\n            onChange({\n                value: files,\n            });\n        }\n    }\n    private renderItem(f: File) {\n        return (<StyledFileItem key={f.name} name={f.name}>\n        <Remove onClick={() => this.removeFileEntry(f)}>\n          <Icon name=\"RemoveCircle\" size={1}/>\n        </Remove>\n      </StyledFileItem>);\n    }\n    private renderPreview(f: File) {\n        const preview = this.state.previews.filter(preview => preview.file === f)[0];\n        if (f.size > 1000000 || !f.type.match(/image/)) {\n            return this.renderItem(f);\n        }\n        if (preview) {\n            return (<StyledFileImagePreview key={f.name} src={preview.data}>\n          <Remove onClick={() => this.removeFileEntry(f)}>\n            <Icon name=\"RemoveCircle\" size={1}/>\n          </Remove>\n        </StyledFileImagePreview>);\n        }\n        const reader = new FileReader();\n        reader.onload = (file => () => {\n            const result = reader.result;\n            typeof result === 'string' &&\n                this.setState(prevState => ({\n                    previews: [\n                        ...prevState.previews,\n                        {\n                            file,\n                            data: result,\n                        },\n                    ],\n                }));\n        })(f);\n        reader.readAsDataURL(f);\n        return (<StyledFileImagePreview key={f.name}>\n        <Spinner size=\"small\"/>\n      </StyledFileImagePreview>);\n    }\n    render() {\n        const { value, over, error } = this.state;\n        const { message = 'Drop files here to upload', multiple, info, icon = 'FileDownload', theme, value: _0, defaultValue: _1, disabled, onChange: _2, preview: _3, onInput: _5, children, ...props } = this.props;\n        return (<div {...props}>\n        <StyledDropzone active={over} disabled={disabled} onDrop={this.onDrop} onDragOver={this.onDragOver} onDragLeave={this.onDragLeave} onDragEnter={this.onDragEnter} onClick={this.openFilePicker}>\n          <DropzoneLabel>\n            <Icon name={icon} size={2}/>\n            <StyledLabel>\n              {message}\n              <FileInput disabled={disabled} ref={this.setInputRef} type=\"file\" multiple={multiple} value=\"\" onChange={this.onClick}/>\n              <StyledAction active={over} disabled={disabled}>\n                <IconLink icon=\"Add\">{children}</IconLink>\n              </StyledAction>\n            </StyledLabel>\n          </DropzoneLabel>\n        </StyledDropzone>\n        {value && value.length > 0 && (<StyledFileList>\n            {value.map(file => (this.props.preview ? this.renderPreview(file) : this.renderItem(file)))}\n          </StyledFileList>)}\n        {showInputInfo(error, info)}\n      </div>);\n    }\n    static inner = {\n        get StyledFileItem() { return StyledFileItem as typeof StyledFileItem; },\n        get Remove() { return Remove as typeof Remove; },\n        get Icon() { return Icon as typeof Icon; },\n        get StyledFileImagePreview() { return StyledFileImagePreview as typeof StyledFileImagePreview; },\n        get Spinner() { return Spinner as typeof Spinner; },\n        get StyledDropzone() { return StyledDropzone as typeof StyledDropzone; },\n        get DropzoneLabel() { return DropzoneLabel as typeof DropzoneLabel; },\n        get StyledLabel() { return StyledLabel as typeof StyledLabel; },\n        get FileInput() { return FileInput as typeof FileInput; },\n        get StyledAction() { return StyledAction as typeof StyledAction; },\n        get IconLink() { return IconLink as typeof IconLink; },\n        get StyledFileList() { return StyledFileList as typeof StyledFileList; }\n    };\n}\nexport const Dropzone = withFormContext(DropzoneInt);\nDropzone.displayName = 'Dropzone';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}