{"ast":null,"code":"import _toConsumableArray from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nexport function normalizeIndex() {\n  var indexes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  if (Array.isArray(indexes)) {\n    return _toConsumableArray(indexes);\n  } else if (typeof indexes === 'number') {\n    return [indexes];\n  }\n\n  return [];\n}\nexport function toggleIndex(indexes, target) {\n  var multiple = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (hasIndex(indexes, target)) {\n    return indexes.filter(function (value) {\n      return value !== target;\n    });\n  } else {\n    return multiple ? [].concat(_toConsumableArray(indexes), [target]) : [target];\n  }\n}\nexport function hasIndex(indexes, index) {\n  return indexes.indexOf(index) !== -1;\n}","map":{"version":3,"sources":["../../../../../src/components/AccordionTable/helpers/indexHelper.ts"],"names":[],"mappings":";AAGA,OAAM,SAAU,cAAV,GAAoD;AAAA,MAA3B,OAA2B,uEAAF,EAAE;;AACxD,MAAI,KAAK,CAAC,OAAN,CAAc,OAAd,CAAJ,EAA4B;AAC1B,8BAAW,OAAX;AACD,GAFD,MAEO,IAAI,OAAO,OAAP,KAAmB,QAAvB,EAAiC;AACtC,WAAO,CAAC,OAAD,CAAP;AACD;;AAED,SAAO,EAAP;AACD;AAED,OAAM,SAAU,WAAV,CAAsB,OAAtB,EAAwD,MAAxD,EAAwF;AAAA,MAAhB,QAAgB,uEAAL,KAAK;;AAC5F,MAAI,QAAQ,CAAC,OAAD,EAAU,MAAV,CAAZ,EAA+B;AAC7B,WAAO,OAAO,CAAC,MAAR,CAAe,UAAA,KAAK;AAAA,aAAI,KAAK,KAAK,MAAd;AAAA,KAApB,CAAP;AACD,GAFD,MAEO;AACL,WAAO,QAAQ,gCAAO,OAAP,IAAgB,MAAhB,KAA0B,CAAC,MAAD,CAAzC;AACD;AACF;AAED,OAAM,SAAU,QAAV,CAAmB,OAAnB,EAAqD,KAArD,EAAkE;AACtE,SAAO,OAAO,CAAC,OAAR,CAAgB,KAAhB,MAA2B,CAAC,CAAnC;AACD","sourcesContent":["export type SelectedIndex = Array<number> | number;\nexport type NormalizedSelectedIndex = Array<number>;\n\nexport function normalizeIndex(indexes: SelectedIndex = []): NormalizedSelectedIndex {\n  if (Array.isArray(indexes)) {\n    return [...indexes];\n  } else if (typeof indexes === 'number') {\n    return [indexes];\n  }\n\n  return [];\n}\n\nexport function toggleIndex(indexes: NormalizedSelectedIndex, target: number, multiple = false) {\n  if (hasIndex(indexes, target)) {\n    return indexes.filter(value => value !== target);\n  } else {\n    return multiple ? [...indexes, target] : [target];\n  }\n}\n\nexport function hasIndex(indexes: NormalizedSelectedIndex, index: number) {\n  return indexes.indexOf(index) !== -1;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}