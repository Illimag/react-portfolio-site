{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport * as React from 'react';\nimport styled, { themed } from '../../utils/styled';\nimport { Label } from '../Label';\nimport { InputError } from '../InputError';\nimport { FormContext, RadioButtonGroupContext } from '../../contexts';\nimport { distance } from '../../distance';\nimport { PaddedContainer } from '../PaddedContainer';\nconst RadioButtonContainer = styled('div')`\n  position: relative;\n  display: inline-block;\n  opacity: ${props => props.disabled ? '0.5' : '1.0'};\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'};\n\n  + div {\n    margin-left: ${distance.large};\n  }\n`;\nconst RadioButtonCircle = styled.div(({\n  theme: {\n    ui0,\n    ui5\n  }\n}) => `\n  outline: 0;\n  display: inline-block;\n  vertical-align: middle;\n  position: relative;\n  overflow: hidden;\n  flex: 0 0 auto;\n  padding: 0.1875em;\n  border: 2px solid ${ui5};\n  border-radius: 100%;\n\n  &:focus {\n    box-shadow: 0px 0px 0px 2px ${ui0};\n  }\n\n  + label {\n    vertical-align: middle;\n  }\n`);\nconst SelectMark = styled('div')`\n  width: 0.5em;\n  height: 0.5em;\n  border-radius: 50%;\n  outline: 0;\n  background: ${themed(({\n  theme\n}) => theme.ui5)};\n  transition: all 0.2s;\n  opacity: ${props => props.selected ? '1' : '0'};\n  transform: ${props => props.selected ? 'scale(1)' : 'scale(0)'};\n`;\nconst FlexContainer = styled.div`\n  display: flex;\n  align-items: ${({\n  withError\n}) => withError ? 'start' : 'center'};\n`;\n/**\n * The RadioButton input.\n */\n\nexport class RadioButton extends React.PureComponent {\n  render() {\n    const _a = this.props,\n          {\n      children\n    } = _a,\n          props = __rest(_a, [\"children\"]);\n\n    return React.createElement(FormContext.Consumer, null, form => React.createElement(RadioButtonGroupContext.Consumer, null, ctx => React.createElement(RadioButtonInt, Object.assign({\n      group: ctx,\n      form: form\n    }, props), children)));\n  }\n\n}\nRadioButton.inner = {\n  get RadioButtonInt() {\n    return RadioButtonInt;\n  }\n\n};\nexport class RadioButtonInt extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.setValue = value => {\n      const {\n        onChange\n      } = this.props;\n      this.setState({\n        value\n      });\n\n      if (typeof onChange === 'function') {\n        onChange({\n          value\n        });\n      }\n    };\n\n    this.select = () => {\n      const {\n        onChange,\n        disabled,\n        group,\n        form,\n        name = ''\n      } = this.props;\n      const {\n        controlled,\n        value\n      } = this.state;\n\n      if (!disabled && !value) {\n        if (!controlled) {\n          if (group) {\n            group.select(this);\n          } else if (form) {\n            form.change({\n              name,\n              value\n            });\n          } else {\n            this.setState({\n              value: true\n            });\n          }\n        }\n\n        if (typeof onChange === 'function') {\n          onChange({\n            value: true\n          });\n        }\n      }\n    };\n\n    this.onSelected = e => {\n      this.select();\n      e.preventDefault();\n    };\n\n    this.control = e => {\n      switch (e.keyCode) {\n        case 13\n        /* enter */\n        :\n        case 32\n        /* space */\n        :\n          this.select();\n          break;\n\n        default:\n          return;\n      }\n\n      e.stopPropagation();\n      e.preventDefault();\n    };\n\n    this.name = props.name;\n    this.state = {\n      controlled: props.value !== undefined,\n      value: props.value || props.defaultValue || false,\n      error: props.error\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps({\n    value = false,\n    error\n  }) {\n    if (this.state.controlled) {\n      this.setState({\n        value\n      });\n    }\n\n    this.setState({\n      error\n    });\n  }\n\n  componentDidMount() {\n    const {\n      group,\n      form\n    } = this.props;\n    const {\n      controlled\n    } = this.state;\n\n    if (!controlled) {\n      if (group) {\n        group.subscribe(this);\n      } else if (form) {\n        form.subscribe(this);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const {\n      group,\n      form\n    } = this.props;\n    const {\n      controlled\n    } = this.state;\n\n    if (!controlled) {\n      if (group) {\n        group.unsubscribe(this);\n      } else if (form) {\n        form.unsubscribe(this);\n      }\n    }\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      children,\n      disabled,\n      theme,\n      value: _0,\n      defaultValue: _1,\n      onChange: _2,\n      group: _3,\n      form: _4,\n      name: _5\n    } = _a,\n          props = __rest(_a, [\"children\", \"disabled\", \"theme\", \"value\", \"defaultValue\", \"onChange\", \"group\", \"form\", \"name\"]);\n\n    const {\n      value,\n      error\n    } = this.state;\n    const containerProps = Object.assign({}, props, {\n      theme,\n      onClick: this.onSelected,\n      disabled\n    });\n    const circleProps = {\n      selected: value,\n      disabled: !!disabled,\n      onKeyDown: this.control,\n      theme,\n      tabIndex: disabled ? undefined : 0\n    };\n    const Error = error && React.createElement(PaddedContainer, {\n      top: \"xsmall\",\n      bottom: \"xsmall\"\n    }, React.createElement(InputError, null, error));\n    return React.createElement(RadioButtonContainer, Object.assign({}, containerProps), React.createElement(FlexContainer, {\n      withError: !!error\n    }, React.createElement(RadioButtonCircle, Object.assign({}, circleProps), React.createElement(SelectMark, Object.assign({}, circleProps))), children && React.createElement(Label, {\n      attached: true,\n      theme: theme\n    }, children, Error)), !children && Error);\n  }\n\n}\nRadioButtonInt.inner = {\n  get PaddedContainer() {\n    return PaddedContainer;\n  },\n\n  get InputError() {\n    return InputError;\n  },\n\n  get RadioButtonContainer() {\n    return RadioButtonContainer;\n  },\n\n  get FlexContainer() {\n    return FlexContainer;\n  },\n\n  get RadioButtonCircle() {\n    return RadioButtonCircle;\n  },\n\n  get SelectMark() {\n    return SelectMark;\n  },\n\n  get Label() {\n    return Label;\n  }\n\n};","map":{"version":3,"sources":["../../../../src/components/RadioButton/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled, { themed } from '../../utils/styled';\nimport { Label } from '../Label';\nimport { StandardProps } from '../../common';\nimport { InputError } from '../InputError';\nimport { FormContext, RadioButtonGroupContext, RadioButtonGroupContextType } from '../../contexts';\nimport { FormContextProps } from '../../hoc';\nimport { KeyCodes } from '../../utils';\nimport { distance } from '../../distance';\nimport { InputNotification } from '../InputNotification';\nimport { PaddedContainer } from '../PaddedContainer';\nexport interface RadioButtonChangeEvent {\n    /**\n     * The current selected state of the radio button.\n     */\n    value: boolean;\n}\nexport interface RadioButtonProps extends StandardProps {\n    /**\n     * The content of the radio button.\n     */\n    children?: React.ReactNode;\n    /**\n     * Event emitted once the radio button selection changes.\n     */\n    onChange?(e: RadioButtonChangeEvent): void;\n    /**\n     * Sets the radio button as disabled.\n     */\n    disabled?: boolean;\n    /**\n     * Displays the error message below the radio button.\n     */\n    error?: React.ReactChild;\n    /**\n     * Sets the selected and enters the controlled mode.\n     */\n    value?: boolean;\n    /**\n     * Sets the initial selected. Does not enter the controlled mode.\n     */\n    defaultValue?: boolean;\n    /**\n     * Name of the radio button within a radio button group.\n     */\n    name?: string;\n}\nexport interface RadioButtonIntProps extends RadioButtonProps {\n    group?: RadioButtonGroupContextType;\n}\nexport interface RadioButtonIntState {\n    value: boolean;\n    error?: React.ReactChild;\n    controlled: boolean;\n}\ninterface RadioButtonContainerProps {\n    disabled?: boolean;\n}\ninterface RadioButtonCircleProps {\n    selected: boolean;\n    disabled: boolean;\n    theme: any;\n}\nconst RadioButtonContainer = styled('div')<RadioButtonContainerProps> `\n  position: relative;\n  display: inline-block;\n  opacity: ${props => (props.disabled ? '0.5' : '1.0')};\n  cursor: ${props => (props.disabled ? 'not-allowed' : 'pointer')};\n\n  + div {\n    margin-left: ${distance.large};\n  }\n`;\nconst RadioButtonCircle = styled.div(({ theme: { ui0, ui5 } }) => `\n  outline: 0;\n  display: inline-block;\n  vertical-align: middle;\n  position: relative;\n  overflow: hidden;\n  flex: 0 0 auto;\n  padding: 0.1875em;\n  border: 2px solid ${ui5};\n  border-radius: 100%;\n\n  &:focus {\n    box-shadow: 0px 0px 0px 2px ${ui0};\n  }\n\n  + label {\n    vertical-align: middle;\n  }\n`);\nconst SelectMark = styled('div')<RadioButtonCircleProps> `\n  width: 0.5em;\n  height: 0.5em;\n  border-radius: 50%;\n  outline: 0;\n  background: ${themed(({ theme }) => theme.ui5)};\n  transition: all 0.2s;\n  opacity: ${props => (props.selected ? '1' : '0')};\n  transform: ${props => (props.selected ? 'scale(1)' : 'scale(0)')};\n`;\nconst FlexContainer = styled.div<{\n    withError?: boolean;\n}> `\n  display: flex;\n  align-items: ${({ withError }) => (withError ? 'start' : 'center')};\n`;\n/**\n * The RadioButton input.\n */\nexport class RadioButton extends React.PureComponent<RadioButtonProps> {\n    render() {\n        const { children, ...props } = this.props;\n        return (<FormContext.Consumer>\n        {form => (<RadioButtonGroupContext.Consumer>\n            {ctx => (<RadioButtonInt group={ctx} form={form} {...props}>\n                {children}\n              </RadioButtonInt>)}\n          </RadioButtonGroupContext.Consumer>)}\n      </FormContext.Consumer>);\n    }\n    static inner = {\n        get RadioButtonInt() { return RadioButtonInt as typeof RadioButtonInt; }\n    };\n}\nexport class RadioButtonInt extends React.PureComponent<RadioButtonIntProps & FormContextProps, RadioButtonIntState> {\n    readonly name?: string;\n    constructor(props: RadioButtonIntProps) {\n        super(props);\n        this.name = props.name;\n        this.state = {\n            controlled: props.value !== undefined,\n            value: props.value || props.defaultValue || false,\n            error: props.error,\n        };\n    }\n    UNSAFE_componentWillReceiveProps({ value = false, error }: RadioButtonIntProps) {\n        if (this.state.controlled) {\n            this.setState({ value });\n        }\n        this.setState({ error });\n    }\n    componentDidMount() {\n        const { group, form } = this.props;\n        const { controlled } = this.state;\n        if (!controlled) {\n            if (group) {\n                group.subscribe(this);\n            }\n            else if (form) {\n                form.subscribe(this);\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { group, form } = this.props;\n        const { controlled } = this.state;\n        if (!controlled) {\n            if (group) {\n                group.unsubscribe(this);\n            }\n            else if (form) {\n                form.unsubscribe(this);\n            }\n        }\n    }\n    setValue = (value: boolean) => {\n        const { onChange } = this.props;\n        this.setState({\n            value,\n        });\n        if (typeof onChange === 'function') {\n            onChange({\n                value,\n            });\n        }\n    };\n    private select = () => {\n        const { onChange, disabled, group, form, name = '' } = this.props;\n        const { controlled, value } = this.state;\n        if (!disabled && !value) {\n            if (!controlled) {\n                if (group) {\n                    group.select(this);\n                }\n                else if (form) {\n                    form.change({\n                        name,\n                        value,\n                    });\n                }\n                else {\n                    this.setState({\n                        value: true,\n                    });\n                }\n            }\n            if (typeof onChange === 'function') {\n                onChange({\n                    value: true,\n                });\n            }\n        }\n    };\n    private onSelected = (e: React.MouseEvent<HTMLDivElement>) => {\n        this.select();\n        e.preventDefault();\n    };\n    private control = (e: React.KeyboardEvent<HTMLDivElement>) => {\n        switch (e.keyCode) {\n            case KeyCodes.enter:\n            case KeyCodes.space:\n                this.select();\n                break;\n            default:\n                return;\n        }\n        e.stopPropagation();\n        e.preventDefault();\n    };\n    render() {\n        const { children, disabled, theme, value: _0, defaultValue: _1, onChange: _2, group: _3, form: _4, name: _5, ...props } = this.props;\n        const { value, error } = this.state;\n        const containerProps = {\n            ...props,\n            theme,\n            onClick: this.onSelected,\n            disabled,\n        };\n        const circleProps = {\n            selected: value,\n            disabled: !!disabled,\n            onKeyDown: this.control,\n            theme,\n            tabIndex: disabled ? undefined : 0,\n        };\n        const Error = error && (<PaddedContainer top=\"xsmall\" bottom=\"xsmall\">\n        <InputError>{error}</InputError>\n      </PaddedContainer>);\n        return (<RadioButtonContainer {...containerProps}>\n        <FlexContainer withError={!!error}>\n          <RadioButtonCircle {...circleProps}>\n            <SelectMark {...circleProps}/>\n          </RadioButtonCircle>\n          {children && (<Label attached theme={theme}>\n              {children}\n              {Error}\n            </Label>)}\n        </FlexContainer>\n        {!children && Error}\n      </RadioButtonContainer>);\n    }\n    static inner = {\n        get PaddedContainer() { return PaddedContainer as typeof PaddedContainer; },\n        get InputError() { return InputError as typeof InputError; },\n        get RadioButtonContainer() { return RadioButtonContainer as typeof RadioButtonContainer; },\n        get FlexContainer() { return FlexContainer as typeof FlexContainer; },\n        get RadioButtonCircle() { return RadioButtonCircle as typeof RadioButtonCircle; },\n        get SelectMark() { return SelectMark as typeof SelectMark; },\n        get Label() { return Label as typeof Label; }\n    };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}