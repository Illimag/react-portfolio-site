{"ast":null,"code":"import * as React from 'react';\nimport styled, { themed } from '../../utils/styled';\nimport { showInputInfo } from '../../utils/input';\nimport { lowerize } from '../../utils/text';\nimport { Icon } from '../Icon';\nimport { InputIcon } from '../InputIcon';\nimport { transparent, dark, purpleRed } from '../../colors';\nimport { distance } from '../../distance';\nimport { withFormContext } from '../../hoc/withFormContext';\nimport { StyledInputRow, StyledInputBox, getTextFieldBorderType, StyledTagItem } from '../../quarks';\nimport { getFontStyle, getFontSize } from '../../textStyles';\nconst finishTagKeys = [13\n/* enter */\n, 32\n/* space */\n, 188\n/* comma */\n, 186\n/* semicolon */\n];\nconst StyledIcon = styled(Icon)`\n  ${getFontStyle({\n  size: 'small'\n})}\n\n  cursor: pointer;\n  vertical-align: middle;\n  color: ${themed(props => props.theme.ui5)};\n  font-family: ${themed(props => props.theme.fontFamily)};\n  margin-left: ${distance.small};\n`;\nconst TagBuilderContainer = styled.div``;\n\nfunction getContainerPadding(props) {\n  const {\n    tagRenderer,\n    labelShown\n  } = props;\n\n  if (!tagRenderer) {\n    return !labelShown ? `${distance.medium} ${distance.medium} ${distance.small}` : `${distance.large} ${distance.medium} 0`;\n  }\n\n  return !labelShown ? `${distance.medium}` : `${distance.large} ${distance.medium} ${distance.small}`;\n}\n\nconst StyledTagsContainer = styled.div`\n  padding: ${getContainerPadding};\n  margin: 0;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n`;\nconst StyledInput = styled('input')`\n  ${getFontSize('medium')}\n  box-sizing: content-box;\n  box-shadow: none;\n  border: none;\n  border-radius: 0;\n  margin: 0;\n  outline: none;\n  outline-color: transparent !important;\n  background: ${transparent};\n  width: ${props => props.value.length > 2 ? props.value.length * 10 + 'px' : '20px'};\n  color: ${themed(({\n  disabled,\n  theme,\n  valid\n}) => valid ? disabled ? theme.textDisabled : dark : purpleRed)};\n  cursor: ${props => props.disabled ? 'not-allowed' : 'auto'};\n  font-family: inherit;\n`;\nconst RestyledTagItem = styled(StyledTagItem)`\n  margin: 0 ${distance.small} ${distance.small} 0;\n`;\nconst InputContainer = styled('div')`\n  display: inline;\n  padding-bottom: ${({\n  tagRenderer\n}) => !tagRenderer ? `${distance.small}` : '0'};\n`;\nconst StyledText = styled.span`\n  display: inline-block;\n  vertical-align: middle;\n`;\nconst CloseIcon = Object.assign(({\n  theme,\n  onClick,\n  onMouseDown\n}) => React.createElement(StyledIcon, {\n  theme: theme,\n  name: \"Close\",\n  onClick: onClick,\n  onMouseDown: onMouseDown\n}), {\n  inner: {\n    get StyledIcon() {\n      return StyledIcon;\n    }\n\n  }\n});\nexport class TagBuilderInt extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.inputChanged = e => {\n      const {\n        onInput\n      } = this.props;\n      const {\n        controlled,\n        value: prevTags\n      } = this.state;\n      const {\n        value\n      } = e.currentTarget;\n\n      if (typeof onInput === 'function') {\n        onInput({\n          value: value\n        });\n      }\n\n      if (!controlled) {\n        this.setState({\n          inputValue: value,\n          valid: value.length > 0 ? prevTags.indexOf(value) === -1 : true\n        });\n      }\n    };\n\n    this.keyDownHandler = e => {\n      const {\n        inputValue,\n        controlled\n      } = this.state;\n      const {\n        shouldFinishTag\n      } = this.props;\n      let isHandled = false;\n\n      const handleKeyEvent = () => {\n        e.stopPropagation();\n        e.preventDefault();\n        isHandled = true;\n      };\n\n      if (inputValue.length === 0) {\n        switch (e.keyCode) {\n          case 8\n          /* backspace */\n          :\n            this.removePrevTag();\n            handleKeyEvent();\n            break;\n\n          case 46\n          /* delete */\n          :\n            this.removeNextTag();\n            handleKeyEvent();\n            break;\n        }\n      }\n\n      if (!isHandled && !controlled) {\n        if (typeof shouldFinishTag === 'function') {\n          if (shouldFinishTag(e)) {\n            this.addTag(inputValue);\n            handleKeyEvent();\n            return;\n          }\n        } else if (finishTagKeys.indexOf(e.keyCode) !== -1) {\n          this.addTag(inputValue);\n          handleKeyEvent();\n        }\n\n        if (inputValue.length === 0) {\n          switch (e.keyCode) {\n            case 35\n            /* end */\n            :\n              this.inputMoveEnd();\n              handleKeyEvent();\n              break;\n\n            case 36\n            /* home */\n            :\n              this.inputMoveHome();\n              handleKeyEvent();\n              break;\n\n            case 37\n            /* left */\n            :\n              this.inputMoveLeft();\n              handleKeyEvent();\n              break;\n\n            case 39\n            /* right */\n            :\n              this.inputMoveRight();\n              handleKeyEvent();\n              break;\n          }\n        }\n      }\n    };\n\n    this.inputFocused = () => {\n      const {\n        onFocus\n      } = this.props;\n      this.setState({\n        focused: true\n      }, onFocus);\n    };\n\n    this.inputBlurred = () => {\n      const {\n        onBlur,\n        appendTagOnBlur\n      } = this.props;\n\n      if (!!appendTagOnBlur && !this.state.controlled) {\n        const {\n          inputValue\n        } = this.state;\n\n        if (inputValue) {\n          this.addTag(inputValue);\n        }\n      }\n\n      this.setState({\n        focused: false\n      }, onBlur);\n    };\n\n    this.setFocus = () => {\n      this._input && this._input.focus();\n    };\n\n    this.removeTagMouseDownHandler = event => {\n      event.preventDefault();\n    };\n\n    this.renderTag = e => {\n      const {\n        theme,\n        disabled\n      } = this.props;\n      return React.createElement(RestyledTagItem, {\n        theme: theme,\n        key: e.item + e.index\n      }, React.createElement(StyledText, null, e.item), !disabled && React.createElement(CloseIcon, {\n        theme: theme,\n        onMouseDown: this.removeTagMouseDownHandler,\n        onClick: () => this.removeTag(e.index)\n      }));\n    };\n\n    this.setContainer = node => {\n      this._input = node;\n      const {\n        inputRef\n      } = this.props;\n\n      if (typeof inputRef === 'function') {\n        inputRef(node);\n      }\n    };\n\n    const tags = (props.value || props.defaultValue || []).map(lowerize);\n    this.state = {\n      value: tags,\n      inputValue: props.inputValue || '',\n      controlled: props.value !== undefined || props.inputValue !== undefined,\n      focused: false,\n      valid: true,\n      error: props.error\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps({\n    value,\n    inputValue = '',\n    error\n  }) {\n    if (this.state.controlled && value !== undefined) {\n      this.setState({\n        value: [...value],\n        inputValue: inputValue\n      });\n    }\n\n    this.setState({\n      error\n    });\n  }\n\n  componentDidMount() {\n    const {\n      form\n    } = this.props;\n    const {\n      controlled\n    } = this.state;\n\n    if (!controlled && form) {\n      form.subscribe(this);\n    }\n  }\n\n  componentWillUnmount() {\n    const {\n      form\n    } = this.props;\n    const {\n      controlled\n    } = this.state;\n\n    if (!controlled && form) {\n      form.unsubscribe(this);\n    }\n  }\n\n  fireBeforeTagRemoveEvent(index) {\n    const {\n      onBeforeTagRemove\n    } = this.props;\n\n    if (typeof onBeforeTagRemove === 'function') {\n      onBeforeTagRemove(index);\n    }\n  }\n\n  inputMoveLeft() {\n    const {\n      value\n    } = this.state;\n    const {\n      inputPosition = value.length\n    } = this.state;\n\n    if (inputPosition > 0) {\n      this.setState({\n        inputPosition: inputPosition - 1\n      });\n    }\n  }\n\n  inputMoveRight() {\n    const {\n      value,\n      inputPosition\n    } = this.state;\n\n    if (inputPosition !== undefined && inputPosition < value.length) {\n      this.setState({\n        inputPosition: inputPosition + 1\n      });\n    }\n  }\n\n  inputMoveEnd() {\n    const {\n      value\n    } = this.state;\n    this.setState({\n      inputPosition: value.length\n    });\n  }\n\n  inputMoveHome() {\n    this.setState({\n      inputPosition: 0\n    });\n  }\n\n  addTag(inputValue) {\n    const {\n      value: prevTags,\n      valid\n    } = this.state;\n    const {\n      inputPosition = prevTags.length\n    } = this.state;\n    inputValue = inputValue.trim().toLowerCase();\n\n    if (inputValue.length > 0 && valid) {\n      const tags = [...prevTags];\n      tags.splice(inputPosition, 0, inputValue);\n      this.setState({\n        inputValue: '',\n        inputPosition: inputPosition + 1\n      }, () => this.onChange(tags));\n    }\n  }\n\n  removePrevTag() {\n    const {\n      value: prevTags\n    } = this.state;\n    const {\n      inputPosition = prevTags.length\n    } = this.state;\n\n    if (inputPosition > 0) {\n      this.removeTag(inputPosition - 1);\n      this.setState({\n        inputPosition: inputPosition - 1\n      });\n    }\n  }\n\n  removeNextTag() {\n    const {\n      value: prevTags,\n      inputPosition\n    } = this.state;\n\n    if (inputPosition !== undefined && inputPosition < prevTags.length) {\n      this.removeTag(inputPosition);\n    }\n  }\n\n  removeTag(index) {\n    const {\n      value: prevTags\n    } = this.state;\n    this.fireBeforeTagRemoveEvent(index);\n    const tags = [...prevTags.slice(0, index), ...prevTags.slice(index + 1)];\n    this.onChange(tags);\n  }\n\n  onChange(value) {\n    const {\n      onChange,\n      name = '',\n      form\n    } = this.props;\n\n    if (!this.state.controlled) {\n      if (form) {\n        form.change({\n          name,\n          value\n        });\n      } else {\n        this.setState({\n          value\n        });\n      }\n    }\n\n    if (typeof onChange === 'function') {\n      onChange({\n        value\n      });\n    }\n  }\n\n  render() {\n    const {\n      tagRenderer,\n      info,\n      disabled,\n      borderless,\n      theme,\n      label,\n      placeholder\n    } = this.props;\n    const {\n      value,\n      inputValue,\n      focused,\n      valid,\n      error\n    } = this.state;\n    const {\n      inputPosition = value.length\n    } = this.state;\n    const border = getTextFieldBorderType(borderless, !!error, focused);\n    const renderer = tagRenderer || this.renderTag;\n    const children = value.map((item, index) => renderer({\n      item,\n      index,\n      tags: value\n    }));\n    const hasValue = !!inputValue || value.length > 0;\n    children.splice(inputPosition, 0, React.createElement(InputContainer, {\n      key: \"input\",\n      onKeyDown: this.keyDownHandler,\n      tagRenderer: !!tagRenderer\n    }, React.createElement(StyledInput, {\n      theme: theme,\n      disabled: disabled,\n      ref: this.setContainer,\n      type: \"text\",\n      value: inputValue,\n      onChange: this.inputChanged,\n      onFocus: this.inputFocused,\n      onBlur: this.inputBlurred,\n      valid: valid\n    })));\n    return React.createElement(TagBuilderContainer, null, React.createElement(StyledInputBox, {\n      border: border,\n      disabled: disabled,\n      focused: focused,\n      hasValue: hasValue\n    }, React.createElement(StyledInputRow, {\n      onClick: this.setFocus,\n      label: label,\n      hasValue: hasValue,\n      placeholder: placeholder,\n      error: !!error,\n      focused: focused\n    }, React.createElement(StyledTagsContainer, {\n      labelShown: !!label,\n      tagRenderer: !!tagRenderer\n    }, children)), React.createElement(InputIcon, {\n      disabled: disabled,\n      theme: theme,\n      error: error,\n      hasValue: hasValue\n    })), showInputInfo(error, info));\n  }\n\n}\nTagBuilderInt.inner = {\n  get RestyledTagItem() {\n    return RestyledTagItem;\n  },\n\n  get StyledText() {\n    return StyledText;\n  },\n\n  get CloseIcon() {\n    return CloseIcon;\n  },\n\n  get InputContainer() {\n    return InputContainer;\n  },\n\n  get StyledInput() {\n    return StyledInput;\n  },\n\n  get TagBuilderContainer() {\n    return TagBuilderContainer;\n  },\n\n  get StyledInputBox() {\n    return StyledInputBox;\n  },\n\n  get StyledInputRow() {\n    return StyledInputRow;\n  },\n\n  get StyledTagsContainer() {\n    return StyledTagsContainer;\n  },\n\n  get InputIcon() {\n    return InputIcon;\n  }\n\n};\nexport const TagBuilder = withFormContext(TagBuilderInt);\nTagBuilder.displayName = 'TagBuilder';","map":{"version":3,"sources":["../../../../src/components/TagBuilder/TagBuilderInt.part.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled, { themed } from '../../utils/styled';\nimport { PreciseTheme } from '../../common';\nimport { showInputInfo } from '../../utils/input';\nimport { KeyCodes } from '../../utils/keyCodes';\nimport { lowerize } from '../../utils/text';\nimport { Icon } from '../Icon';\nimport { InputIcon } from '../InputIcon';\nimport { transparent, dark, purpleRed } from '../../colors';\nimport { distance } from '../../distance';\nimport { FormContextProps, withFormContext } from '../../hoc/withFormContext';\nimport { TagBuilderRenderEvent, TagBuilderProps } from './TagBuilder.types.part';\nimport { StyledInputRow, StyledInputBox, getTextFieldBorderType, StyledTagItem } from '../../quarks';\nimport { getFontStyle, getFontSize } from '../../textStyles';\nconst finishTagKeys = [KeyCodes.enter, KeyCodes.space, KeyCodes.comma, KeyCodes.semicolon];\nconst StyledIcon = styled(Icon) `\n  ${getFontStyle({ size: 'small' })}\n\n  cursor: pointer;\n  vertical-align: middle;\n  color: ${themed(props => props.theme.ui5)};\n  font-family: ${themed(props => props.theme.fontFamily)};\n  margin-left: ${distance.small};\n`;\nconst TagBuilderContainer = styled.div ``;\ninterface StyledTagsContainerProps {\n    labelShown: boolean;\n    tagRenderer: boolean;\n}\nfunction getContainerPadding(props: StyledTagsContainerProps) {\n    const { tagRenderer, labelShown } = props;\n    if (!tagRenderer) {\n        return !labelShown\n            ? `${distance.medium} ${distance.medium} ${distance.small}`\n            : `${distance.large} ${distance.medium} 0`;\n    }\n    return !labelShown ? `${distance.medium}` : `${distance.large} ${distance.medium} ${distance.small}`;\n}\nconst StyledTagsContainer = styled.div `\n  padding: ${getContainerPadding};\n  margin: 0;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n`;\ninterface StyledInputProps {\n    value: string;\n    disabled?: boolean;\n    theme: any;\n    valid?: boolean;\n}\nconst StyledInput = styled('input')<StyledInputProps> `\n  ${getFontSize('medium')}\n  box-sizing: content-box;\n  box-shadow: none;\n  border: none;\n  border-radius: 0;\n  margin: 0;\n  outline: none;\n  outline-color: transparent !important;\n  background: ${transparent};\n  width: ${props => (props.value.length > 2 ? props.value.length * 10 + 'px' : '20px')};\n  color: ${themed(({ disabled, theme, valid }) => (valid ? (disabled ? theme.textDisabled : dark) : purpleRed))};\n  cursor: ${props => (props.disabled ? 'not-allowed' : 'auto')};\n  font-family: inherit;\n`;\nconst RestyledTagItem = styled(StyledTagItem) `\n  margin: 0 ${distance.small} ${distance.small} 0;\n`;\ninterface InputContainerProps {\n    tagRenderer: boolean;\n}\nconst InputContainer = styled('div')<InputContainerProps> `\n  display: inline;\n  padding-bottom: ${({ tagRenderer }) => (!tagRenderer ? `${distance.small}` : '0')};\n`;\nconst StyledText = styled.span `\n  display: inline-block;\n  vertical-align: middle;\n`;\ninterface CloseIconProps {\n    onClick?(): void;\n    onMouseDown?(event: React.MouseEvent): void;\n    theme?: PreciseTheme;\n}\nconst CloseIcon = Object.assign(((({ theme, onClick, onMouseDown }) => (<StyledIcon theme={theme} name=\"Close\" onClick={onClick} onMouseDown={onMouseDown}/>)) as React.SFC<CloseIconProps>), { inner: {\n        get StyledIcon() { return StyledIcon as typeof StyledIcon; }\n    } });\nexport interface TagBuilderState {\n    inputValue: string;\n    value: Array<string>;\n    error?: React.ReactChild;\n    focused: boolean;\n    controlled: boolean;\n    inputPosition?: number;\n    valid?: boolean;\n}\nexport class TagBuilderInt extends React.Component<TagBuilderProps & FormContextProps, TagBuilderState> {\n    private _input: HTMLInputElement | null;\n    constructor(props: TagBuilderProps) {\n        super(props);\n        const tags = (props.value || props.defaultValue || []).map(lowerize);\n        this.state = {\n            value: tags,\n            inputValue: props.inputValue || '',\n            controlled: props.value !== undefined || props.inputValue !== undefined,\n            focused: false,\n            valid: true,\n            error: props.error,\n        };\n    }\n    UNSAFE_componentWillReceiveProps({ value, inputValue = '', error }: TagBuilderProps) {\n        if (this.state.controlled && value !== undefined) {\n            this.setState({\n                value: [...value],\n                inputValue: inputValue,\n            });\n        }\n        this.setState({ error });\n    }\n    componentDidMount() {\n        const { form } = this.props;\n        const { controlled } = this.state;\n        if (!controlled && form) {\n            form.subscribe(this);\n        }\n    }\n    componentWillUnmount() {\n        const { form } = this.props;\n        const { controlled } = this.state;\n        if (!controlled && form) {\n            form.unsubscribe(this);\n        }\n    }\n    private fireBeforeTagRemoveEvent(index: number): void {\n        const { onBeforeTagRemove } = this.props;\n        if (typeof onBeforeTagRemove === 'function') {\n            onBeforeTagRemove(index);\n        }\n    }\n    private inputChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { onInput } = this.props;\n        const { controlled, value: prevTags } = this.state;\n        const { value } = e.currentTarget;\n        if (typeof onInput === 'function') {\n            onInput({ value: value });\n        }\n        if (!controlled) {\n            this.setState({ inputValue: value, valid: value.length > 0 ? prevTags.indexOf(value) === -1 : true });\n        }\n    };\n    private keyDownHandler = (e: React.KeyboardEvent<HTMLDivElement>) => {\n        const { inputValue, controlled } = this.state;\n        const { shouldFinishTag } = this.props;\n        let isHandled = false;\n        const handleKeyEvent = () => {\n            e.stopPropagation();\n            e.preventDefault();\n            isHandled = true;\n        };\n        if (inputValue.length === 0) {\n            switch (e.keyCode) {\n                case KeyCodes.backspace:\n                    this.removePrevTag();\n                    handleKeyEvent();\n                    break;\n                case KeyCodes.delete:\n                    this.removeNextTag();\n                    handleKeyEvent();\n                    break;\n            }\n        }\n        if (!isHandled && !controlled) {\n            if (typeof shouldFinishTag === 'function') {\n                if (shouldFinishTag(e)) {\n                    this.addTag(inputValue);\n                    handleKeyEvent();\n                    return;\n                }\n            }\n            else if (finishTagKeys.indexOf(e.keyCode) !== -1) {\n                this.addTag(inputValue);\n                handleKeyEvent();\n            }\n            if (inputValue.length === 0) {\n                switch (e.keyCode) {\n                    case KeyCodes.end:\n                        this.inputMoveEnd();\n                        handleKeyEvent();\n                        break;\n                    case KeyCodes.home:\n                        this.inputMoveHome();\n                        handleKeyEvent();\n                        break;\n                    case KeyCodes.left:\n                        this.inputMoveLeft();\n                        handleKeyEvent();\n                        break;\n                    case KeyCodes.right:\n                        this.inputMoveRight();\n                        handleKeyEvent();\n                        break;\n                }\n            }\n        }\n    };\n    private inputFocused = () => {\n        const { onFocus } = this.props;\n        this.setState({\n            focused: true,\n        }, onFocus);\n    };\n    private inputBlurred = () => {\n        const { onBlur, appendTagOnBlur } = this.props;\n        if (!!appendTagOnBlur && !this.state.controlled) {\n            const { inputValue } = this.state;\n            if (inputValue) {\n                this.addTag(inputValue);\n            }\n        }\n        this.setState({\n            focused: false,\n        }, onBlur);\n    };\n    private inputMoveLeft() {\n        const { value } = this.state;\n        const { inputPosition = value.length } = this.state;\n        if (inputPosition > 0) {\n            this.setState({ inputPosition: inputPosition - 1 });\n        }\n    }\n    private inputMoveRight() {\n        const { value, inputPosition } = this.state;\n        if (inputPosition !== undefined && inputPosition < value.length) {\n            this.setState({ inputPosition: inputPosition + 1 });\n        }\n    }\n    private inputMoveEnd() {\n        const { value } = this.state;\n        this.setState({ inputPosition: value.length });\n    }\n    private inputMoveHome() {\n        this.setState({ inputPosition: 0 });\n    }\n    private setFocus = () => {\n        this._input && this._input.focus();\n    };\n    private addTag(inputValue: string) {\n        const { value: prevTags, valid } = this.state;\n        const { inputPosition = prevTags.length } = this.state;\n        inputValue = inputValue.trim().toLowerCase();\n        if (inputValue.length > 0 && valid) {\n            const tags = [...prevTags];\n            tags.splice(inputPosition, 0, inputValue);\n            this.setState({ inputValue: '', inputPosition: inputPosition + 1 }, () => this.onChange(tags));\n        }\n    }\n    private removePrevTag() {\n        const { value: prevTags } = this.state;\n        const { inputPosition = prevTags.length } = this.state;\n        if (inputPosition > 0) {\n            this.removeTag(inputPosition - 1);\n            this.setState({ inputPosition: inputPosition - 1 });\n        }\n    }\n    private removeNextTag() {\n        const { value: prevTags, inputPosition } = this.state;\n        if (inputPosition !== undefined && inputPosition < prevTags.length) {\n            this.removeTag(inputPosition);\n        }\n    }\n    private removeTag(index: number) {\n        const { value: prevTags } = this.state;\n        this.fireBeforeTagRemoveEvent(index);\n        const tags = [...prevTags.slice(0, index), ...prevTags.slice(index + 1)];\n        this.onChange(tags);\n    }\n    private onChange(value: Array<string>) {\n        const { onChange, name = '', form } = this.props;\n        if (!this.state.controlled) {\n            if (form) {\n                form.change({\n                    name,\n                    value,\n                });\n            }\n            else {\n                this.setState({\n                    value,\n                });\n            }\n        }\n        if (typeof onChange === 'function') {\n            onChange({\n                value,\n            });\n        }\n    }\n    private removeTagMouseDownHandler = (event: React.MouseEvent) => {\n        event.preventDefault();\n    };\n    private renderTag = (e: TagBuilderRenderEvent) => {\n        const { theme, disabled } = this.props;\n        return (<RestyledTagItem theme={theme} key={e.item + e.index}>\n        <StyledText>{e.item}</StyledText>\n        {!disabled && (<CloseIcon theme={theme} onMouseDown={this.removeTagMouseDownHandler} onClick={() => this.removeTag(e.index)}/>)}\n      </RestyledTagItem>);\n    };\n    private setContainer = (node: HTMLInputElement | null) => {\n        this._input = node;\n        const { inputRef } = this.props;\n        if (typeof inputRef === 'function') {\n            inputRef(node);\n        }\n    };\n    render() {\n        const { tagRenderer, info, disabled, borderless, theme, label, placeholder } = this.props;\n        const { value, inputValue, focused, valid, error } = this.state;\n        const { inputPosition = value.length } = this.state;\n        const border = getTextFieldBorderType(borderless, !!error, focused);\n        const renderer = tagRenderer || this.renderTag;\n        const children = value.map((item, index) => renderer({ item, index, tags: value }));\n        const hasValue = !!inputValue || value.length > 0;\n        children.splice(inputPosition, 0, <InputContainer key=\"input\" onKeyDown={this.keyDownHandler} tagRenderer={!!tagRenderer}>\n        <StyledInput theme={theme} disabled={disabled} ref={this.setContainer} type=\"text\" value={inputValue} onChange={this.inputChanged} onFocus={this.inputFocused} onBlur={this.inputBlurred} valid={valid}/>\n      </InputContainer>);\n        return (<TagBuilderContainer>\n        <StyledInputBox border={border} disabled={disabled} focused={focused} hasValue={hasValue}>\n          <StyledInputRow onClick={this.setFocus} label={label} hasValue={hasValue} placeholder={placeholder} error={!!error} focused={focused}>\n            <StyledTagsContainer labelShown={!!label} tagRenderer={!!tagRenderer}>\n              {children}\n            </StyledTagsContainer>\n          </StyledInputRow>\n          <InputIcon disabled={disabled} theme={theme} error={error} hasValue={hasValue}/>\n        </StyledInputBox>\n        {showInputInfo(error, info)}\n      </TagBuilderContainer>);\n    }\n    static inner = {\n        get RestyledTagItem() { return RestyledTagItem as typeof RestyledTagItem; },\n        get StyledText() { return StyledText as typeof StyledText; },\n        get CloseIcon() { return CloseIcon as typeof CloseIcon; },\n        get InputContainer() { return InputContainer as typeof InputContainer; },\n        get StyledInput() { return StyledInput as typeof StyledInput; },\n        get TagBuilderContainer() { return TagBuilderContainer as typeof TagBuilderContainer; },\n        get StyledInputBox() { return StyledInputBox as typeof StyledInputBox; },\n        get StyledInputRow() { return StyledInputRow as typeof StyledInputRow; },\n        get StyledTagsContainer() { return StyledTagsContainer as typeof StyledTagsContainer; },\n        get InputIcon() { return InputIcon as typeof InputIcon; }\n    };\n}\nexport const TagBuilder = withFormContext(TagBuilderInt);\nTagBuilder.displayName = 'TagBuilder';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}