{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport * as React from 'react';\nimport styled, { css, themed } from '../../utils/styled';\nimport { withResponsive } from '../../hoc/withResponsive';\nimport { distancePx, distance } from '../../distance';\nimport { getFontStyle } from '../../textStyles';\nconst toolTipArrowSize = 18;\n\nfunction getFlyoutArrowPosition({\n  mainPosition,\n  secondaryPosition: origSecondaryPosition,\n  offset,\n  targetRect,\n  flyoutRect\n}) {\n  if (mainPosition && flyoutRect.width) {\n    const vertical = isVertical(mainPosition);\n    const mainAxisTargetSize = vertical ? targetRect.height : targetRect.width;\n    const secondaryAxisTargetSize = vertical ? targetRect.width : targetRect.height;\n    const secondaryAxisContnetSize = vertical ? flyoutRect.width : flyoutRect.height;\n    const mainPositionValue = mainAxisTargetSize + offset + 1 - toolTipArrowSize / 2;\n    let secondaryPosition;\n    let secondaryPositionValue;\n\n    if (!origSecondaryPosition) {\n      secondaryPosition = vertical ? 'left' : 'top';\n      secondaryPositionValue = (secondaryAxisTargetSize - toolTipArrowSize) / 2;\n    } else {\n      secondaryPosition = origSecondaryPosition;\n      secondaryPositionValue = secondaryAxisTargetSize / 4 > secondaryAxisContnetSize - toolTipArrowSize ? secondaryAxisContnetSize - toolTipArrowSize : secondaryAxisTargetSize / 4;\n    }\n\n    const rotate = {\n      top: 0,\n      left: -90,\n      right: 90,\n      bottom: 180\n    };\n    return {\n      rotate: rotate[mainPosition],\n      [invertPosition(mainPosition)]: mainPositionValue,\n      [secondaryPosition]: secondaryPositionValue\n    };\n  }\n\n  return {};\n}\n\nfunction getDetailedPositionInfo({\n  targetRect,\n  dimensions,\n  flyoutRect\n}) {\n  const viewportPosition = {\n    left: targetRect.left,\n    right: dimensions.width - targetRect.right,\n    top: targetRect.top,\n    bottom: dimensions.height - targetRect.bottom\n  };\n  const hasEnoughSpace = {};\n  const hasMoreSpace = {};\n\n  for (const position of Object.keys(viewportPosition)) {\n    if (isVertical(position)) {\n      // There is always enought space for top/bottom flyout when it lays outside of the viewport.\n      hasEnoughSpace[position] = targetRect.top > dimensions.height || viewportPosition[position] > flyoutRect.height;\n    } else {\n      hasEnoughSpace[position] = viewportPosition[position] > flyoutRect.width;\n    }\n\n    hasMoreSpace[position] = viewportPosition[position] > viewportPosition[invertPosition(position)];\n  }\n\n  return {\n    viewportPosition,\n    hasEnoughSpace,\n    hasMoreSpace\n  };\n}\n\nfunction getMainAxisFlyoutPositionAndSize({\n  direction,\n  targetRect,\n  offset,\n  dimensions,\n  vertical,\n  flyoutRect\n}) {\n  const targetSize = vertical ? targetRect.height : targetRect.width;\n  const flyoutSize = vertical ? flyoutRect.height : flyoutRect.width;\n  const {\n    hasEnoughSpace,\n    viewportPosition\n  } = getDetailedPositionInfo({\n    targetRect,\n    dimensions,\n    flyoutRect\n  });\n  const sizeValue = hasEnoughSpace[direction] ? flyoutSize : viewportPosition[direction] - (offset + toolTipArrowSize / 2) - distancePx.medium;\n  return {\n    position: {\n      name: invertPosition(direction),\n      value: targetSize + (offset + toolTipArrowSize / 2)\n    },\n    size: {\n      name: vertical ? 'height' : 'width',\n      value: sizeValue\n    }\n  };\n}\n\nfunction getSecondaryAxisFlyoutPositionAndSize({\n  direction,\n  targetRect,\n  dimensions,\n  vertical,\n  flyoutRect\n}) {\n  let positionValue;\n  let positionName;\n  const sizeName = vertical ? 'width' : 'height';\n  const targetSize = vertical ? targetRect.width : targetRect.height;\n  const targetPosition = vertical ? targetRect.left : targetRect.top;\n  const flyoutSize = vertical ? flyoutRect.width : flyoutRect.height;\n  const windowSize = vertical ? dimensions.width : dimensions.height;\n  const {\n    viewportPosition\n  } = getDetailedPositionInfo({\n    targetRect,\n    dimensions,\n    flyoutRect\n  });\n  let sizeValue = flyoutSize;\n\n  if (direction === undefined) {\n    positionName = vertical ? 'left' : 'top';\n    const centeredValue = (targetSize - flyoutSize) / 2;\n\n    if (viewportPosition[positionName] > 0 && viewportPosition[positionName] + centeredValue < 0) {\n      positionValue = -viewportPosition[positionName] + distancePx.medium;\n      sizeValue = flyoutSize > windowSize ? windowSize - distancePx.xlarge : flyoutSize;\n    } else {\n      positionValue = centeredValue;\n    }\n  } else {\n    positionName = direction;\n    positionValue = positionName === 'top' || positionName === 'left' ? 0 : targetPosition - flyoutSize > 0 ? targetSize - flyoutSize : -targetPosition + distancePx.medium;\n\n    if (positionName === 'top' || positionName === 'left') {\n      sizeValue = targetPosition + positionValue + flyoutSize > windowSize ? windowSize - targetPosition + positionValue - distancePx.medium : flyoutSize;\n    } else {\n      sizeValue = flyoutSize > targetPosition + targetSize ? targetPosition + targetSize - distancePx.medium : flyoutSize;\n      positionName = invertPosition(positionName);\n    }\n  }\n\n  return {\n    position: {\n      name: positionName,\n      value: positionValue\n    },\n    size: {\n      name: sizeName,\n      value: sizeValue\n    }\n  };\n}\n\nfunction invertPosition(position) {\n  const invertedPosition = {\n    top: 'bottom',\n    left: 'right',\n    right: 'left',\n    bottom: 'top'\n  };\n  return invertedPosition[position];\n}\n\nfunction isVertical(position) {\n  return position === 'top' || position === 'bottom' ? true : false;\n}\n\nconst StyledFlyoutWindow = styled('div')(themed(({\n  theme,\n  size,\n  position,\n  noGutter\n}) => css`\n      ${getFontStyle({\n  size: 'medium'\n})}\n\n      position: absolute;\n      z-index: 100;\n      box-sizing: border-box;\n      box-shadow: 0 2px 6px 0 rgba(75, 78, 82, 0.2);\n      border: 1px solid ${theme.ui4};\n      background: ${theme.flyout.background};\n      color: ${theme.flyout.textColor};\n      max-width: ${theme.flyout.maxWidth};\n      max-height: ${theme.flyout.maxHeight};\n      ${!noGutter ? `padding: ${distance.small} ${distance.medium};` : ''} box-sizing: border-box;\n\n      ${size && size.width !== undefined ? `width: ${size.width}px` : ''};\n      ${size && size.height !== undefined ? `height: ${size.height}px` : ''};\n      ${position && position.top !== undefined ? `top: ${position.top}px` : ''};\n      ${position && position.left !== undefined ? `left: ${position.left}px` : ''};\n      ${position && position.bottom !== undefined ? `bottom: ${position.bottom}px` : ''};\n      ${position && position.right !== undefined ? `right: ${position.right}px` : ''};\n      overflow: auto;\n    `));\nconst StyledFlyoutArrow = styled('div')(themed(({\n  top,\n  left,\n  bottom,\n  right,\n  rotate,\n  theme\n}) => css`\n      pointer-events: none;\n      position: absolute;\n      z-index: 101;\n      width: ${toolTipArrowSize}px;\n      height: ${toolTipArrowSize}px;\n\n      ${top !== undefined ? `top: ${top}px` : ''};\n      ${left !== undefined ? `left: ${left}px` : ''};\n      ${bottom !== undefined ? `bottom: ${bottom}px` : ''};\n      ${right !== undefined ? `right: ${right}px` : ''};\n      ${rotate !== undefined ? `transform: rotate(${rotate}deg)` : ''};\n\n      :before {\n        content: ' ';\n        position: absolute;\n        top: 0;\n        left: 0;\n        border-style: solid;\n        border-width: ${toolTipArrowSize / 2}px;\n        border-color: ${theme.ui4} transparent transparent transparent;\n      }\n\n      :after {\n        content: ' ';\n        position: absolute;\n        top: 0;\n        left: 0;\n        border-style: solid;\n        border-width: ${toolTipArrowSize / 2 - 1}px;\n        margin-left: 1px;\n        border-color: ${theme.flyout.background} transparent transparent transparent;\n      }\n    `));\nexport class FlyoutWindowInt extends React.Component {\n  constructor(props) {\n    super(props);\n    this.scrollPosition = {\n      top: 0,\n      left: 0\n    };\n\n    this.setFlyoutRef = el => {\n      if (this.flyoutContainer) {\n        this.flyoutContainer.removeEventListener('scroll', this.onScroll);\n      }\n\n      if (el) {\n        el.addEventListener('scroll', this.onScroll);\n      }\n\n      this.flyoutContainer = el;\n    };\n\n    this.onScroll = e => {\n      if (e.target && e.target instanceof HTMLElement) {\n        this.scrollPosition = {\n          top: e.target.scrollTop,\n          left: e.target.scrollLeft\n        };\n      }\n    };\n\n    this.state = {\n      flyoutRect: undefined,\n      children: undefined\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.children !== prevState.children) {\n      return {\n        flyoutRect: undefined,\n        children: nextProps.children\n      };\n    }\n\n    return {\n      children: nextProps.children\n    };\n  }\n\n  componentDidMount() {\n    if (this.flyoutContainer) {\n      this.updateMeasurements();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.flyoutContainer) {\n      this.flyoutContainer.removeEventListener('scroll', this.onScroll);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.flyoutContainer) {\n      if (!this.state.flyoutRect) {\n        this.updateMeasurements();\n      }\n\n      if (this.flyoutContainer.scroll) {\n        this.flyoutContainer.scroll({\n          top: this.scrollPosition.top,\n          left: this.scrollPosition.left\n        });\n      }\n    }\n  }\n\n  updateMeasurements() {\n    if (this.flyoutContainer) {\n      const flyoutRect = this.flyoutContainer.getBoundingClientRect();\n      this.setState({\n        flyoutRect\n      });\n    }\n  }\n\n  getFlyoutDimensions() {\n    const {\n      flyoutRect\n    } = this.state;\n\n    if (!flyoutRect) {\n      return {};\n    }\n\n    const {\n      position,\n      defaultPosition = 'bottom',\n      offset = 4,\n      dimensions,\n      targetRect\n    } = this.props;\n    const [mainPosition, secondaryPosition] = (position || defaultPosition).split('-');\n\n    if (!dimensions || !mainPosition) {\n      return {};\n    }\n\n    const vertical = isVertical(mainPosition);\n    const {\n      hasMoreSpace,\n      hasEnoughSpace\n    } = getDetailedPositionInfo({\n      targetRect,\n      dimensions,\n      flyoutRect\n    });\n    let mainDirection = mainPosition;\n    let main = getMainAxisFlyoutPositionAndSize({\n      direction: mainDirection,\n      targetRect,\n      offset,\n      dimensions,\n      vertical,\n      flyoutRect\n    });\n\n    if (!position && !hasEnoughSpace[mainDirection] && !hasMoreSpace[mainDirection]) {\n      mainDirection = invertPosition(mainDirection);\n      main = getMainAxisFlyoutPositionAndSize({\n        direction: mainDirection,\n        targetRect,\n        offset,\n        dimensions,\n        vertical,\n        flyoutRect\n      });\n    }\n\n    let secondaryDirection = secondaryPosition;\n    let secondary = getSecondaryAxisFlyoutPositionAndSize({\n      direction: secondaryDirection,\n      targetRect,\n      dimensions,\n      vertical,\n      flyoutRect\n    });\n\n    if (!position && secondaryDirection && !hasEnoughSpace[secondaryDirection] && hasMoreSpace[secondaryDirection]) {\n      secondaryDirection = invertPosition(secondaryDirection);\n      secondary = getSecondaryAxisFlyoutPositionAndSize({\n        direction: secondaryDirection,\n        targetRect,\n        dimensions,\n        vertical,\n        flyoutRect\n      });\n    }\n\n    return {\n      position: {\n        [main.position.name]: main.position.value,\n        [secondary.position.name]: secondary.position.value\n      },\n      size: {\n        [main.size.name]: main.size.value,\n        [secondary.size.name]: secondary.size.value\n      },\n      arrowPosition: getFlyoutArrowPosition({\n        mainPosition: mainDirection,\n        secondaryPosition: secondaryDirection,\n        offset,\n        targetRect,\n        flyoutRect\n      })\n    };\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      children,\n      targetRect: _0,\n      position: _1,\n      offset: _2,\n      dimensions: _3,\n      innerRef: _4\n    } = _a,\n          props = __rest(_a, [\"children\", \"targetRect\", \"position\", \"offset\", \"dimensions\", \"innerRef\"]);\n\n    const _b = this.getFlyoutDimensions(),\n          {\n      arrowPosition\n    } = _b,\n          flyoutDimensions = __rest(_b, [\"arrowPosition\"]);\n\n    return children && React.createElement(React.Fragment, null, React.createElement(StyledFlyoutArrow, Object.assign({}, arrowPosition, {\n      theme: props.theme\n    })), React.createElement(StyledFlyoutWindow, Object.assign({}, flyoutDimensions, props, {\n      ref: this.setFlyoutRef\n    }), children));\n  }\n\n}\nFlyoutWindowInt.inner = {\n  get StyledFlyoutArrow() {\n    return StyledFlyoutArrow;\n  },\n\n  get StyledFlyoutWindow() {\n    return StyledFlyoutWindow;\n  }\n\n};\nexport const FlyoutWindow = withResponsive(FlyoutWindowInt);","map":{"version":3,"sources":["../../../../src/components/Flyout/FlyoutWindow.part.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled, { css, themed } from '../../utils/styled';\nimport { withResponsive, ResponsiveComponentProps } from '../../hoc/withResponsive';\nimport { FlyoutPosition, BasicPosition } from './Flyout.types.part';\nimport { distancePx, distance } from '../../distance';\nimport { StandardProps } from '../../common';\nimport { getFontStyle } from '../../textStyles';\nconst toolTipArrowSize = 18;\nexport interface Dimensions {\n    width: number;\n    height: number;\n}\ninterface InvertedPosition {\n    top: 'bottom';\n    left: 'right';\n    right: 'left';\n    bottom: 'top';\n}\nexport interface FlyoutWindowProps extends ResponsiveComponentProps, StandardProps {\n    targetRect: ClientRect;\n    children: React.ReactNode;\n    position?: FlyoutPosition;\n    defaultPosition?: FlyoutPosition;\n    offset?: number;\n}\nexport interface Position {\n    top?: number;\n    right?: number;\n    bottom?: number;\n    left?: number;\n}\nfunction getFlyoutArrowPosition({ mainPosition, secondaryPosition: origSecondaryPosition, offset, targetRect, flyoutRect, }: {\n    mainPosition: BasicPosition;\n    secondaryPosition?: BasicPosition;\n    targetRect: ClientRect;\n    flyoutRect: ClientRect;\n    offset: number;\n}) {\n    if (mainPosition && flyoutRect.width) {\n        const vertical = isVertical(mainPosition);\n        const mainAxisTargetSize = vertical ? targetRect.height : targetRect.width;\n        const secondaryAxisTargetSize = vertical ? targetRect.width : targetRect.height;\n        const secondaryAxisContnetSize = vertical ? flyoutRect.width : flyoutRect.height;\n        const mainPositionValue = mainAxisTargetSize + offset + 1 - toolTipArrowSize / 2;\n        let secondaryPosition: string;\n        let secondaryPositionValue: number;\n        if (!origSecondaryPosition) {\n            secondaryPosition = vertical ? 'left' : 'top';\n            secondaryPositionValue = (secondaryAxisTargetSize - toolTipArrowSize) / 2;\n        }\n        else {\n            secondaryPosition = origSecondaryPosition;\n            secondaryPositionValue =\n                secondaryAxisTargetSize / 4 > secondaryAxisContnetSize - toolTipArrowSize\n                    ? secondaryAxisContnetSize - toolTipArrowSize\n                    : secondaryAxisTargetSize / 4;\n        }\n        const rotate = {\n            top: 0,\n            left: -90,\n            right: 90,\n            bottom: 180,\n        };\n        return {\n            rotate: rotate[mainPosition],\n            [invertPosition(mainPosition)]: mainPositionValue,\n            [secondaryPosition]: secondaryPositionValue,\n        };\n    }\n    return {};\n}\nfunction getDetailedPositionInfo({ targetRect, dimensions, flyoutRect, }: {\n    targetRect: ClientRect;\n    dimensions: Dimensions;\n    flyoutRect: ClientRect;\n}) {\n    const viewportPosition = {\n        left: targetRect.left,\n        right: dimensions.width - targetRect.right,\n        top: targetRect.top,\n        bottom: dimensions.height - targetRect.bottom,\n    };\n    const hasEnoughSpace = {};\n    const hasMoreSpace = {};\n    for (const position of Object.keys(viewportPosition)) {\n        if (isVertical(position as BasicPosition)) {\n            // There is always enought space for top/bottom flyout when it lays outside of the viewport.\n            hasEnoughSpace[position] = targetRect.top > dimensions.height || viewportPosition[position] > flyoutRect.height;\n        }\n        else {\n            hasEnoughSpace[position] = viewportPosition[position] > flyoutRect.width;\n        }\n        hasMoreSpace[position] = viewportPosition[position] > viewportPosition[invertPosition(position as BasicPosition)];\n    }\n    return {\n        viewportPosition,\n        hasEnoughSpace,\n        hasMoreSpace,\n    };\n}\nfunction getMainAxisFlyoutPositionAndSize({ direction, targetRect, offset, dimensions, vertical, flyoutRect, }: {\n    direction: BasicPosition;\n    targetRect: ClientRect;\n    flyoutRect: ClientRect;\n    offset: number;\n    dimensions: Dimensions;\n    vertical: boolean;\n}) {\n    const targetSize = vertical ? targetRect.height : targetRect.width;\n    const flyoutSize = vertical ? flyoutRect.height : flyoutRect.width;\n    const { hasEnoughSpace, viewportPosition } = getDetailedPositionInfo({\n        targetRect,\n        dimensions,\n        flyoutRect,\n    });\n    const sizeValue = hasEnoughSpace[direction]\n        ? flyoutSize\n        : viewportPosition[direction] - (offset + toolTipArrowSize / 2) - distancePx.medium;\n    return {\n        position: {\n            name: invertPosition(direction),\n            value: targetSize + (offset + toolTipArrowSize / 2),\n        },\n        size: {\n            name: vertical ? 'height' : 'width',\n            value: sizeValue,\n        },\n    };\n}\nfunction getSecondaryAxisFlyoutPositionAndSize({ direction, targetRect, dimensions, vertical, flyoutRect, }: {\n    direction: BasicPosition;\n    targetRect: ClientRect;\n    dimensions: Dimensions;\n    vertical: boolean;\n    flyoutRect: ClientRect;\n}) {\n    let positionValue: number;\n    let positionName: BasicPosition;\n    const sizeName = vertical ? 'width' : 'height';\n    const targetSize = vertical ? targetRect.width : targetRect.height;\n    const targetPosition = vertical ? targetRect.left : targetRect.top;\n    const flyoutSize = vertical ? flyoutRect.width : flyoutRect.height;\n    const windowSize = vertical ? dimensions.width : dimensions.height;\n    const { viewportPosition } = getDetailedPositionInfo({\n        targetRect,\n        dimensions,\n        flyoutRect,\n    });\n    let sizeValue = flyoutSize;\n    if (direction === undefined) {\n        positionName = vertical ? 'left' : 'top';\n        const centeredValue = (targetSize - flyoutSize) / 2;\n        if (viewportPosition[positionName] > 0 && viewportPosition[positionName] + centeredValue < 0) {\n            positionValue = -viewportPosition[positionName] + distancePx.medium;\n            sizeValue = flyoutSize > windowSize ? windowSize - distancePx.xlarge : flyoutSize;\n        }\n        else {\n            positionValue = centeredValue;\n        }\n    }\n    else {\n        positionName = direction;\n        positionValue =\n            positionName === 'top' || positionName === 'left'\n                ? 0\n                : targetPosition - flyoutSize > 0\n                    ? targetSize - flyoutSize\n                    : -targetPosition + distancePx.medium;\n        if (positionName === 'top' || positionName === 'left') {\n            sizeValue =\n                targetPosition + positionValue + flyoutSize > windowSize\n                    ? windowSize - targetPosition + positionValue - distancePx.medium\n                    : flyoutSize;\n        }\n        else {\n            sizeValue =\n                flyoutSize > targetPosition + targetSize ? targetPosition + targetSize - distancePx.medium : flyoutSize;\n            positionName = invertPosition(positionName);\n        }\n    }\n    return {\n        position: {\n            name: positionName,\n            value: positionValue,\n        },\n        size: {\n            name: sizeName,\n            value: sizeValue,\n        },\n    };\n}\nfunction invertPosition(position: BasicPosition) {\n    const invertedPosition: InvertedPosition = {\n        top: 'bottom',\n        left: 'right',\n        right: 'left',\n        bottom: 'top',\n    };\n    return invertedPosition[position];\n}\nfunction isVertical(position: BasicPosition) {\n    return position === 'top' || position === 'bottom' ? true : false;\n}\nexport interface StyledFlyoutWindowProps {\n    size?: {\n        width?: number;\n        height?: number;\n    };\n    position?: Position;\n    noGutter?: boolean;\n}\nconst StyledFlyoutWindow = styled('div')<StyledFlyoutWindowProps>(themed(({ theme, size, position, noGutter }) => css `\n      ${getFontStyle({ size: 'medium' })}\n\n      position: absolute;\n      z-index: 100;\n      box-sizing: border-box;\n      box-shadow: 0 2px 6px 0 rgba(75, 78, 82, 0.2);\n      border: 1px solid ${theme.ui4};\n      background: ${theme.flyout.background};\n      color: ${theme.flyout.textColor};\n      max-width: ${theme.flyout.maxWidth};\n      max-height: ${theme.flyout.maxHeight};\n      ${!noGutter ? `padding: ${distance.small} ${distance.medium};` : ''} box-sizing: border-box;\n\n      ${size && size.width !== undefined ? `width: ${size.width}px` : ''};\n      ${size && size.height !== undefined ? `height: ${size.height}px` : ''};\n      ${position && position.top !== undefined ? `top: ${position.top}px` : ''};\n      ${position && position.left !== undefined ? `left: ${position.left}px` : ''};\n      ${position && position.bottom !== undefined ? `bottom: ${position.bottom}px` : ''};\n      ${position && position.right !== undefined ? `right: ${position.right}px` : ''};\n      overflow: auto;\n    `));\ninterface StyledFlyoutArrowProps extends Position {\n    rotate?: number;\n}\nconst StyledFlyoutArrow = styled('div')<StyledFlyoutArrowProps>(themed(({ top, left, bottom, right, rotate, theme }) => css `\n      pointer-events: none;\n      position: absolute;\n      z-index: 101;\n      width: ${toolTipArrowSize}px;\n      height: ${toolTipArrowSize}px;\n\n      ${top !== undefined ? `top: ${top}px` : ''};\n      ${left !== undefined ? `left: ${left}px` : ''};\n      ${bottom !== undefined ? `bottom: ${bottom}px` : ''};\n      ${right !== undefined ? `right: ${right}px` : ''};\n      ${rotate !== undefined ? `transform: rotate(${rotate}deg)` : ''};\n\n      :before {\n        content: ' ';\n        position: absolute;\n        top: 0;\n        left: 0;\n        border-style: solid;\n        border-width: ${toolTipArrowSize / 2}px;\n        border-color: ${theme.ui4} transparent transparent transparent;\n      }\n\n      :after {\n        content: ' ';\n        position: absolute;\n        top: 0;\n        left: 0;\n        border-style: solid;\n        border-width: ${toolTipArrowSize / 2 - 1}px;\n        margin-left: 1px;\n        border-color: ${theme.flyout.background} transparent transparent transparent;\n      }\n    `));\nexport interface FlyoutWindowState {\n    flyoutRect?: ClientRect;\n    children?: React.ReactNode;\n}\ninterface ScrollPosition {\n    top: number;\n    left: number;\n}\nexport class FlyoutWindowInt extends React.Component<FlyoutWindowProps, FlyoutWindowState> {\n    private flyoutContainer: HTMLDivElement | null;\n    private scrollPosition: ScrollPosition = { top: 0, left: 0 };\n    constructor(props: FlyoutWindowProps) {\n        super(props);\n        this.state = {\n            flyoutRect: undefined,\n            children: undefined,\n        };\n    }\n    static getDerivedStateFromProps(nextProps: FlyoutWindowProps, prevState: FlyoutWindowState) {\n        if (nextProps.children !== prevState.children) {\n            return {\n                flyoutRect: undefined,\n                children: nextProps.children,\n            };\n        }\n        return {\n            children: nextProps.children,\n        };\n    }\n    private setFlyoutRef = (el: HTMLDivElement) => {\n        if (this.flyoutContainer) {\n            this.flyoutContainer.removeEventListener('scroll', this.onScroll);\n        }\n        if (el) {\n            el.addEventListener('scroll', this.onScroll);\n        }\n        this.flyoutContainer = el;\n    };\n    private onScroll = (e: UIEvent) => {\n        if (e.target && e.target instanceof HTMLElement) {\n            this.scrollPosition = {\n                top: e.target.scrollTop,\n                left: e.target.scrollLeft,\n            };\n        }\n    };\n    componentDidMount() {\n        if (this.flyoutContainer) {\n            this.updateMeasurements();\n        }\n    }\n    componentWillUnmount() {\n        if (this.flyoutContainer) {\n            this.flyoutContainer.removeEventListener('scroll', this.onScroll);\n        }\n    }\n    componentDidUpdate() {\n        if (this.flyoutContainer) {\n            if (!this.state.flyoutRect) {\n                this.updateMeasurements();\n            }\n            if (this.flyoutContainer.scroll) {\n                this.flyoutContainer.scroll({\n                    top: this.scrollPosition.top,\n                    left: this.scrollPosition.left,\n                });\n            }\n        }\n    }\n    private updateMeasurements() {\n        if (this.flyoutContainer) {\n            const flyoutRect = this.flyoutContainer.getBoundingClientRect();\n            this.setState({\n                flyoutRect,\n            });\n        }\n    }\n    private getFlyoutDimensions(): {\n        size?: {\n            width?: number;\n            height?: number;\n        };\n        position?: Position;\n        arrowPosition?: Position & {\n            rotate?: number;\n        };\n    } {\n        const { flyoutRect } = this.state;\n        if (!flyoutRect) {\n            return {};\n        }\n        const { position, defaultPosition = 'bottom', offset = 4, dimensions, targetRect } = this.props;\n        const [mainPosition, secondaryPosition] = (position || defaultPosition).split('-') as Array<BasicPosition>;\n        if (!dimensions || !mainPosition) {\n            return {};\n        }\n        const vertical = isVertical(mainPosition);\n        const { hasMoreSpace, hasEnoughSpace } = getDetailedPositionInfo({\n            targetRect,\n            dimensions,\n            flyoutRect,\n        });\n        let mainDirection = mainPosition;\n        let main = getMainAxisFlyoutPositionAndSize({\n            direction: mainDirection,\n            targetRect,\n            offset,\n            dimensions,\n            vertical,\n            flyoutRect,\n        });\n        if (!position && !hasEnoughSpace[mainDirection] && !hasMoreSpace[mainDirection]) {\n            mainDirection = invertPosition(mainDirection);\n            main = getMainAxisFlyoutPositionAndSize({\n                direction: mainDirection,\n                targetRect,\n                offset,\n                dimensions,\n                vertical,\n                flyoutRect,\n            });\n        }\n        let secondaryDirection = secondaryPosition;\n        let secondary = getSecondaryAxisFlyoutPositionAndSize({\n            direction: secondaryDirection,\n            targetRect,\n            dimensions,\n            vertical,\n            flyoutRect,\n        });\n        if (!position && secondaryDirection && !hasEnoughSpace[secondaryDirection] && hasMoreSpace[secondaryDirection]) {\n            secondaryDirection = invertPosition(secondaryDirection);\n            secondary = getSecondaryAxisFlyoutPositionAndSize({\n                direction: secondaryDirection,\n                targetRect,\n                dimensions,\n                vertical,\n                flyoutRect,\n            });\n        }\n        return {\n            position: {\n                [main.position.name]: main.position.value,\n                [secondary.position.name]: secondary.position.value,\n            },\n            size: {\n                [main.size.name]: main.size.value,\n                [secondary.size.name]: secondary.size.value,\n            },\n            arrowPosition: getFlyoutArrowPosition({\n                mainPosition: mainDirection,\n                secondaryPosition: secondaryDirection,\n                offset,\n                targetRect,\n                flyoutRect,\n            }),\n        };\n    }\n    render() {\n        const { children, targetRect: _0, position: _1, offset: _2, dimensions: _3, innerRef: _4, ...props } = this.props;\n        const { arrowPosition, ...flyoutDimensions } = this.getFlyoutDimensions();\n        return (children && (<>\n          <StyledFlyoutArrow {...arrowPosition} theme={props.theme}/>\n          <StyledFlyoutWindow {...flyoutDimensions} {...props} ref={this.setFlyoutRef}>\n            {children}\n          </StyledFlyoutWindow>\n        </>));\n    }\n    static inner = {\n        get StyledFlyoutArrow() { return StyledFlyoutArrow as typeof StyledFlyoutArrow; },\n        get StyledFlyoutWindow() { return StyledFlyoutWindow as typeof StyledFlyoutWindow; }\n    };\n}\nexport const FlyoutWindow = withResponsive(FlyoutWindowInt);\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}