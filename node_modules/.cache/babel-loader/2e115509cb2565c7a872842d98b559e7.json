{"ast":null,"code":"import _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n  display: inline-block;\\n  color: \", \";\\n  background: \", \";\\n  min-width: 2em;\\n  padding: 0 \", \";\\n  border: solid 1px \", \";\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  color: \", \";\\n  background: \", \";\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  border-radius: 0.25em;\\n  text-align: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport styled, { themed } from '../../utils/styled';\nimport { distance } from '../../distance';\nimport { getFontStyle } from '../../textStyles';\nvar BasicBadge = styled.div(_templateObject());\nvar FilledBadge = styled(BasicBadge)(_templateObject2(), themed(function (_ref) {\n  var theme = _ref.theme;\n  return theme.badgeBackground;\n}), themed(function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.badgeColor;\n}));\nvar NormalBadge = styled(BasicBadge)(_templateObject3(), getFontStyle({\n  size: 'xSmall'\n}), themed(function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.badgeColor;\n}), themed(function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.badgeBackground;\n}), distance.xsmall, themed(function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.badgeColor;\n}));\n/**\n * The badge component is a simple informative display.\n */\n\nexport var Badge = Object.assign(function (_a) {\n  var _a$fill = _a.fill,\n      fill = _a$fill === void 0 ? false : _a$fill,\n      props = __rest(_a, [\"fill\"]);\n\n  return fill ? React.createElement(FilledBadge, Object.assign({}, props)) : React.createElement(NormalBadge, Object.assign({}, props));\n}, {\n  inner: {\n    get FilledBadge() {\n      return FilledBadge;\n    },\n\n    get NormalBadge() {\n      return NormalBadge;\n    }\n\n  }\n});\nBadge.displayName = 'Badge';","map":{"version":3,"sources":["../../../../src/components/Badge/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,IAAiB,MAAjB,QAA+B,oBAA/B;AAEA,SAAS,QAAT,QAAyB,gBAAzB;AACA,SAAS,YAAT,QAA6B,kBAA7B;AAaA,IAAM,UAAU,GAAG,MAAM,CAAC,GAAV,mBAAhB;AAKA,IAAM,WAAW,GAAG,MAAM,CAAC,UAAD,CAAT,qBACN,MAAM,CAAC;AAAA,MAAG,KAAH,QAAG,KAAH;AAAA,SAAe,KAAK,CAAC,eAArB;AAAA,CAAD,CADA,EAED,MAAM,CAAC;AAAA,MAAG,KAAH,SAAG,KAAH;AAAA,SAAe,KAAK,CAAC,UAArB;AAAA,CAAD,CAFL,CAAjB;AAIA,IAAM,WAAW,GAAG,MAAM,CAAC,UAAD,CAAT,qBACb,YAAY,CAAC;AAAE,EAAA,IAAI,EAAE;AAAR,CAAD,CADC,EAGN,MAAM,CAAC;AAAA,MAAG,KAAH,SAAG,KAAH;AAAA,SAAe,KAAK,CAAC,UAArB;AAAA,CAAD,CAHA,EAID,MAAM,CAAC;AAAA,MAAG,KAAH,SAAG,KAAH;AAAA,SAAe,KAAK,CAAC,eAArB;AAAA,CAAD,CAJL,EAMF,QAAQ,CAAC,MANP,EAOK,MAAM,CAAC;AAAA,MAAG,KAAH,SAAG,KAAH;AAAA,SAAe,KAAK,CAAC,UAArB;AAAA,CAAD,CAPX,CAAjB;AASA;;;;AAGA,OAAO,IAAM,KAAK,GAAG,MAAM,CAAC,MAAP,CAAgB,UAAC,EAAD,EAA+B;AAAA,gBAAhB,EAAgB,CAA5B,IAA4B;AAAA,MAA5B,IAA4B,wBAArB,KAAqB;AAAA,MAAd,KAAc,GAAd,MAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CAAc;;AAAC,SAAA,IAAI,GAAG,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,CAAZ,CAAH,GAA+B,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,CAAZ,CAAnC;AAA4D,CAA5G,EAAyI;AAAE,EAAA,KAAK,EAAE;AAC/J,QAAI,WAAJ,GAAe;AAAK,aAAO,WAAP;AAA2C,KADgG;;AAE/J,QAAI,WAAJ,GAAe;AAAK,aAAO,WAAP;AAA2C;;AAFgG;AAAT,CAAzI,CAAd;AAIP,KAAK,CAAC,WAAN,GAAoB,OAApB","sourcesContent":["import * as React from 'react';\nimport styled, { themed } from '../../utils/styled';\nimport { StandardProps } from '../../common';\nimport { distance } from '../../distance';\nimport { getFontStyle } from '../../textStyles';\nexport interface BadgeProps extends StandardProps {\n    /**\n     * The content of the badge to display.\n     */\n    children?: React.ReactNode;\n    /**\n     * Sets the mode to a filling badge. Useful together with the `Avatar`.\n     * By default false.\n     * @default false\n     */\n    fill?: boolean;\n}\nconst BasicBadge = styled.div `\n  position: relative;\n  border-radius: 0.25em;\n  text-align: center;\n`;\nconst FilledBadge = styled(BasicBadge) `\n  color: ${themed(({ theme }) => theme.badgeBackground)};\n  background: ${themed(({ theme }) => theme.badgeColor)};\n`;\nconst NormalBadge = styled(BasicBadge) `\n  ${getFontStyle({ size: 'xSmall' })}\n  display: inline-block;\n  color: ${themed(({ theme }) => theme.badgeColor)};\n  background: ${themed(({ theme }) => theme.badgeBackground)};\n  min-width: 2em;\n  padding: 0 ${distance.xsmall};\n  border: solid 1px ${themed(({ theme }) => theme.badgeColor)};\n`;\n/**\n * The badge component is a simple informative display.\n */\nexport const Badge = Object.assign(((({ fill = false, ...props }) => fill ? <FilledBadge {...props}/> : <NormalBadge {...props}/>) as React.SFC<BadgeProps>), { inner: {\n        get FilledBadge() { return FilledBadge as typeof FilledBadge; },\n        get NormalBadge() { return NormalBadge as typeof NormalBadge; }\n    } });\nBadge.displayName = 'Badge';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}