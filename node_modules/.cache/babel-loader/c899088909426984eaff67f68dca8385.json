{"ast":null,"code":"import { setLabels } from '../../utils/labels';\nexport function mergeData(newData, currentData) {\n  const all = {};\n\n  for (const file of currentData) {\n    all[file.fileId] = file;\n  }\n\n  for (const file of newData) {\n    if (file.deleted) {\n      delete all[file.fileId];\n    } else if (!file.canceled || all[file.fileId]) {\n      all[file.fileId] = file;\n    }\n  }\n\n  return Object.keys(all).map(key => all[key]);\n}\nexport const iconNames = {\n  error: 'Error',\n  canceled: 'Error',\n  progress: 'Sync',\n  scanning: 'Sync',\n  success: 'CheckCircle'\n};\nsetLabels({\n  tableHeaderFileLabel: 'File',\n  tableHeaderStatusLabel: 'Status',\n  errorTableUploadLabel: 'Upload failed',\n  canceledTableUploadLabel: 'Upload canceled',\n  progressTableUploadLabel: 'Uploading...',\n  successTableUploadLabel: 'Upload successful',\n  scanningTableUploadLabel: 'Scanning for viruses...',\n  uploadModalTitleLabel: 'Upload Details',\n  uploadProgressLabel: 'Uploading...',\n  uploadSuccessLabel: 'Upload successful',\n  uploadErrorLabel: 'Upload not successful',\n  uploadScanningLabel: 'Scanning for viruses',\n  viewDetailsLabel: 'View Details',\n  itemPluralLabel: 'Files',\n  itemSingularLabel: 'File',\n  cancelAllLabel: 'Cancel all uploads'\n});\nexport function getStatus(file) {\n  if (file.error) {\n    return 'error';\n  } else if (file.canceled || file.deleted) {\n    return 'canceled';\n  } else if (file.progress < 100) {\n    return 'progress';\n  } else if (file.scanning) {\n    return 'scanning';\n  }\n\n  return 'success';\n}","map":{"version":3,"sources":["../../../../src/components/FileUploaderDetails/helpers.ts"],"names":[],"mappings":"AAEA,SAAS,SAAT,QAA0B,oBAA1B;AAEA,OAAM,SAAU,SAAV,CAAoB,OAApB,EAAkD,WAAlD,EAAkF;AACtF,QAAM,GAAG,GAAG,EAAZ;;AAEA,OAAK,MAAM,IAAX,IAAmB,WAAnB,EAAgC;AAC9B,IAAA,GAAG,CAAC,IAAI,CAAC,MAAN,CAAH,GAAmB,IAAnB;AACD;;AAED,OAAK,MAAM,IAAX,IAAmB,OAAnB,EAA4B;AAC1B,QAAI,IAAI,CAAC,OAAT,EAAkB;AAChB,aAAO,GAAG,CAAC,IAAI,CAAC,MAAN,CAAV;AACD,KAFD,MAEO,IAAI,CAAC,IAAI,CAAC,QAAN,IAAkB,GAAG,CAAC,IAAI,CAAC,MAAN,CAAzB,EAAwC;AAC7C,MAAA,GAAG,CAAC,IAAI,CAAC,MAAN,CAAH,GAAmB,IAAnB;AACD;AACF;;AAED,SAAO,MAAM,CAAC,IAAP,CAAY,GAAZ,EAAiB,GAAjB,CAAqB,GAAG,IAAI,GAAG,CAAC,GAAD,CAA/B,CAAP;AACD;AAED,OAAO,MAAM,SAAS,GAA8B;AAClD,EAAA,KAAK,EAAE,OAD2C;AAElD,EAAA,QAAQ,EAAE,OAFwC;AAGlD,EAAA,QAAQ,EAAE,MAHwC;AAIlD,EAAA,QAAQ,EAAE,MAJwC;AAKlD,EAAA,OAAO,EAAE;AALyC,CAA7C;AAQP,SAAS,CAAC;AACR,EAAA,oBAAoB,EAAE,MADd;AAER,EAAA,sBAAsB,EAAE,QAFhB;AAGR,EAAA,qBAAqB,EAAE,eAHf;AAIR,EAAA,wBAAwB,EAAE,iBAJlB;AAKR,EAAA,wBAAwB,EAAE,cALlB;AAMR,EAAA,uBAAuB,EAAE,mBANjB;AAOR,EAAA,wBAAwB,EAAE,yBAPlB;AAQR,EAAA,qBAAqB,EAAE,gBARf;AASR,EAAA,mBAAmB,EAAE,cATb;AAUR,EAAA,kBAAkB,EAAE,mBAVZ;AAWR,EAAA,gBAAgB,EAAE,uBAXV;AAYR,EAAA,mBAAmB,EAAE,sBAZb;AAaR,EAAA,gBAAgB,EAAE,cAbV;AAcR,EAAA,eAAe,EAAE,OAdT;AAeR,EAAA,iBAAiB,EAAE,MAfX;AAgBR,EAAA,cAAc,EAAE;AAhBR,CAAD,CAAT;AAmBA,OAAM,SAAU,SAAV,CAAoB,IAApB,EAAsC;AAC1C,MAAI,IAAI,CAAC,KAAT,EAAgB;AACd,WAAO,OAAP;AACD,GAFD,MAEO,IAAI,IAAI,CAAC,QAAL,IAAiB,IAAI,CAAC,OAA1B,EAAmC;AACxC,WAAO,UAAP;AACD,GAFM,MAEA,IAAI,IAAI,CAAC,QAAL,GAAgB,GAApB,EAAyB;AAC9B,WAAO,UAAP;AACD,GAFM,MAEA,IAAI,IAAI,CAAC,QAAT,EAAmB;AACxB,WAAO,UAAP;AACD;;AAED,SAAO,SAAP;AACD","sourcesContent":["import { IconName } from '../Icon';\nimport { FileProgress, ProgressStatus } from './FileUploaderDetails.types.part';\nimport { setLabels } from '../../utils/labels';\n\nexport function mergeData(newData: Array<FileProgress>, currentData: Array<FileProgress>): Array<FileProgress> {\n  const all = {};\n\n  for (const file of currentData) {\n    all[file.fileId] = file;\n  }\n\n  for (const file of newData) {\n    if (file.deleted) {\n      delete all[file.fileId];\n    } else if (!file.canceled || all[file.fileId]) {\n      all[file.fileId] = file;\n    }\n  }\n\n  return Object.keys(all).map(key => all[key]);\n}\n\nexport const iconNames: { [x: string]: IconName } = {\n  error: 'Error',\n  canceled: 'Error',\n  progress: 'Sync',\n  scanning: 'Sync',\n  success: 'CheckCircle',\n};\n\nsetLabels({\n  tableHeaderFileLabel: 'File',\n  tableHeaderStatusLabel: 'Status',\n  errorTableUploadLabel: 'Upload failed',\n  canceledTableUploadLabel: 'Upload canceled',\n  progressTableUploadLabel: 'Uploading...',\n  successTableUploadLabel: 'Upload successful',\n  scanningTableUploadLabel: 'Scanning for viruses...',\n  uploadModalTitleLabel: 'Upload Details',\n  uploadProgressLabel: 'Uploading...',\n  uploadSuccessLabel: 'Upload successful',\n  uploadErrorLabel: 'Upload not successful',\n  uploadScanningLabel: 'Scanning for viruses',\n  viewDetailsLabel: 'View Details',\n  itemPluralLabel: 'Files',\n  itemSingularLabel: 'File',\n  cancelAllLabel: 'Cancel all uploads',\n});\n\nexport function getStatus(file: FileProgress): ProgressStatus {\n  if (file.error) {\n    return 'error';\n  } else if (file.canceled || file.deleted) {\n    return 'canceled';\n  } else if (file.progress < 100) {\n    return 'progress';\n  } else if (file.scanning) {\n    return 'scanning';\n  }\n\n  return 'success';\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}