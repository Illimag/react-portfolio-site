{"ast":null,"code":"import _classCallCheck from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  display: flex;\\n  justify-content: center;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-top: \", \";\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  height: \", \";\\n  overflow: \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport styled from '../../utils/styled';\nimport { Button } from '../Button';\nimport { Spinner } from '../Spinner';\nimport { distance } from '../../distance';\nvar Container = styled.div(_templateObject(), function (_ref) {\n  var height = _ref.height;\n  return height ? \"\".concat(height, \"px\") : 'auto';\n}, function (_ref2) {\n  var height = _ref2.height;\n  return height ? 'auto' : 'visible';\n});\nvar Footer = styled.div(_templateObject2(), distance.small);\nvar DefaultButton = styled(Button)(_templateObject3());\nexport var InfiniteScroll = /*#__PURE__*/function (_React$Component) {\n  _inherits(InfiniteScroll, _React$Component);\n\n  var _super = _createSuper(InfiniteScroll);\n\n  function InfiniteScroll(props) {\n    var _this;\n\n    _classCallCheck(this, InfiniteScroll);\n\n    _this = _super.call(this, props);\n\n    _this.handleOnScroll = function () {\n      var scrolledToBottom = _this.reachedBottom();\n\n      if (scrolledToBottom && _this.props.hasMore) {\n        _this.loadItems();\n      }\n    };\n\n    _this.loadItems = function () {\n      var data = _this.props.data;\n\n      _this.setState({\n        isLoading: true\n      });\n\n      return _this.props.loadItems(data.length);\n    };\n\n    _this.setContainer = function (node) {\n      _this.node = node;\n\n      if (_this.node) {\n        _this.node.removeEventListener('scroll', _this.handleOnScroll);\n      }\n\n      if (node && !_this.props.useWindow) {\n        node.addEventListener('scroll', _this.handleOnScroll);\n      }\n\n      _this.node = node;\n    };\n\n    _this.state = {\n      isButtonMode: !!_this.props.button,\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(InfiniteScroll, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var isButtonMode = this.state.isButtonMode;\n\n      if (!isButtonMode) {\n        var useWindow = this.props.useWindow;\n\n        if (useWindow) {\n          window.addEventListener('scroll', this.handleOnScroll);\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var isButtonMode = this.state.isButtonMode;\n\n      if (!isButtonMode) {\n        var useWindow = this.props.useWindow;\n\n        if (useWindow) {\n          window.removeEventListener('scroll', this.handleOnScroll);\n        } else if (this.node && !useWindow) {\n          this.node.removeEventListener('scroll', this.handleOnScroll);\n        }\n      }\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (nextProps.data.length !== this.props.data.length || nextProps.hasMore !== this.props.hasMore) {\n        this.setState({\n          isLoading: false\n        });\n      }\n    }\n  }, {\n    key: \"reachedBottom\",\n    value: function reachedBottom() {\n      var edgeOffset = this.props.edgeOffset || 0;\n      var _document = document,\n          documentElement = _document.documentElement,\n          body = _document.body;\n      var useWindow = this.props.useWindow;\n      var scrollTop = useWindow ? documentElement && documentElement.scrollTop || body.scrollTop : this.node && this.node.scrollTop || 0;\n      var scrollHeight = useWindow ? documentElement && documentElement.scrollHeight || body.scrollHeight : this.node && this.node.scrollHeight || 0;\n      var innerHeight = useWindow ? window.innerHeight : this.node && this.node.clientHeight || 0;\n      var scrolledToBottom = Math.ceil(scrollTop + innerHeight + edgeOffset) >= scrollHeight;\n      return scrolledToBottom;\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton() {\n      var _this$props = this.props,\n          data = _this$props.data,\n          CustomButton = _this$props.button,\n          hasMore = _this$props.hasMore;\n      var isLoading = this.state.isLoading;\n\n      if (!hasMore || data.length === 0 || isLoading) {\n        return undefined;\n      }\n\n      if (CustomButton && typeof CustomButton !== 'boolean' && typeof CustomButton !== 'string') {\n        return React.createElement(CustomButton, {\n          onClick: this.loadItems\n        });\n      }\n\n      return React.createElement(DefaultButton, {\n        buttonStyle: \"secondary\",\n        onClick: this.loadItems,\n        theme: {\n          buttonIconPosition: 'left'\n        },\n        icon: \"Add\"\n      }, typeof CustomButton === 'string' ? CustomButton : 'Show more');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          _this$props2$host = _this$props2.host,\n          Host = _this$props2$host === void 0 ? 'div' : _this$props2$host,\n          data = _this$props2.data,\n          containerHeight = _this$props2.containerHeight,\n          loadingIndicator = _this$props2.loadingIndicator;\n      var _this$state = this.state,\n          isButtonMode = _this$state.isButtonMode,\n          isLoading = _this$state.isLoading;\n      return React.createElement(Container, {\n        ref: this.setContainer,\n        height: containerHeight\n      }, React.createElement(Host, null, data), React.createElement(Footer, null, isLoading && (loadingIndicator || React.createElement(Spinner, {\n        size: \"x-small\"\n      })), isButtonMode && this.renderButton()));\n    }\n  }]);\n\n  return InfiniteScroll;\n}(React.Component);\nInfiniteScroll.inner = {\n  get DefaultButton() {\n    return DefaultButton;\n  },\n\n  get Container() {\n    return Container;\n  },\n\n  get Footer() {\n    return Footer;\n  },\n\n  get Spinner() {\n    return Spinner;\n  }\n\n};","map":{"version":3,"sources":["../../../../src/components/InfiniteScroll/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from '../../utils/styled';\nimport { Button } from '../Button';\nimport { Spinner } from '../Spinner';\nimport { distance } from '../../distance';\nexport interface InfiniteScrollProps {\n    /**\n     * @ignore\n     */\n    children?: void;\n    /**\n     * Method to load more items.\n     */\n    loadItems(offset: number): void;\n    /**\n     * Sets the button mode. If true the component will render the default\n     * 'Show More' button. In case a string is supplied the default button\n     * will be rendered with the given string. Otherwise, if a React component\n     * is provided it will render the provided component.\n     */\n    button?: boolean | string | React.ComponentType<LoaderButtonProps>;\n    /**\n     * Pixels left to bottom of the page, at which loadItems() function will\n     * be called. Used 'scroll' mode.\n     * @default 0px\n     */\n    edgeOffset?: number;\n    /**\n     * The height of the scrolling container in pixels. This is a required\n     * prop if useWindow is not set to true.\n     * @default 0px\n     */\n    containerHeight?: number;\n    /**\n     * This option allows the window to be used as the scroll container, instead\n     * of an arbitrary div created by this component, when it is set to true.\n     * @default false\n     */\n    useWindow?: boolean;\n    /**\n     * The optional host element to be used.\n     */\n    host?: string | React.ComponentClass | React.StatelessComponent;\n    /**\n     * This prop receives data that is displayed in this component.\n     */\n    data: React.ReactNodeArray;\n    /**\n     * This prop let's component know if there is more data to load and call loadItems function on scroll or to display the button.\n     */\n    hasMore: boolean;\n    /**\n     * Custom loading indicator\n     */\n    loadingIndicator?: React.ReactNode;\n}\nexport interface InfiniteScrollState {\n    isButtonMode: boolean;\n    isLoading: boolean;\n}\ninterface StyledContainerProps {\n    height?: number;\n}\nexport interface LoaderButtonProps {\n    onClick(): void;\n}\nconst Container = styled.div<StyledContainerProps> `\n  height: ${({ height }) => (height ? `${height}px` : 'auto')};\n  overflow: ${({ height }) => (height ? 'auto' : 'visible')};\n`;\nconst Footer = styled.div `\n  margin-top: ${distance.small};\n`;\nconst DefaultButton = styled(Button) `\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\nexport class InfiniteScroll extends React.Component<InfiniteScrollProps, InfiniteScrollState> {\n    private node: HTMLDivElement | null;\n    constructor(props: InfiniteScrollProps) {\n        super(props);\n        this.state = {\n            isButtonMode: !!this.props.button,\n            isLoading: false,\n        };\n    }\n    componentDidMount() {\n        const { isButtonMode } = this.state;\n        if (!isButtonMode) {\n            const { useWindow } = this.props;\n            if (useWindow) {\n                window.addEventListener('scroll', this.handleOnScroll);\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { isButtonMode } = this.state;\n        if (!isButtonMode) {\n            const { useWindow } = this.props;\n            if (useWindow) {\n                window.removeEventListener('scroll', this.handleOnScroll);\n            }\n            else if (this.node && !useWindow) {\n                this.node.removeEventListener('scroll', this.handleOnScroll);\n            }\n        }\n    }\n    UNSAFE_componentWillReceiveProps(nextProps: InfiniteScrollProps) {\n        if (nextProps.data.length !== this.props.data.length || nextProps.hasMore !== this.props.hasMore) {\n            this.setState({\n                isLoading: false,\n            });\n        }\n    }\n    private handleOnScroll = () => {\n        const scrolledToBottom = this.reachedBottom();\n        if (scrolledToBottom && this.props.hasMore) {\n            this.loadItems();\n        }\n    };\n    private reachedBottom() {\n        const edgeOffset = this.props.edgeOffset || 0;\n        const { documentElement, body } = document;\n        const { useWindow } = this.props;\n        const scrollTop = useWindow\n            ? (documentElement && documentElement.scrollTop) || body.scrollTop\n            : (this.node && this.node.scrollTop) || 0;\n        const scrollHeight = useWindow\n            ? (documentElement && documentElement.scrollHeight) || body.scrollHeight\n            : (this.node && this.node.scrollHeight) || 0;\n        const innerHeight = useWindow ? window.innerHeight : (this.node && this.node.clientHeight) || 0;\n        const scrolledToBottom = Math.ceil(scrollTop + innerHeight + edgeOffset) >= scrollHeight;\n        return scrolledToBottom;\n    }\n    private loadItems = () => {\n        const { data } = this.props;\n        this.setState({ isLoading: true });\n        return this.props.loadItems(data.length);\n    };\n    private renderButton() {\n        const { data, button: CustomButton, hasMore } = this.props;\n        const { isLoading } = this.state;\n        if (!hasMore || data.length === 0 || isLoading) {\n            return undefined;\n        }\n        if (CustomButton && typeof CustomButton !== 'boolean' && typeof CustomButton !== 'string') {\n            return <CustomButton onClick={this.loadItems}/>;\n        }\n        return (<DefaultButton buttonStyle=\"secondary\" onClick={this.loadItems} theme={{ buttonIconPosition: 'left' }} icon=\"Add\">\n        {typeof CustomButton === 'string' ? CustomButton : 'Show more'}\n      </DefaultButton>);\n    }\n    private setContainer = (node: HTMLDivElement | null) => {\n        this.node = node;\n        if (this.node) {\n            this.node.removeEventListener('scroll', this.handleOnScroll);\n        }\n        if (node && !this.props.useWindow) {\n            node.addEventListener('scroll', this.handleOnScroll);\n        }\n        this.node = node;\n    };\n    render() {\n        const { host: Host = 'div', data, containerHeight, loadingIndicator } = this.props;\n        const { isButtonMode, isLoading } = this.state;\n        return (<Container ref={this.setContainer} height={containerHeight}>\n        <Host>{data}</Host>\n        <Footer>\n          {isLoading && (loadingIndicator || <Spinner size=\"x-small\"/>)}\n          {isButtonMode && this.renderButton()}\n        </Footer>\n      </Container>);\n    }\n    static inner = {\n        get DefaultButton() { return DefaultButton as typeof DefaultButton; },\n        get Container() { return Container as typeof Container; },\n        get Footer() { return Footer as typeof Footer; },\n        get Spinner() { return Spinner as typeof Spinner; }\n    };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}