{"ast":null,"code":"import _defineProperty from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _createForOfIteratorHelper from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 0;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport styled from '../../utils/styled';\nimport { Prompt } from '../Prompt';\nimport { FormContext } from '../../contexts';\nvar StyledForm = styled.form(_templateObject());\n\nfunction isDifferent(a, b) {\n  if (a !== b) {\n    if (Array.isArray(a) && Array.isArray(b)) {\n      if (a.length === b.length) {\n        for (var i = 0; i < a.length; i++) {\n          if (isDifferent(a[i], b[i])) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n    } else if (typeof a === 'object' && typeof b === 'object') {\n      var keysA = Object.keys(a);\n      var keysB = Object.keys(b);\n\n      if (keysA.length === keysB.length) {\n        var _iterator = _createForOfIteratorHelper(keysA),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var key = _step.value;\n\n            if (isDifferent(a[key], b[key])) {\n              return true;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction isChanged(initial, current) {\n  var keys = Object.keys(current);\n\n  for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {\n    var key = _keys[_i];\n\n    if (isDifferent(current[key], initial[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Represents a field aggregator that enables easily creating forms.\n */\n\n\nexport var Form = /*#__PURE__*/function (_React$Component) {\n  _inherits(Form, _React$Component);\n\n  var _super = _createSuper(Form);\n\n  function Form(props) {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _super.call(this, props);\n    _this.fields = [];\n    _this.ctx = _this.createContext();\n\n    _this.submit = function (e) {\n      var _this$props = _this.props,\n          onSubmit = _this$props.onSubmit,\n          disabled = _this$props.disabled;\n      var _this$state = _this.state,\n          current = _this$state.current,\n          changed = _this$state.changed,\n          errors = _this$state.errors;\n\n      _this.setErrors(current);\n\n      if (!disabled && typeof onSubmit === 'function') {\n        var arrayErrors = Object.keys(errors).reduce(function (arrayErrors, field) {\n          var error = errors[field];\n\n          if (error) {\n            arrayErrors.push({\n              field: field,\n              error: error\n            });\n          }\n\n          return arrayErrors;\n        }, []);\n\n        _this.setState({\n          changed: false,\n          initial: current\n        }, function () {\n          return onSubmit({\n            data: current,\n            errors: arrayErrors,\n            changed: changed\n          });\n        });\n      }\n\n      e.preventDefault();\n      return false;\n    };\n\n    var data = props.value || props.defaultValue || {};\n    _this.state = {\n      changed: false,\n      controlled: props.value !== undefined,\n      initial: data,\n      current: data,\n      errors: {}\n    };\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this$state2 = this.state,\n          controlled = _this$state2.controlled,\n          initial = _this$state2.initial;\n\n      if (controlled) {\n        var _nextProps$value = nextProps.value,\n            value = _nextProps$value === void 0 ? {} : _nextProps$value;\n        var changed = isChanged(initial, value);\n        this.setValues(value, changed);\n      }\n    }\n  }, {\n    key: \"setValues\",\n    value: function setValues(current, changed) {\n      var keys = Object.keys(current);\n      this.setState({\n        current: current,\n        changed: changed\n      });\n\n      for (var _i2 = 0, _keys2 = keys; _i2 < _keys2.length; _i2++) {\n        var key = _keys2[_i2];\n        var value = current[key];\n\n        var _iterator2 = _createForOfIteratorHelper(this.fields),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var field = _step2.value;\n\n            if (field.props.name === key && field.state.value !== value) {\n              field.setState({\n                value: value\n              });\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    }\n  }, {\n    key: \"getError\",\n    value: function getError(name, value) {\n      var validator = this.props.validationRules && this.props.validationRules[name];\n      var validationResult = validator ? validator(value) : true;\n      var error = validationResult === true ? undefined : validationResult;\n      return error;\n    }\n  }, {\n    key: \"setFieldError\",\n    value: function setFieldError(name, error) {\n      var _iterator3 = _createForOfIteratorHelper(this.fields),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var fieldEntity = _step3.value;\n\n          if (fieldEntity.props.name === name) {\n            fieldEntity.setState({\n              error: error\n            });\n            return;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"setError\",\n    value: function setError(_ref) {\n      var name = _ref.name,\n          value = _ref.value;\n      var error = this.getError(name, value);\n      this.setFieldError(name, error);\n      this.setState({\n        errors: Object.assign({}, this.state.errors, _defineProperty({}, name, error))\n      });\n    }\n  }, {\n    key: \"setErrors\",\n    value: function setErrors(current) {\n      var keys = Object.keys(current);\n      var errors = Object.assign({}, this.state.errors);\n\n      for (var _i3 = 0, _keys3 = keys; _i3 < _keys3.length; _i3++) {\n        var key = _keys3[_i3];\n        var value = current[key];\n        var error = this.getError(key, value);\n        errors[key] = error;\n        this.setFieldError(key, error);\n      }\n\n      this.setState({\n        errors: errors\n      });\n    }\n  }, {\n    key: \"createContext\",\n    value: function createContext() {\n      var _this2 = this;\n\n      return {\n        change: function change(field) {\n          var onChange = _this2.props.onChange;\n          var _this2$state = _this2.state,\n              controlled = _this2$state.controlled,\n              current = _this2$state.current,\n              initial = _this2$state.initial;\n          var proposed = Object.assign({}, current, _defineProperty({}, field.name, field.value));\n          var changed = isChanged(initial, proposed);\n\n          if (!controlled) {\n            _this2.setValues(proposed, changed);\n          }\n\n          _this2.setError(field);\n\n          if (typeof onChange === 'function') {\n            onChange({\n              changed: changed,\n              value: proposed\n            });\n          }\n        },\n        subscribe: function subscribe(field) {\n          var _this2$state2 = _this2.state,\n              current = _this2$state2.current,\n              _this2$state2$errors = _this2$state2.errors,\n              errors = _this2$state2$errors === void 0 ? {} : _this2$state2$errors;\n          var name = field.props.name;\n\n          if (name) {\n            _this2.fields.push(field);\n\n            var error;\n\n            if (name in current) {\n              var value = current[name];\n              error = _this2.getError(name, value);\n              field.setState({\n                value: value\n              });\n            } else {\n              var _value = field.state.value;\n              current[name] = _value;\n              error = _this2.getError(name, _value);\n            }\n\n            if (error) {\n              _this2.setState({\n                errors: Object.assign({}, errors, _defineProperty({}, name, error))\n              });\n            }\n          }\n        },\n        unsubscribe: function unsubscribe(field) {\n          var index = _this2.fields.indexOf(field);\n\n          index >= 0 && _this2.fields.splice(index, 1);\n        }\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _a = this.props,\n          _0 = _a.value,\n          _1 = _a.defaultValue,\n          _2 = _a.onChange,\n          _3 = _a.onSubmit,\n          _4 = _a.disabled,\n          children = _a.children,\n          prompt = _a.prompt,\n          rest = __rest(_a, [\"value\", \"defaultValue\", \"onChange\", \"onSubmit\", \"disabled\", \"children\", \"prompt\"]);\n\n      var changed = this.state.changed;\n      return React.createElement(StyledForm, Object.assign({}, rest, {\n        onSubmit: this.submit\n      }), prompt && (typeof prompt === 'function' ? prompt(changed) : React.createElement(Prompt, {\n        when: changed,\n        message: prompt\n      })), React.createElement(FormContext.Provider, {\n        value: this.ctx\n      }, children));\n    }\n  }]);\n\n  return Form;\n}(React.Component);\nForm.inner = {\n  get StyledForm() {\n    return StyledForm;\n  },\n\n  get Prompt() {\n    return Prompt;\n  }\n\n};","map":{"version":3,"sources":["../../../../src/components/Form/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,oBAAnB;AACA,SAAS,MAAT,QAAuB,WAAvB;AACA,SAAS,WAAT,QAAiF,gBAAjF;AA6EA,IAAM,UAAU,GAAG,MAAM,CAAC,IAAV,mBAAhB;;AAGA,SAAS,WAAT,CAAqB,CAArB,EAA6B,CAA7B,EAAmC;AAC/B,MAAI,CAAC,KAAK,CAAV,EAAa;AACT,QAAI,KAAK,CAAC,OAAN,CAAc,CAAd,KAAoB,KAAK,CAAC,OAAN,CAAc,CAAd,CAAxB,EAA0C;AACtC,UAAI,CAAC,CAAC,MAAF,KAAa,CAAC,CAAC,MAAnB,EAA2B;AACvB,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAAC,CAAC,MAAtB,EAA8B,CAAC,EAA/B,EAAmC;AAC/B,cAAI,WAAW,CAAC,CAAC,CAAC,CAAD,CAAF,EAAO,CAAC,CAAC,CAAD,CAAR,CAAf,EAA6B;AACzB,mBAAO,IAAP;AACH;AACJ;;AACD,eAAO,KAAP;AACH;AACJ,KATD,MAUK,IAAI,OAAO,CAAP,KAAa,QAAb,IAAyB,OAAO,CAAP,KAAa,QAA1C,EAAoD;AACrD,UAAM,KAAK,GAAG,MAAM,CAAC,IAAP,CAAY,CAAZ,CAAd;AACA,UAAM,KAAK,GAAG,MAAM,CAAC,IAAP,CAAY,CAAZ,CAAd;;AACA,UAAI,KAAK,CAAC,MAAN,KAAiB,KAAK,CAAC,MAA3B,EAAmC;AAAA,mDACb,KADa;AAAA;;AAAA;AAC/B,8DAAyB;AAAA,gBAAd,GAAc;;AACrB,gBAAI,WAAW,CAAC,CAAC,CAAC,GAAD,CAAF,EAAS,CAAC,CAAC,GAAD,CAAV,CAAf,EAAiC;AAC7B,qBAAO,IAAP;AACH;AACJ;AAL8B;AAAA;AAAA;AAAA;AAAA;;AAM/B,eAAO,KAAP;AACH;AACJ;;AACD,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH;;AACD,SAAS,SAAT,CAAmB,OAAnB,EAA4C,OAA5C,EAAmE;AAC/D,MAAM,IAAI,GAAG,MAAM,CAAC,IAAP,CAAY,OAAZ,CAAb;;AACA,2BAAkB,IAAlB,2BAAwB;AAAnB,QAAM,GAAG,YAAT;;AACD,QAAI,WAAW,CAAC,OAAO,CAAC,GAAD,CAAR,EAAe,OAAO,CAAC,GAAD,CAAtB,CAAf,EAA6C;AACzC,aAAO,IAAP;AACH;AACJ;;AACD,SAAO,KAAP;AACH;AACD;;;;;AAGA,WAAa,IAAb;AAAA;;AAAA;;AAGI,gBAAY,KAAZ,EAAoC;AAAA;;AAAA;;AAChC,8BAAM,KAAN;AAHa,UAAA,MAAA,GAAmC,EAAnC;AACA,UAAA,GAAA,GAAuB,MAAK,aAAL,EAAvB;;AAqHT,UAAA,MAAA,GAAS,UAAC,CAAD,EAAwC;AAAA,wBACtB,MAAK,KADiB;AAAA,UAC7C,QAD6C,eAC7C,QAD6C;AAAA,UACnC,QADmC,eACnC,QADmC;AAAA,wBAEhB,MAAK,KAFW;AAAA,UAE7C,OAF6C,eAE7C,OAF6C;AAAA,UAEpC,OAFoC,eAEpC,OAFoC;AAAA,UAE3B,MAF2B,eAE3B,MAF2B;;AAGrD,YAAK,SAAL,CAAe,OAAf;;AACA,UAAI,CAAC,QAAD,IAAa,OAAO,QAAP,KAAoB,UAArC,EAAiD;AAC7C,YAAM,WAAW,GAAG,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,MAApB,CAAuD,UAAC,WAAD,EAAc,KAAd,EAAuB;AAC9F,cAAM,KAAK,GAAG,MAAM,CAAC,KAAD,CAApB;;AACA,cAAI,KAAJ,EAAW;AACP,YAAA,WAAW,CAAC,IAAZ,CAAiB;AAAE,cAAA,KAAK,EAAL,KAAF;AAAS,cAAA,KAAK,EAAL;AAAT,aAAjB;AACH;;AACD,iBAAO,WAAP;AACH,SANmB,EAMjB,EANiB,CAApB;;AAOA,cAAK,QAAL,CAAc;AACV,UAAA,OAAO,EAAE,KADC;AAEV,UAAA,OAAO,EAAE;AAFC,SAAd,EAGG;AAAA,iBAAM,QAAQ,CAAC;AACd,YAAA,IAAI,EAAE,OADQ;AAEd,YAAA,MAAM,EAAE,WAFM;AAGd,YAAA,OAAO,EAAP;AAHc,WAAD,CAAd;AAAA,SAHH;AAQH;;AACD,MAAA,CAAC,CAAC,cAAF;AACA,aAAO,KAAP;AACH,KAvBO;;AAlHJ,QAAM,IAAI,GAAG,KAAK,CAAC,KAAN,IAAe,KAAK,CAAC,YAArB,IAAqC,EAAlD;AACA,UAAK,KAAL,GAAa;AACT,MAAA,OAAO,EAAE,KADA;AAET,MAAA,UAAU,EAAE,KAAK,CAAC,KAAN,KAAgB,SAFnB;AAGT,MAAA,OAAO,EAAE,IAHA;AAIT,MAAA,OAAO,EAAE,IAJA;AAKT,MAAA,MAAM,EAAE;AALC,KAAb;AAHgC;AAUnC;;AAbL;AAAA;AAAA,qDAcqC,SAdrC,EAciE;AAAA,yBACzB,KAAK,KADoB;AAAA,UACjD,UADiD,gBACjD,UADiD;AAAA,UACrC,OADqC,gBACrC,OADqC;;AAEzD,UAAI,UAAJ,EAAgB;AAAA,+BACW,SADX,CACJ,KADI;AAAA,YACJ,KADI,iCACI,EADJ;AAEZ,YAAM,OAAO,GAAG,SAAS,CAAC,OAAD,EAAU,KAAV,CAAzB;AACA,aAAK,SAAL,CAAe,KAAf,EAAsB,OAAtB;AACH;AACJ;AArBL;AAAA;AAAA,8BAsBsB,OAtBtB,EAsBuC,OAtBvC,EAsBuD;AAC/C,UAAM,IAAI,GAAG,MAAM,CAAC,IAAP,CAAY,OAAZ,CAAb;AACA,WAAK,QAAL,CAAc;AACV,QAAA,OAAO,EAAP,OADU;AAEV,QAAA,OAAO,EAAP;AAFU,OAAd;;AAIA,iCAAkB,IAAlB,8BAAwB;AAAnB,YAAM,GAAG,cAAT;AACD,YAAM,KAAK,GAAG,OAAO,CAAC,GAAD,CAArB;;AADoB,oDAEA,KAAK,MAFL;AAAA;;AAAA;AAEpB,iEAAiC;AAAA,gBAAtB,KAAsB;;AAC7B,gBAAI,KAAK,CAAC,KAAN,CAAY,IAAZ,KAAqB,GAArB,IAA4B,KAAK,CAAC,KAAN,CAAY,KAAZ,KAAsB,KAAtD,EAA6D;AACzD,cAAA,KAAK,CAAC,QAAN,CAAe;AACX,gBAAA,KAAK,EAAL;AADW,eAAf;AAGH;AACJ;AARmB;AAAA;AAAA;AAAA;AAAA;AASvB;AACJ;AAtCL;AAAA;AAAA,6BAuCqB,IAvCrB,EAuCmC,KAvCnC,EAuC6C;AACrC,UAAM,SAAS,GAAG,KAAK,KAAL,CAAW,eAAX,IAA8B,KAAK,KAAL,CAAW,eAAX,CAA2B,IAA3B,CAAhD;AACA,UAAM,gBAAgB,GAAG,SAAS,GAAG,SAAS,CAAC,KAAD,CAAZ,GAAsB,IAAxD;AACA,UAAM,KAAK,GAAG,gBAAgB,KAAK,IAArB,GAA4B,SAA5B,GAAwC,gBAAtD;AACA,aAAO,KAAP;AACH;AA5CL;AAAA;AAAA,kCA6C0B,IA7C1B,EA6C8C,KA7C9C,EA6CsE;AAAA,kDACpC,KAAK,MAD+B;AAAA;;AAAA;AAC9D,+DAAuC;AAAA,cAA5B,WAA4B;;AACnC,cAAI,WAAW,CAAC,KAAZ,CAAkB,IAAlB,KAA2B,IAA/B,EAAqC;AACjC,YAAA,WAAW,CAAC,QAAZ,CAAqB;AAAE,cAAA,KAAK,EAAL;AAAF,aAArB;AACA;AACH;AACJ;AAN6D;AAAA;AAAA;AAAA;AAAA;AAOjE;AApDL;AAAA;AAAA,mCAqDqD;AAAA,UAA9B,IAA8B,QAA9B,IAA8B;AAAA,UAAxB,KAAwB,QAAxB,KAAwB;AAC7C,UAAM,KAAK,GAAG,KAAK,QAAL,CAAc,IAAd,EAAoB,KAApB,CAAd;AACA,WAAK,aAAL,CAAmB,IAAnB,EAAyB,KAAzB;AACA,WAAK,QAAL,CAAc;AAAE,QAAA,MAAM,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAO,KAAK,KAAL,CAAW,MAAlB,sBAA2B,IAA3B,EAAkC,KAAlC;AAAR,OAAd;AACH;AAzDL;AAAA;AAAA,8BA0DsB,OA1DtB,EA0DqC;AAC7B,UAAM,IAAI,GAAG,MAAM,CAAC,IAAP,CAAY,OAAZ,CAAb;AACA,UAAM,MAAM,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,KAAK,KAAL,CAAW,MAAnB,CAAZ;;AACA,iCAAkB,IAAlB,8BAAwB;AAAnB,YAAM,GAAG,cAAT;AACD,YAAM,KAAK,GAAG,OAAO,CAAC,GAAD,CAArB;AACA,YAAM,KAAK,GAAG,KAAK,QAAL,CAAc,GAAd,EAAmB,KAAnB,CAAd;AACA,QAAA,MAAM,CAAC,GAAD,CAAN,GAAc,KAAd;AACA,aAAK,aAAL,CAAmB,GAAnB,EAAwB,KAAxB;AACH;;AACD,WAAK,QAAL,CAAc;AAAE,QAAA,MAAM,EAAN;AAAF,OAAd;AACH;AApEL;AAAA;AAAA,oCAqEyB;AAAA;;AACjB,aAAO;AACH,QAAA,MAAM,EAAE,gBAAC,KAAD,EAA2B;AAAA,cACvB,QADuB,GACV,MAAI,CAAC,KADK,CACvB,QADuB;AAAA,6BAEU,MAAI,CAAC,KAFf;AAAA,cAEvB,UAFuB,gBAEvB,UAFuB;AAAA,cAEX,OAFW,gBAEX,OAFW;AAAA,cAEF,OAFE,gBAEF,OAFE;AAG/B,cAAM,QAAQ,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACP,OADO,sBAET,KAAK,CAAC,IAFG,EAEI,KAAK,CAAC,KAFV,EAAd;AAIA,cAAM,OAAO,GAAG,SAAS,CAAC,OAAD,EAAU,QAAV,CAAzB;;AACA,cAAI,CAAC,UAAL,EAAiB;AACb,YAAA,MAAI,CAAC,SAAL,CAAe,QAAf,EAAyB,OAAzB;AACH;;AACD,UAAA,MAAI,CAAC,QAAL,CAAc,KAAd;;AACA,cAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AAChC,YAAA,QAAQ,CAAC;AACL,cAAA,OAAO,EAAP,OADK;AAEL,cAAA,KAAK,EAAE;AAFF,aAAD,CAAR;AAIH;AACJ,SAnBE;AAoBH,QAAA,SAAS,EAAE,mBAAC,KAAD,EAA6B;AAAA,8BACH,MAAI,CAAC,KADF;AAAA,cAC5B,OAD4B,iBAC5B,OAD4B;AAAA,mDACnB,MADmB;AAAA,cACnB,MADmB,qCACV,EADU;AAAA,cAE5B,IAF4B,GAEnB,KAAK,CAAC,KAFa,CAE5B,IAF4B;;AAGpC,cAAI,IAAJ,EAAU;AACN,YAAA,MAAI,CAAC,MAAL,CAAY,IAAZ,CAAiB,KAAjB;;AACA,gBAAI,KAAJ;;AACA,gBAAI,IAAI,IAAI,OAAZ,EAAqB;AACjB,kBAAM,KAAK,GAAG,OAAO,CAAC,IAAD,CAArB;AACA,cAAA,KAAK,GAAG,MAAI,CAAC,QAAL,CAAc,IAAd,EAAoB,KAApB,CAAR;AACA,cAAA,KAAK,CAAC,QAAN,CAAe;AACX,gBAAA,KAAK,EAAL;AADW,eAAf;AAGH,aAND,MAOK;AACD,kBAAM,MAAK,GAAG,KAAK,CAAC,KAAN,CAAY,KAA1B;AACA,cAAA,OAAO,CAAC,IAAD,CAAP,GAAgB,MAAhB;AACA,cAAA,KAAK,GAAG,MAAI,CAAC,QAAL,CAAc,IAAd,EAAoB,MAApB,CAAR;AACH;;AACD,gBAAI,KAAJ,EAAW;AACP,cAAA,MAAI,CAAC,QAAL,CAAc;AAAE,gBAAA,MAAM,EAAE,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,MAAL,sBAAc,IAAd,EAAqB,KAArB;AAAV,eAAd;AACH;AACJ;AACJ,SA1CE;AA2CH,QAAA,WAAW,EAAE,qBAAC,KAAD,EAA6B;AACtC,cAAM,KAAK,GAAG,MAAI,CAAC,MAAL,CAAY,OAAZ,CAAoB,KAApB,CAAd;;AACA,UAAA,KAAK,IAAI,CAAT,IAAc,MAAI,CAAC,MAAL,CAAY,MAAZ,CAAmB,KAAnB,EAA0B,CAA1B,CAAd;AACH;AA9CE,OAAP;AAgDH;AAtHL;AAAA;AAAA,6BA+IU;AACI,UAAA,EAAA,GAAA,KAAA,KAAA;AAAA,UAAS,EAAT,GAAyF,EAAzF,CAAE,KAAF;AAAA,UAA2B,EAA3B,GAAyF,EAAzF,CAAa,YAAb;AAAA,UAAyC,EAAzC,GAAyF,EAAzF,CAA+B,QAA/B;AAAA,UAAuD,EAAvD,GAAyF,EAAzF,CAA6C,QAA7C;AAAA,UAAqE,EAArE,GAAyF,EAAzF,CAA2D,QAA3D;AAAA,UAAyE,QAAzE,GAAyF,EAAzF,CAAyE,QAAzE;AAAA,UAAmF,MAAnF,GAAyF,EAAzF,CAAmF,MAAnF;AAAA,UAA2F,IAA3F,GAA2F,MAAA,CAAA,EAAA,EAAA,CAAA,OAAA,EAAA,cAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,QAAA,CAAA,CAA3F;;AADJ,UAEM,OAFN,GAEkB,KAAK,KAFvB,CAEM,OAFN;AAGF,aAAQ,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,IAAL,EAAS;AAAE,QAAA,QAAQ,EAAE,KAAK;AAAjB,OAAT,CAAX,EACP,MAAM,KAAK,OAAO,MAAP,KAAkB,UAAlB,GAA+B,MAAM,CAAC,OAAD,CAArC,GAAiD,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO;AAAC,QAAA,IAAI,EAAE,OAAP;AAAgB,QAAA,OAAO,EAAE;AAAzB,OAAP,CAAtD,CADC,EAER,KAAA,CAAA,aAAA,CAAC,WAAW,CAAC,QAAb,EAAqB;AAAC,QAAA,KAAK,EAAE,KAAK;AAAb,OAArB,EAAwC,QAAxC,CAFQ,CAAR;AAIH;AAtJL;;AAAA;AAAA,EAAyD,KAAK,CAAC,SAA/D;AAuJW,IAAA,CAAA,KAAA,GAAQ;AACX,MAAI,UAAJ,GAAc;AAAK,WAAO,UAAP;AAAyC,GADjD;;AAEX,MAAI,MAAJ,GAAU;AAAK,WAAO,MAAP;AAAiC;;AAFrC,CAAR","sourcesContent":["import * as React from 'react';\nimport styled from '../../utils/styled';\nimport { Prompt } from '../Prompt';\nimport { FormContext, FormContextType, FormValueNotifier, FormValueChange } from '../../contexts';\nimport { StandardProps } from '../../common';\nexport interface FormSubmitEvent {\n    /**\n     * The data to be submitted.\n     */\n    data: FormValuesData;\n    /**\n     * Validation errors\n     */\n    errors?: Array<FormValidationError>;\n    /**\n     * Indicates whether the data has changed from the initial state.\n     */\n    changed: boolean;\n}\nexport interface FormChangeEvent {\n    /**\n     * The current values of the form fields.\n     */\n    value: FormValuesData;\n    /**\n     * Indicates whether the data has changed from the initial state.\n     */\n    changed: boolean;\n}\nexport interface FormValuesData {\n    [name: string]: any;\n}\nexport interface FormValidationError {\n    field: string;\n    error: React.ReactChild;\n}\nexport interface FormProps<FormValues> extends StandardProps {\n    /**\n     * Shows the given message if the user wants to navigate\n     * with changes being made or renders custom component with message if provided.\n     */\n    prompt?: ((changed: boolean) => React.ReactChild) | string;\n    /**\n     * The value of the form to be used in controlled mode.\n     */\n    value?: FormValues;\n    /**\n     * The initial value of the form to be used in managed mode.\n     */\n    defaultValue?: FormValues;\n    /**\n     * Rules for validating fields values.\n     */\n    validationRules?: {\n        [T in keyof FormValues]?: (value: any) => React.ReactChild | true;\n    };\n    /**\n     * Event emitted when a field of the form changed.\n     */\n    onChange?(e: FormChangeEvent): void;\n    /**\n     * Event emitted when the form is submitted.\n     */\n    onSubmit?(e: FormSubmitEvent): void;\n    /**\n     * Disables the form in case of invalid input. Effectively\n     * disables the possibility of submitting forms.\n     * @default false\n     */\n    disabled?: boolean;\n}\nexport interface FormState<FormValues> {\n    changed: boolean;\n    initial: FormValues;\n    controlled: boolean;\n    current: FormValues;\n    errors: Partial<{\n        [T in keyof FormValues]: React.ReactChild;\n    }>;\n}\nconst StyledForm = styled.form `\n  margin: 0;\n`;\nfunction isDifferent(a: any, b: any) {\n    if (a !== b) {\n        if (Array.isArray(a) && Array.isArray(b)) {\n            if (a.length === b.length) {\n                for (let i = 0; i < a.length; i++) {\n                    if (isDifferent(a[i], b[i])) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n        }\n        else if (typeof a === 'object' && typeof b === 'object') {\n            const keysA = Object.keys(a);\n            const keysB = Object.keys(b);\n            if (keysA.length === keysB.length) {\n                for (const key of keysA) {\n                    if (isDifferent(a[key], b[key])) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nfunction isChanged(initial: FormValuesData, current: FormValuesData) {\n    const keys = Object.keys(current);\n    for (const key of keys) {\n        if (isDifferent(current[key], initial[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Represents a field aggregator that enables easily creating forms.\n */\nexport class Form<Values extends FormValuesData> extends React.Component<FormProps<Values>, FormState<Values>> {\n    private readonly fields: Array<FormValueNotifier> = [];\n    private readonly ctx: FormContextType = this.createContext();\n    constructor(props: FormProps<Values>) {\n        super(props);\n        const data = props.value || props.defaultValue || {};\n        this.state = {\n            changed: false,\n            controlled: props.value !== undefined,\n            initial: data as Values,\n            current: data as Values,\n            errors: {},\n        };\n    }\n    UNSAFE_componentWillReceiveProps(nextProps: FormProps<Values>) {\n        const { controlled, initial } = this.state;\n        if (controlled) {\n            const { value = {} } = nextProps as Values;\n            const changed = isChanged(initial, value);\n            this.setValues(value, changed);\n        }\n    }\n    private setValues(current: Values, changed: boolean) {\n        const keys = Object.keys(current);\n        this.setState({\n            current,\n            changed,\n        });\n        for (const key of keys) {\n            const value = current[key];\n            for (const field of this.fields) {\n                if (field.props.name === key && field.state.value !== value) {\n                    field.setState({\n                        value,\n                    });\n                }\n            }\n        }\n    }\n    private getError(name: string, value: any) {\n        const validator = this.props.validationRules && this.props.validationRules[name];\n        const validationResult = validator ? validator(value) : true;\n        const error = validationResult === true ? undefined : validationResult;\n        return error;\n    }\n    private setFieldError(name: keyof Values, error?: React.ReactChild) {\n        for (const fieldEntity of this.fields) {\n            if (fieldEntity.props.name === name) {\n                fieldEntity.setState({ error });\n                return;\n            }\n        }\n    }\n    private setError({ name, value }: FormValueChange) {\n        const error = this.getError(name, value);\n        this.setFieldError(name, error);\n        this.setState({ errors: { ...this.state.errors, [name]: error } });\n    }\n    private setErrors(current: Values) {\n        const keys = Object.keys(current);\n        const errors = { ...this.state.errors };\n        for (const key of keys) {\n            const value = current[key];\n            const error = this.getError(key, value);\n            errors[key] = error;\n            this.setFieldError(key, error);\n        }\n        this.setState({ errors });\n    }\n    private createContext(): FormContextType {\n        return {\n            change: (field: FormValueChange) => {\n                const { onChange } = this.props;\n                const { controlled, current, initial } = this.state;\n                const proposed = {\n                    ...current,\n                    [field.name]: field.value,\n                };\n                const changed = isChanged(initial, proposed);\n                if (!controlled) {\n                    this.setValues(proposed, changed);\n                }\n                this.setError(field);\n                if (typeof onChange === 'function') {\n                    onChange({\n                        changed,\n                        value: proposed,\n                    });\n                }\n            },\n            subscribe: (field: FormValueNotifier) => {\n                const { current, errors = {} } = this.state;\n                const { name } = field.props;\n                if (name) {\n                    this.fields.push(field);\n                    let error;\n                    if (name in current) {\n                        const value = current[name];\n                        error = this.getError(name, value);\n                        field.setState({\n                            value,\n                        });\n                    }\n                    else {\n                        const value = field.state.value;\n                        current[name] = value;\n                        error = this.getError(name, value);\n                    }\n                    if (error) {\n                        this.setState({ errors: { ...errors, [name]: error } as FormState<Values>['errors'] });\n                    }\n                }\n            },\n            unsubscribe: (field: FormValueNotifier) => {\n                const index = this.fields.indexOf(field);\n                index >= 0 && this.fields.splice(index, 1);\n            },\n        };\n    }\n    private submit = (e: React.FormEvent<HTMLFormElement>) => {\n        const { onSubmit, disabled } = this.props;\n        const { current, changed, errors } = this.state;\n        this.setErrors(current);\n        if (!disabled && typeof onSubmit === 'function') {\n            const arrayErrors = Object.keys(errors).reduce<Array<FormValidationError>>((arrayErrors, field) => {\n                const error = errors[field];\n                if (error) {\n                    arrayErrors.push({ field, error });\n                }\n                return arrayErrors;\n            }, []);\n            this.setState({\n                changed: false,\n                initial: current,\n            }, () => onSubmit({\n                data: current,\n                errors: arrayErrors,\n                changed,\n            }));\n        }\n        e.preventDefault();\n        return false;\n    };\n    render() {\n        const { value: _0, defaultValue: _1, onChange: _2, onSubmit: _3, disabled: _4, children, prompt, ...rest } = this.props;\n        const { changed } = this.state;\n        return (<StyledForm {...rest} onSubmit={this.submit}>\n        {prompt && (typeof prompt === 'function' ? prompt(changed) : <Prompt when={changed} message={prompt}/>)}\n        <FormContext.Provider value={this.ctx}>{children}</FormContext.Provider>\n      </StyledForm>);\n    }\n    static inner = {\n        get StyledForm() { return StyledForm as typeof StyledForm; },\n        get Prompt() { return Prompt as typeof Prompt; }\n    };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}