{"ast":null,"code":"import * as React from 'react';\nimport styled from '../../utils/styled';\nimport { SelectButton } from '../SelectButton';\nimport { dark } from '../../colors';\nimport { distance } from '../../distance';\nconst StyledItemControls = styled.div`\n  margin-right: auto;\n  display: flex;\n  align-items: center;\n`;\nconst StyledItemsInfo = styled.div`\n  position: relative;\n  padding-left: ${distance.small};\n\n  &:before {\n    content: '';\n    background: ${dark};\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 1px;\n    height: 100%;\n  }\n`;\nexport const ItemControls = Object.assign(({\n  label,\n  data,\n  value,\n  children,\n  onChange\n}) => React.createElement(StyledItemControls, null, label, React.createElement(SelectButton, {\n  data: data,\n  value: value,\n  onChange: onChange\n}), React.createElement(StyledItemsInfo, null, children)), {\n  inner: {\n    get StyledItemControls() {\n      return StyledItemControls;\n    },\n\n    get SelectButton() {\n      return SelectButton;\n    },\n\n    get StyledItemsInfo() {\n      return StyledItemsInfo;\n    }\n\n  }\n});","map":{"version":3,"sources":["../../../../src/components/PaginationBar/ItemControlsView.part.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,oBAAnB;AACA,SAAS,YAAT,QAAsD,iBAAtD;AACA,SAAS,IAAT,QAAqB,cAArB;AACA,SAAS,QAAT,QAAyB,gBAAzB;AACA,MAAM,kBAAkB,GAAG,MAAM,CAAC,GAAI;;;;CAAtC;AAKA,MAAM,eAAe,GAAG,MAAM,CAAC,GAAI;;kBAEjB,QAAQ,CAAC,KAAK;;;;kBAId,IAAI;;;;;;;;CANtB;AAqBA,OAAO,MAAM,YAAY,GAAG,MAAM,CAAC,MAAP,CAAgB,CAAC;AAAE,EAAA,KAAF;AAAS,EAAA,IAAT;AAAe,EAAA,KAAf;AAAsB,EAAA,QAAtB;AAAgC,EAAA;AAAhC,CAAD,KAAiD,KAAA,CAAA,aAAA,CAAC,kBAAD,EAAmB,IAAnB,EACxF,KADwF,EAEzF,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa;AAAC,EAAA,IAAI,EAAE,IAAP;AAAa,EAAA,KAAK,EAAE,KAApB;AAA2B,EAAA,QAAQ,EAAE;AAArC,CAAb,CAFyF,EAGzF,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB,IAAhB,EAAkB,QAAlB,CAHyF,CAAjE,EAIgC;AAAE,EAAA,KAAK,EAAE;AAC7D,QAAI,kBAAJ,GAAsB;AAAK,aAAO,kBAAP;AAAyD,KADvB;;AAE7D,QAAI,YAAJ,GAAgB;AAAK,aAAO,YAAP;AAA6C,KAFL;;AAG7D,QAAI,eAAJ,GAAmB;AAAK,aAAO,eAAP;AAAmD;;AAHd;AAAT,CAJhC,CAArB","sourcesContent":["import * as React from 'react';\nimport styled from '../../utils/styled';\nimport { SelectButton, SelectButtonChangeEvent } from '../SelectButton';\nimport { dark } from '../../colors';\nimport { distance } from '../../distance';\nconst StyledItemControls = styled.div `\n  margin-right: auto;\n  display: flex;\n  align-items: center;\n`;\nconst StyledItemsInfo = styled.div `\n  position: relative;\n  padding-left: ${distance.small};\n\n  &:before {\n    content: '';\n    background: ${dark};\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 1px;\n    height: 100%;\n  }\n`;\nexport interface ItemControlsProps {\n    label: string;\n    data: Array<string>;\n    value: string;\n    onChange?(attr: SelectButtonChangeEvent): void;\n}\nexport const ItemControls = Object.assign(((({ label, data, value, children, onChange }) => (<StyledItemControls>\n    {label}\n    <SelectButton data={data} value={value} onChange={onChange}/>\n    <StyledItemsInfo>{children}</StyledItemsInfo>\n  </StyledItemControls>)) as React.SFC<ItemControlsProps>), { inner: {\n        get StyledItemControls() { return StyledItemControls as typeof StyledItemControls; },\n        get SelectButton() { return SelectButton as typeof SelectButton; },\n        get StyledItemsInfo() { return StyledItemsInfo as typeof StyledItemsInfo; }\n    } });\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}