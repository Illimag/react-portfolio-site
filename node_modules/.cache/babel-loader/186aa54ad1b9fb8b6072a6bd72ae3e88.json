{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport * as React from 'react';\nimport styled, { themed } from '../../utils/styled';\nconst StyledAccordionTableRow = styled.tr(themed(({\n  active,\n  clickable,\n  theme: {\n    ui1,\n    ui2,\n    ui3,\n    ui4,\n    ui5,\n    text1\n  }\n}) => `\n    background: ${active ? ui2 : ui1};\n    border: ${active ? `1px solid ${ui5}` : 'none'};\n    cursor: ${clickable ? 'pointer' : 'default'};\n    border-bottom: 1px solid ${ui4};\n    color: ${text1};\n\n    &:hover {\n      background: ${ui3};\n    }\n\n    &:nth-last-child(2) {\n      ${active ? '' : 'border-bottom: none'};\n    }\n\n    > td {\n      border-top: ${active ? `1px solid ${ui5}` : 'none'};\n    }\n  `));\nexport const AccordionTableRow = Object.assign(_a => {\n  var {\n    active = false,\n    clickable = true,\n    children,\n    onClick\n  } = _a,\n      props = __rest(_a, [\"active\", \"clickable\", \"children\", \"onClick\"]);\n\n  const handleClick = typeof onClick === 'function' && clickable ? onClick : undefined;\n  return React.createElement(StyledAccordionTableRow, Object.assign({\n    onClick: handleClick,\n    active: active,\n    clickable: clickable\n  }, props), children);\n}, {\n  inner: {\n    get StyledAccordionTableRow() {\n      return StyledAccordionTableRow;\n    }\n\n  }\n});","map":{"version":3,"sources":["../../../../src/components/AccordionTableRow/index.tsx"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,OAAO,MAAP,IAAiB,MAAjB,QAA+B,oBAA/B;AAgBA,MAAM,uBAAuB,GAAG,MAAM,CAAC,EAAP,CAAkC,MAAM,CAAC,CAAC;AAAE,EAAA,MAAF;AAAU,EAAA,SAAV;AAAqB,EAAA,KAAK,EAAE;AAAE,IAAA,GAAF;AAAO,IAAA,GAAP;AAAY,IAAA,GAAZ;AAAiB,IAAA,GAAjB;AAAsB,IAAA,GAAtB;AAA2B,IAAA;AAA3B;AAA5B,CAAD,KAAsE;kBAC7H,MAAM,GAAG,GAAH,GAAS,GAAG;cACtB,MAAM,GAAG,aAAa,GAAG,EAAnB,GAAwB,MAAM;cACpC,SAAS,GAAG,SAAH,GAAe,SAAS;+BAChB,GAAG;aACrB,KAAK;;;oBAGE,GAAG;;;;QAIf,MAAM,GAAG,EAAH,GAAQ,qBAAqB;;;;oBAIvB,MAAM,GAAG,aAAa,GAAG,EAAnB,GAAwB,MAAM;;GAhBgB,CAAxC,CAAhC;AAmBA,OAAO,MAAM,iBAAiB,GAAG,MAAM,CAAC,MAAP,CAAiB,EAAD,IAAsE;MAArE;AAAE,IAAA,MAAM,GAAG,KAAX;AAAkB,IAAA,SAAS,GAAG,IAA9B;AAAoC,IAAA,QAApC;AAA8C,IAAA;AAA9C,MAAqD,E;MAAE,KAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,QAAA,EAAA,WAAA,EAAA,UAAA,EAAA,SAAA,CAAA,C;;AACrG,QAAM,WAAW,GAAG,OAAO,OAAP,KAAmB,UAAnB,IAAiC,SAAjC,GAA6C,OAA7C,GAAuD,SAA3E;AACA,SAAQ,KAAA,CAAA,aAAA,CAAC,uBAAD,EAAwB,MAAA,CAAA,MAAA,CAAA;AAAC,IAAA,OAAO,EAAE,WAAV;AAAuB,IAAA,MAAM,EAAE,MAA/B;AAAuC,IAAA,SAAS,EAAE;AAAlD,GAAA,EAAiE,KAAjE,CAAxB,EACL,QADK,CAAR;AAGH,CALgC,EAKS;AAAE,EAAA,KAAK,EAAE;AAC3C,QAAI,uBAAJ,GAA2B;AAAK,aAAO,uBAAP;AAAmE;;AADxD;AAAT,CALT,CAA1B","sourcesContent":["import * as React from 'react';\nimport { StandardProps } from '../../common';\nimport styled, { themed } from '../../utils/styled';\nexport interface AccordionTableRowProps extends StandardProps {\n    /**\n     * Displays `AccordionRow` in the active state.\n     */\n    active?: boolean;\n    /**\n     * Triggers `click` event only if `true`.\n     * By default set to `true`.\n     */\n    clickable?: boolean;\n    /**\n     * The event which will be fired when row is clicked.\n     */\n    onClick?(e: React.MouseEvent): void;\n}\nconst StyledAccordionTableRow = styled.tr<AccordionTableRowProps>(themed(({ active, clickable, theme: { ui1, ui2, ui3, ui4, ui5, text1 } }) => `\n    background: ${active ? ui2 : ui1};\n    border: ${active ? `1px solid ${ui5}` : 'none'};\n    cursor: ${clickable ? 'pointer' : 'default'};\n    border-bottom: 1px solid ${ui4};\n    color: ${text1};\n\n    &:hover {\n      background: ${ui3};\n    }\n\n    &:nth-last-child(2) {\n      ${active ? '' : 'border-bottom: none'};\n    }\n\n    > td {\n      border-top: ${active ? `1px solid ${ui5}` : 'none'};\n    }\n  `));\nexport const AccordionTableRow = Object.assign(((({ active = false, clickable = true, children, onClick, ...props }) => {\n    const handleClick = typeof onClick === 'function' && clickable ? onClick : undefined;\n    return (<StyledAccordionTableRow onClick={handleClick} active={active} clickable={clickable} {...props}>\n      {children}\n    </StyledAccordionTableRow>);\n}) as React.SFC<AccordionTableRowProps>), { inner: {\n        get StyledAccordionTableRow() { return StyledAccordionTableRow as typeof StyledAccordionTableRow; }\n    } });\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}