{"ast":null,"code":"import { AccordionTableInt } from './AccordionTableInt.part';\nimport { withResponsiveMode } from '../../hoc/withResponsiveMode';\nimport { breakpoints } from '../../themes';\n/**\n * The accordion table component is used to define a special table with expandable rows.\n */\n\nexport var AccordionTable = withResponsiveMode(function (width) {\n  return !width || width > breakpoints.medium ? 'table' : 'card';\n})(AccordionTableInt);","map":{"version":3,"sources":["../../../../src/components/AccordionTable/index.tsx"],"names":[],"mappings":"AACA,SAAS,iBAAT,QAAkC,0BAAlC;AAEA,SAAS,kBAAT,QAAmC,8BAAnC;AACA,SAAS,WAAT,QAA4B,cAA5B;AAQA;;;;AAGA,OAAO,IAAM,cAAc,GAAuB,kBAAkB,CAAY,UAAA,KAAK;AAAA,SAAI,CAAC,KAAD,IAAU,KAAK,GAAG,WAAW,CAAC,MAA9B,GAAuC,OAAvC,GAAiD,MAArD;AAAA,CAAjB,CAAlB,CAAgG,iBAAhG,CAA3C","sourcesContent":["import * as React from 'react';\nimport { AccordionTableInt } from './AccordionTableInt.part';\nimport { AccordionTableProps } from './AccordionTable.types.part';\nimport { withResponsiveMode } from '../../hoc/withResponsiveMode';\nimport { breakpoints } from '../../themes';\nimport { TableMode } from '../Table/Table.types.part';\nexport { AccordionTableProps, AccordionTableChangeEvent, AccordionDetailsRenderEvent, AccordionTableCardRendererEvent, AccordionTableRowEvent, } from './AccordionTable.types.part';\nexport interface AccordionTableType extends React.SFC<AccordionTableProps<any>> {\n    <T = {}>(props: AccordionTableProps<T> & {\n        children?: React.ReactNode;\n    }, context?: any): JSX.Element;\n}\n/**\n * The accordion table component is used to define a special table with expandable rows.\n */\nexport const AccordionTable: AccordionTableType = withResponsiveMode<TableMode>(width => !width || width > breakpoints.medium ? 'table' : 'card')(AccordionTableInt) as any;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}