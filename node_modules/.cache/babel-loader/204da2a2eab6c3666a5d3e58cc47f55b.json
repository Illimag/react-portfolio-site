{"ast":null,"code":"import _createForOfIteratorHelper from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\nimport { withFormContext } from '../../hoc/withFormContext';\nimport { RadioButtonGroupContext } from '../../contexts/RadioButtonGroupContext';\n\nvar RadioButtonGroupInt = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(RadioButtonGroupInt, _React$PureComponent);\n\n  var _super = _createSuper(RadioButtonGroupInt);\n\n  function RadioButtonGroupInt(props) {\n    var _this;\n\n    _classCallCheck(this, RadioButtonGroupInt);\n\n    _this = _super.call(this, props);\n    _this.buttons = [];\n    _this.ctx = _this.createContext();\n\n    _this.getNextValue = function (groupItemName) {\n      var multiple = _this.props.multiple;\n      var value = _this.state.value;\n\n      if (value && Array.isArray(value) && groupItemName) {\n        if (value.indexOf(groupItemName) !== -1) {\n          return value.filter(function (f) {\n            return f !== groupItemName;\n          });\n        }\n\n        return [].concat(_toConsumableArray(value), [groupItemName]);\n      }\n\n      return multiple && groupItemName ? [groupItemName] : groupItemName;\n    };\n\n    var controlled = props.value !== undefined;\n    var propValue = props.value,\n        defaultValue = props.defaultValue;\n    var value = controlled ? propValue : defaultValue;\n    _this.state = {\n      controlled: controlled,\n      value: value\n    };\n    return _this;\n  }\n\n  _createClass(RadioButtonGroupInt, [{\n    key: \"setState\",\n    value: function setState(state) {\n      var value = state.value;\n\n      if (value) {\n        var _iterator = _createForOfIteratorHelper(this.buttons),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var button = _step.value;\n            var selected = Array.isArray(value) && button.name ? value.indexOf(button.name) !== -1 : button.name === value;\n            button.setValue(selected);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        _get(_getPrototypeOf(RadioButtonGroupInt.prototype), \"setState\", this).call(this, Object.assign({}, state, {\n          value: value\n        }));\n      }\n\n      _get(_getPrototypeOf(RadioButtonGroupInt.prototype), \"setState\", this).call(this, state);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var form = this.props.form;\n      var controlled = this.state.controlled;\n\n      if (!controlled && form) {\n        form.subscribe(this);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var form = this.props.form;\n      var controlled = this.state.controlled;\n\n      if (!controlled && form) {\n        form.unsubscribe(this);\n      }\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(_ref) {\n      var value = _ref.value;\n      var controlled = this.state.controlled;\n\n      if (controlled) {\n        this.setState({\n          value: value\n        });\n      }\n    }\n  }, {\n    key: \"createContext\",\n    value: function createContext() {\n      var _this2 = this;\n\n      return {\n        select: function select(rb) {\n          var _this2$props = _this2.props,\n              onChange = _this2$props.onChange,\n              form = _this2$props.form,\n              _this2$props$name = _this2$props.name,\n              name = _this2$props$name === void 0 ? '' : _this2$props$name;\n          var controlled = _this2.state.controlled;\n\n          var value = _this2.getNextValue(rb.name);\n\n          if (!controlled) {\n            if (form) {\n              form.change({\n                name: name,\n                value: value\n              });\n            } else if (value) {\n              _this2.setState({\n                value: value\n              });\n            } else {\n              var _iterator2 = _createForOfIteratorHelper(_this2.buttons),\n                  _step2;\n\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var button = _step2.value;\n                  button.setValue(button === rb);\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n\n              _get(_getPrototypeOf(RadioButtonGroupInt.prototype), \"setState\", _this2).call(_this2, {\n                value: undefined\n              });\n            }\n          }\n\n          if (typeof onChange === 'function' && value) {\n            onChange({\n              value: value\n            });\n          }\n        },\n        subscribe: function subscribe(rb) {\n          var value = _this2.state.value;\n\n          _this2.buttons.push(rb);\n\n          if (value !== undefined) {\n            var selected = Array.isArray(value) && rb.name ? value.indexOf(rb.name) !== -1 : rb.name === value;\n            rb.setValue(selected);\n          }\n        },\n        unsubscribe: function unsubscribe(rb) {\n          var index = _this2.buttons.indexOf(rb);\n\n          index >= 0 && _this2.buttons.splice(index, 1);\n        }\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(RadioButtonGroupContext.Provider, {\n        value: this.ctx\n      }, this.props.children);\n    }\n  }]);\n\n  return RadioButtonGroupInt;\n}(React.PureComponent);\n/**\n * The radio button group manages a group of radio buttons.\n */\n\n\nexport var RadioButtonGroup = withFormContext(RadioButtonGroupInt);\nRadioButtonGroup.displayName = 'RadioButtonGroup';","map":{"version":3,"sources":["../../../../src/components/RadioButtonGroup/index.tsx"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAA2B,eAA3B,QAAkD,2BAAlD;AACA,SAAS,uBAAT,QAAgG,wCAAhG;;IAcM,mB;;;;;AAGF,+BAAY,KAAZ,EAAwC;AAAA;;AAAA;;AACpC,8BAAM,KAAN;AAHa,UAAA,OAAA,GAA2C,EAA3C;AACA,UAAA,GAAA,GAAmC,MAAK,aAAL,EAAnC;;AA4CT,UAAA,YAAA,GAAe,UAAC,aAAD,EAA2B;AAAA,UACtC,QADsC,GACzB,MAAK,KADoB,CACtC,QADsC;AAAA,UAEtC,KAFsC,GAE5B,MAAK,KAFuB,CAEtC,KAFsC;;AAG9C,UAAI,KAAK,IAAI,KAAK,CAAC,OAAN,CAAc,KAAd,CAAT,IAAiC,aAArC,EAAoD;AAChD,YAAI,KAAK,CAAC,OAAN,CAAc,aAAd,MAAiC,CAAC,CAAtC,EAAyC;AACrC,iBAAO,KAAK,CAAC,MAAN,CAAa,UAAA,CAAC;AAAA,mBAAI,CAAC,KAAK,aAAV;AAAA,WAAd,CAAP;AACH;;AACD,4CAAW,KAAX,IAAkB,aAAlB;AACH;;AACD,aAAO,QAAQ,IAAI,aAAZ,GAA4B,CAAC,aAAD,CAA5B,GAA8C,aAArD;AACH,KAVO;;AAzCJ,QAAM,UAAU,GAAG,KAAK,CAAC,KAAN,KAAgB,SAAnC;AAFoC,QAGrB,SAHqB,GAGO,KAHP,CAG5B,KAH4B;AAAA,QAGV,YAHU,GAGO,KAHP,CAGV,YAHU;AAIpC,QAAM,KAAK,GAAG,UAAU,GAAG,SAAH,GAAe,YAAvC;AACA,UAAK,KAAL,GAAa;AACT,MAAA,UAAU,EAAV,UADS;AAET,MAAA,KAAK,EAAL;AAFS,KAAb;AALoC;AASvC;;;;6BAC+C,K,EAAqC;AACjF,UAAM,KAAK,GAAI,KAA8C,CAAC,KAA9D;;AACA,UAAI,KAAJ,EAAW;AAAA,mDACc,KAAK,OADnB;AAAA;;AAAA;AACP,8DAAmC;AAAA,gBAAxB,MAAwB;AAC/B,gBAAM,QAAQ,GAAG,KAAK,CAAC,OAAN,CAAc,KAAd,KAAwB,MAAM,CAAC,IAA/B,GAAsC,KAAK,CAAC,OAAN,CAAc,MAAM,CAAC,IAArB,MAA+B,CAAC,CAAtE,GAA0E,MAAM,CAAC,IAAP,KAAgB,KAA3G;AACA,YAAA,MAAM,CAAC,QAAP,CAAgB,QAAhB;AACH;AAJM;AAAA;AAAA;AAAA;AAAA;;AAKP,0FAAc,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,KAAN,EAAW;AAAE,UAAA,KAAK,EAAL;AAAF,SAAX,CAAd;AACH;;AACD,wFAAe,KAAf;AACH;;;wCACgB;AAAA,UACL,IADK,GACI,KAAK,KADT,CACL,IADK;AAAA,UAEL,UAFK,GAEU,KAAK,KAFf,CAEL,UAFK;;AAGb,UAAI,CAAC,UAAD,IAAe,IAAnB,EAAyB;AACrB,QAAA,IAAI,CAAC,SAAL,CAAe,IAAf;AACH;AACJ;;;2CACmB;AAAA,UACR,IADQ,GACC,KAAK,KADN,CACR,IADQ;AAAA,UAER,UAFQ,GAEO,KAAK,KAFZ,CAER,UAFQ;;AAGhB,UAAI,CAAC,UAAD,IAAe,IAAnB,EAAyB;AACrB,QAAA,IAAI,CAAC,WAAL,CAAiB,IAAjB;AACH;AACJ;;;2DACgE;AAAA,UAA9B,KAA8B,QAA9B,KAA8B;AAAA,UACrD,UADqD,GACtC,KAAK,KADiC,CACrD,UADqD;;AAE7D,UAAI,UAAJ,EAAgB;AACZ,aAAK,QAAL,CAAc;AACV,UAAA,KAAK,EAAL;AADU,SAAd;AAGH;AACJ;;;oCAYoB;AAAA;;AACjB,aAAO;AACH,QAAA,MAAM,EAAE,gBAAC,EAAD,EAAiC;AAAA,6BACC,MAAI,CAAC,KADN;AAAA,cAC7B,QAD6B,gBAC7B,QAD6B;AAAA,cACnB,IADmB,gBACnB,IADmB;AAAA,+CACb,IADa;AAAA,cACb,IADa,kCACN,EADM;AAAA,cAE7B,UAF6B,GAEd,MAAI,CAAC,KAFS,CAE7B,UAF6B;;AAGrC,cAAM,KAAK,GAAG,MAAI,CAAC,YAAL,CAAkB,EAAE,CAAC,IAArB,CAAd;;AACA,cAAI,CAAC,UAAL,EAAiB;AACb,gBAAI,IAAJ,EAAU;AACN,cAAA,IAAI,CAAC,MAAL,CAAY;AACR,gBAAA,IAAI,EAAJ,IADQ;AAER,gBAAA,KAAK,EAAL;AAFQ,eAAZ;AAIH,aALD,MAMK,IAAI,KAAJ,EAAW;AACZ,cAAA,MAAI,CAAC,QAAL,CAAc;AACV,gBAAA,KAAK,EAAL;AADU,eAAd;AAGH,aAJI,MAKA;AAAA,0DACoB,MAAI,CAAC,OADzB;AAAA;;AAAA;AACD,uEAAmC;AAAA,sBAAxB,MAAwB;AAC/B,kBAAA,MAAM,CAAC,QAAP,CAAgB,MAAM,KAAK,EAA3B;AACH;AAHA;AAAA;AAAA;AAAA;AAAA;;AAID,oGAAe;AACX,gBAAA,KAAK,EAAE;AADI,eAAf;AAGH;AACJ;;AACD,cAAI,OAAO,QAAP,KAAoB,UAApB,IAAkC,KAAtC,EAA6C;AACzC,YAAA,QAAQ,CAAC;AACL,cAAA,KAAK,EAAL;AADK,aAAD,CAAR;AAGH;AACJ,SA/BE;AAgCH,QAAA,SAAS,EAAE,mBAAC,EAAD,EAAiC;AAAA,cAChC,KADgC,GACtB,MAAI,CAAC,KADiB,CAChC,KADgC;;AAExC,UAAA,MAAI,CAAC,OAAL,CAAa,IAAb,CAAkB,EAAlB;;AACA,cAAI,KAAK,KAAK,SAAd,EAAyB;AACrB,gBAAM,QAAQ,GAAG,KAAK,CAAC,OAAN,CAAc,KAAd,KAAwB,EAAE,CAAC,IAA3B,GAAkC,KAAK,CAAC,OAAN,CAAc,EAAE,CAAC,IAAjB,MAA2B,CAAC,CAA9D,GAAkE,EAAE,CAAC,IAAH,KAAY,KAA/F;AACA,YAAA,EAAE,CAAC,QAAH,CAAY,QAAZ;AACH;AACJ,SAvCE;AAwCH,QAAA,WAAW,EAAE,qBAAC,EAAD,EAAiC;AAC1C,cAAM,KAAK,GAAG,MAAI,CAAC,OAAL,CAAa,OAAb,CAAqB,EAArB,CAAd;;AACA,UAAA,KAAK,IAAI,CAAT,IAAc,MAAI,CAAC,OAAL,CAAa,MAAb,CAAoB,KAApB,EAA2B,CAA3B,CAAd;AACH;AA3CE,OAAP;AA6CH;;;6BACK;AACF,aAAO,KAAA,CAAA,aAAA,CAAC,uBAAuB,CAAC,QAAzB,EAAiC;AAAC,QAAA,KAAK,EAAE,KAAK;AAAb,OAAjC,EAAoD,KAAK,KAAL,CAAW,QAA/D,CAAP;AACH;;;;EA1G6B,KAAK,CAAC,a;AA4GxC;;;;;AAGA,OAAO,IAAM,gBAAgB,GAAG,eAAe,CAAC,mBAAD,CAAxC;AACP,gBAAgB,CAAC,WAAjB,GAA+B,kBAA/B","sourcesContent":["import * as React from 'react';\nimport { InputProps, InputChangeEvent } from '../../common';\nimport { FormContextProps, withFormContext } from '../../hoc/withFormContext';\nimport { RadioButtonGroupContext, RadioButtonGroupContextType, RadioButtonGroupNotifier, } from '../../contexts/RadioButtonGroupContext';\nexport type RadioButtonGroupChangeEvent = InputChangeEvent<string>;\nexport interface RadioButtonGroupProps extends InputProps<string | Array<string>> {\n    /**\n     * Sets the group's children.\n     */\n    children?: React.ReactNode;\n    multiple?: boolean;\n}\nexport type StateValue = Array<string> | string | undefined;\nexport interface RadioButtonGroupState {\n    controlled: boolean;\n    value: StateValue;\n}\nclass RadioButtonGroupInt extends React.PureComponent<RadioButtonGroupProps & FormContextProps, RadioButtonGroupState> {\n    private readonly buttons: Array<RadioButtonGroupNotifier> = [];\n    private readonly ctx: RadioButtonGroupContextType = this.createContext();\n    constructor(props: RadioButtonGroupProps) {\n        super(props);\n        const controlled = props.value !== undefined;\n        const { value: propValue, defaultValue } = props;\n        const value = controlled ? propValue : defaultValue;\n        this.state = {\n            controlled,\n            value,\n        };\n    }\n    setState<K extends keyof RadioButtonGroupState>(state: Pick<RadioButtonGroupState, K>) {\n        const value = (state as Pick<RadioButtonGroupState, 'value'>).value;\n        if (value) {\n            for (const button of this.buttons) {\n                const selected = Array.isArray(value) && button.name ? value.indexOf(button.name) !== -1 : button.name === value;\n                button.setValue(selected);\n            }\n            super.setState({ ...state, value });\n        }\n        super.setState(state);\n    }\n    componentDidMount() {\n        const { form } = this.props;\n        const { controlled } = this.state;\n        if (!controlled && form) {\n            form.subscribe(this);\n        }\n    }\n    componentWillUnmount() {\n        const { form } = this.props;\n        const { controlled } = this.state;\n        if (!controlled && form) {\n            form.unsubscribe(this);\n        }\n    }\n    UNSAFE_componentWillReceiveProps({ value }: RadioButtonGroupProps) {\n        const { controlled } = this.state;\n        if (controlled) {\n            this.setState({\n                value,\n            });\n        }\n    }\n    private getNextValue = (groupItemName?: string) => {\n        const { multiple } = this.props;\n        const { value } = this.state;\n        if (value && Array.isArray(value) && groupItemName) {\n            if (value.indexOf(groupItemName) !== -1) {\n                return value.filter(f => f !== groupItemName);\n            }\n            return [...value, groupItemName];\n        }\n        return multiple && groupItemName ? [groupItemName] : groupItemName;\n    };\n    private createContext(): RadioButtonGroupContextType {\n        return {\n            select: (rb: RadioButtonGroupNotifier) => {\n                const { onChange, form, name = '' } = this.props;\n                const { controlled } = this.state;\n                const value = this.getNextValue(rb.name);\n                if (!controlled) {\n                    if (form) {\n                        form.change({\n                            name,\n                            value,\n                        });\n                    }\n                    else if (value) {\n                        this.setState({\n                            value,\n                        });\n                    }\n                    else {\n                        for (const button of this.buttons) {\n                            button.setValue(button === rb);\n                        }\n                        super.setState({\n                            value: undefined,\n                        });\n                    }\n                }\n                if (typeof onChange === 'function' && value) {\n                    onChange({\n                        value,\n                    });\n                }\n            },\n            subscribe: (rb: RadioButtonGroupNotifier) => {\n                const { value } = this.state;\n                this.buttons.push(rb);\n                if (value !== undefined) {\n                    const selected = Array.isArray(value) && rb.name ? value.indexOf(rb.name) !== -1 : rb.name === value;\n                    rb.setValue(selected);\n                }\n            },\n            unsubscribe: (rb: RadioButtonGroupNotifier) => {\n                const index = this.buttons.indexOf(rb);\n                index >= 0 && this.buttons.splice(index, 1);\n            },\n        };\n    }\n    render() {\n        return <RadioButtonGroupContext.Provider value={this.ctx}>{this.props.children}</RadioButtonGroupContext.Provider>;\n    }\n}\n/**\n * The radio button group manages a group of radio buttons.\n */\nexport const RadioButtonGroup = withFormContext(RadioButtonGroupInt);\nRadioButtonGroup.displayName = 'RadioButtonGroup';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}