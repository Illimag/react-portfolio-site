{"ast":null,"code":"import _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  display: block;\\n  font-size: \", \";\\n  line-height: \", \";\\n  max-width: 66.66%;\\n  box-sizing: border-box;\\n  cursor: text;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  transform-origin: left bottom;\\n  transform: \", \";\\n  color: \", \";\\n  transition: all 0.2s;\\n  position: absolute;\\n  top: 0;\\n  left: \", \";\\n  right: 0;\\n  padding-top: \", \";\\n  background: \", \";\\n\\n  > span {\\n    display: \", \";\\n    transition: inherit;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 100%;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  flex-grow: 1;\\n  display: flex;\\n  flex-flow: column-reverse;\\n  height: 100%;\\n  position: relative;\\n  min-width: 0;\\n  margin: auto;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport styled, { themed } from '../utils/styled';\nimport { distance } from '../distance';\nimport { purpleRed } from '../colors';\nimport { remCalc } from '../utils/remCalc';\nvar TextFieldBoxWithLabelWrapper = styled.div(_templateObject());\nvar TextFieldLabel = styled.label(_templateObject2());\nvar TextFieldLabelText = styled('span')(_templateObject3(), remCalc('12px'), remCalc('16px'), function (props) {\n  return props.active || props.filled ? 'none' : 'translate(0, 0.85rem) scale(1.33)';\n}, themed(function (_ref) {\n  var theme = _ref.theme,\n      active = _ref.active,\n      filled = _ref.filled,\n      error = _ref.error;\n  return error ? purpleRed : active || filled ? theme.ui0 : theme.text2;\n}), distance.medium, distance.small, themed(function (_ref2) {\n  var multiline = _ref2.multiline,\n      theme = _ref2.theme;\n  return multiline ? theme.ui2 : 'transparent';\n}), function (props) {\n  return props.active || props.filled ? 'none' : '';\n});\nexport var StyledInputRow = Object.assign(function (_a) {\n  var children = _a.children,\n      label = _a.label,\n      _a$focused = _a.focused,\n      focused = _a$focused === void 0 ? false : _a$focused,\n      _a$error = _a.error,\n      error = _a$error === void 0 ? false : _a$error,\n      _a$placeholder = _a.placeholder,\n      placeholder = _a$placeholder === void 0 ? '' : _a$placeholder,\n      _a$hasValue = _a.hasValue,\n      hasValue = _a$hasValue === void 0 ? false : _a$hasValue,\n      _a$multiline = _a.multiline,\n      multiline = _a$multiline === void 0 ? false : _a$multiline,\n      props = __rest(_a, [\"children\", \"label\", \"focused\", \"error\", \"placeholder\", \"hasValue\", \"multiline\"]);\n\n  return React.createElement(TextFieldBoxWithLabelWrapper, Object.assign({}, props), label !== undefined ? React.createElement(TextFieldLabel, null, children, React.createElement(TextFieldLabelText, {\n    active: focused,\n    filled: !focused && hasValue,\n    error: error,\n    multiline: multiline\n  }, label, placeholder.length > 0 && React.createElement(\"span\", null, \" \\u2014 \", placeholder))) : children);\n}, {\n  inner: {\n    get TextFieldBoxWithLabelWrapper() {\n      return TextFieldBoxWithLabelWrapper;\n    },\n\n    get TextFieldLabel() {\n      return TextFieldLabel;\n    },\n\n    get TextFieldLabelText() {\n      return TextFieldLabelText;\n    }\n\n  }\n});","map":{"version":3,"sources":["../../../src/quarks/StyledInputRow.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled, { themed } from '../utils/styled';\nimport { distance } from '../distance';\nimport { purpleRed } from '../colors';\nimport { remCalc } from '../utils/remCalc';\nconst TextFieldBoxWithLabelWrapper = styled.div `\n  flex-grow: 1;\n  display: flex;\n  flex-flow: column-reverse;\n  height: 100%;\n  position: relative;\n  min-width: 0;\n  margin: auto;\n`;\nconst TextFieldLabel = styled.label `\n  height: 100%;\n`;\nexport interface TextFieldLabelProps {\n    active: boolean;\n    filled: boolean;\n    error: boolean;\n    multiline: boolean;\n}\nconst TextFieldLabelText = styled('span')<TextFieldLabelProps> `\n  display: block;\n  font-size: ${remCalc('12px')};\n  line-height: ${remCalc('16px')};\n  max-width: 66.66%;\n  box-sizing: border-box;\n  cursor: text;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  transform-origin: left bottom;\n  transform: ${props => (props.active || props.filled ? 'none' : 'translate(0, 0.85rem) scale(1.33)')};\n  color: ${themed(({ theme, active, filled, error }) => error ? purpleRed : active || filled ? theme.ui0 : theme.text2)};\n  transition: all 0.2s;\n  position: absolute;\n  top: 0;\n  left: ${distance.medium};\n  right: 0;\n  padding-top: ${distance.small};\n  background: ${themed(({ multiline, theme }) => (multiline ? theme.ui2 : 'transparent'))};\n\n  > span {\n    display: ${props => (props.active || props.filled ? 'none' : '')};\n    transition: inherit;\n  }\n`;\nexport interface StyledInputRowProps extends React.HTMLAttributes<HTMLDivElement> {\n    focused?: boolean;\n    error?: boolean;\n    placeholder?: string;\n    label?: React.ReactChild;\n    hasValue?: boolean;\n    multiline?: boolean;\n}\nexport const StyledInputRow = Object.assign(((({ children, label, focused = false, error = false, placeholder = '', hasValue = false, multiline = false, ...props }) => (<TextFieldBoxWithLabelWrapper {...props}>\n    {label !== undefined ? (<TextFieldLabel>\n        {children}\n        <TextFieldLabelText active={focused} filled={!focused && hasValue} error={error} multiline={multiline}>\n          {label}\n          {placeholder.length > 0 && <span> â€” {placeholder}</span>}\n        </TextFieldLabelText>\n      </TextFieldLabel>) : (children)}\n  </TextFieldBoxWithLabelWrapper>)) as React.SFC<StyledInputRowProps>), { inner: {\n        get TextFieldBoxWithLabelWrapper() { return TextFieldBoxWithLabelWrapper as typeof TextFieldBoxWithLabelWrapper; },\n        get TextFieldLabel() { return TextFieldLabel as typeof TextFieldLabel; },\n        get TextFieldLabelText() { return TextFieldLabelText as typeof TextFieldLabelText; }\n    } });\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}