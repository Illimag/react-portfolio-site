{"ast":null,"code":"import * as React from 'react';\nimport styled, { themed } from '../utils/styled';\nimport { distance } from '../distance';\nimport { getFontStyle } from '../textStyles';\nconst FileItem = styled.li`\n  ${getFontStyle({\n  size: 'xSmall'\n})}\n  background-color: ${themed(({\n  theme\n}) => theme.ui3)};\n  padding: ${distance.small} ${distance.medium};\n  margin-bottom: ${distance.xsmall};\n  display: flex;\n  align-items: center;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\nconst FileName = styled.span`\n  flex: 1;\n`;\nexport const StyledFileItem = Object.assign(({\n  name,\n  children\n}) => {\n  return React.createElement(FileItem, null, name && React.createElement(FileName, null, name), children);\n}, {\n  inner: {\n    get FileItem() {\n      return FileItem;\n    },\n\n    get FileName() {\n      return FileName;\n    }\n\n  }\n});","map":{"version":3,"sources":["../../../src/quarks/StyledFileItem.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,IAAiB,MAAjB,QAA+B,iBAA/B;AACA,SAAS,QAAT,QAAyB,aAAzB;AACA,SAAS,YAAT,QAA6B,eAA7B;AACA,MAAM,QAAQ,GAAG,MAAM,CAAC,EAAG;IACvB,YAAY,CAAC;AAAE,EAAA,IAAI,EAAE;AAAR,CAAD,CAAoB;sBACd,MAAM,CAAC,CAAC;AAAE,EAAA;AAAF,CAAD,KAAe,KAAK,CAAC,GAAtB,CAA0B;aACzC,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,MAAM;mBAC3B,QAAQ,CAAC,MAAM;;;;;;;CAJlC;AAYA,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAK;;CAA7B;AAMA,OAAO,MAAM,cAAc,GAAG,MAAM,CAAC,MAAP,CAAgB,CAAC;AAAE,EAAA,IAAF;AAAQ,EAAA;AAAR,CAAD,KAAuB;AACjE,SAAQ,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS,IAAT,EACL,IAAI,IAAI,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS,IAAT,EAAW,IAAX,CADH,EAEL,QAFK,CAAR;AAIH,CAL6B,EAKS;AAAE,EAAA,KAAK,EAAE;AACxC,QAAI,QAAJ,GAAY;AAAK,aAAO,QAAP;AAAqC,KADd;;AAExC,QAAI,QAAJ,GAAY;AAAK,aAAO,QAAP;AAAqC;;AAFd;AAAT,CALT,CAAvB","sourcesContent":["import * as React from 'react';\nimport styled, { themed } from '../utils/styled';\nimport { distance } from '../distance';\nimport { getFontStyle } from '../textStyles';\nconst FileItem = styled.li `\n  ${getFontStyle({ size: 'xSmall' })}\n  background-color: ${themed(({ theme }) => theme.ui3)};\n  padding: ${distance.small} ${distance.medium};\n  margin-bottom: ${distance.xsmall};\n  display: flex;\n  align-items: center;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\nconst FileName = styled.span `\n  flex: 1;\n`;\nexport interface StyledFileItemProps {\n    name?: string;\n}\nexport const StyledFileItem = Object.assign(((({ name, children }) => {\n    return (<FileItem>\n      {name && <FileName>{name}</FileName>}\n      {children}\n    </FileItem>);\n}) as React.SFC<StyledFileItemProps>), { inner: {\n        get FileItem() { return FileItem as typeof FileItem; },\n        get FileName() { return FileName as typeof FileName; }\n    } });\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}