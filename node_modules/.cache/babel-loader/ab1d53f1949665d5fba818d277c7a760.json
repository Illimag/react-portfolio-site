{"ast":null,"code":"import _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  height: 100%;\\n  width: 100%;\\n  left: -\", \"%;\\n  animation: \", \" 2s linear infinite;\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  overflow: hidden;\\n  height: 100%;\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  from {\\n    left: -\", \"%;\\n  }\\n  to {\\n    left: 100%;\\n  }\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  border-radius: \", \";\\n  position: absolute;\\n  width: \", \";\\n  height: \", \";\\n  background: \", \";\\n  top: 50%;\\n  transform: translateY(-50%);\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  border-radius: inherit;\\n  border: 0;\\n  background: \", \";\\n  height: 100%;\\n  width: 0;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n\\n  margin: \", \" 0 0;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n\\n  margin: 0 0 \", \";\\n  padding: 0;\\n  display: block;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  border: 0;\\n  background: \", \";\\n  height: \", \";\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  color: \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport styled, { themed, keyframes } from '../../utils/styled';\nimport { distance } from '../../distance';\nimport { getFontStyle } from '../../textStyles';\nvar spinningWidth = 50;\nvar ProgressContainer = styled.div(_templateObject(), themed(function (props) {\n  return props.theme.text6;\n}));\nvar ProgressRail = styled('div')(_templateObject2(), themed(function (props) {\n  return props.theme.ui4;\n}), function (_ref) {\n  var type = _ref.type;\n  return type === 'secondary' ? distance.xsmall : distance.xxsmall;\n});\nvar ProgressTitle = styled.div(_templateObject3(), getFontStyle({\n  size: 'medium'\n}), distance.medium);\nvar ProgressDescription = styled.div(_templateObject4(), getFontStyle({\n  size: 'small'\n}), distance.small);\nvar ProgressIndicator = styled.div(_templateObject5(), themed(function (props) {\n  return props.theme.ui0;\n}));\nvar ProgressStop = styled('div')(_templateObject6(), distance.small, distance.small, distance.small, themed(function (props) {\n  return props.active ? props.theme.ui7 : props.theme.text2;\n}));\nvar SpinningAnimation = keyframes(_templateObject7(), spinningWidth);\nvar MaskContainer = styled.div(_templateObject8());\nvar ProgressAnimation = styled.div(_templateObject9(), spinningWidth, SpinningAnimation);\n\nfunction getPercent(current, minimum, maximum) {\n  var value = ~~(100 * (current - minimum) / (maximum - minimum));\n  var percent = Math.min(Math.max(0, value), 100);\n  return \"\".concat(percent, \"%\");\n}\n\nfunction spinning(child) {\n  return React.createElement(MaskContainer, null, React.createElement(ProgressAnimation, null, child));\n}\n/**\n * The progress bar component displays a progress indicator ranging from min to max.\n */\n\n\nexport var ProgressBar = Object.assign(function (_a) {\n  var _a$minimum = _a.minimum,\n      minimum = _a$minimum === void 0 ? 0 : _a$minimum,\n      _a$maximum = _a.maximum,\n      maximum = _a$maximum === void 0 ? 100 : _a$maximum,\n      propValue = _a.value,\n      title = _a.title,\n      description = _a.description,\n      animate = _a.animate,\n      _a$stops = _a.stops,\n      stops = _a$stops === void 0 ? [] : _a$stops,\n      _a$type = _a.type,\n      type = _a$type === void 0 ? 'primary' : _a$type,\n      theme = _a.theme,\n      rest = __rest(_a, [\"minimum\", \"maximum\", \"value\", \"title\", \"description\", \"animate\", \"stops\", \"type\", \"theme\"]);\n\n  var value = (animate === 'spinning' ? spinningWidth : propValue) || 0;\n  var width = getPercent(value, minimum, maximum);\n  var transition = animate ? 'width 200ms' : 'none';\n  var indicator = React.createElement(ProgressIndicator, {\n    style: {\n      width: width,\n      transition: transition\n    },\n    theme: theme\n  });\n  return React.createElement(ProgressContainer, {\n    theme: theme\n  }, !!title && React.createElement(ProgressTitle, {\n    theme: theme\n  }, title), React.createElement(ProgressRail, Object.assign({\n    type: type,\n    theme: theme\n  }, rest), animate === 'spinning' ? spinning(indicator) : indicator, stops.map(function (stop, index) {\n    return React.createElement(ProgressStop, {\n      key: \"\".concat(index, \"-at-\").concat(stop),\n      style: {\n        left: getPercent(stop, minimum, maximum)\n      },\n      active: stop <= value,\n      theme: theme\n    });\n  })), !!description && React.createElement(ProgressDescription, {\n    theme: theme\n  }, description));\n}, {\n  inner: {\n    get ProgressIndicator() {\n      return ProgressIndicator;\n    },\n\n    get ProgressContainer() {\n      return ProgressContainer;\n    },\n\n    get ProgressTitle() {\n      return ProgressTitle;\n    },\n\n    get ProgressRail() {\n      return ProgressRail;\n    },\n\n    get ProgressStop() {\n      return ProgressStop;\n    },\n\n    get ProgressDescription() {\n      return ProgressDescription;\n    }\n\n  }\n});\nProgressBar.displayName = 'ProgressBar';","map":{"version":3,"sources":["../../../../src/components/ProgressBar/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled, { themed, keyframes } from '../../utils/styled';\nimport { StandardProps } from '../../common';\nimport { distance } from '../../distance';\nimport { getFontStyle } from '../../textStyles';\n/**\n * ProgressBar type.\n */\nexport type ProgressBarType = 'primary' | 'secondary';\nexport interface ProgressBarProps extends StandardProps {\n    /**\n     * @ignore\n     */\n    children?: void;\n    /**\n     * Shows animations between value updates.\n     * @default false\n     */\n    animate?: boolean | 'spinning';\n    /**\n     * The minimum value, which is by default 0.\n     * @default 0\n     */\n    minimum?: number;\n    /**\n     * The maximum value, which is by default 100.\n     * @default 100\n     */\n    maximum?: number;\n    /**\n     * The current value, which is by default 0.\n     * @default 0\n     */\n    value?: number;\n    /**\n     * The optional title to be displayed.\n     */\n    title?: string;\n    /**\n     * The optional stops to be displayed.\n     */\n    stops?: Array<number>;\n    /**\n     * The optional description to be displayed.\n     */\n    description?: string;\n    /**\n     * Sets the progress bar type. By default primary.\n     * @default primary\n     */\n    type?: ProgressBarType;\n}\nexport interface StopProps {\n    active: boolean;\n}\nexport interface ProgressContainerProps {\n    type: ProgressBarType;\n}\nconst spinningWidth = 50;\nconst ProgressContainer = styled.div `\n  color: ${themed(props => props.theme.text6)};\n`;\nconst ProgressRail = styled('div')<ProgressContainerProps> `\n  position: relative;\n  border: 0;\n  background: ${themed(props => props.theme.ui4)};\n  height: ${({ type }) => (type === 'secondary' ? distance.xsmall : distance.xxsmall)};\n`;\nconst ProgressTitle = styled.div `\n  ${getFontStyle({ size: 'medium' })}\n\n  margin: 0 0 ${distance.medium};\n  padding: 0;\n  display: block;\n`;\nconst ProgressDescription = styled.div `\n  ${getFontStyle({ size: 'small' })}\n\n  margin: ${distance.small} 0 0;\n`;\nconst ProgressIndicator = styled.div `\n  border-radius: inherit;\n  border: 0;\n  background: ${themed(props => props.theme.ui0)};\n  height: 100%;\n  width: 0;\n`;\nconst ProgressStop = styled('div')<StopProps & React.HTMLProps<HTMLInputElement>> `\n  border-radius: ${distance.small};\n  position: absolute;\n  width: ${distance.small};\n  height: ${distance.small};\n  background: ${themed(props => (props.active ? props.theme.ui7 : props.theme.text2))};\n  top: 50%;\n  transform: translateY(-50%);\n`;\nconst SpinningAnimation = keyframes `\n  from {\n    left: -${spinningWidth}%;\n  }\n  to {\n    left: 100%;\n  }\n`;\nconst MaskContainer = styled.div `\n  position: relative;\n  overflow: hidden;\n  height: 100%;\n`;\nconst ProgressAnimation = styled.div `\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  left: -${spinningWidth}%;\n  animation: ${SpinningAnimation} 2s linear infinite;\n`;\nfunction getPercent(current: number, minimum: number, maximum: number) {\n    const value = ~~((100 * (current - minimum)) / (maximum - minimum));\n    const percent = Math.min(Math.max(0, value), 100);\n    return `${percent}%`;\n}\nfunction spinning(child: React.ReactChild) {\n    return (<MaskContainer>\n      <ProgressAnimation>{child}</ProgressAnimation>\n    </MaskContainer>);\n}\n/**\n * The progress bar component displays a progress indicator ranging from min to max.\n */\nexport const ProgressBar = Object.assign(((({ minimum = 0, maximum = 100, value: propValue, title, description, animate, stops = [], type = 'primary' as 'primary', theme, ...rest }) => {\n    const value = (animate === 'spinning' ? spinningWidth : propValue) || 0;\n    const width = getPercent(value, minimum, maximum);\n    const transition = animate ? 'width 200ms' : 'none';\n    const indicator = <ProgressIndicator style={{ width, transition }} theme={theme}/>;\n    return (<ProgressContainer theme={theme}>\n      {!!title && <ProgressTitle theme={theme}>{title}</ProgressTitle>}\n      <ProgressRail type={type} theme={theme} {...rest}>\n        {animate === 'spinning' ? spinning(indicator) : indicator}\n        {stops.map((stop, index) => (<ProgressStop key={`${index}-at-${stop}`} style={{ left: getPercent(stop, minimum, maximum) }} active={stop <= value} theme={theme}/>))}\n      </ProgressRail>\n      {!!description && <ProgressDescription theme={theme}>{description}</ProgressDescription>}\n    </ProgressContainer>);\n}) as React.SFC<ProgressBarProps>), { inner: {\n        get ProgressIndicator() { return ProgressIndicator as typeof ProgressIndicator; },\n        get ProgressContainer() { return ProgressContainer as typeof ProgressContainer; },\n        get ProgressTitle() { return ProgressTitle as typeof ProgressTitle; },\n        get ProgressRail() { return ProgressRail as typeof ProgressRail; },\n        get ProgressStop() { return ProgressStop as typeof ProgressStop; },\n        get ProgressDescription() { return ProgressDescription as typeof ProgressDescription; }\n    } });\nProgressBar.displayName = 'ProgressBar';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}