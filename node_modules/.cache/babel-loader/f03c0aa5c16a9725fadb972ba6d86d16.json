{"ast":null,"code":"import _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n          \", \"\\n\\n          margin: 0;\\n          padding: \", \";\\n          font-family: \", \";\\n          color: \", \";\\n        \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport styled, { themed, css } from '../../utils/styled';\nimport { distance } from '../../distance';\nimport { getFontStyle } from '../../textStyles';\nvar Headlines = {};\n\nfunction getComponentName(level) {\n  return \"h\".concat(level >= 1 && level <= 5 ? level : 3);\n}\n\nfunction getHeadlineStyle(level) {\n  switch (level) {\n    case 1:\n      return getFontStyle({\n        size: 'xxxLarge',\n        weight: 'light'\n      });\n\n    case 2:\n      return getFontStyle({\n        size: 'xxLarge',\n        weight: 'light'\n      });\n\n    case 3:\n      return getFontStyle({\n        size: 'xLarge',\n        weight: 'medium'\n      });\n\n    case 4:\n      return getFontStyle({\n        size: 'large',\n        weight: 'regular'\n      });\n\n    case 5:\n      return getFontStyle({\n        size: 'medium',\n        weight: 'medium'\n      });\n\n    default:\n      return '';\n  }\n}\n\nfunction getStyledHeadline(level) {\n  var component = getComponentName(level);\n  var Headline = Headlines[component];\n\n  if (!Headline) {\n    var NewHeadline = styled(component)(themed(function (props) {\n      return css(_templateObject(), getHeadlineStyle(props.level), props.theme.headingsPadding || \"0 \".concat(distance.small, \" 0 0\"), props.theme.fontFamily || 'inherit', props.subheader ? props.theme.text5 : 'inherit');\n    }));\n    Headlines[component] = NewHeadline;\n    return NewHeadline;\n  }\n\n  return Headline;\n}\n/**\n * Headline component with styles for all headline levels.\n */\n\n\nexport var Headline = function Headline(_a) {\n  var _a$level = _a.level,\n      level = _a$level === void 0 ? 3 : _a$level,\n      children = _a.children,\n      rest = __rest(_a, [\"level\", \"children\"]);\n\n  var StyledHeadline = getStyledHeadline(level);\n  return React.createElement(StyledHeadline, Object.assign({\n    level: level\n  }, rest), children);\n};\nHeadline.displayName = 'Headline';","map":{"version":3,"sources":["../../../../src/components/Headline/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,IAAiB,MAAjB,EAAyB,GAAzB,QAAoC,oBAApC;AAEA,SAAS,QAAT,QAAyB,gBAAzB;AACA,SAAS,YAAT,QAA6B,kBAA7B;AA0BA,IAAM,SAAS,GAAkB,EAAjC;;AACA,SAAS,gBAAT,CAA0B,KAA1B,EAAuC;AACnC,oBAAW,KAAK,IAAI,CAAT,IAAc,KAAK,IAAI,CAAvB,GAA2B,KAA3B,GAAmC,CAA9C;AACH;;AACD,SAAS,gBAAT,CAA0B,KAA1B,EAA6D;AACzD,UAAQ,KAAR;AACI,SAAK,CAAL;AACI,aAAO,YAAY,CAAC;AAAE,QAAA,IAAI,EAAE,UAAR;AAAoB,QAAA,MAAM,EAAE;AAA5B,OAAD,CAAnB;;AACJ,SAAK,CAAL;AACI,aAAO,YAAY,CAAC;AAAE,QAAA,IAAI,EAAE,SAAR;AAAmB,QAAA,MAAM,EAAE;AAA3B,OAAD,CAAnB;;AACJ,SAAK,CAAL;AACI,aAAO,YAAY,CAAC;AAAE,QAAA,IAAI,EAAE,QAAR;AAAkB,QAAA,MAAM,EAAE;AAA1B,OAAD,CAAnB;;AACJ,SAAK,CAAL;AACI,aAAO,YAAY,CAAC;AAAE,QAAA,IAAI,EAAE,OAAR;AAAiB,QAAA,MAAM,EAAE;AAAzB,OAAD,CAAnB;;AACJ,SAAK,CAAL;AACI,aAAO,YAAY,CAAC;AAAE,QAAA,IAAI,EAAE,QAAR;AAAkB,QAAA,MAAM,EAAE;AAA1B,OAAD,CAAnB;;AACJ;AACI,aAAO,EAAP;AAZR;AAcH;;AACD,SAAS,iBAAT,CAA2B,KAA3B,EAAwC;AACpC,MAAM,SAAS,GAAG,gBAAgB,CAAC,KAAD,CAAlC;AACA,MAAM,QAAQ,GAAG,SAAS,CAAC,SAAD,CAA1B;;AACA,MAAI,CAAC,QAAL,EAAe;AACX,QAAM,WAAW,GAAG,MAAM,CAAC,SAAD,CAAN,CAA+C,MAAM,CAAC,UAAA,KAAK;AAAA,aAAI,GAAJ,oBAC3E,gBAAgB,CAAC,KAAK,CAAC,KAAP,CAD2D,EAIlE,KAAK,CAAC,KAAN,CAAY,eAAZ,gBAAoC,QAAQ,CAAC,KAA7C,SAJkE,EAK9D,KAAK,CAAC,KAAN,CAAY,UAAZ,IAA0B,SALoC,EAMpE,KAAK,CAAC,SAAN,GAAkB,KAAK,CAAC,KAAN,CAAY,KAA9B,GAAsC,SAN8B;AAAA,KAAN,CAArD,CAApB;AAQA,IAAA,SAAS,CAAC,SAAD,CAAT,GAAuB,WAAvB;AACA,WAAO,WAAP;AACH;;AACD,SAAO,QAAP;AACH;AACD;;;;;AAGA,OAAO,IAAM,QAAQ,GAA6B,SAArC,QAAqC,CAAC,EAAD,EAAqC;AAAA,iBAAf,EAAe,CAAlC,KAAkC;AAAA,MAAlC,KAAkC,yBAA1B,CAA0B;AAAA,MAAvB,QAAuB,GAAf,EAAe,CAAvB,QAAuB;AAAA,MAAb,IAAa,GAAb,MAAA,CAAA,EAAA,EAAA,CAAA,OAAA,EAAA,UAAA,CAAA,CAAa;;AACnF,MAAM,cAAc,GAAG,iBAAiB,CAAC,KAAD,CAAxC;AACA,SAAQ,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,MAAA,CAAA,MAAA,CAAA;AAAC,IAAA,KAAK,EAAE;AAAR,GAAA,EAAmB,IAAnB,CAAf,EACL,QADK,CAAR;AAGH,CALM;AAMP,QAAQ,CAAC,WAAT,GAAuB,UAAvB","sourcesContent":["import * as React from 'react';\nimport styled, { themed, css } from '../../utils/styled';\nimport { StandardProps } from '../../common';\nimport { distance } from '../../distance';\nimport { getFontStyle } from '../../textStyles';\nexport type HeadlineSize = 'small' | 'medium';\nexport interface HeadlineProps extends StandardProps {\n    /**\n     * Represent 5 levels of headings (1-5)\n     * Default is 3\n     */\n    level?: 1 | 2 | 3 | 4 | 5;\n    /**\n     * When specified headline will have muted text color\n     */\n    subheader?: boolean;\n    /**\n     * The text of the headline.\n     */\n    children?: React.ReactNode;\n}\nexport interface StyledHeadlineProps {\n    size: HeadlineSize;\n    level: number;\n    theme?: any;\n    subheader?: boolean;\n}\ninterface HeadlineCache {\n    [key: string]: any;\n}\nconst Headlines: HeadlineCache = {};\nfunction getComponentName(level: number) {\n    return `h${level >= 1 && level <= 5 ? level : 3}`;\n}\nfunction getHeadlineStyle(level: StyledHeadlineProps['level']) {\n    switch (level) {\n        case 1:\n            return getFontStyle({ size: 'xxxLarge', weight: 'light' });\n        case 2:\n            return getFontStyle({ size: 'xxLarge', weight: 'light' });\n        case 3:\n            return getFontStyle({ size: 'xLarge', weight: 'medium' });\n        case 4:\n            return getFontStyle({ size: 'large', weight: 'regular' });\n        case 5:\n            return getFontStyle({ size: 'medium', weight: 'medium' });\n        default:\n            return '';\n    }\n}\nfunction getStyledHeadline(level: number) {\n    const component = getComponentName(level);\n    const Headline = Headlines[component];\n    if (!Headline) {\n        const NewHeadline = styled(component as 'h1')<StyledHeadlineProps>(themed(props => css `\n          ${getHeadlineStyle(props.level)}\n\n          margin: 0;\n          padding: ${props.theme.headingsPadding || `0 ${distance.small} 0 0`};\n          font-family: ${props.theme.fontFamily || 'inherit'};\n          color: ${props.subheader ? props.theme.text5 : 'inherit'};\n        `));\n        Headlines[component] = NewHeadline;\n        return NewHeadline;\n    }\n    return Headline;\n}\n/**\n * Headline component with styles for all headline levels.\n */\nexport const Headline: React.SFC<HeadlineProps> = ({ level = 3, children, ...rest }) => {\n    const StyledHeadline = getStyledHeadline(level);\n    return (<StyledHeadline level={level} {...rest}>\n      {children}\n    </StyledHeadline>);\n};\nHeadline.displayName = 'Headline';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}