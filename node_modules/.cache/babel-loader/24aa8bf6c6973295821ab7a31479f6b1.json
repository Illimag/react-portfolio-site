{"ast":null,"code":"import _taggedTemplateLiteral from \"/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n  position: relative;\\n  cursor: \", \";\\n  outline: none;\\n  display: flex;\\n  background: transparent;\\n  border: none;\\n  align-items: center;\\n  padding: \", \";\\n  margin: 0 \", \";\\n  color: \", \";\\n  &:before,\\n  &:after {\\n    content: '';\\n    position: absolute;\\n    width: 1px;\\n    background: #dfe3e6;\\n    left: 0;\\n    top: 50%;\\n    transform: translateY(-50%);\\n    height: 100%;\\n  }\\n  &:after {\\n    right: 0;\\n    left: auto;\\n  }\\n  &:last-child {\\n    margin-right: 0;\\n    &:after {\\n      display: none;\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  margin-left: auto;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: auto;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport styled from '../../utils/styled';\nimport { Container } from '../Container';\nimport { Icon } from '../Icon';\nimport { SelectButton } from '../SelectButton';\nimport { cyan, grey1 } from '../../colors';\nimport { distance } from '../../distance';\nimport { getFontStyle } from '../../textStyles';\nvar StyledContainer = styled(Container)(_templateObject());\nvar PageControlsStyled = styled.div(_templateObject2());\nvar ChangePage = styled.button(_templateObject3(), getFontStyle({\n  size: 'xLarge'\n}), function (props) {\n  return props.disabled ? 'not-allowed' : 'pointer';\n}, distance.small, distance.small, function (props) {\n  return !props.disabled ? cyan : grey1;\n});\nexport var PageControls = Object.assign(function (_ref) {\n  var children = _ref.children,\n      current = _ref.current,\n      total = _ref.total,\n      changeToPrevious = _ref.changeToPrevious,\n      changeToNext = _ref.changeToNext,\n      changeToSelect = _ref.changeToSelect,\n      pages = _ref.pages;\n  return React.createElement(PageControlsStyled, null, React.createElement(StyledContainer, null, children), React.createElement(ChangePage, {\n    disabled: current <= 0,\n    onClick: changeToPrevious,\n    type: \"button\"\n  }, React.createElement(Icon, {\n    name: \"KeyboardArrowLeft\"\n  })), React.createElement(SelectButton, {\n    data: pages,\n    value: \"\".concat(current + 1),\n    onChange: changeToSelect\n  }), React.createElement(ChangePage, {\n    disabled: current >= total - 1,\n    onClick: changeToNext,\n    type: \"button\"\n  }, React.createElement(Icon, {\n    name: \"KeyboardArrowRight\"\n  })));\n}, {\n  inner: {\n    get PageControlsStyled() {\n      return PageControlsStyled;\n    },\n\n    get StyledContainer() {\n      return StyledContainer;\n    },\n\n    get ChangePage() {\n      return ChangePage;\n    },\n\n    get Icon() {\n      return Icon;\n    },\n\n    get SelectButton() {\n      return SelectButton;\n    }\n\n  }\n});","map":{"version":3,"sources":["../../../../src/components/PaginationBar/PageControls.part.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,MAAP,MAAmB,oBAAnB;AACA,SAAS,SAAT,QAA0B,cAA1B;AACA,SAAS,IAAT,QAAqB,SAArB;AACA,SAAS,YAAT,QAAsD,iBAAtD;AACA,SAAS,IAAT,EAAe,KAAf,QAA4B,cAA5B;AACA,SAAS,QAAT,QAAyB,gBAAzB;AACA,SAAS,YAAT,QAA6B,kBAA7B;AAYA,IAAM,eAAe,GAAG,MAAM,CAAC,SAAD,CAAT,mBAArB;AAGA,IAAM,kBAAkB,GAAG,MAAM,CAAC,GAAV,oBAAxB;AAKA,IAAM,UAAU,GAAG,MAAM,CAAC,MAAV,qBACZ,YAAY,CAAC;AAAE,EAAA,IAAI,EAAE;AAAR,CAAD,CADA,EAGJ,UAAA,KAAK;AAAA,SAAK,KAAK,CAAC,QAAN,GAAiB,aAAjB,GAAiC,SAAtC;AAAA,CAHD,EASH,QAAQ,CAAC,KATN,EAUF,QAAQ,CAAC,KAVP,EAWL,UAAA,KAAK;AAAA,SAAK,CAAC,KAAK,CAAC,QAAP,GAAkB,IAAlB,GAAyB,KAA9B;AAAA,CAXA,CAAhB;AAkCA,OAAO,IAAM,YAAY,GAAG,MAAM,CAAC,MAAP,CAAgB;AAAA,MAAG,QAAH,QAAG,QAAH;AAAA,MAAa,OAAb,QAAa,OAAb;AAAA,MAAsB,KAAtB,QAAsB,KAAtB;AAAA,MAA6B,gBAA7B,QAA6B,gBAA7B;AAAA,MAA+C,YAA/C,QAA+C,YAA/C;AAAA,MAA6D,cAA7D,QAA6D,cAA7D;AAAA,MAA6E,KAA7E,QAA6E,KAA7E;AAAA,SAA2F,KAAA,CAAA,aAAA,CAAC,kBAAD,EAAmB,IAAnB,EACnI,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB,IAAhB,EAAkB,QAAlB,CADmI,EAEnI,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AAAC,IAAA,QAAQ,EAAE,OAAO,IAAI,CAAtB;AAAyB,IAAA,OAAO,EAAE,gBAAlC;AAAoD,IAAA,IAAI,EAAC;AAAzD,GAAX,EACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,IAAA,IAAI,EAAC;AAAN,GAAL,CADF,CAFmI,EAKnI,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa;AAAC,IAAA,IAAI,EAAE,KAAP;AAAc,IAAA,KAAK,YAAK,OAAO,GAAG,CAAf,CAAnB;AAAuC,IAAA,QAAQ,EAAE;AAAjD,GAAb,CALmI,EAMnI,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AAAC,IAAA,QAAQ,EAAE,OAAO,IAAI,KAAK,GAAG,CAA9B;AAAiC,IAAA,OAAO,EAAE,YAA1C;AAAwD,IAAA,IAAI,EAAC;AAA7D,GAAX,EACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,IAAA,IAAI,EAAC;AAAN,GAAL,CADF,CANmI,CAA3F;AAAA,CAAhB,EASgC;AAAE,EAAA,KAAK,EAAE;AAC7D,QAAI,kBAAJ,GAAsB;AAAK,aAAO,kBAAP;AAAyD,KADvB;;AAE7D,QAAI,eAAJ,GAAmB;AAAK,aAAO,eAAP;AAAmD,KAFd;;AAG7D,QAAI,UAAJ,GAAc;AAAK,aAAO,UAAP;AAAyC,KAHC;;AAI7D,QAAI,IAAJ,GAAQ;AAAK,aAAO,IAAP;AAA6B,KAJmB;;AAK7D,QAAI,YAAJ,GAAgB;AAAK,aAAO,YAAP;AAA6C;;AALL;AAAT,CAThC,CAArB","sourcesContent":["import * as React from 'react';\nimport styled from '../../utils/styled';\nimport { Container } from '../Container';\nimport { Icon } from '../Icon';\nimport { SelectButton, SelectButtonChangeEvent } from '../SelectButton';\nimport { cyan, grey1 } from '../../colors';\nimport { distance } from '../../distance';\nimport { getFontStyle } from '../../textStyles';\nexport interface ChangePageProps {\n    disabled: boolean;\n}\nexport interface PageControlsProps {\n    current: number;\n    total: number;\n    changeToPrevious?(): void;\n    changeToNext?(): void;\n    changeToSelect?(props: SelectButtonChangeEvent): void;\n    pages: Array<string>;\n}\nconst StyledContainer = styled(Container) `\n  width: auto;\n`;\nconst PageControlsStyled = styled.div `\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n`;\nconst ChangePage = styled.button<ChangePageProps> `\n  ${getFontStyle({ size: 'xLarge' })}\n  position: relative;\n  cursor: ${props => (props.disabled ? 'not-allowed' : 'pointer')};\n  outline: none;\n  display: flex;\n  background: transparent;\n  border: none;\n  align-items: center;\n  padding: ${distance.small};\n  margin: 0 ${distance.small};\n  color: ${props => (!props.disabled ? cyan : grey1)};\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n    width: 1px;\n    background: #dfe3e6;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    height: 100%;\n  }\n  &:after {\n    right: 0;\n    left: auto;\n  }\n  &:last-child {\n    margin-right: 0;\n    &:after {\n      display: none;\n    }\n  }\n`;\nexport const PageControls = Object.assign(((({ children, current, total, changeToPrevious, changeToNext, changeToSelect, pages, }) => (<PageControlsStyled>\n    <StyledContainer>{children}</StyledContainer>\n    <ChangePage disabled={current <= 0} onClick={changeToPrevious} type=\"button\">\n      <Icon name=\"KeyboardArrowLeft\"/>\n    </ChangePage>\n    <SelectButton data={pages} value={`${current + 1}`} onChange={changeToSelect}/>\n    <ChangePage disabled={current >= total - 1} onClick={changeToNext} type=\"button\">\n      <Icon name=\"KeyboardArrowRight\"/>\n    </ChangePage>\n  </PageControlsStyled>)) as React.SFC<PageControlsProps>), { inner: {\n        get PageControlsStyled() { return PageControlsStyled as typeof PageControlsStyled; },\n        get StyledContainer() { return StyledContainer as typeof StyledContainer; },\n        get ChangePage() { return ChangePage as typeof ChangePage; },\n        get Icon() { return Icon as typeof Icon; },\n        get SelectButton() { return SelectButton as typeof SelectButton; }\n    } });\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}