{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport * as React from 'react';\nimport styled, { themed, css } from '../../utils/styled';\nimport { getPropLabel } from '../../utils/labels';\nimport { Icon } from '../Icon';\nimport { ProgressBar } from '../ProgressBar';\nimport { Table } from '../Table';\nimport { ActionIconContainer } from './ActionIconContainer.part';\nimport { StatusIcon } from './StatusIcon.part';\nimport { getStatus, iconNames } from './helpers';\nconst TextWrapBox = styled.div`\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\nconst StyledTable = styled(Table)`\n  table-layout: fixed;\n`;\nconst ProgressTableRow = styled.tr(themed(({\n  theme\n}) => css`\n      border-bottom: 1px solid ${theme.ui4};\n      padding: 0;\n      &:hover {\n        background: ${theme.ui3};\n      }\n    `));\nconst ProgressTableCell = styled.td`\n  padding: 0 !important;\n  &:hover {\n    background: ${themed(({\n  theme\n}) => theme.ui3)};\n  }\n`;\nconst StyledProgressBar = styled(ProgressBar)`\n  border-radius: 0;\n  height: 2px;\n`;\nexport const StyledTableRow = styled.tr(themed(({\n  hasProgressBar,\n  theme\n}) => css`\n      border-bottom: ${hasProgressBar ? 0 : 1}px solid ${theme.ui4};\n      &:hover {\n        background: ${theme.ui4};\n      }\n    `));\nexport const StatusTable = Object.assign(_a => {\n  var {\n    theme,\n    files,\n    onCancel,\n    onDelete\n  } = _a,\n      props = __rest(_a, [\"theme\", \"files\", \"onCancel\", \"onDelete\"]);\n\n  const columns = {\n    name: {\n      header: getPropLabel(props, 'tableHeaderFileLabel')\n    },\n    status: {\n      header: getPropLabel(props, 'tableHeaderStatusLabel'),\n      width: '40%'\n    },\n    action: {\n      header: '',\n      width: '30px'\n    }\n  };\n  const data = files.map(item => Object.assign({}, item, {\n    status: getStatus(item)\n  }));\n\n  function rowRenderer({\n    cells,\n    data\n  }) {\n    const hasProgressBar = !(data.canceled || data.error || data.progress >= 100);\n    return React.createElement(React.Fragment, {\n      key: data.fileId\n    }, React.createElement(StyledTableRow, {\n      hasProgressBar: hasProgressBar,\n      theme: theme\n    }, cells), hasProgressBar && React.createElement(ProgressTableRow, {\n      theme: theme\n    }, React.createElement(ProgressTableCell, {\n      colSpan: 3\n    }, React.createElement(StyledProgressBar, {\n      value: data.progress,\n      animate: true\n    }))));\n  }\n\n  function cellRenderer(e) {\n    const value = e.value;\n    const fileData = e.data;\n\n    if (e.key.toLowerCase() === 'action' && fileData) {\n      const status = getStatus(fileData);\n      return status === 'progress' || status === 'scanning' ? React.createElement(ActionIconContainer, {\n        onClick: () => onCancel({\n          files: [fileData]\n        })\n      }, React.createElement(Icon, {\n        name: \"Close\"\n      })) : status === 'success' ? React.createElement(ActionIconContainer, {\n        onClick: () => onDelete({\n          files: [fileData]\n        })\n      }, React.createElement(Icon, {\n        name: \"Delete\"\n      })) : false;\n    }\n\n    if (e.key.toLowerCase() === 'status' && e.data) {\n      const status = getStatus(e.data);\n      const error = status === 'error' && e.data.error;\n      return React.createElement(TextWrapBox, null, React.createElement(StatusIcon, {\n        condensed: true,\n        type: status,\n        name: iconNames[value]\n      }), getPropLabel(props, `${status}TableUploadLabel`, error));\n    }\n\n    return React.createElement(TextWrapBox, null, value);\n  }\n\n  return React.createElement(StyledTable, {\n    data: data,\n    theme: theme,\n    columns: columns,\n    rowRenderer: rowRenderer,\n    cellRenderer: cellRenderer,\n    mode: \"table\",\n    condensed: true\n  });\n}, {\n  inner: {\n    get StyledTableRow() {\n      return StyledTableRow;\n    },\n\n    get ProgressTableRow() {\n      return ProgressTableRow;\n    },\n\n    get ProgressTableCell() {\n      return ProgressTableCell;\n    },\n\n    get StyledProgressBar() {\n      return StyledProgressBar;\n    },\n\n    get ActionIconContainer() {\n      return ActionIconContainer;\n    },\n\n    get Icon() {\n      return Icon;\n    },\n\n    get TextWrapBox() {\n      return TextWrapBox;\n    },\n\n    get StatusIcon() {\n      return StatusIcon;\n    },\n\n    get StyledTable() {\n      return StyledTable;\n    }\n\n  }\n});","map":{"version":3,"sources":["../../../../src/components/FileUploaderDetails/StatusTable.part.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled, { themed, css } from '../../utils/styled';\nimport { getPropLabel, StatusTableLabels } from '../../utils/labels';\nimport { Icon } from '../Icon';\nimport { ProgressBar } from '../ProgressBar';\nimport { Table, TableCellEvent, TableRowEvent } from '../Table';\nimport { ActionIconContainer } from './ActionIconContainer.part';\nimport { FileProgress, FileUploaderDetailsEvent } from './FileUploaderDetails.types.part';\nimport { StatusIcon } from './StatusIcon.part';\nimport { getStatus, iconNames } from './helpers';\nimport { StandardProps } from '../../common';\nconst TextWrapBox = styled.div `\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\nconst StyledTable = styled(Table) `\n  table-layout: fixed;\n`;\nconst ProgressTableRow = styled.tr(themed(({ theme }) => css `\n      border-bottom: 1px solid ${theme.ui4};\n      padding: 0;\n      &:hover {\n        background: ${theme.ui3};\n      }\n    `));\nconst ProgressTableCell = styled.td `\n  padding: 0 !important;\n  &:hover {\n    background: ${themed(({ theme }) => theme.ui3)};\n  }\n`;\nconst StyledProgressBar = styled(ProgressBar) `\n  border-radius: 0;\n  height: 2px;\n`;\nexport interface StyledTableRowProps {\n    hasProgressBar: boolean;\n}\nexport const StyledTableRow = styled.tr<StyledTableRowProps>(themed(({ hasProgressBar, theme }) => css `\n      border-bottom: ${hasProgressBar ? 0 : 1}px solid ${theme.ui4};\n      &:hover {\n        background: ${theme.ui4};\n      }\n    `));\nexport interface StatusTableProps extends StandardProps, StatusTableLabels {\n    files: Array<FileProgress>;\n    onCancel(e: FileUploaderDetailsEvent<FileProgress>): void;\n    onDelete(e: FileUploaderDetailsEvent<FileProgress>): void;\n}\nexport const StatusTable = Object.assign(((({ theme, files, onCancel, onDelete, ...props }) => {\n    const columns = {\n        name: {\n            header: getPropLabel(props, 'tableHeaderFileLabel'),\n        },\n        status: {\n            header: getPropLabel(props, 'tableHeaderStatusLabel'),\n            width: '40%',\n        },\n        action: {\n            header: '',\n            width: '30px',\n        },\n    };\n    const data = files.map(item => ({\n        ...item,\n        status: getStatus(item),\n    }));\n    function rowRenderer({ cells, data }: TableRowEvent<FileProgress>) {\n        const hasProgressBar = !(data.canceled || data.error || data.progress >= 100);\n        return (<React.Fragment key={data.fileId}>\n        <StyledTableRow hasProgressBar={hasProgressBar} theme={theme}>\n          {cells}\n        </StyledTableRow>\n        {hasProgressBar && (<ProgressTableRow theme={theme}>\n            <ProgressTableCell colSpan={3}>\n              <StyledProgressBar value={data.progress} animate/>\n            </ProgressTableCell>\n          </ProgressTableRow>)}\n      </React.Fragment>);\n    }\n    function cellRenderer(e: TableCellEvent<FileProgress>) {\n        const value = e.value;\n        const fileData = e.data;\n        if (e.key.toLowerCase() === 'action' && fileData) {\n            const status = getStatus(fileData);\n            return status === 'progress' || status === 'scanning' ? (<ActionIconContainer onClick={() => onCancel({ files: [fileData] })}>\n          <Icon name=\"Close\"/>\n        </ActionIconContainer>) : status === 'success' ? (<ActionIconContainer onClick={() => onDelete({ files: [fileData] })}>\n          <Icon name=\"Delete\"/>\n        </ActionIconContainer>) : (false);\n        }\n        if (e.key.toLowerCase() === 'status' && e.data) {\n            const status = getStatus(e.data);\n            const error = status === 'error' && e.data.error;\n            return (<TextWrapBox>\n          <StatusIcon condensed type={status} name={iconNames[value]}/>\n          {getPropLabel(props, `${status}TableUploadLabel` as any, error)}\n        </TextWrapBox>);\n        }\n        return <TextWrapBox>{value}</TextWrapBox>;\n    }\n    return (<StyledTable data={data} theme={theme} columns={columns} rowRenderer={rowRenderer} cellRenderer={cellRenderer} mode=\"table\" condensed/>);\n}) as React.SFC<StatusTableProps>), { inner: {\n        get StyledTableRow() { return StyledTableRow as typeof StyledTableRow; },\n        get ProgressTableRow() { return ProgressTableRow as typeof ProgressTableRow; },\n        get ProgressTableCell() { return ProgressTableCell as typeof ProgressTableCell; },\n        get StyledProgressBar() { return StyledProgressBar as typeof StyledProgressBar; },\n        get ActionIconContainer() { return ActionIconContainer as typeof ActionIconContainer; },\n        get Icon() { return Icon as typeof Icon; },\n        get TextWrapBox() { return TextWrapBox as typeof TextWrapBox; },\n        get StatusIcon() { return StatusIcon as typeof StatusIcon; },\n        get StyledTable() { return StyledTable as typeof StyledTable; }\n    } });\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}