{"ast":null,"code":"import{createTypes}from'redux-action-creator';export var types=createTypes(['IMG_LOAD_START','IMG_LOAD_END','SET_CURRENT_PROGRESS','SET_IMAGES']);export var setLoadingEnd=function setLoadingEnd(){return{type:types.IMG_LOAD_START,payload:{isloading:false}};};export var setLoadingStart=function setLoadingStart(){return{type:types.IMG_LOAD_END,payload:{isloading:true,progress:0}};};export var setCurrentProgress=function setCurrentProgress(progress){return{type:types.SET_CURRENT_PROGRESS,payload:progress};};export var setImages=function setImages(imgs){return{type:types.SET_IMAGES,payload:imgs};};var imgs=[];export var loadImage=function loadImage(urls){return function(dispatch){var counter=0;dispatch(setLoadingStart());for(var i=0;i<urls.length;i++){imgs.push('');}var load=function load(url,index){var xmlHTTP=new XMLHttpRequest();xmlHTTP.open('GET',url,true);xmlHTTP.responseType='blob';xmlHTTP.onload=function(e){counter++;var imageURL=window.URL.createObjectURL(this.response);imgs[index]=imageURL;dispatch(setCurrentProgress(counter*100/urls.length));if(counter!==0&&counter>=urls.length){setTimeout(function(){dispatch(setImages(imgs));dispatch(setLoadingEnd());},500);}};xmlHTTP.send();};urls.map(function(url,index){load(url,index);});};};","map":{"version":3,"sources":["/mnt/d/thinkpad_desktop_files/portfolio_web/react-portfolio-site/src/store/imgLoad/actions.js"],"names":["createTypes","types","setLoadingEnd","type","IMG_LOAD_START","payload","isloading","setLoadingStart","IMG_LOAD_END","progress","setCurrentProgress","SET_CURRENT_PROGRESS","setImages","imgs","SET_IMAGES","loadImage","urls","dispatch","counter","i","length","push","load","url","index","xmlHTTP","XMLHttpRequest","open","responseType","onload","e","imageURL","window","URL","createObjectURL","response","setTimeout","send","map"],"mappings":"AAAA,OAASA,WAAT,KAA4B,sBAA5B,CACA,MAAO,IAAMC,CAAAA,KAAK,CAAGD,WAAW,CAAC,CAAC,gBAAD,CAAmB,cAAnB,CAAmC,sBAAnC,CAA2D,YAA3D,CAAD,CAAzB,CAEP,MAAO,IAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACjC,MAAQ,CACNC,IAAI,CAAEF,KAAK,CAACG,cADN,CAENC,OAAO,CAAE,CACPC,SAAS,CAAE,KADJ,CAFH,CAAR,CAMD,CAPM,CASP,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CACnC,MAAQ,CACNJ,IAAI,CAAEF,KAAK,CAACO,YADN,CAENH,OAAO,CAAE,CACPC,SAAS,CAAE,IADJ,CAEPG,QAAQ,CAAE,CAFH,CAFH,CAAR,CAOD,CARM,CAUP,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACD,QAAD,CAAc,CAC9C,MAAQ,CACNN,IAAI,CAAEF,KAAK,CAACU,oBADN,CAENN,OAAO,CAAEI,QAFH,CAAR,CAID,CALM,CAOP,MAAO,IAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,IAAD,CAAU,CACjC,MAAQ,CACNV,IAAI,CAAEF,KAAK,CAACa,UADN,CAENT,OAAO,CAAEQ,IAFH,CAAR,CAID,CALM,CAMP,GAAMA,CAAAA,IAAI,CAAG,EAAb,CACA,MAAO,IAAME,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,IAAD,QAAU,UAAAC,QAAQ,CAAI,CAC7C,GAAIC,CAAAA,OAAO,CAAG,CAAd,CACAD,QAAQ,CAACV,eAAe,EAAhB,CAAR,CAEA,IAAI,GAAIY,CAAAA,CAAC,CAAG,CAAZ,CAAgBA,CAAC,CAAGH,IAAI,CAACI,MAAzB,CAAiCD,CAAC,EAAlC,CAAqC,CACnCN,IAAI,CAACQ,IAAL,CAAU,EAAV,EACD,CAED,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,GAAD,CAAMC,KAAN,CAAgB,CAC3B,GAAIC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,cAAJ,EAAd,CAEAD,OAAO,CAACE,IAAR,CAAa,KAAb,CAAoBJ,GAApB,CAAyB,IAAzB,EACAE,OAAO,CAACG,YAAR,CAAuB,MAAvB,CAEAH,OAAO,CAACI,MAAR,CAAiB,SAAUC,CAAV,CAAa,CAC5BZ,OAAO,GACP,GAAIa,CAAAA,QAAQ,CAAGC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2B,KAAKC,QAAhC,CAAf,CAGAtB,IAAI,CAACW,KAAD,CAAJ,CAAcO,QAAd,CAEAd,QAAQ,CAACP,kBAAkB,CAAEQ,OAAO,CAAG,GAAX,CAAkBF,IAAI,CAACI,MAAxB,CAAnB,CAAR,CAEA,GAAIF,OAAO,GAAK,CAAZ,EAAiBA,OAAO,EAAIF,IAAI,CAACI,MAArC,CAA6C,CAC3CgB,UAAU,CAAC,UAAM,CACfnB,QAAQ,CAACL,SAAS,CAACC,IAAD,CAAV,CAAR,CACAI,QAAQ,CAACf,aAAa,EAAd,CAAR,CACD,CAHS,CAGP,GAHO,CAAV,CAID,CAEF,CAhBD,CAiBAuB,OAAO,CAACY,IAAR,GACD,CAxBD,CA0BArB,IAAI,CAACsB,GAAL,CAAS,SAACf,GAAD,CAAMC,KAAN,CAAgB,CACvBF,IAAI,CAACC,GAAD,CAAMC,KAAN,CAAJ,CACD,CAFD,EAGD,CArCwB,EAAlB","sourcesContent":["import { createTypes } from 'redux-action-creator'\nexport const types = createTypes(['IMG_LOAD_START', 'IMG_LOAD_END', 'SET_CURRENT_PROGRESS', 'SET_IMAGES'])\n\nexport const setLoadingEnd = () => {\n  return ({\n    type: types.IMG_LOAD_START,\n    payload: {\n      isloading: false,\n    },\n  })\n}\n\nexport const setLoadingStart = () => {\n  return ({\n    type: types.IMG_LOAD_END,\n    payload: {\n      isloading: true,\n      progress: 0,\n    },\n  })\n}\n\nexport const setCurrentProgress = (progress) => {\n  return ({\n    type: types.SET_CURRENT_PROGRESS,\n    payload: progress,\n  });\n}\n\nexport const setImages = (imgs) => {\n  return ({\n    type: types.SET_IMAGES,\n    payload: imgs,\n  });\n}\nconst imgs = [];\nexport const loadImage = (urls) => dispatch => {\n  let counter = 0;\n  dispatch(setLoadingStart());\n\n  for(let i = 0 ; i < urls.length; i++){\n    imgs.push('');\n  }\n\n  const load = (url, index) => {\n    var xmlHTTP = new XMLHttpRequest();\n\n    xmlHTTP.open('GET', url, true);\n    xmlHTTP.responseType = 'blob';\n\n    xmlHTTP.onload = function (e) {\n      counter++;\n      var imageURL = window.URL.createObjectURL(this.response)\n\n\n      imgs[index] = imageURL\n\n      dispatch(setCurrentProgress((counter * 100) / urls.length));\n\n      if (counter !== 0 && counter >= urls.length) {\n        setTimeout(() => {\n          dispatch(setImages(imgs))\n          dispatch(setLoadingEnd());\n        }, 500)\n      }\n\n    };\n    xmlHTTP.send();\n  };\n\n  urls.map((url, index) => {\n    load(url, index);\n  })\n}"]},"metadata":{},"sourceType":"module"}