{"ast":null,"code":"import styled from '../../utils/styled';\nexport var SidebarContainer = styled.div(function (_ref) {\n  var open = _ref.open,\n      _ref$position = _ref.position,\n      position = _ref$position === void 0 ? 'right' : _ref$position,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? '275px' : _ref$size;\n  return \"\\n    transition: all 0.3s cubic-bezier(0, 0, 0.25, 1);\\n    user-select: none;\\n    position: fixed;\\n    background-color: white;\\n    z-index: 100001;\\n    \".concat(!open ? \"\\n        visibility: hidden;\\n        opacity: 0;\\n        overflow: initial;\\n        \" : \"\\n        visibility: visible;\\n        opacity: 1;\\n        overflow: auto;\\n        \", \"\\n    \").concat(getSizeStyles(position, size), \"\\n    \").concat(getPositionStyles(position, open, size), \"\\n  \");\n});\n\nfunction getSizeStyles(position, size) {\n  if (position === 'top' || position === 'bottom') {\n    return \"\\n      height: \".concat(size, \"; \\n      width: 100%;\\n    \");\n  } else {\n    return \"\\n      width: \".concat(size, \"; \\n      height: 100%;\\n    \");\n  }\n}\n\nfunction getPositionStyles(position, open, size) {\n  var opposite = {\n    top: 'bottom',\n    bottom: 'top',\n    left: 'right',\n    right: 'left'\n  };\n  var positionValue = {\n    top: '0',\n    bottom: '0',\n    left: '0',\n    right: '0'\n  };\n  positionValue[opposite[position]] = 'auto';\n\n  if (!open) {\n    var match = size.match(/^(\\d+)(.+?)$/);\n\n    if (match) {\n      positionValue[position] = \"-\".concat(parseInt(match[1], undefined) / 2).concat(match[2]);\n    } else {\n      positionValue[position] = \"-50%\";\n    }\n  }\n\n  return Object.keys(positionValue).map(function (positionName) {\n    return \"\".concat(positionName, \": \").concat(positionValue[positionName]);\n  }).join(';') + ';';\n}","map":{"version":3,"sources":["../../../../src/components/Sidebar/SidebarContainer.part.tsx"],"names":[],"mappings":"AACA,OAAO,MAAP,MAAmB,oBAAnB;AAOA,OAAO,IAAM,gBAAgB,GAAG,MAAM,CAAC,GAAP,CAA6B,gBAAiE;AAAA,MAA9D,IAA8D,QAA9D,IAA8D;AAAA,2BAAxD,QAAwD;AAAA,MAAxD,QAAwD,8BAA7C,OAA6C;AAAA,uBAApB,IAAoB;AAAA,MAApB,IAAoB,0BAAb,OAAa;AAC1H,kLAME,CAAC,IAAD,wLANF,mBAiBE,aAAa,CAAC,QAAD,EAAW,IAAX,CAjBf,mBAkBE,iBAAiB,CAAC,QAAD,EAAW,IAAX,EAAiB,IAAjB,CAlBnB;AAoBH,CArB+B,CAAzB;;AAsBP,SAAS,aAAT,CAAuB,QAAvB,EAA+C,IAA/C,EAA2D;AACvD,MAAI,QAAQ,KAAK,KAAb,IAAsB,QAAQ,KAAK,QAAvC,EAAiD;AAC7C,qCACQ,IADR;AAIH,GALD,MAMK;AACD,oCACO,IADP;AAIH;AACJ;;AACD,SAAS,iBAAT,CAA2B,QAA3B,EAAmD,IAAnD,EAAkE,IAAlE,EAA8E;AAC1E,MAAM,QAAQ,GAAG;AACb,IAAA,GAAG,EAAE,QADQ;AAEb,IAAA,MAAM,EAAE,KAFK;AAGb,IAAA,IAAI,EAAE,OAHO;AAIb,IAAA,KAAK,EAAE;AAJM,GAAjB;AAMA,MAAM,aAAa,GAAG;AAClB,IAAA,GAAG,EAAE,GADa;AAElB,IAAA,MAAM,EAAE,GAFU;AAGlB,IAAA,IAAI,EAAE,GAHY;AAIlB,IAAA,KAAK,EAAE;AAJW,GAAtB;AAMA,EAAA,aAAa,CAAC,QAAQ,CAAC,QAAD,CAAT,CAAb,GAAoC,MAApC;;AACA,MAAI,CAAC,IAAL,EAAW;AACP,QAAM,KAAK,GAAG,IAAI,CAAC,KAAL,CAAW,cAAX,CAAd;;AACA,QAAI,KAAJ,EAAW;AACP,MAAA,aAAa,CAAC,QAAD,CAAb,cAA8B,QAAQ,CAAC,KAAK,CAAC,CAAD,CAAN,EAAW,SAAX,CAAR,GAAgC,CAA9D,SAAkE,KAAK,CAAC,CAAD,CAAvE;AACH,KAFD,MAGK;AACD,MAAA,aAAa,CAAC,QAAD,CAAb;AACH;AACJ;;AACD,SAAQ,MAAM,CAAC,IAAP,CAAY,aAAZ,EACH,GADG,CACC,UAAA,YAAY;AAAA,qBAAO,YAAP,eAAwB,aAAa,CAAC,YAAD,CAArC;AAAA,GADb,EAEH,IAFG,CAEE,GAFF,IAES,GAFjB;AAGH","sourcesContent":["import * as React from 'react';\nimport styled from '../../utils/styled';\nimport { PositionType } from './SidebarPopup.types.part';\nexport interface SidebarContainer {\n    open: boolean;\n    position?: PositionType;\n    size?: string;\n}\nexport const SidebarContainer = styled.div<SidebarContainer>(({ open, position = 'right' as PositionType, size = '275px' }) => {\n    return `\n    transition: all 0.3s cubic-bezier(0, 0, 0.25, 1);\n    user-select: none;\n    position: fixed;\n    background-color: white;\n    z-index: 100001;\n    ${!open\n        ? `\n        visibility: hidden;\n        opacity: 0;\n        overflow: initial;\n        `\n        : `\n        visibility: visible;\n        opacity: 1;\n        overflow: auto;\n        `}\n    ${getSizeStyles(position, size)}\n    ${getPositionStyles(position, open, size)}\n  `;\n});\nfunction getSizeStyles(position: PositionType, size: string) {\n    if (position === 'top' || position === 'bottom') {\n        return `\n      height: ${size}; \n      width: 100%;\n    `;\n    }\n    else {\n        return `\n      width: ${size}; \n      height: 100%;\n    `;\n    }\n}\nfunction getPositionStyles(position: PositionType, open: boolean, size: string) {\n    const opposite = {\n        top: 'bottom',\n        bottom: 'top',\n        left: 'right',\n        right: 'left',\n    };\n    const positionValue = {\n        top: '0',\n        bottom: '0',\n        left: '0',\n        right: '0',\n    };\n    positionValue[opposite[position]] = 'auto';\n    if (!open) {\n        const match = size.match(/^(\\d+)(.+?)$/);\n        if (match) {\n            positionValue[position] = `-${parseInt(match[1], undefined) / 2}${match[2]}`;\n        }\n        else {\n            positionValue[position] = `-50%`;\n        }\n    }\n    return (Object.keys(positionValue)\n        .map(positionName => `${positionName}: ${positionValue[positionName]}`)\n        .join(';') + ';');\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}